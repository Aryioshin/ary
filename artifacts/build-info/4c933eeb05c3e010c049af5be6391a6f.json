{
	"id": "4c933eeb05c3e010c049af5be6391a6f",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.20",
	"solcLongVersion": "0.8.20+commit.a1b79de6",
	"input": {
		"language": "Solidity",
		"sources": {
			"ARY/HardStake.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\npragma solidity ^0.8.0;\r\n\r\nimport \"./SwapPro.sol\"; // Import your swap contract\r\nimport \"@openzeppelin/contracts/access/Ownable.sol\";\r\nimport \"@openzeppelin/contracts/security/ReentrancyGuard.sol\";\r\nimport \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\";\r\n\r\ncontract HardStake is Ownable, ReentrancyGuard {\r\n    using SafeERC20 for IERC20;\r\n\r\n    // Reference to your swap contract\r\n    SwapPro public swapContract;\r\n\r\n    // Info of each user.\r\n    struct UserInfo {\r\n        uint256 amount;     // How many tokens the user has staked.\r\n        uint256 rewardDebt; // Reward debt.\r\n    }\r\n\r\n    IERC20 public immutable stakingToken;\r\n    IERC20 public immutable rewardToken;\r\n\r\n    // Total amount staked\r\n    uint256 public totalStaked;\r\n\r\n    // Info of each user that stakes tokens.\r\n    mapping (address => UserInfo) public userInfo;\r\n\r\n    // Accumulated rewards per share, times 1e12.\r\n    uint256 public accTokensPerShare;\r\n\r\n    // Total rewards distributed\r\n    uint256 public totalRewards;\r\n\r\n    // Minimum volume required to participate\r\n    uint256 public minimumVolumeRequired;\r\n\r\n    // Event declarations\r\n    event Deposit(address indexed user, uint256 amount);\r\n    event Withdraw(address indexed user, uint256 amount);\r\n    event Claim(address indexed user, uint256 amount);\r\n    event RewardAdded(uint256 amount);\r\n\r\n    constructor(\r\n        address _stakingToken,\r\n        address payable _swapContract,\r\n        uint256 _minimumVolumeRequired\r\n    ) Ownable(msg.sender) {  // Pass msg.sender to the Ownable constructor\r\n        stakingToken = IERC20(_stakingToken);\r\n        rewardToken = IERC20(_stakingToken); // Assuming rewards are in the same token\r\n        swapContract = SwapPro(_swapContract);\r\n        minimumVolumeRequired = _minimumVolumeRequired;\r\n    }\r\n\r\n\r\n    // Function called by swap contract to notify about new rewards\r\n    function notifyRewardAmount(uint256 reward) external {\r\n        require(msg.sender == address(swapContract) || msg.sender == owner(), \"Not authorized\");\r\n        if (totalStaked == 0) {\r\n            // No stakers, do nothing\r\n            return;\r\n        }\r\n        // Update accTokensPerShare\r\n        accTokensPerShare += (reward * 1e12) / totalStaked;\r\n        totalRewards += reward;\r\n        emit RewardAdded(reward);\r\n    }\r\n\r\n    // View function to see pending Reward on frontend.\r\n    function pendingReward(address _user) external view returns (uint256) {\r\n        UserInfo storage user = userInfo[_user];\r\n        uint256 pending = (user.amount * accTokensPerShare) / 1e12 - user.rewardDebt;\r\n        return pending;\r\n    }\r\n\r\n    // Stake tokens\r\n    function deposit(uint256 _amount) external nonReentrant {\r\n        uint256 userVol = swapContract.userVolume(msg.sender);\r\n        require(userVol >= minimumVolumeRequired, \"Insufficient DApp volume to stake\");\r\n\r\n        UserInfo storage user = userInfo[msg.sender];\r\n\r\n        // Update user's rewards before changing the amount\r\n        if (user.amount > 0) {\r\n            uint256 pending = (user.amount * accTokensPerShare) / 1e12 - user.rewardDebt;\r\n            if (pending > 0) {\r\n                rewardToken.safeTransfer(msg.sender, pending);\r\n                emit Claim(msg.sender, pending);\r\n            }\r\n        }\r\n\r\n        if (_amount > 0) {\r\n            stakingToken.safeTransferFrom(msg.sender, address(this), _amount);\r\n            user.amount += _amount;\r\n            totalStaked += _amount;\r\n        }\r\n\r\n        user.rewardDebt = (user.amount * accTokensPerShare) / 1e12;\r\n        emit Deposit(msg.sender, _amount);\r\n    }\r\n\r\n    // Withdraw staked tokens\r\n    function withdraw(uint256 _amount) external nonReentrant {\r\n        UserInfo storage user = userInfo[msg.sender];\r\n        require(user.amount >= _amount, \"Withdraw amount exceeds balance\");\r\n\r\n        // Update user's rewards before changing the amount\r\n        uint256 pending = (user.amount * accTokensPerShare) / 1e12 - user.rewardDebt;\r\n        if (pending > 0) {\r\n            rewardToken.safeTransfer(msg.sender, pending);\r\n            emit Claim(msg.sender, pending);\r\n        }\r\n\r\n        if (_amount > 0) {\r\n            user.amount -= _amount;\r\n            totalStaked -= _amount;\r\n            stakingToken.safeTransfer(msg.sender, _amount);\r\n            emit Withdraw(msg.sender, _amount);\r\n        }\r\n\r\n        user.rewardDebt = (user.amount * accTokensPerShare) / 1e12;\r\n    }\r\n\r\n    // Claim rewards without withdrawing staked tokens\r\n    function claimRewards() external nonReentrant {\r\n        UserInfo storage user = userInfo[msg.sender];\r\n        uint256 pending = (user.amount * accTokensPerShare) / 1e12 - user.rewardDebt;\r\n        require(pending > 0, \"No rewards to claim\");\r\n        rewardToken.safeTransfer(msg.sender, pending);\r\n        user.rewardDebt = (user.amount * accTokensPerShare) / 1e12;\r\n        emit Claim(msg.sender, pending);\r\n    }\r\n\r\n    // Emergency function to withdraw tokens without caring about rewards\r\n    function emergencyWithdraw() external nonReentrant {\r\n        UserInfo storage user = userInfo[msg.sender];\r\n        uint256 amount = user.amount;\r\n        require(amount > 0, \"Nothing to withdraw\");\r\n        totalStaked -= amount;\r\n        user.amount = 0;\r\n        user.rewardDebt = 0;\r\n        stakingToken.safeTransfer(msg.sender, amount);\r\n        emit Withdraw(msg.sender, amount);\r\n    }\r\n\r\n    // Function to update the minimum volume required\r\n    function updateMinimumVolumeRequired(uint256 _newVolume) external onlyOwner {\r\n        minimumVolumeRequired = _newVolume;\r\n    }\r\n\r\n    // Function to recover tokens sent to contract by mistake\r\n    function recoverERC20(address tokenAddress, uint256 tokenAmount) external onlyOwner {\r\n        require(tokenAddress != address(stakingToken), \"Cannot recover staking token\");\r\n        IERC20(tokenAddress).safeTransfer(owner(), tokenAmount);\r\n    }\r\n}\r\n"
			},
			"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (token/ERC20/utils/SafeERC20.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC20} from \"../IERC20.sol\";\nimport {IERC1363} from \"../../../interfaces/IERC1363.sol\";\nimport {Address} from \"../../../utils/Address.sol\";\n\n/**\n * @title SafeERC20\n * @dev Wrappers around ERC-20 operations that throw on failure (when the token\n * contract returns false). Tokens that return no value (and instead revert or\n * throw on failure) are also supported, non-reverting calls are assumed to be\n * successful.\n * To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract,\n * which allows you to call the safe operations as `token.safeTransfer(...)`, etc.\n */\nlibrary SafeERC20 {\n    /**\n     * @dev An operation with an ERC-20 token failed.\n     */\n    error SafeERC20FailedOperation(address token);\n\n    /**\n     * @dev Indicates a failed `decreaseAllowance` request.\n     */\n    error SafeERC20FailedDecreaseAllowance(address spender, uint256 currentAllowance, uint256 requestedDecrease);\n\n    /**\n     * @dev Transfer `value` amount of `token` from the calling contract to `to`. If `token` returns no value,\n     * non-reverting calls are assumed to be successful.\n     */\n    function safeTransfer(IERC20 token, address to, uint256 value) internal {\n        _callOptionalReturn(token, abi.encodeCall(token.transfer, (to, value)));\n    }\n\n    /**\n     * @dev Transfer `value` amount of `token` from `from` to `to`, spending the approval given by `from` to the\n     * calling contract. If `token` returns no value, non-reverting calls are assumed to be successful.\n     */\n    function safeTransferFrom(IERC20 token, address from, address to, uint256 value) internal {\n        _callOptionalReturn(token, abi.encodeCall(token.transferFrom, (from, to, value)));\n    }\n\n    /**\n     * @dev Increase the calling contract's allowance toward `spender` by `value`. If `token` returns no value,\n     * non-reverting calls are assumed to be successful.\n     *\n     * IMPORTANT: If the token implements ERC-7674 (ERC-20 with temporary allowance), and if the \"client\"\n     * smart contract uses ERC-7674 to set temporary allowances, then the \"client\" smart contract should avoid using\n     * this function. Performing a {safeIncreaseAllowance} or {safeDecreaseAllowance} operation on a token contract\n     * that has a non-zero temporary allowance (for that particular owner-spender) will result in unexpected behavior.\n     */\n    function safeIncreaseAllowance(IERC20 token, address spender, uint256 value) internal {\n        uint256 oldAllowance = token.allowance(address(this), spender);\n        forceApprove(token, spender, oldAllowance + value);\n    }\n\n    /**\n     * @dev Decrease the calling contract's allowance toward `spender` by `requestedDecrease`. If `token` returns no\n     * value, non-reverting calls are assumed to be successful.\n     *\n     * IMPORTANT: If the token implements ERC-7674 (ERC-20 with temporary allowance), and if the \"client\"\n     * smart contract uses ERC-7674 to set temporary allowances, then the \"client\" smart contract should avoid using\n     * this function. Performing a {safeIncreaseAllowance} or {safeDecreaseAllowance} operation on a token contract\n     * that has a non-zero temporary allowance (for that particular owner-spender) will result in unexpected behavior.\n     */\n    function safeDecreaseAllowance(IERC20 token, address spender, uint256 requestedDecrease) internal {\n        unchecked {\n            uint256 currentAllowance = token.allowance(address(this), spender);\n            if (currentAllowance < requestedDecrease) {\n                revert SafeERC20FailedDecreaseAllowance(spender, currentAllowance, requestedDecrease);\n            }\n            forceApprove(token, spender, currentAllowance - requestedDecrease);\n        }\n    }\n\n    /**\n     * @dev Set the calling contract's allowance toward `spender` to `value`. If `token` returns no value,\n     * non-reverting calls are assumed to be successful. Meant to be used with tokens that require the approval\n     * to be set to zero before setting it to a non-zero value, such as USDT.\n     *\n     * NOTE: If the token implements ERC-7674, this function will not modify any temporary allowance. This function\n     * only sets the \"standard\" allowance. Any temporary allowance will remain active, in addition to the value being\n     * set here.\n     */\n    function forceApprove(IERC20 token, address spender, uint256 value) internal {\n        bytes memory approvalCall = abi.encodeCall(token.approve, (spender, value));\n\n        if (!_callOptionalReturnBool(token, approvalCall)) {\n            _callOptionalReturn(token, abi.encodeCall(token.approve, (spender, 0)));\n            _callOptionalReturn(token, approvalCall);\n        }\n    }\n\n    /**\n     * @dev Performs an {ERC1363} transferAndCall, with a fallback to the simple {ERC20} transfer if the target has no\n     * code. This can be used to implement an {ERC721}-like safe transfer that rely on {ERC1363} checks when\n     * targeting contracts.\n     *\n     * Reverts if the returned value is other than `true`.\n     */\n    function transferAndCallRelaxed(IERC1363 token, address to, uint256 value, bytes memory data) internal {\n        if (to.code.length == 0) {\n            safeTransfer(token, to, value);\n        } else if (!token.transferAndCall(to, value, data)) {\n            revert SafeERC20FailedOperation(address(token));\n        }\n    }\n\n    /**\n     * @dev Performs an {ERC1363} transferFromAndCall, with a fallback to the simple {ERC20} transferFrom if the target\n     * has no code. This can be used to implement an {ERC721}-like safe transfer that rely on {ERC1363} checks when\n     * targeting contracts.\n     *\n     * Reverts if the returned value is other than `true`.\n     */\n    function transferFromAndCallRelaxed(\n        IERC1363 token,\n        address from,\n        address to,\n        uint256 value,\n        bytes memory data\n    ) internal {\n        if (to.code.length == 0) {\n            safeTransferFrom(token, from, to, value);\n        } else if (!token.transferFromAndCall(from, to, value, data)) {\n            revert SafeERC20FailedOperation(address(token));\n        }\n    }\n\n    /**\n     * @dev Performs an {ERC1363} approveAndCall, with a fallback to the simple {ERC20} approve if the target has no\n     * code. This can be used to implement an {ERC721}-like safe transfer that rely on {ERC1363} checks when\n     * targeting contracts.\n     *\n     * NOTE: When the recipient address (`to`) has no code (i.e. is an EOA), this function behaves as {forceApprove}.\n     * Opposedly, when the recipient address (`to`) has code, this function only attempts to call {ERC1363-approveAndCall}\n     * once without retrying, and relies on the returned value to be true.\n     *\n     * Reverts if the returned value is other than `true`.\n     */\n    function approveAndCallRelaxed(IERC1363 token, address to, uint256 value, bytes memory data) internal {\n        if (to.code.length == 0) {\n            forceApprove(token, to, value);\n        } else if (!token.approveAndCall(to, value, data)) {\n            revert SafeERC20FailedOperation(address(token));\n        }\n    }\n\n    /**\n     * @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n     * on the return value: the return value is optional (but if data is returned, it must not be false).\n     * @param token The token targeted by the call.\n     * @param data The call data (encoded using abi.encode or one of its variants).\n     *\n     * This is a variant of {_callOptionalReturnBool} that reverts if call fails to meet the requirements.\n     */\n    function _callOptionalReturn(IERC20 token, bytes memory data) private {\n        uint256 returnSize;\n        uint256 returnValue;\n        assembly (\"memory-safe\") {\n            let success := call(gas(), token, 0, add(data, 0x20), mload(data), 0, 0x20)\n            // bubble errors\n            if iszero(success) {\n                let ptr := mload(0x40)\n                returndatacopy(ptr, 0, returndatasize())\n                revert(ptr, returndatasize())\n            }\n            returnSize := returndatasize()\n            returnValue := mload(0)\n        }\n\n        if (returnSize == 0 ? address(token).code.length == 0 : returnValue != 1) {\n            revert SafeERC20FailedOperation(address(token));\n        }\n    }\n\n    /**\n     * @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n     * on the return value: the return value is optional (but if data is returned, it must not be false).\n     * @param token The token targeted by the call.\n     * @param data The call data (encoded using abi.encode or one of its variants).\n     *\n     * This is a variant of {_callOptionalReturn} that silently catches all reverts and returns a bool instead.\n     */\n    function _callOptionalReturnBool(IERC20 token, bytes memory data) private returns (bool) {\n        bool success;\n        uint256 returnSize;\n        uint256 returnValue;\n        assembly (\"memory-safe\") {\n            success := call(gas(), token, 0, add(data, 0x20), mload(data), 0, 0x20)\n            returnSize := returndatasize()\n            returnValue := mload(0)\n        }\n        return success && (returnSize == 0 ? address(token).code.length > 0 : returnValue == 1);\n    }\n}\n"
			},
			"@openzeppelin/contracts/security/ReentrancyGuard.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (security/ReentrancyGuard.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Contract module that helps prevent reentrant calls to a function.\n *\n * Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\n * available, which can be applied to functions to make sure there are no nested\n * (reentrant) calls to them.\n *\n * Note that because there is a single `nonReentrant` guard, functions marked as\n * `nonReentrant` may not call one another. This can be worked around by making\n * those functions `private`, and then adding `external` `nonReentrant` entry\n * points to them.\n *\n * TIP: If you would like to learn more about reentrancy and alternative ways\n * to protect against it, check out our blog post\n * https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\n */\nabstract contract ReentrancyGuard {\n    // Booleans are more expensive than uint256 or any type that takes up a full\n    // word because each write operation emits an extra SLOAD to first read the\n    // slot's contents, replace the bits taken up by the boolean, and then write\n    // back. This is the compiler's defense against contract upgrades and\n    // pointer aliasing, and it cannot be disabled.\n\n    // The values being non-zero value makes deployment a bit more expensive,\n    // but in exchange the refund on every call to nonReentrant will be lower in\n    // amount. Since refunds are capped to a percentage of the total\n    // transaction's gas, it is best to keep them low in cases like this one, to\n    // increase the likelihood of the full refund coming into effect.\n    uint256 private constant _NOT_ENTERED = 1;\n    uint256 private constant _ENTERED = 2;\n\n    uint256 private _status;\n\n    constructor() {\n        _status = _NOT_ENTERED;\n    }\n\n    /**\n     * @dev Prevents a contract from calling itself, directly or indirectly.\n     * Calling a `nonReentrant` function from another `nonReentrant`\n     * function is not supported. It is possible to prevent this from happening\n     * by making the `nonReentrant` function external, and making it call a\n     * `private` function that does the actual work.\n     */\n    modifier nonReentrant() {\n        _nonReentrantBefore();\n        _;\n        _nonReentrantAfter();\n    }\n\n    function _nonReentrantBefore() private {\n        // On the first call to nonReentrant, _status will be _NOT_ENTERED\n        require(_status != _ENTERED, \"ReentrancyGuard: reentrant call\");\n\n        // Any calls to nonReentrant after this point will fail\n        _status = _ENTERED;\n    }\n\n    function _nonReentrantAfter() private {\n        // By storing the original value once again, a refund is triggered (see\n        // https://eips.ethereum.org/EIPS/eip-2200)\n        _status = _NOT_ENTERED;\n    }\n\n    /**\n     * @dev Returns true if the reentrancy guard is currently set to \"entered\", which indicates there is a\n     * `nonReentrant` function in the call stack.\n     */\n    function _reentrancyGuardEntered() internal view returns (bool) {\n        return _status == _ENTERED;\n    }\n}\n"
			},
			"@openzeppelin/contracts/access/Ownable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (access/Ownable.sol)\n\npragma solidity ^0.8.20;\n\nimport {Context} from \"../utils/Context.sol\";\n\n/**\n * @dev Contract module which provides a basic access control mechanism, where\n * there is an account (an owner) that can be granted exclusive access to\n * specific functions.\n *\n * The initial owner is set to the address provided by the deployer. This can\n * later be changed with {transferOwnership}.\n *\n * This module is used through inheritance. It will make available the modifier\n * `onlyOwner`, which can be applied to your functions to restrict their use to\n * the owner.\n */\nabstract contract Ownable is Context {\n    address private _owner;\n\n    /**\n     * @dev The caller account is not authorized to perform an operation.\n     */\n    error OwnableUnauthorizedAccount(address account);\n\n    /**\n     * @dev The owner is not a valid owner account. (eg. `address(0)`)\n     */\n    error OwnableInvalidOwner(address owner);\n\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n\n    /**\n     * @dev Initializes the contract setting the address provided by the deployer as the initial owner.\n     */\n    constructor(address initialOwner) {\n        if (initialOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(initialOwner);\n    }\n\n    /**\n     * @dev Throws if called by any account other than the owner.\n     */\n    modifier onlyOwner() {\n        _checkOwner();\n        _;\n    }\n\n    /**\n     * @dev Returns the address of the current owner.\n     */\n    function owner() public view virtual returns (address) {\n        return _owner;\n    }\n\n    /**\n     * @dev Throws if the sender is not the owner.\n     */\n    function _checkOwner() internal view virtual {\n        if (owner() != _msgSender()) {\n            revert OwnableUnauthorizedAccount(_msgSender());\n        }\n    }\n\n    /**\n     * @dev Leaves the contract without owner. It will not be possible to call\n     * `onlyOwner` functions. Can only be called by the current owner.\n     *\n     * NOTE: Renouncing ownership will leave the contract without an owner,\n     * thereby disabling any functionality that is only available to the owner.\n     */\n    function renounceOwnership() public virtual onlyOwner {\n        _transferOwnership(address(0));\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Can only be called by the current owner.\n     */\n    function transferOwnership(address newOwner) public virtual onlyOwner {\n        if (newOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(newOwner);\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Internal function without access restriction.\n     */\n    function _transferOwnership(address newOwner) internal virtual {\n        address oldOwner = _owner;\n        _owner = newOwner;\n        emit OwnershipTransferred(oldOwner, newOwner);\n    }\n}\n"
			},
			"ARY/SwapPro.sol": {
				"content": "//SPDX-License-Identifier: MIT\r\npragma solidity ^0.8.0;\r\nimport \"@openzeppelin/contracts/access/Ownable.sol\";\r\nimport \"@openzeppelin/contracts/token/ERC20/IERC20.sol\";\r\n\r\ninterface IDEXFactory {\r\n    function createPair(\r\n        address tokenA,\r\n        address tokenB\r\n    ) external returns (address);\r\n\r\n    function getPair(\r\n        address tokenA,\r\n        address tokenB\r\n    ) external returns (address);\r\n}\r\n\r\ninterface IPair {\r\n    // Returns the address of the other token of the pair\r\n    function token0() external view returns (address);\r\n    function token1() external view returns (address);\r\n    function getReserves() external view returns (uint112, uint112, uint32);\r\n}\r\n\r\ninterface IDEXRouter {\r\n    function factory() external pure returns (address);\r\n    function WETH() external pure returns (address);\r\n\r\n    function swapExactTokensForTokensSupportingFeeOnTransferTokens(\r\n        uint amountIn,\r\n        uint amountOutMin,\r\n        address[] calldata path,\r\n        address to,\r\n        uint deadline\r\n    ) external;\r\n\r\n    function swapExactETHForTokensSupportingFeeOnTransferTokens(\r\n        uint amountOutMin,\r\n        address[] calldata path,\r\n        address to,\r\n        uint deadline\r\n    ) external payable;\r\n\r\n    function swapExactTokensForETHSupportingFeeOnTransferTokens(\r\n        uint amountIn,\r\n        uint amountOutMin,\r\n        address[] calldata path,\r\n        address to,\r\n        uint deadline\r\n    ) external;\r\n\r\n    function getAmountsIn(\r\n        uint256 amountOut,\r\n        address[] calldata path\r\n    ) external pure returns (uint256[] memory);\r\n\r\n    function getAmountOut(\r\n        uint256 amountIn,\r\n        uint256 reserveIn,\r\n        uint256 reserveOut\r\n    ) external pure returns (uint256);\r\n\r\n     function getAmountsOut(\r\n        uint256 amountIn,\r\n        address[] calldata path\r\n    ) external pure returns (uint256[] memory);\r\n}\r\n\r\ninterface IWCRO is IERC20 {\r\n    function deposit () external payable;\r\n    \r\n    function withdraw (\r\n        uint256 wad\r\n    ) external;\r\n}\r\n\r\nstruct Volume {\r\n    address user;\r\n    uint256 volume;\r\n}\r\n\r\ncontract SwapPro is Ownable {\r\n    address public constant CUSDC = 0xc21223249CA28397B4B6541dfFaEcC539BfF0c59;\r\n    address public constant CUSDT = 0x66e428c3f67a68878562e79A0234c1F83c208770;\r\n    address public constant WCRO = 0x5C7F8A570d578ED84E63fdFA7b1eE72dEae1AE23;\r\n    address public constant ARY = 0x41bc026dABe978bc2FAfeA1850456511ca4B01bc;\r\n    address public constant MERY = 0x3b41B27E74Dd366CE27cB389dc7877D4e1516d4d;\r\n    address public constant DEXROUTER =\r\n        0x145863Eb42Cf62847A6Ca784e6416C1682b1b2Ae;\r\n    address public constant DEXFACTORY =\r\n        0x3B44B2a187a7b3824131F8db5a74194D0a42Fc15;\r\n    address public feeReceiver;\r\n    uint256 public feePercent;\r\n    bool public competition_started = false;\r\n    mapping(address => uint256) public userVolume;\r\n    mapping(address => bool) isExistAddress;\r\n    address[] public addresses;\r\n\r\n    IDEXFactory factory;\r\n    IDEXRouter router;\r\n    IERC20 cusdc;\r\n    IERC20 cusdt;\r\n    IERC20 ary;\r\n    IERC20 mery;\r\n    IWCRO wcro;\r\n\r\n    constructor() Ownable(msg.sender) {\r\n        factory = IDEXFactory(DEXFACTORY);\r\n        router = IDEXRouter(DEXROUTER);\r\n        cusdc = IERC20(CUSDC);\r\n        cusdt = IERC20(CUSDT);\r\n        ary = IERC20(ARY);\r\n        mery = IERC20(MERY);\r\n        wcro = IWCRO(WCRO);\r\n        feeReceiver = msg.sender;\r\n        feePercent = 3;\r\n        \r\n        //Approving tokens\r\n        cusdc.approve(DEXROUTER, type(uint256).max);\r\n        cusdt.approve(DEXROUTER, type(uint256).max);\r\n        ary.approve(DEXROUTER, type(uint256).max);\r\n        wcro.approve(DEXROUTER, type(uint256).max);\r\n        mery.approve(DEXROUTER, type(uint256).max);\r\n    }\r\n\r\n    // Function to get sorted addresses\r\n    function getUserVolumes() external view returns (Volume[] memory) {\r\n        uint256 n = addresses.length;\r\n        Volume[] memory volumes = new Volume[](n); // Initialize memory array with fixed size\r\n\r\n        for (uint256 i = 0; i < n; i++) {\r\n            volumes[i] = Volume(addresses[i], userVolume[addresses[i]]);\r\n        }\r\n\r\n        return volumes;\r\n    }\r\n\r\n    // Function to clear volume record\r\n    function clearVolume() public onlyOwner{\r\n        uint256 n = addresses.length;\r\n        for(uint256 i = 0; i < n; i++) {\r\n            delete userVolume[addresses[i]];\r\n        }\r\n        delete addresses;\r\n        competition_started = false;\r\n    }\r\n\r\n    function stopCompetition() public onlyOwner {\r\n        competition_started = false;\r\n    }\r\n    function startCompetition() public onlyOwner {\r\n        competition_started = true;\r\n    }\r\n\r\n    // Function to config the fee rate and fee receiver\r\n    function setFeeData(address _feeReceiver, uint256 _feePercent) public onlyOwner {\r\n        feeReceiver = _feeReceiver;\r\n        feePercent = _feePercent;\r\n    }\r\n\r\n    // Function to get fee from trading\r\n    function getFee(address fromToken, uint256 feeAmount) private {\r\n        uint256 pathLen = fromToken == WCRO ? 1 : 2;\r\n        if(pathLen == 1){\r\n            wcro.transfer(feeReceiver, feeAmount);\r\n        } else {\r\n            address[] memory path = new address[](pathLen);\r\n            path[0] = fromToken;\r\n            path[1] = WCRO;\r\n\r\n            router.swapExactTokensForTokensSupportingFeeOnTransferTokens(\r\n                feeAmount,\r\n                0,\r\n                path,\r\n                feeReceiver,\r\n                block.timestamp + 1 hours\r\n            );\r\n        }\r\n    }\r\n\r\n    function addVolume (\r\n        address user,\r\n        uint256 volume\r\n    ) private {\r\n        if(!isExistAddress[user]) {\r\n            addresses.push(user);\r\n            isExistAddress[user] = true;\r\n        } \r\n        \r\n        userVolume[user] += volume;\r\n    }\r\n\r\n    //Function to swap token for token\r\n     function swapTokenForToken(\r\n        address fromToken,\r\n        address toToken,\r\n        uint256 amountIn,\r\n        uint256 amountOutMin\r\n    ) public {\r\n        IERC20(fromToken).transferFrom(msg.sender, address(this), amountIn);\r\n\r\n        if (\r\n            (fromToken == ARY && competition_started)\r\n        ) {\r\n            addVolume(msg.sender, amountIn);\r\n        }\r\n\r\n        uint256 feeAmount = (amountIn * feePercent) / 1000;\r\n        getFee(fromToken, feeAmount);\r\n\r\n        uint256 pathLen;\r\n        pathLen = (fromToken == WCRO || toToken == WCRO) ? 2 : 3;\r\n\r\n        uint256 amountOut;\r\n        address[] memory path;\r\n        if (fromToken == WCRO || toToken == WCRO) {\r\n            path = new address[](2);\r\n            path[0] = fromToken;\r\n            path[1] = toToken;\r\n            uint256[] memory amountsOut = router.getAmountsOut(\r\n                amountIn - feeAmount,\r\n                path\r\n            );\r\n            amountOut = amountsOut[1];\r\n        } else if (\r\n            (fromToken == ARY && toToken == MERY) ||\r\n            (fromToken == MERY && toToken == ARY)\r\n        ) {\r\n            path = new address[](2);\r\n            path[0] = fromToken;\r\n            path[1] = toToken;\r\n            uint256[] memory amountsOut = router.getAmountsOut(\r\n                amountIn - feeAmount,\r\n                path\r\n            );\r\n            amountOut = amountsOut[1];\r\n        } else {\r\n            path = new address[](3);\r\n            path[0] = fromToken;\r\n            path[1] = WCRO;\r\n            path[2] = toToken;\r\n            uint256[] memory amountsOut = router.getAmountsOut(\r\n                amountIn - feeAmount,\r\n                path\r\n            );\r\n            amountOut = amountsOut[2];\r\n        }\r\n\r\n            router.swapExactTokensForTokensSupportingFeeOnTransferTokens(\r\n                amountIn - feeAmount,\r\n                amountOutMin,\r\n                path,\r\n                msg.sender,\r\n                block.timestamp + 1 hours\r\n            );\r\n\r\n        if (\r\n            (toToken == ARY && competition_started)\r\n        ) {\r\n            addVolume(msg.sender, amountOut);\r\n        }\r\n    }\r\n\r\n    // Function to swap coin for token\r\n    function swapCROForToken (\r\n        address toToken,\r\n        uint256 amountOutMin\r\n    ) public payable {\r\n        uint256 amountIn = msg.value;\r\n        uint256 feeAmount = amountIn * feePercent / 1000;\r\n        payable(feeReceiver).transfer(feeAmount);\r\n\r\n        address[] memory path = new address[](2);\r\n        path[0] = WCRO;\r\n        path[1] = toToken;\r\n\r\n        uint256[] memory amountsOut = router.getAmountsOut(amountIn - feeAmount, path);\r\n        router.swapExactETHForTokensSupportingFeeOnTransferTokens{ value:amountIn - feeAmount}(\r\n            amountOutMin,\r\n            path,\r\n            msg.sender,\r\n            block.timestamp + 1 hours\r\n        );\r\n\r\n        if(toToken == ARY && competition_started) {\r\n            addVolume(msg.sender, amountsOut[1]);\r\n        }\r\n    }  \r\n\r\n\r\n    // Function to swap token for coin\r\n    function swapTokenForCRO(\r\n        address fromToken,\r\n        uint256 amountIn,\r\n        uint256 amountOutMin\r\n    ) public {\r\n\r\n        if(fromToken == ARY && competition_started) addVolume(msg.sender, amountIn);\r\n        IERC20(fromToken).transferFrom(msg.sender, address(this), amountIn);\r\n        \r\n        uint256 feeAmount = amountIn * feePercent / 1000;\r\n\r\n        getFee(fromToken, feeAmount);\r\n\r\n        address[] memory path = new address[](2);\r\n        path[0] = fromToken;\r\n        path[1] = WCRO;\r\n        router.swapExactTokensForETHSupportingFeeOnTransferTokens(\r\n            amountIn - feeAmount,\r\n            amountOutMin,\r\n            path,\r\n            msg.sender,\r\n            block.timestamp + 1 hours\r\n        );\r\n    }\r\n\r\n    //Function to wrap Cro\r\n    function deposit () public payable {\r\n        uint256 amountIn = msg.value;\r\n        wcro.deposit{value:amountIn}();\r\n        wcro.transfer( msg.sender, amountIn );\r\n    }\r\n\r\n    function withdraw (\r\n        uint256 wad\r\n    ) public {\r\n        wcro.transferFrom(msg.sender, address(this), wad);\r\n        wcro.withdraw(wad);       \r\n        payable(msg.sender).transfer(wad);\r\n    }\r\n\r\n    receive() external payable {}\r\n}"
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (token/ERC20/IERC20.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Interface of the ERC-20 standard as defined in the ERC.\n */\ninterface IERC20 {\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n\n    /**\n     * @dev Returns the value of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the value of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address to, uint256 value) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n     * caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 value) external returns (bool);\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the\n     * allowance mechanism. `value` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(address from, address to, uint256 value) external returns (bool);\n}\n"
			},
			"@openzeppelin/contracts/utils/Address.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/Address.sol)\n\npragma solidity ^0.8.20;\n\nimport {Errors} from \"./Errors.sol\";\n\n/**\n * @dev Collection of functions related to the address type\n */\nlibrary Address {\n    /**\n     * @dev There's no code at `target` (it is not a contract).\n     */\n    error AddressEmptyCode(address target);\n\n    /**\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n     * `recipient`, forwarding all available gas and reverting on errors.\n     *\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\n     * imposed by `transfer`, making them unable to receive funds via\n     * `transfer`. {sendValue} removes this limitation.\n     *\n     * https://consensys.net/diligence/blog/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n     *\n     * IMPORTANT: because control is transferred to `recipient`, care must be\n     * taken to not create reentrancy vulnerabilities. Consider using\n     * {ReentrancyGuard} or the\n     * https://solidity.readthedocs.io/en/v0.8.20/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\n     */\n    function sendValue(address payable recipient, uint256 amount) internal {\n        if (address(this).balance < amount) {\n            revert Errors.InsufficientBalance(address(this).balance, amount);\n        }\n\n        (bool success, ) = recipient.call{value: amount}(\"\");\n        if (!success) {\n            revert Errors.FailedCall();\n        }\n    }\n\n    /**\n     * @dev Performs a Solidity function call using a low level `call`. A\n     * plain `call` is an unsafe replacement for a function call: use this\n     * function instead.\n     *\n     * If `target` reverts with a revert reason or custom error, it is bubbled\n     * up by this function (like regular Solidity function calls). However, if\n     * the call reverted with no returned reason, this function reverts with a\n     * {Errors.FailedCall} error.\n     *\n     * Returns the raw returned data. To convert to the expected return value,\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n     *\n     * Requirements:\n     *\n     * - `target` must be a contract.\n     * - calling `target` with `data` must not revert.\n     */\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, 0);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but also transferring `value` wei to `target`.\n     *\n     * Requirements:\n     *\n     * - the calling contract must have an ETH balance of at least `value`.\n     * - the called Solidity function must be `payable`.\n     */\n    function functionCallWithValue(address target, bytes memory data, uint256 value) internal returns (bytes memory) {\n        if (address(this).balance < value) {\n            revert Errors.InsufficientBalance(address(this).balance, value);\n        }\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\n        return verifyCallResultFromTarget(target, success, returndata);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but performing a static call.\n     */\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\n        (bool success, bytes memory returndata) = target.staticcall(data);\n        return verifyCallResultFromTarget(target, success, returndata);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but performing a delegate call.\n     */\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\n        (bool success, bytes memory returndata) = target.delegatecall(data);\n        return verifyCallResultFromTarget(target, success, returndata);\n    }\n\n    /**\n     * @dev Tool to verify that a low level call to smart-contract was successful, and reverts if the target\n     * was not a contract or bubbling up the revert reason (falling back to {Errors.FailedCall}) in case\n     * of an unsuccessful call.\n     */\n    function verifyCallResultFromTarget(\n        address target,\n        bool success,\n        bytes memory returndata\n    ) internal view returns (bytes memory) {\n        if (!success) {\n            _revert(returndata);\n        } else {\n            // only check if target is a contract if the call was successful and the return data is empty\n            // otherwise we already know that it was a contract\n            if (returndata.length == 0 && target.code.length == 0) {\n                revert AddressEmptyCode(target);\n            }\n            return returndata;\n        }\n    }\n\n    /**\n     * @dev Tool to verify that a low level call was successful, and reverts if it wasn't, either by bubbling the\n     * revert reason or with a default {Errors.FailedCall} error.\n     */\n    function verifyCallResult(bool success, bytes memory returndata) internal pure returns (bytes memory) {\n        if (!success) {\n            _revert(returndata);\n        } else {\n            return returndata;\n        }\n    }\n\n    /**\n     * @dev Reverts with returndata if present. Otherwise reverts with {Errors.FailedCall}.\n     */\n    function _revert(bytes memory returndata) private pure {\n        // Look for revert reason and bubble it up if present\n        if (returndata.length > 0) {\n            // The easiest way to bubble the revert reason is using memory via assembly\n            assembly (\"memory-safe\") {\n                let returndata_size := mload(returndata)\n                revert(add(32, returndata), returndata_size)\n            }\n        } else {\n            revert Errors.FailedCall();\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts/interfaces/IERC1363.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (interfaces/IERC1363.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC20} from \"./IERC20.sol\";\nimport {IERC165} from \"./IERC165.sol\";\n\n/**\n * @title IERC1363\n * @dev Interface of the ERC-1363 standard as defined in the https://eips.ethereum.org/EIPS/eip-1363[ERC-1363].\n *\n * Defines an extension interface for ERC-20 tokens that supports executing code on a recipient contract\n * after `transfer` or `transferFrom`, or code on a spender contract after `approve`, in a single transaction.\n */\ninterface IERC1363 is IERC20, IERC165 {\n    /*\n     * Note: the ERC-165 identifier for this interface is 0xb0202a11.\n     * 0xb0202a11 ===\n     *   bytes4(keccak256('transferAndCall(address,uint256)')) ^\n     *   bytes4(keccak256('transferAndCall(address,uint256,bytes)')) ^\n     *   bytes4(keccak256('transferFromAndCall(address,address,uint256)')) ^\n     *   bytes4(keccak256('transferFromAndCall(address,address,uint256,bytes)')) ^\n     *   bytes4(keccak256('approveAndCall(address,uint256)')) ^\n     *   bytes4(keccak256('approveAndCall(address,uint256,bytes)'))\n     */\n\n    /**\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`\n     * and then calls {IERC1363Receiver-onTransferReceived} on `to`.\n     * @param to The address which you want to transfer to.\n     * @param value The amount of tokens to be transferred.\n     * @return A boolean value indicating whether the operation succeeded unless throwing.\n     */\n    function transferAndCall(address to, uint256 value) external returns (bool);\n\n    /**\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`\n     * and then calls {IERC1363Receiver-onTransferReceived} on `to`.\n     * @param to The address which you want to transfer to.\n     * @param value The amount of tokens to be transferred.\n     * @param data Additional data with no specified format, sent in call to `to`.\n     * @return A boolean value indicating whether the operation succeeded unless throwing.\n     */\n    function transferAndCall(address to, uint256 value, bytes calldata data) external returns (bool);\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism\n     * and then calls {IERC1363Receiver-onTransferReceived} on `to`.\n     * @param from The address which you want to send tokens from.\n     * @param to The address which you want to transfer to.\n     * @param value The amount of tokens to be transferred.\n     * @return A boolean value indicating whether the operation succeeded unless throwing.\n     */\n    function transferFromAndCall(address from, address to, uint256 value) external returns (bool);\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism\n     * and then calls {IERC1363Receiver-onTransferReceived} on `to`.\n     * @param from The address which you want to send tokens from.\n     * @param to The address which you want to transfer to.\n     * @param value The amount of tokens to be transferred.\n     * @param data Additional data with no specified format, sent in call to `to`.\n     * @return A boolean value indicating whether the operation succeeded unless throwing.\n     */\n    function transferFromAndCall(address from, address to, uint256 value, bytes calldata data) external returns (bool);\n\n    /**\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n     * caller's tokens and then calls {IERC1363Spender-onApprovalReceived} on `spender`.\n     * @param spender The address which will spend the funds.\n     * @param value The amount of tokens to be spent.\n     * @return A boolean value indicating whether the operation succeeded unless throwing.\n     */\n    function approveAndCall(address spender, uint256 value) external returns (bool);\n\n    /**\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n     * caller's tokens and then calls {IERC1363Spender-onApprovalReceived} on `spender`.\n     * @param spender The address which will spend the funds.\n     * @param value The amount of tokens to be spent.\n     * @param data Additional data with no specified format, sent in call to `spender`.\n     * @return A boolean value indicating whether the operation succeeded unless throwing.\n     */\n    function approveAndCall(address spender, uint256 value, bytes calldata data) external returns (bool);\n}\n"
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.1) (utils/Context.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n\n    function _contextSuffixLength() internal view virtual returns (uint256) {\n        return 0;\n    }\n}\n"
			},
			"@openzeppelin/contracts/utils/Errors.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/Errors.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Collection of common custom errors used in multiple contracts\n *\n * IMPORTANT: Backwards compatibility is not guaranteed in future versions of the library.\n * It is recommended to avoid relying on the error API for critical functionality.\n *\n * _Available since v5.1._\n */\nlibrary Errors {\n    /**\n     * @dev The ETH balance of the account is not enough to perform the operation.\n     */\n    error InsufficientBalance(uint256 balance, uint256 needed);\n\n    /**\n     * @dev A call to an address target failed. The target may have reverted.\n     */\n    error FailedCall();\n\n    /**\n     * @dev The deployment failed.\n     */\n    error FailedDeployment();\n\n    /**\n     * @dev A necessary precompile is missing.\n     */\n    error MissingPrecompile(address);\n}\n"
			},
			"@openzeppelin/contracts/interfaces/IERC165.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (interfaces/IERC165.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC165} from \"../utils/introspection/IERC165.sol\";\n"
			},
			"@openzeppelin/contracts/interfaces/IERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (interfaces/IERC20.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC20} from \"../token/ERC20/IERC20.sol\";\n"
			},
			"@openzeppelin/contracts/utils/introspection/IERC165.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/introspection/IERC165.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Interface of the ERC-165 standard, as defined in the\n * https://eips.ethereum.org/EIPS/eip-165[ERC].\n *\n * Implementers can declare support of contract interfaces, which can then be\n * queried by others ({ERC165Checker}).\n *\n * For an implementation, see {ERC165}.\n */\ninterface IERC165 {\n    /**\n     * @dev Returns true if this contract implements the interface defined by\n     * `interfaceId`. See the corresponding\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section]\n     * to learn more about how these ids are created.\n     *\n     * This function call must use less than 30 000 gas.\n     */\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": true,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			},
			"remappings": []
		}
	},
	"output": {
		"contracts": {
			"@openzeppelin/contracts/access/Ownable.sol": {
				"Ownable": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "OwnableInvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "OwnableUnauthorizedAccount",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. The initial owner is set to the address provided by the deployer. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.",
						"errors": {
							"OwnableInvalidOwner(address)": [
								{
									"details": "The owner is not a valid owner account. (eg. `address(0)`)"
								}
							],
							"OwnableUnauthorizedAccount(address)": [
								{
									"details": "The caller account is not authorized to perform an operation."
								}
							]
						},
						"kind": "dev",
						"methods": {
							"constructor": {
								"details": "Initializes the contract setting the address provided by the deployer as the initial owner."
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. The initial owner is set to the address provided by the deployer. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.\",\"errors\":{\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract setting the address provided by the deployer as the initial owner.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/access/Ownable.sol\":\"Ownable\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 8,
								"contract": "@openzeppelin/contracts/access/Ownable.sol:Ownable",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/interfaces/IERC1363.sol": {
				"IERC1363": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approveAndCall",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "approveAndCall",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferAndCall",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "transferAndCall",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "transferFromAndCall",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFromAndCall",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC-1363 standard as defined in the https://eips.ethereum.org/EIPS/eip-1363[ERC-1363]. Defines an extension interface for ERC-20 tokens that supports executing code on a recipient contract after `transfer` or `transferFrom`, or code on a spender contract after `approve`, in a single transaction.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"approveAndCall(address,uint256)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens and then calls {IERC1363Spender-onApprovalReceived} on `spender`.",
								"params": {
									"spender": "The address which will spend the funds.",
									"value": "The amount of tokens to be spent."
								},
								"returns": {
									"_0": "A boolean value indicating whether the operation succeeded unless throwing."
								}
							},
							"approveAndCall(address,uint256,bytes)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens and then calls {IERC1363Spender-onApprovalReceived} on `spender`.",
								"params": {
									"data": "Additional data with no specified format, sent in call to `spender`.",
									"spender": "The address which will spend the funds.",
									"value": "The amount of tokens to be spent."
								},
								"returns": {
									"_0": "A boolean value indicating whether the operation succeeded unless throwing."
								}
							},
							"balanceOf(address)": {
								"details": "Returns the value of tokens owned by `account`."
							},
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							},
							"totalSupply()": {
								"details": "Returns the value of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferAndCall(address,uint256)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to` and then calls {IERC1363Receiver-onTransferReceived} on `to`.",
								"params": {
									"to": "The address which you want to transfer to.",
									"value": "The amount of tokens to be transferred."
								},
								"returns": {
									"_0": "A boolean value indicating whether the operation succeeded unless throwing."
								}
							},
							"transferAndCall(address,uint256,bytes)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to` and then calls {IERC1363Receiver-onTransferReceived} on `to`.",
								"params": {
									"data": "Additional data with no specified format, sent in call to `to`.",
									"to": "The address which you want to transfer to.",
									"value": "The amount of tokens to be transferred."
								},
								"returns": {
									"_0": "A boolean value indicating whether the operation succeeded unless throwing."
								}
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFromAndCall(address,address,uint256)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism and then calls {IERC1363Receiver-onTransferReceived} on `to`.",
								"params": {
									"from": "The address which you want to send tokens from.",
									"to": "The address which you want to transfer to.",
									"value": "The amount of tokens to be transferred."
								},
								"returns": {
									"_0": "A boolean value indicating whether the operation succeeded unless throwing."
								}
							},
							"transferFromAndCall(address,address,uint256,bytes)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism and then calls {IERC1363Receiver-onTransferReceived} on `to`.",
								"params": {
									"data": "Additional data with no specified format, sent in call to `to`.",
									"from": "The address which you want to send tokens from.",
									"to": "The address which you want to transfer to.",
									"value": "The amount of tokens to be transferred."
								},
								"returns": {
									"_0": "A boolean value indicating whether the operation succeeded unless throwing."
								}
							}
						},
						"title": "IERC1363",
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"approveAndCall(address,uint256)": "3177029f",
							"approveAndCall(address,uint256,bytes)": "cae9ca51",
							"balanceOf(address)": "70a08231",
							"supportsInterface(bytes4)": "01ffc9a7",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferAndCall(address,uint256)": "1296ee62",
							"transferAndCall(address,uint256,bytes)": "4000aea0",
							"transferFrom(address,address,uint256)": "23b872dd",
							"transferFromAndCall(address,address,uint256)": "d8fbe994",
							"transferFromAndCall(address,address,uint256,bytes)": "c1d34b89"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approveAndCall\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"approveAndCall\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferAndCall\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"transferAndCall\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"transferFromAndCall\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFromAndCall\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC-1363 standard as defined in the https://eips.ethereum.org/EIPS/eip-1363[ERC-1363]. Defines an extension interface for ERC-20 tokens that supports executing code on a recipient contract after `transfer` or `transferFrom`, or code on a spender contract after `approve`, in a single transaction.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"approveAndCall(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens and then calls {IERC1363Spender-onApprovalReceived} on `spender`.\",\"params\":{\"spender\":\"The address which will spend the funds.\",\"value\":\"The amount of tokens to be spent.\"},\"returns\":{\"_0\":\"A boolean value indicating whether the operation succeeded unless throwing.\"}},\"approveAndCall(address,uint256,bytes)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens and then calls {IERC1363Spender-onApprovalReceived} on `spender`.\",\"params\":{\"data\":\"Additional data with no specified format, sent in call to `spender`.\",\"spender\":\"The address which will spend the funds.\",\"value\":\"The amount of tokens to be spent.\"},\"returns\":{\"_0\":\"A boolean value indicating whether the operation succeeded unless throwing.\"}},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferAndCall(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to` and then calls {IERC1363Receiver-onTransferReceived} on `to`.\",\"params\":{\"to\":\"The address which you want to transfer to.\",\"value\":\"The amount of tokens to be transferred.\"},\"returns\":{\"_0\":\"A boolean value indicating whether the operation succeeded unless throwing.\"}},\"transferAndCall(address,uint256,bytes)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to` and then calls {IERC1363Receiver-onTransferReceived} on `to`.\",\"params\":{\"data\":\"Additional data with no specified format, sent in call to `to`.\",\"to\":\"The address which you want to transfer to.\",\"value\":\"The amount of tokens to be transferred.\"},\"returns\":{\"_0\":\"A boolean value indicating whether the operation succeeded unless throwing.\"}},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFromAndCall(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism and then calls {IERC1363Receiver-onTransferReceived} on `to`.\",\"params\":{\"from\":\"The address which you want to send tokens from.\",\"to\":\"The address which you want to transfer to.\",\"value\":\"The amount of tokens to be transferred.\"},\"returns\":{\"_0\":\"A boolean value indicating whether the operation succeeded unless throwing.\"}},\"transferFromAndCall(address,address,uint256,bytes)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism and then calls {IERC1363Receiver-onTransferReceived} on `to`.\",\"params\":{\"data\":\"Additional data with no specified format, sent in call to `to`.\",\"from\":\"The address which you want to send tokens from.\",\"to\":\"The address which you want to transfer to.\",\"value\":\"The amount of tokens to be transferred.\"},\"returns\":{\"_0\":\"A boolean value indicating whether the operation succeeded unless throwing.\"}}},\"title\":\"IERC1363\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/IERC1363.sol\":\"IERC1363\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/IERC1363.sol\":{\"keccak256\":\"0x9b6b3e7803bc5f2f8cd7ad57db8ac1def61a9930a5a3107df4882e028a9605d7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://da62d6be1f5c6edf577f0cb45666a8aa9c2086a4bac87d95d65f02e2f4c36a4b\",\"dweb:/ipfs/QmNkpvBpoCMvX8JwAFNSc5XxJ2q5BXJpL5L1txb4QkqVFF\"]},\"@openzeppelin/contracts/interfaces/IERC165.sol\":{\"keccak256\":\"0xde7e9fd9aee8d4f40772f96bb3b58836cbc6dfc0227014a061947f8821ea9724\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://11fea9f8bc98949ac6709f0c1699db7430d2948137aa94d5a9e95a91f61a710a\",\"dweb:/ipfs/QmQdfRXxQjwP6yn3DVo1GHPpriKNcFghSPi94Z1oKEFUNS\"]},\"@openzeppelin/contracts/interfaces/IERC20.sol\":{\"keccak256\":\"0xce41876e78d1badc0512229b4d14e4daf83bc1003d7f83978d18e0e56f965b9c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a2608291cb038b388d80b79a06b6118a42f7894ff67b7da10ec0dbbf5b2973ba\",\"dweb:/ipfs/QmWohqcBLbcxmA4eGPhZDXe5RYMMEEpFq22nfkaUMvTfw1\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x79796192ec90263f21b464d5bc90b777a525971d3de8232be80d9c4f9fb353b8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f6fda447a62815e8064f47eff0dd1cf58d9207ad69b5d32280f8d7ed1d1e4621\",\"dweb:/ipfs/QmfDRc7pxfaXB2Dh9np5Uf29Na3pQ7tafRS684wd3GLjVL\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/security/ReentrancyGuard.sol": {
				"ReentrancyGuard": {
					"abi": [],
					"devdoc": {
						"details": "Contract module that helps prevent reentrant calls to a function. Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier available, which can be applied to functions to make sure there are no nested (reentrant) calls to them. Note that because there is a single `nonReentrant` guard, functions marked as `nonReentrant` may not call one another. This can be worked around by making those functions `private`, and then adding `external` `nonReentrant` entry points to them. TIP: If you would like to learn more about reentrancy and alternative ways to protect against it, check out our blog post https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Contract module that helps prevent reentrant calls to a function. Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier available, which can be applied to functions to make sure there are no nested (reentrant) calls to them. Note that because there is a single `nonReentrant` guard, functions marked as `nonReentrant` may not call one another. This can be worked around by making those functions `private`, and then adding `external` `nonReentrant` entry points to them. TIP: If you would like to learn more about reentrancy and alternative ways to protect against it, check out our blog post https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/security/ReentrancyGuard.sol\":\"ReentrancyGuard\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/security/ReentrancyGuard.sol\":{\"keccak256\":\"0xa535a5df777d44e945dd24aa43a11e44b024140fc340ad0dfe42acf4002aade1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://41319e7f621f2dc3733511332c4fd032f8e32ad2aa7fd6f665c19741d9941a34\",\"dweb:/ipfs/QmcYR3bd862GD1Bc7jwrU9bGxrhUu5na1oP964bDCu2id1\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 248,
								"contract": "@openzeppelin/contracts/security/ReentrancyGuard.sol:ReentrancyGuard",
								"label": "_status",
								"offset": 0,
								"slot": "0",
								"type": "t_uint256"
							}
						],
						"types": {
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"IERC20": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC-20 standard as defined in the ERC.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the value of tokens owned by `account`."
							},
							"totalSupply()": {
								"details": "Returns the value of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC-20 standard as defined in the ERC.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol": {
				"SafeERC20": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "currentAllowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "requestedDecrease",
									"type": "uint256"
								}
							],
							"name": "SafeERC20FailedDecreaseAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "token",
									"type": "address"
								}
							],
							"name": "SafeERC20FailedOperation",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Wrappers around ERC-20 operations that throw on failure (when the token contract returns false). Tokens that return no value (and instead revert or throw on failure) are also supported, non-reverting calls are assumed to be successful. To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract, which allows you to call the safe operations as `token.safeTransfer(...)`, etc.",
						"errors": {
							"SafeERC20FailedDecreaseAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failed `decreaseAllowance` request."
								}
							],
							"SafeERC20FailedOperation(address)": [
								{
									"details": "An operation with an ERC-20 token failed."
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"title": "SafeERC20",
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":750:9442  library SafeERC20 {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, shl(0xe0, 0x4e487b71))\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":750:9442  library SafeERC20 {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa26469706673582212207ef85760a6a75ec967a43dbb4b7214060e9c923a3ce074bc56c150dfc5cedfe764736f6c63430008140033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60556032600b8282823980515f1a607314602657634e487b7160e01b5f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f80fdfea26469706673582212207ef85760a6a75ec967a43dbb4b7214060e9c923a3ce074bc56c150dfc5cedfe764736f6c63430008140033",
							"opcodes": "PUSH1 0x55 PUSH1 0x32 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x26 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH31 0xF85760A6A75EC967A43DBB4B7214060E9C923A3CE074BC56C150DFC5CEDFE7 PUSH5 0x736F6C6343 STOP ADDMOD EQ STOP CALLER ",
							"sourceMap": "750:8692:6:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;750:8692:6;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "730000000000000000000000000000000000000000301460806040525f80fdfea26469706673582212207ef85760a6a75ec967a43dbb4b7214060e9c923a3ce074bc56c150dfc5cedfe764736f6c63430008140033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH31 0xF85760A6A75EC967A43DBB4B7214060E9C923A3CE074BC56C150DFC5CEDFE7 PUSH5 0x736F6C6343 STOP ADDMOD EQ STOP CALLER ",
							"sourceMap": "750:8692:6:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "96",
								"totalCost": "17096"
							},
							"internal": {
								"_callOptionalReturn(contract IERC20,bytes memory)": "infinite",
								"_callOptionalReturnBool(contract IERC20,bytes memory)": "infinite",
								"approveAndCallRelaxed(contract IERC1363,address,uint256,bytes memory)": "infinite",
								"forceApprove(contract IERC20,address,uint256)": "infinite",
								"safeDecreaseAllowance(contract IERC20,address,uint256)": "infinite",
								"safeIncreaseAllowance(contract IERC20,address,uint256)": "infinite",
								"safeTransfer(contract IERC20,address,uint256)": "infinite",
								"safeTransferFrom(contract IERC20,address,address,uint256)": "infinite",
								"transferAndCallRelaxed(contract IERC1363,address,uint256,bytes memory)": "infinite",
								"transferFromAndCallRelaxed(contract IERC1363,address,address,uint256,bytes memory)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 750,
									"end": 9442,
									"name": "PUSH #[$]",
									"source": 6,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 750,
									"end": 9442,
									"name": "PUSH [$]",
									"source": 6,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 750,
									"end": 9442,
									"name": "PUSH",
									"source": 6,
									"value": "B"
								},
								{
									"begin": 750,
									"end": 9442,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 750,
									"end": 9442,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 750,
									"end": 9442,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 750,
									"end": 9442,
									"name": "CODECOPY",
									"source": 6
								},
								{
									"begin": 750,
									"end": 9442,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 750,
									"end": 9442,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": 750,
									"end": 9442,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 750,
									"end": 9442,
									"name": "BYTE",
									"source": 6
								},
								{
									"begin": 750,
									"end": 9442,
									"name": "PUSH",
									"source": 6,
									"value": "73"
								},
								{
									"begin": 750,
									"end": 9442,
									"name": "EQ",
									"source": 6
								},
								{
									"begin": 750,
									"end": 9442,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 750,
									"end": 9442,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "4E487B71"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 750,
									"end": 9442,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 750,
									"end": 9442,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 750,
									"end": 9442,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 750,
									"end": 9442,
									"name": "PUSH",
									"source": 6,
									"value": "4"
								},
								{
									"begin": 750,
									"end": 9442,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 750,
									"end": 9442,
									"name": "PUSH",
									"source": 6,
									"value": "24"
								},
								{
									"begin": 750,
									"end": 9442,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 750,
									"end": 9442,
									"name": "REVERT",
									"source": 6
								},
								{
									"begin": 750,
									"end": 9442,
									"name": "tag",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 750,
									"end": 9442,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 750,
									"end": 9442,
									"name": "ADDRESS",
									"source": 6
								},
								{
									"begin": 750,
									"end": 9442,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 750,
									"end": 9442,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 750,
									"end": 9442,
									"name": "PUSH",
									"source": 6,
									"value": "73"
								},
								{
									"begin": 750,
									"end": 9442,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 750,
									"end": 9442,
									"name": "MSTORE8",
									"source": 6
								},
								{
									"begin": 750,
									"end": 9442,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 750,
									"end": 9442,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 750,
									"end": 9442,
									"name": "RETURN",
									"source": 6
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212207ef85760a6a75ec967a43dbb4b7214060e9c923a3ce074bc56c150dfc5cedfe764736f6c63430008140033",
									".code": [
										{
											"begin": 750,
											"end": 9442,
											"name": "PUSHDEPLOYADDRESS",
											"source": 6
										},
										{
											"begin": 750,
											"end": 9442,
											"name": "ADDRESS",
											"source": 6
										},
										{
											"begin": 750,
											"end": 9442,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 750,
											"end": 9442,
											"name": "PUSH",
											"source": 6,
											"value": "80"
										},
										{
											"begin": 750,
											"end": 9442,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 750,
											"end": 9442,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 750,
											"end": 9442,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 750,
											"end": 9442,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 750,
											"end": 9442,
											"name": "REVERT",
											"source": 6
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/access/Ownable.sol",
								"@openzeppelin/contracts/interfaces/IERC1363.sol",
								"@openzeppelin/contracts/interfaces/IERC165.sol",
								"@openzeppelin/contracts/interfaces/IERC20.sol",
								"@openzeppelin/contracts/security/ReentrancyGuard.sol",
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
								"@openzeppelin/contracts/utils/Address.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"@openzeppelin/contracts/utils/Errors.sol",
								"@openzeppelin/contracts/utils/introspection/IERC165.sol",
								"ARY/HardStake.sol",
								"ARY/SwapPro.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"currentAllowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"requestedDecrease\",\"type\":\"uint256\"}],\"name\":\"SafeERC20FailedDecreaseAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"SafeERC20FailedOperation\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Wrappers around ERC-20 operations that throw on failure (when the token contract returns false). Tokens that return no value (and instead revert or throw on failure) are also supported, non-reverting calls are assumed to be successful. To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract, which allows you to call the safe operations as `token.safeTransfer(...)`, etc.\",\"errors\":{\"SafeERC20FailedDecreaseAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failed `decreaseAllowance` request.\"}],\"SafeERC20FailedOperation(address)\":[{\"details\":\"An operation with an ERC-20 token failed.\"}]},\"kind\":\"dev\",\"methods\":{},\"title\":\"SafeERC20\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":\"SafeERC20\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/IERC1363.sol\":{\"keccak256\":\"0x9b6b3e7803bc5f2f8cd7ad57db8ac1def61a9930a5a3107df4882e028a9605d7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://da62d6be1f5c6edf577f0cb45666a8aa9c2086a4bac87d95d65f02e2f4c36a4b\",\"dweb:/ipfs/QmNkpvBpoCMvX8JwAFNSc5XxJ2q5BXJpL5L1txb4QkqVFF\"]},\"@openzeppelin/contracts/interfaces/IERC165.sol\":{\"keccak256\":\"0xde7e9fd9aee8d4f40772f96bb3b58836cbc6dfc0227014a061947f8821ea9724\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://11fea9f8bc98949ac6709f0c1699db7430d2948137aa94d5a9e95a91f61a710a\",\"dweb:/ipfs/QmQdfRXxQjwP6yn3DVo1GHPpriKNcFghSPi94Z1oKEFUNS\"]},\"@openzeppelin/contracts/interfaces/IERC20.sol\":{\"keccak256\":\"0xce41876e78d1badc0512229b4d14e4daf83bc1003d7f83978d18e0e56f965b9c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a2608291cb038b388d80b79a06b6118a42f7894ff67b7da10ec0dbbf5b2973ba\",\"dweb:/ipfs/QmWohqcBLbcxmA4eGPhZDXe5RYMMEEpFq22nfkaUMvTfw1\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]},\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":{\"keccak256\":\"0xca2ae13e0610f6a99238dd00b97bd786bc92732dae6d6b9d61f573ec51018310\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://75f8c71ce0c91c40dd5f249ace0b7d8270f8f1767231bcf71490f7157d6ba862\",\"dweb:/ipfs/QmYXgxeDyFHvz3JsXxLEYN6GNUR44ThHeFj5XkpkgMoG4w\"]},\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0x9d8da059267bac779a2dbbb9a26c2acf00ca83085e105d62d5d4ef96054a47f5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c78e2aa4313323cecd1ef12a8d6265b96beee1a199923abf55d9a2a9e291ad23\",\"dweb:/ipfs/QmUTs2KStXucZezzFo3EYeqYu47utu56qrF7jj1Gue65vb\"]},\"@openzeppelin/contracts/utils/Errors.sol\":{\"keccak256\":\"0x6afa713bfd42cf0f7656efa91201007ac465e42049d7de1d50753a373648c123\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ba1d02f4847670a1b83dec9f7d37f0b0418d6043447b69f3a29a5f9efc547fcf\",\"dweb:/ipfs/QmQ7iH2keLNUKgq2xSWcRmuBE5eZ3F5whYAkAGzCNNoEWB\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x79796192ec90263f21b464d5bc90b777a525971d3de8232be80d9c4f9fb353b8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f6fda447a62815e8064f47eff0dd1cf58d9207ad69b5d32280f8d7ed1d1e4621\",\"dweb:/ipfs/QmfDRc7pxfaXB2Dh9np5Uf29Na3pQ7tafRS684wd3GLjVL\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Address.sol": {
				"Address": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "target",
									"type": "address"
								}
							],
							"name": "AddressEmptyCode",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Collection of functions related to the address type",
						"errors": {
							"AddressEmptyCode(address)": [
								{
									"details": "There's no code at `target` (it is not a contract)."
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/utils/Address.sol\":233:6032  library Address {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, shl(0xe0, 0x4e487b71))\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/utils/Address.sol\":233:6032  library Address {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220e3eac2e8b409f573750a45f19ee0f18a84a9f8b0589fde0f129a40249af953a164736f6c63430008140033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60556032600b8282823980515f1a607314602657634e487b7160e01b5f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f80fdfea2646970667358221220e3eac2e8b409f573750a45f19ee0f18a84a9f8b0589fde0f129a40249af953a164736f6c63430008140033",
							"opcodes": "PUSH1 0x55 PUSH1 0x32 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x26 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xE3 0xEA 0xC2 0xE8 0xB4 MULMOD CREATE2 PUSH20 0x750A45F19EE0F18A84A9F8B0589FDE0F129A4024 SWAP11 0xF9 MSTORE8 LOG1 PUSH5 0x736F6C6343 STOP ADDMOD EQ STOP CALLER ",
							"sourceMap": "233:5799:7:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;233:5799:7;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "730000000000000000000000000000000000000000301460806040525f80fdfea2646970667358221220e3eac2e8b409f573750a45f19ee0f18a84a9f8b0589fde0f129a40249af953a164736f6c63430008140033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xE3 0xEA 0xC2 0xE8 0xB4 MULMOD CREATE2 PUSH20 0x750A45F19EE0F18A84A9F8B0589FDE0F129A4024 SWAP11 0xF9 MSTORE8 LOG1 PUSH5 0x736F6C6343 STOP ADDMOD EQ STOP CALLER ",
							"sourceMap": "233:5799:7:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "96",
								"totalCost": "17096"
							},
							"internal": {
								"_revert(bytes memory)": "infinite",
								"functionCall(address,bytes memory)": "infinite",
								"functionCallWithValue(address,bytes memory,uint256)": "infinite",
								"functionDelegateCall(address,bytes memory)": "infinite",
								"functionStaticCall(address,bytes memory)": "infinite",
								"sendValue(address payable,uint256)": "infinite",
								"verifyCallResult(bool,bytes memory)": "infinite",
								"verifyCallResultFromTarget(address,bool,bytes memory)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 233,
									"end": 6032,
									"name": "PUSH #[$]",
									"source": 7,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 233,
									"end": 6032,
									"name": "PUSH [$]",
									"source": 7,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 233,
									"end": 6032,
									"name": "PUSH",
									"source": 7,
									"value": "B"
								},
								{
									"begin": 233,
									"end": 6032,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 233,
									"end": 6032,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 233,
									"end": 6032,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 233,
									"end": 6032,
									"name": "CODECOPY",
									"source": 7
								},
								{
									"begin": 233,
									"end": 6032,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 233,
									"end": 6032,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": 233,
									"end": 6032,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 233,
									"end": 6032,
									"name": "BYTE",
									"source": 7
								},
								{
									"begin": 233,
									"end": 6032,
									"name": "PUSH",
									"source": 7,
									"value": "73"
								},
								{
									"begin": 233,
									"end": 6032,
									"name": "EQ",
									"source": 7
								},
								{
									"begin": 233,
									"end": 6032,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 233,
									"end": 6032,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "4E487B71"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 233,
									"end": 6032,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 233,
									"end": 6032,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 233,
									"end": 6032,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 233,
									"end": 6032,
									"name": "PUSH",
									"source": 7,
									"value": "4"
								},
								{
									"begin": 233,
									"end": 6032,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 233,
									"end": 6032,
									"name": "PUSH",
									"source": 7,
									"value": "24"
								},
								{
									"begin": 233,
									"end": 6032,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 233,
									"end": 6032,
									"name": "REVERT",
									"source": 7
								},
								{
									"begin": 233,
									"end": 6032,
									"name": "tag",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 233,
									"end": 6032,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 233,
									"end": 6032,
									"name": "ADDRESS",
									"source": 7
								},
								{
									"begin": 233,
									"end": 6032,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 233,
									"end": 6032,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 233,
									"end": 6032,
									"name": "PUSH",
									"source": 7,
									"value": "73"
								},
								{
									"begin": 233,
									"end": 6032,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 233,
									"end": 6032,
									"name": "MSTORE8",
									"source": 7
								},
								{
									"begin": 233,
									"end": 6032,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 233,
									"end": 6032,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 233,
									"end": 6032,
									"name": "RETURN",
									"source": 7
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220e3eac2e8b409f573750a45f19ee0f18a84a9f8b0589fde0f129a40249af953a164736f6c63430008140033",
									".code": [
										{
											"begin": 233,
											"end": 6032,
											"name": "PUSHDEPLOYADDRESS",
											"source": 7
										},
										{
											"begin": 233,
											"end": 6032,
											"name": "ADDRESS",
											"source": 7
										},
										{
											"begin": 233,
											"end": 6032,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 233,
											"end": 6032,
											"name": "PUSH",
											"source": 7,
											"value": "80"
										},
										{
											"begin": 233,
											"end": 6032,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 233,
											"end": 6032,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 233,
											"end": 6032,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 233,
											"end": 6032,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 233,
											"end": 6032,
											"name": "REVERT",
											"source": 7
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/access/Ownable.sol",
								"@openzeppelin/contracts/interfaces/IERC1363.sol",
								"@openzeppelin/contracts/interfaces/IERC165.sol",
								"@openzeppelin/contracts/interfaces/IERC20.sol",
								"@openzeppelin/contracts/security/ReentrancyGuard.sol",
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
								"@openzeppelin/contracts/utils/Address.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"@openzeppelin/contracts/utils/Errors.sol",
								"@openzeppelin/contracts/utils/introspection/IERC165.sol",
								"ARY/HardStake.sol",
								"ARY/SwapPro.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"}],\"name\":\"AddressEmptyCode\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Collection of functions related to the address type\",\"errors\":{\"AddressEmptyCode(address)\":[{\"details\":\"There's no code at `target` (it is not a contract).\"}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Address.sol\":\"Address\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0x9d8da059267bac779a2dbbb9a26c2acf00ca83085e105d62d5d4ef96054a47f5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c78e2aa4313323cecd1ef12a8d6265b96beee1a199923abf55d9a2a9e291ad23\",\"dweb:/ipfs/QmUTs2KStXucZezzFo3EYeqYu47utu56qrF7jj1Gue65vb\"]},\"@openzeppelin/contracts/utils/Errors.sol\":{\"keccak256\":\"0x6afa713bfd42cf0f7656efa91201007ac465e42049d7de1d50753a373648c123\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ba1d02f4847670a1b83dec9f7d37f0b0418d6043447b69f3a29a5f9efc547fcf\",\"dweb:/ipfs/QmQ7iH2keLNUKgq2xSWcRmuBE5eZ3F5whYAkAGzCNNoEWB\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"Context": {
					"abi": [],
					"devdoc": {
						"details": "Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Errors.sol": {
				"Errors": {
					"abi": [
						{
							"inputs": [],
							"name": "FailedCall",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "FailedDeployment",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "MissingPrecompile",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Collection of common custom errors used in multiple contracts IMPORTANT: Backwards compatibility is not guaranteed in future versions of the library. It is recommended to avoid relying on the error API for critical functionality. _Available since v5.1._",
						"errors": {
							"FailedCall()": [
								{
									"details": "A call to an address target failed. The target may have reverted."
								}
							],
							"FailedDeployment()": [
								{
									"details": "The deployment failed."
								}
							],
							"InsufficientBalance(uint256,uint256)": [
								{
									"details": "The ETH balance of the account is not enough to perform the operation."
								}
							],
							"MissingPrecompile(address)": [
								{
									"details": "A necessary precompile is missing."
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/utils/Errors.sol\":411:895  library Errors {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, shl(0xe0, 0x4e487b71))\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/utils/Errors.sol\":411:895  library Errors {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220fda1a53b793be3a8bbb2010e0eb7c448f2b9546e31d584b9d5e7e88a8cfeea6564736f6c63430008140033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60556032600b8282823980515f1a607314602657634e487b7160e01b5f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f80fdfea2646970667358221220fda1a53b793be3a8bbb2010e0eb7c448f2b9546e31d584b9d5e7e88a8cfeea6564736f6c63430008140033",
							"opcodes": "PUSH1 0x55 PUSH1 0x32 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x26 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 REVERT LOG1 0xA5 EXTCODESIZE PUSH26 0x3BE3A8BBB2010E0EB7C448F2B9546E31D584B9D5E7E88A8CFEEA PUSH6 0x64736F6C6343 STOP ADDMOD EQ STOP CALLER ",
							"sourceMap": "411:484:9:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;411:484:9;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "730000000000000000000000000000000000000000301460806040525f80fdfea2646970667358221220fda1a53b793be3a8bbb2010e0eb7c448f2b9546e31d584b9d5e7e88a8cfeea6564736f6c63430008140033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 REVERT LOG1 0xA5 EXTCODESIZE PUSH26 0x3BE3A8BBB2010E0EB7C448F2B9546E31D584B9D5E7E88A8CFEEA PUSH6 0x64736F6C6343 STOP ADDMOD EQ STOP CALLER ",
							"sourceMap": "411:484:9:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "96",
								"totalCost": "17096"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 411,
									"end": 895,
									"name": "PUSH #[$]",
									"source": 9,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 411,
									"end": 895,
									"name": "PUSH [$]",
									"source": 9,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 411,
									"end": 895,
									"name": "PUSH",
									"source": 9,
									"value": "B"
								},
								{
									"begin": 411,
									"end": 895,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 411,
									"end": 895,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 411,
									"end": 895,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 411,
									"end": 895,
									"name": "CODECOPY",
									"source": 9
								},
								{
									"begin": 411,
									"end": 895,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 411,
									"end": 895,
									"name": "MLOAD",
									"source": 9
								},
								{
									"begin": 411,
									"end": 895,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 411,
									"end": 895,
									"name": "BYTE",
									"source": 9
								},
								{
									"begin": 411,
									"end": 895,
									"name": "PUSH",
									"source": 9,
									"value": "73"
								},
								{
									"begin": 411,
									"end": 895,
									"name": "EQ",
									"source": 9
								},
								{
									"begin": 411,
									"end": 895,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "1"
								},
								{
									"begin": 411,
									"end": 895,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "4E487B71"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 411,
									"end": 895,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 411,
									"end": 895,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 411,
									"end": 895,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 411,
									"end": 895,
									"name": "PUSH",
									"source": 9,
									"value": "4"
								},
								{
									"begin": 411,
									"end": 895,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 411,
									"end": 895,
									"name": "PUSH",
									"source": 9,
									"value": "24"
								},
								{
									"begin": 411,
									"end": 895,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 411,
									"end": 895,
									"name": "REVERT",
									"source": 9
								},
								{
									"begin": 411,
									"end": 895,
									"name": "tag",
									"source": 9,
									"value": "1"
								},
								{
									"begin": 411,
									"end": 895,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 411,
									"end": 895,
									"name": "ADDRESS",
									"source": 9
								},
								{
									"begin": 411,
									"end": 895,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 411,
									"end": 895,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 411,
									"end": 895,
									"name": "PUSH",
									"source": 9,
									"value": "73"
								},
								{
									"begin": 411,
									"end": 895,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 411,
									"end": 895,
									"name": "MSTORE8",
									"source": 9
								},
								{
									"begin": 411,
									"end": 895,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 411,
									"end": 895,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 411,
									"end": 895,
									"name": "RETURN",
									"source": 9
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220fda1a53b793be3a8bbb2010e0eb7c448f2b9546e31d584b9d5e7e88a8cfeea6564736f6c63430008140033",
									".code": [
										{
											"begin": 411,
											"end": 895,
											"name": "PUSHDEPLOYADDRESS",
											"source": 9
										},
										{
											"begin": 411,
											"end": 895,
											"name": "ADDRESS",
											"source": 9
										},
										{
											"begin": 411,
											"end": 895,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 411,
											"end": 895,
											"name": "PUSH",
											"source": 9,
											"value": "80"
										},
										{
											"begin": 411,
											"end": 895,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 411,
											"end": 895,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 411,
											"end": 895,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 411,
											"end": 895,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 411,
											"end": 895,
											"name": "REVERT",
											"source": 9
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/access/Ownable.sol",
								"@openzeppelin/contracts/interfaces/IERC1363.sol",
								"@openzeppelin/contracts/interfaces/IERC165.sol",
								"@openzeppelin/contracts/interfaces/IERC20.sol",
								"@openzeppelin/contracts/security/ReentrancyGuard.sol",
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
								"@openzeppelin/contracts/utils/Address.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"@openzeppelin/contracts/utils/Errors.sol",
								"@openzeppelin/contracts/utils/introspection/IERC165.sol",
								"ARY/HardStake.sol",
								"ARY/SwapPro.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"FailedCall\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"FailedDeployment\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"MissingPrecompile\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Collection of common custom errors used in multiple contracts IMPORTANT: Backwards compatibility is not guaranteed in future versions of the library. It is recommended to avoid relying on the error API for critical functionality. _Available since v5.1._\",\"errors\":{\"FailedCall()\":[{\"details\":\"A call to an address target failed. The target may have reverted.\"}],\"FailedDeployment()\":[{\"details\":\"The deployment failed.\"}],\"InsufficientBalance(uint256,uint256)\":[{\"details\":\"The ETH balance of the account is not enough to perform the operation.\"}],\"MissingPrecompile(address)\":[{\"details\":\"A necessary precompile is missing.\"}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Errors.sol\":\"Errors\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Errors.sol\":{\"keccak256\":\"0x6afa713bfd42cf0f7656efa91201007ac465e42049d7de1d50753a373648c123\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ba1d02f4847670a1b83dec9f7d37f0b0418d6043447b69f3a29a5f9efc547fcf\",\"dweb:/ipfs/QmQ7iH2keLNUKgq2xSWcRmuBE5eZ3F5whYAkAGzCNNoEWB\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/introspection/IERC165.sol": {
				"IERC165": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC-165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[ERC]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.",
						"kind": "dev",
						"methods": {
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"supportsInterface(bytes4)": "01ffc9a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC-165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[ERC]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":\"IERC165\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x79796192ec90263f21b464d5bc90b777a525971d3de8232be80d9c4f9fb353b8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f6fda447a62815e8064f47eff0dd1cf58d9207ad69b5d32280f8d7ed1d1e4621\",\"dweb:/ipfs/QmfDRc7pxfaXB2Dh9np5Uf29Na3pQ7tafRS684wd3GLjVL\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"ARY/HardStake.sol": {
				"HardStake": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_stakingToken",
									"type": "address"
								},
								{
									"internalType": "address payable",
									"name": "_swapContract",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "_minimumVolumeRequired",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "OwnableInvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "OwnableUnauthorizedAccount",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "token",
									"type": "address"
								}
							],
							"name": "SafeERC20FailedOperation",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "user",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "Claim",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "user",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "Deposit",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "RewardAdded",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "user",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "Withdraw",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "accTokensPerShare",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "claimRewards",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_amount",
									"type": "uint256"
								}
							],
							"name": "deposit",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "emergencyWithdraw",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "minimumVolumeRequired",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "reward",
									"type": "uint256"
								}
							],
							"name": "notifyRewardAmount",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_user",
									"type": "address"
								}
							],
							"name": "pendingReward",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "tokenAddress",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenAmount",
									"type": "uint256"
								}
							],
							"name": "recoverERC20",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "rewardToken",
							"outputs": [
								{
									"internalType": "contract IERC20",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "stakingToken",
							"outputs": [
								{
									"internalType": "contract IERC20",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "swapContract",
							"outputs": [
								{
									"internalType": "contract SwapPro",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalRewards",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalStaked",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_newVolume",
									"type": "uint256"
								}
							],
							"name": "updateMinimumVolumeRequired",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "userInfo",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "rewardDebt",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_amount",
									"type": "uint256"
								}
							],
							"name": "withdraw",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"errors": {
							"OwnableInvalidOwner(address)": [
								{
									"details": "The owner is not a valid owner account. (eg. `address(0)`)"
								}
							],
							"OwnableUnauthorizedAccount(address)": [
								{
									"details": "The caller account is not authorized to perform an operation."
								}
							],
							"SafeERC20FailedOperation(address)": [
								{
									"details": "An operation with an ERC-20 token failed."
								}
							]
						},
						"kind": "dev",
						"methods": {
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"ARY/HardStake.sol\":301:5914  contract HardStake is Ownable, ReentrancyGuard {... */\n  mstore(0x40, 0xc0)\n    /* \"ARY/HardStake.sol\":1385:1832  constructor(... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  add\n  0x40\n  dup2\n  swap1\n  mstore\n  tag_2\n  swap2\n  tag_3\n  jump\t// in\ntag_2:\n    /* \"ARY/HardStake.sol\":1525:1535  msg.sender */\n  caller\n  dup1\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1269:1364  if (initialOwner == address(0)) {... */\n  tag_8\n  jumpi\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1322:1353  OwnableInvalidOwner(address(0)) */\n  mload(0x40)\n  shl(0xe0, 0x1e4fbdf7)\n  dup2\n  mstore\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1350:1351  0 */\n  0x00\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1322:1353  OwnableInvalidOwner(address(0)) */\n  0x04\n  dup3\n  add\n    /* \"#utility.yul\":755:806   */\n  mstore\n    /* \"#utility.yul\":728:746   */\n  0x24\n  add\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1322:1353  OwnableInvalidOwner(address(0)) */\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1269:1364  if (initialOwner == address(0)) {... */\ntag_8:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1373:1405  _transferOwnership(initialOwner) */\n  tag_11\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1392:1404  initialOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1373:1391  _transferOwnership */\n  tag_12\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1373:1405  _transferOwnership(initialOwner) */\n  jump\t// in\ntag_11:\n  pop\n    /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1716:1717  1 */\n  0x01\n    /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1821:1843  _status = _NOT_ENTERED */\n  dup1\n  sstore\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"ARY/HardStake.sol\":1595:1631  stakingToken = IERC20(_stakingToken) */\n  swap3\n  dup4\n  and\n  0x80\n  dup2\n  swap1\n  mstore\n    /* \"ARY/HardStake.sol\":1642:1677  rewardToken = IERC20(_stakingToken) */\n  0xa0\n  mstore\n    /* \"ARY/HardStake.sol\":1730:1742  swapContract */\n  0x02\n    /* \"ARY/HardStake.sol\":1730:1767  swapContract = SwapPro(_swapContract) */\n  dup1\n  sload\n  not(sub(shl(0xa0, 0x01), 0x01))\n  and\n  swap3\n  swap1\n  swap4\n  and\n  swap2\n  swap1\n  swap2\n  or\n  swap1\n  swap2\n  sstore\n    /* \"ARY/HardStake.sol\":1778:1799  minimumVolumeRequired */\n  0x07\n    /* \"ARY/HardStake.sol\":1778:1824  minimumVolumeRequired = _minimumVolumeRequired */\n  sstore\n    /* \"ARY/HardStake.sol\":301:5914  contract HardStake is Ownable, ReentrancyGuard {... */\n  jump(tag_18)\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\ntag_12:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2985:3001  address oldOwner */\n  0x00\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3004:3010  _owner */\n  dup1\n  sload\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3020:3037  _owner = newOwner */\n  dup4\n  dup2\n  and\n  not(sub(shl(0xa0, 0x01), 0x01))\n  dup4\n  and\n  dup2\n  or\n  dup5\n  sstore\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n  mload(0x40)\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3004:3010  _owner */\n  swap2\n  swap1\n  swap3\n  and\n  swap3\n  dup4\n  swap2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n  0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n  swap2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2985:3001  address oldOwner */\n  swap1\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n  log3\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2975:3099  {... */\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":14:145   */\ntag_17:\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"#utility.yul\":89:120   */\n  dup2\n  and\n    /* \"#utility.yul\":79:121   */\n  dup2\n  eq\n    /* \"#utility.yul\":69:139   */\n  tag_20\n  jumpi\n    /* \"#utility.yul\":135:136   */\n  0x00\n    /* \"#utility.yul\":132:133   */\n  dup1\n    /* \"#utility.yul\":125:137   */\n  revert\n    /* \"#utility.yul\":69:139   */\ntag_20:\n    /* \"#utility.yul\":14:145   */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":150:604   */\ntag_3:\n    /* \"#utility.yul\":246:252   */\n  0x00\n    /* \"#utility.yul\":254:260   */\n  dup1\n    /* \"#utility.yul\":262:268   */\n  0x00\n    /* \"#utility.yul\":315:317   */\n  0x60\n    /* \"#utility.yul\":303:312   */\n  dup5\n    /* \"#utility.yul\":294:301   */\n  dup7\n    /* \"#utility.yul\":290:313   */\n  sub\n    /* \"#utility.yul\":286:318   */\n  slt\n    /* \"#utility.yul\":283:335   */\n  iszero\n  tag_22\n  jumpi\n    /* \"#utility.yul\":331:332   */\n  0x00\n    /* \"#utility.yul\":328:329   */\n  dup1\n    /* \"#utility.yul\":321:333   */\n  revert\n    /* \"#utility.yul\":283:335   */\ntag_22:\n    /* \"#utility.yul\":363:372   */\n  dup4\n    /* \"#utility.yul\":357:373   */\n  mload\n    /* \"#utility.yul\":382:413   */\n  tag_23\n    /* \"#utility.yul\":407:412   */\n  dup2\n    /* \"#utility.yul\":382:413   */\n  tag_17\n  jump\t// in\ntag_23:\n    /* \"#utility.yul\":482:484   */\n  0x20\n    /* \"#utility.yul\":467:485   */\n  dup6\n  add\n    /* \"#utility.yul\":461:486   */\n  mload\n    /* \"#utility.yul\":432:437   */\n  swap1\n  swap4\n  pop\n    /* \"#utility.yul\":495:528   */\n  tag_24\n    /* \"#utility.yul\":461:486   */\n  dup2\n    /* \"#utility.yul\":495:528   */\n  tag_17\n  jump\t// in\ntag_24:\n    /* \"#utility.yul\":547:554   */\n  dup1\n    /* \"#utility.yul\":537:554   */\n  swap3\n  pop\n  pop\n    /* \"#utility.yul\":594:596   */\n  0x40\n    /* \"#utility.yul\":583:592   */\n  dup5\n    /* \"#utility.yul\":579:597   */\n  add\n    /* \"#utility.yul\":573:598   */\n  mload\n    /* \"#utility.yul\":563:598   */\n  swap1\n  pop\n    /* \"#utility.yul\":150:604   */\n  swap3\n  pop\n  swap3\n  pop\n  swap3\n  jump\t// out\n    /* \"#utility.yul\":609:812   */\ntag_18:\n    /* \"ARY/HardStake.sol\":301:5914  contract HardStake is Ownable, ReentrancyGuard {... */\n  mload(0x80)\n  mload(0xa0)\n  codecopy(0x00, dataOffset(sub_0), dataSize(sub_0))\n  0x00\n  assignImmutable(\"0x2f376be2da13ceb7f7d4d291fdf0ead4b1285423c32c5412ff3af6625953248f\")\n  0x00\n  assignImmutable(\"0x0a2c56019ccb5f08608c3b05b18a6137874ce411ef59ecc21ab7d289712eec9f\")\n  return(0x00, dataSize(sub_0))\nstop\n\nsub_0: assembly {\n        /* \"ARY/HardStake.sol\":301:5914  contract HardStake is Ownable, ReentrancyGuard {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x72f702f3\n      gt\n      tag_22\n      jumpi\n      dup1\n      0xb6b55f25\n      gt\n      tag_23\n      jumpi\n      dup1\n      0xb6b55f25\n      eq\n      tag_17\n      jumpi\n      dup1\n      0xdb2e21bc\n      eq\n      tag_18\n      jumpi\n      dup1\n      0xf2fde38b\n      eq\n      tag_19\n      jumpi\n      dup1\n      0xf40f0f52\n      eq\n      tag_20\n      jumpi\n      dup1\n      0xf7c618c1\n      eq\n      tag_21\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_23:\n      dup1\n      0x72f702f3\n      eq\n      tag_12\n      jumpi\n      dup1\n      0x817b1cd2\n      eq\n      tag_13\n      jumpi\n      dup1\n      0x8980f11f\n      eq\n      tag_14\n      jumpi\n      dup1\n      0x8da5cb5b\n      eq\n      tag_15\n      jumpi\n      dup1\n      0x8ea83031\n      eq\n      tag_16\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_22:\n      dup1\n      0x2f3c9a4f\n      gt\n      tag_24\n      jumpi\n      dup1\n      0x2f3c9a4f\n      eq\n      tag_7\n      jumpi\n      dup1\n      0x372500ab\n      eq\n      tag_8\n      jumpi\n      dup1\n      0x3c6b16ab\n      eq\n      tag_9\n      jumpi\n      dup1\n      0x644f362d\n      eq\n      tag_10\n      jumpi\n      dup1\n      0x715018a6\n      eq\n      tag_11\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_24:\n      dup1\n      0x0e15561a\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x1959a002\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x2277d7e1\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x2e1a7d4d\n      eq\n      tag_6\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"ARY/HardStake.sol\":1015:1042  uint256 public totalRewards */\n    tag_3:\n      tag_25\n      sload(0x06)\n      dup2\n      jump\n    tag_25:\n      mload(0x40)\n        /* \"#utility.yul\":160:185   */\n      swap1\n      dup2\n      mstore\n        /* \"#utility.yul\":148:150   */\n      0x20\n        /* \"#utility.yul\":133:151   */\n      add\n        /* \"ARY/HardStake.sol\":1015:1042  uint256 public totalRewards */\n    tag_27:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"ARY/HardStake.sol\":835:880  mapping (address => UserInfo) public userInfo */\n    tag_4:\n      tag_29\n      tag_30\n      calldatasize\n      0x04\n      tag_31\n      jump\t// in\n    tag_30:\n      mstore(0x20, 0x04)\n      0x00\n      swap1\n      dup2\n      mstore\n      0x40\n      swap1\n      keccak256\n      dup1\n      sload\n      0x01\n      swap1\n      swap2\n      add\n      sload\n      dup3\n      jump\n    tag_29:\n      0x40\n      dup1\n      mload\n        /* \"#utility.yul\":739:764   */\n      swap3\n      dup4\n      mstore\n        /* \"#utility.yul\":795:797   */\n      0x20\n        /* \"#utility.yul\":780:798   */\n      dup4\n      add\n        /* \"#utility.yul\":773:807   */\n      swap2\n      swap1\n      swap2\n      mstore\n        /* \"#utility.yul\":712:730   */\n      add\n        /* \"ARY/HardStake.sol\":835:880  mapping (address => UserInfo) public userInfo */\n      tag_27\n        /* \"#utility.yul\":565:813   */\n      jump\n        /* \"ARY/HardStake.sol\":5464:5593  function updateMinimumVolumeRequired(uint256 _newVolume) external onlyOwner {... */\n    tag_5:\n      tag_35\n      tag_36\n      calldatasize\n      0x04\n      tag_37\n      jump\t// in\n    tag_36:\n      tag_38\n      jump\t// in\n    tag_35:\n      stop\n        /* \"ARY/HardStake.sol\":3655:4443  function withdraw(uint256 _amount) external nonReentrant {... */\n    tag_6:\n      tag_35\n      tag_40\n      calldatasize\n      0x04\n      tag_37\n      jump\t// in\n    tag_40:\n      tag_41\n      jump\t// in\n        /* \"ARY/HardStake.sol\":940:972  uint256 public accTokensPerShare */\n    tag_7:\n      tag_25\n      sload(0x05)\n      dup2\n      jump\n        /* \"ARY/HardStake.sol\":4507:4924  function claimRewards() external nonReentrant {... */\n    tag_8:\n      tag_35\n      tag_46\n      jump\t// in\n        /* \"ARY/HardStake.sol\":1911:2340  function notifyRewardAmount(uint256 reward) external {... */\n    tag_9:\n      tag_35\n      tag_48\n      calldatasize\n      0x04\n      tag_37\n      jump\t// in\n    tag_48:\n      tag_49\n      jump\t// in\n        /* \"ARY/HardStake.sol\":1098:1134  uint256 public minimumVolumeRequired */\n    tag_10:\n      tag_25\n      sload(0x07)\n      dup2\n      jump\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2293:2394  function renounceOwnership() public virtual onlyOwner {... */\n    tag_11:\n      tag_35\n      tag_54\n      jump\t// in\n        /* \"ARY/HardStake.sol\":639:675  IERC20 public immutable stakingToken */\n    tag_12:\n      tag_55\n      immutable(\"0x0a2c56019ccb5f08608c3b05b18a6137874ce411ef59ecc21ab7d289712eec9f\")\n      dup2\n      jump\n    tag_55:\n      mload(0x40)\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":1181:1213   */\n      swap1\n      swap2\n      and\n        /* \"#utility.yul\":1163:1214   */\n      dup2\n      mstore\n        /* \"#utility.yul\":1151:1153   */\n      0x20\n        /* \"#utility.yul\":1136:1154   */\n      add\n        /* \"ARY/HardStake.sol\":639:675  IERC20 public immutable stakingToken */\n      tag_27\n        /* \"#utility.yul\":1003:1220   */\n      jump\n        /* \"ARY/HardStake.sol\":754:780  uint256 public totalStaked */\n    tag_13:\n      tag_25\n      sload(0x03)\n      dup2\n      jump\n        /* \"ARY/HardStake.sol\":5664:5911  function recoverERC20(address tokenAddress, uint256 tokenAmount) external onlyOwner {... */\n    tag_14:\n      tag_35\n      tag_63\n      calldatasize\n      0x04\n      tag_64\n      jump\t// in\n    tag_63:\n      tag_65\n      jump\t// in\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1638:1723  function owner() public view virtual returns (address) {... */\n    tag_15:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1684:1691  address */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1710:1716  _owner */\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1638:1723  function owner() public view virtual returns (address) {... */\n      jump(tag_55)\n        /* \"ARY/HardStake.sol\":430:457  SwapPro public swapContract */\n    tag_16:\n      sload(0x02)\n      tag_55\n      swap1\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      dup2\n      jump\n        /* \"ARY/HardStake.sol\":2674:3616  function deposit(uint256 _amount) external nonReentrant {... */\n    tag_17:\n      tag_35\n      tag_75\n      calldatasize\n      0x04\n      tag_37\n      jump\t// in\n    tag_75:\n      tag_76\n      jump\t// in\n        /* \"ARY/HardStake.sol\":5007:5401  function emergencyWithdraw() external nonReentrant {... */\n    tag_18:\n      tag_35\n      tag_78\n      jump\t// in\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2543:2758  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_19:\n      tag_35\n      tag_80\n      calldatasize\n      0x04\n      tag_31\n      jump\t// in\n    tag_80:\n      tag_81\n      jump\t// in\n        /* \"ARY/HardStake.sol\":2405:2645  function pendingReward(address _user) external view returns (uint256) {... */\n    tag_20:\n      tag_25\n      tag_83\n      calldatasize\n      0x04\n      tag_31\n      jump\t// in\n    tag_83:\n      tag_84\n      jump\t// in\n        /* \"ARY/HardStake.sol\":682:717  IERC20 public immutable rewardToken */\n    tag_21:\n      tag_55\n      immutable(\"0x2f376be2da13ceb7f7d4d291fdf0ead4b1285423c32c5412ff3af6625953248f\")\n      dup2\n      jump\n        /* \"ARY/HardStake.sol\":5464:5593  function updateMinimumVolumeRequired(uint256 _newVolume) external onlyOwner {... */\n    tag_38:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_90\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_91\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_90:\n        /* \"ARY/HardStake.sol\":5551:5572  minimumVolumeRequired */\n      0x07\n        /* \"ARY/HardStake.sol\":5551:5585  minimumVolumeRequired = _newVolume */\n      sstore\n        /* \"ARY/HardStake.sol\":5464:5593  function updateMinimumVolumeRequired(uint256 _newVolume) external onlyOwner {... */\n      jump\t// out\n        /* \"ARY/HardStake.sol\":3655:4443  function withdraw(uint256 _amount) external nonReentrant {... */\n    tag_41:\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2261:2282  _nonReentrantBefore() */\n      tag_94\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2261:2280  _nonReentrantBefore */\n      tag_95\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2261:2282  _nonReentrantBefore() */\n      jump\t// in\n    tag_94:\n        /* \"ARY/HardStake.sol\":3756:3766  msg.sender */\n      caller\n        /* \"ARY/HardStake.sol\":3723:3744  UserInfo storage user */\n      0x00\n        /* \"ARY/HardStake.sol\":3747:3767  userInfo[msg.sender] */\n      swap1\n      dup2\n      mstore\n        /* \"ARY/HardStake.sol\":3747:3755  userInfo */\n      0x04\n        /* \"ARY/HardStake.sol\":3747:3767  userInfo[msg.sender] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"ARY/HardStake.sol\":3786:3797  user.amount */\n      dup1\n      sload\n        /* \"ARY/HardStake.sol\":3786:3808  user.amount >= _amount */\n      dup3\n      gt\n      iszero\n        /* \"ARY/HardStake.sol\":3778:3844  require(user.amount >= _amount, \"Withdraw amount exceeds balance\") */\n      tag_97\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":2126:2128   */\n      0x20\n        /* \"ARY/HardStake.sol\":3778:3844  require(user.amount >= _amount, \"Withdraw amount exceeds balance\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":2108:2129   */\n      mstore\n        /* \"#utility.yul\":2165:2167   */\n      0x1f\n        /* \"#utility.yul\":2145:2163   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":2138:2168   */\n      mstore\n        /* \"#utility.yul\":2204:2237   */\n      0x576974686472617720616d6f756e7420657863656564732062616c616e636500\n        /* \"#utility.yul\":2184:2202   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":2177:2238   */\n      mstore\n        /* \"#utility.yul\":2255:2273   */\n      0x64\n      add\n        /* \"ARY/HardStake.sol\":3778:3844  require(user.amount >= _amount, \"Withdraw amount exceeds balance\") */\n    tag_98:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_97:\n        /* \"ARY/HardStake.sol\":3918:3933  uint256 pending */\n      0x00\n        /* \"ARY/HardStake.sol\":3979:3983  user */\n      dup2\n        /* \"ARY/HardStake.sol\":3979:3994  user.rewardDebt */\n      0x01\n      add\n      sload\n        /* \"ARY/HardStake.sol\":3972:3976  1e12 */\n      0xe8d4a51000\n        /* \"ARY/HardStake.sol\":3951:3968  accTokensPerShare */\n      sload(0x05)\n        /* \"ARY/HardStake.sol\":3937:3941  user */\n      dup5\n        /* \"ARY/HardStake.sol\":3937:3948  user.amount */\n      0x00\n      add\n      sload\n        /* \"ARY/HardStake.sol\":3937:3968  user.amount * accTokensPerShare */\n      tag_100\n      swap2\n      swap1\n      tag_101\n      jump\t// in\n    tag_100:\n        /* \"ARY/HardStake.sol\":3936:3976  (user.amount * accTokensPerShare) / 1e12 */\n      tag_102\n      swap2\n      swap1\n      tag_103\n      jump\t// in\n    tag_102:\n        /* \"ARY/HardStake.sol\":3936:3994  (user.amount * accTokensPerShare) / 1e12 - user.rewardDebt */\n      tag_104\n      swap2\n      swap1\n      tag_105\n      jump\t// in\n    tag_104:\n        /* \"ARY/HardStake.sol\":3918:3994  uint256 pending = (user.amount * accTokensPerShare) / 1e12 - user.rewardDebt */\n      swap1\n      pop\n        /* \"ARY/HardStake.sol\":4009:4020  pending > 0 */\n      dup1\n      iszero\n        /* \"ARY/HardStake.sol\":4005:4140  if (pending > 0) {... */\n      tag_106\n      jumpi\n        /* \"ARY/HardStake.sol\":4037:4082  rewardToken.safeTransfer(msg.sender, pending) */\n      tag_107\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"ARY/HardStake.sol\":4037:4048  rewardToken */\n      immutable(\"0x2f376be2da13ceb7f7d4d291fdf0ead4b1285423c32c5412ff3af6625953248f\")\n        /* \"ARY/HardStake.sol\":4037:4061  rewardToken.safeTransfer */\n      and\n        /* \"ARY/HardStake.sol\":4062:4072  msg.sender */\n      caller\n        /* \"ARY/HardStake.sol\":4074:4081  pending */\n      dup4\n        /* \"ARY/HardStake.sol\":4037:4061  rewardToken.safeTransfer */\n      tag_108\n        /* \"ARY/HardStake.sol\":4037:4082  rewardToken.safeTransfer(msg.sender, pending) */\n      jump\t// in\n    tag_107:\n        /* \"ARY/HardStake.sol\":4102:4128  Claim(msg.sender, pending) */\n      mload(0x40)\n        /* \"#utility.yul\":160:185   */\n      dup2\n      dup2\n      mstore\n        /* \"ARY/HardStake.sol\":4108:4118  msg.sender */\n      caller\n      swap1\n        /* \"ARY/HardStake.sol\":4102:4128  Claim(msg.sender, pending) */\n      0x47cee97cb7acd717b3c0aa1435d004cd5b3c8c57d70dbceb4e4458bbd60e39d4\n      swap1\n        /* \"#utility.yul\":148:150   */\n      0x20\n        /* \"#utility.yul\":133:151   */\n      add\n        /* \"ARY/HardStake.sol\":4102:4128  Claim(msg.sender, pending) */\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log2\n        /* \"ARY/HardStake.sol\":4005:4140  if (pending > 0) {... */\n    tag_106:\n        /* \"ARY/HardStake.sol\":4156:4167  _amount > 0 */\n      dup3\n      iszero\n        /* \"ARY/HardStake.sol\":4152:4365  if (_amount > 0) {... */\n      tag_110\n      jumpi\n        /* \"ARY/HardStake.sol\":4199:4206  _amount */\n      dup3\n        /* \"ARY/HardStake.sol\":4184:4188  user */\n      dup3\n        /* \"ARY/HardStake.sol\":4184:4195  user.amount */\n      0x00\n      add\n      0x00\n        /* \"ARY/HardStake.sol\":4184:4206  user.amount -= _amount */\n      dup3\n      dup3\n      sload\n      tag_111\n      swap2\n      swap1\n      tag_105\n      jump\t// in\n    tag_111:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"ARY/HardStake.sol\":4236:4243  _amount */\n      dup3\n        /* \"ARY/HardStake.sol\":4221:4232  totalStaked */\n      0x03\n      0x00\n        /* \"ARY/HardStake.sol\":4221:4243  totalStaked -= _amount */\n      dup3\n      dup3\n      sload\n      tag_112\n      swap2\n      swap1\n      tag_105\n      jump\t// in\n    tag_112:\n      swap1\n      swap2\n      sstore\n      pop\n        /* \"ARY/HardStake.sol\":4258:4304  stakingToken.safeTransfer(msg.sender, _amount) */\n      tag_113\n      swap1\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"ARY/HardStake.sol\":4258:4270  stakingToken */\n      immutable(\"0x0a2c56019ccb5f08608c3b05b18a6137874ce411ef59ecc21ab7d289712eec9f\")\n        /* \"ARY/HardStake.sol\":4258:4283  stakingToken.safeTransfer */\n      and\n        /* \"ARY/HardStake.sol\":4284:4294  msg.sender */\n      caller\n        /* \"ARY/HardStake.sol\":4296:4303  _amount */\n      dup6\n        /* \"ARY/HardStake.sol\":4258:4283  stakingToken.safeTransfer */\n      tag_108\n        /* \"ARY/HardStake.sol\":4258:4304  stakingToken.safeTransfer(msg.sender, _amount) */\n      jump\t// in\n    tag_113:\n        /* \"ARY/HardStake.sol\":4324:4353  Withdraw(msg.sender, _amount) */\n      mload(0x40)\n        /* \"#utility.yul\":160:185   */\n      dup4\n      dup2\n      mstore\n        /* \"ARY/HardStake.sol\":4333:4343  msg.sender */\n      caller\n      swap1\n        /* \"ARY/HardStake.sol\":4324:4353  Withdraw(msg.sender, _amount) */\n      0x884edad9ce6fa2440d8a54cc123490eb96d2768479d49ff9c7366125a9424364\n      swap1\n        /* \"#utility.yul\":148:150   */\n      0x20\n        /* \"#utility.yul\":133:151   */\n      add\n        /* \"ARY/HardStake.sol\":4324:4353  Withdraw(msg.sender, _amount) */\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log2\n        /* \"ARY/HardStake.sol\":4152:4365  if (_amount > 0) {... */\n    tag_110:\n        /* \"ARY/HardStake.sol\":4410:4427  accTokensPerShare */\n      sload(0x05)\n        /* \"ARY/HardStake.sol\":4396:4407  user.amount */\n      dup3\n      sload\n        /* \"ARY/HardStake.sol\":4431:4435  1e12 */\n      0xe8d4a51000\n      swap2\n        /* \"ARY/HardStake.sol\":4396:4427  user.amount * accTokensPerShare */\n      tag_115\n      swap2\n      tag_101\n      jump\t// in\n    tag_115:\n        /* \"ARY/HardStake.sol\":4395:4435  (user.amount * accTokensPerShare) / 1e12 */\n      tag_116\n      swap2\n      swap1\n      tag_103\n      jump\t// in\n    tag_116:\n        /* \"ARY/HardStake.sol\":4377:4392  user.rewardDebt */\n      0x01\n      swap3\n      dup4\n      add\n        /* \"ARY/HardStake.sol\":4377:4435  user.rewardDebt = (user.amount * accTokensPerShare) / 1e12 */\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2809:2831  _status = _NOT_ENTERED */\n      dup1\n      sstore\n        /* \"ARY/HardStake.sol\":3655:4443  function withdraw(uint256 _amount) external nonReentrant {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2303:2323  _nonReentrantAfter() */\n    tag_117:\n        /* \"ARY/HardStake.sol\":3655:4443  function withdraw(uint256 _amount) external nonReentrant {... */\n      pop\n      jump\t// out\n        /* \"ARY/HardStake.sol\":4507:4924  function claimRewards() external nonReentrant {... */\n    tag_46:\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2261:2282  _nonReentrantBefore() */\n      tag_120\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2261:2280  _nonReentrantBefore */\n      tag_95\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2261:2282  _nonReentrantBefore() */\n      jump\t// in\n    tag_120:\n        /* \"ARY/HardStake.sol\":4597:4607  msg.sender */\n      caller\n        /* \"ARY/HardStake.sol\":4564:4585  UserInfo storage user */\n      0x00\n        /* \"ARY/HardStake.sol\":4588:4608  userInfo[msg.sender] */\n      swap1\n      dup2\n      mstore\n        /* \"ARY/HardStake.sol\":4588:4596  userInfo */\n      0x04\n        /* \"ARY/HardStake.sol\":4588:4608  userInfo[msg.sender] */\n      0x20\n      mstore\n      0x40\n      dup2\n      keccak256\n        /* \"ARY/HardStake.sol\":4680:4695  user.rewardDebt */\n      0x01\n      dup2\n      add\n      sload\n        /* \"ARY/HardStake.sol\":4652:4669  accTokensPerShare */\n      sload(0x05)\n        /* \"ARY/HardStake.sol\":4638:4649  user.amount */\n      dup3\n      sload\n        /* \"ARY/HardStake.sol\":4588:4608  userInfo[msg.sender] */\n      swap3\n      swap4\n        /* \"ARY/HardStake.sol\":4564:4585  UserInfo storage user */\n      swap3\n        /* \"ARY/HardStake.sol\":4673:4677  1e12 */\n      0xe8d4a51000\n      swap2\n        /* \"ARY/HardStake.sol\":4638:4669  user.amount * accTokensPerShare */\n      tag_122\n      swap2\n      tag_101\n      jump\t// in\n    tag_122:\n        /* \"ARY/HardStake.sol\":4637:4677  (user.amount * accTokensPerShare) / 1e12 */\n      tag_123\n      swap2\n      swap1\n      tag_103\n      jump\t// in\n    tag_123:\n        /* \"ARY/HardStake.sol\":4637:4695  (user.amount * accTokensPerShare) / 1e12 - user.rewardDebt */\n      tag_124\n      swap2\n      swap1\n      tag_105\n      jump\t// in\n    tag_124:\n        /* \"ARY/HardStake.sol\":4619:4695  uint256 pending = (user.amount * accTokensPerShare) / 1e12 - user.rewardDebt */\n      swap1\n      pop\n        /* \"ARY/HardStake.sol\":4724:4725  0 */\n      0x00\n        /* \"ARY/HardStake.sol\":4714:4721  pending */\n      dup2\n        /* \"ARY/HardStake.sol\":4714:4725  pending > 0 */\n      gt\n        /* \"ARY/HardStake.sol\":4706:4749  require(pending > 0, \"No rewards to claim\") */\n      tag_125\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":3146:3148   */\n      0x20\n        /* \"ARY/HardStake.sol\":4706:4749  require(pending > 0, \"No rewards to claim\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":3128:3149   */\n      mstore\n        /* \"#utility.yul\":3185:3187   */\n      0x13\n        /* \"#utility.yul\":3165:3183   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":3158:3188   */\n      mstore\n      shl(0x68, 0x4e6f207265776172647320746f20636c61696d)\n        /* \"#utility.yul\":3204:3222   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":3197:3246   */\n      mstore\n        /* \"#utility.yul\":3263:3281   */\n      0x64\n      add\n        /* \"ARY/HardStake.sol\":4706:4749  require(pending > 0, \"No rewards to claim\") */\n      tag_98\n        /* \"#utility.yul\":2944:3287   */\n      jump\n        /* \"ARY/HardStake.sol\":4706:4749  require(pending > 0, \"No rewards to claim\") */\n    tag_125:\n        /* \"ARY/HardStake.sol\":4760:4805  rewardToken.safeTransfer(msg.sender, pending) */\n      tag_128\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"ARY/HardStake.sol\":4760:4771  rewardToken */\n      immutable(\"0x2f376be2da13ceb7f7d4d291fdf0ead4b1285423c32c5412ff3af6625953248f\")\n        /* \"ARY/HardStake.sol\":4760:4784  rewardToken.safeTransfer */\n      and\n        /* \"ARY/HardStake.sol\":4785:4795  msg.sender */\n      caller\n        /* \"ARY/HardStake.sol\":4797:4804  pending */\n      dup4\n        /* \"ARY/HardStake.sol\":4760:4784  rewardToken.safeTransfer */\n      tag_108\n        /* \"ARY/HardStake.sol\":4760:4805  rewardToken.safeTransfer(msg.sender, pending) */\n      jump\t// in\n    tag_128:\n        /* \"ARY/HardStake.sol\":4849:4866  accTokensPerShare */\n      sload(0x05)\n        /* \"ARY/HardStake.sol\":4835:4846  user.amount */\n      dup3\n      sload\n        /* \"ARY/HardStake.sol\":4870:4874  1e12 */\n      0xe8d4a51000\n      swap2\n        /* \"ARY/HardStake.sol\":4835:4866  user.amount * accTokensPerShare */\n      tag_129\n      swap2\n      tag_101\n      jump\t// in\n    tag_129:\n        /* \"ARY/HardStake.sol\":4834:4874  (user.amount * accTokensPerShare) / 1e12 */\n      tag_130\n      swap2\n      swap1\n      tag_103\n      jump\t// in\n    tag_130:\n        /* \"ARY/HardStake.sol\":4816:4831  user.rewardDebt */\n      0x01\n      dup4\n      add\n        /* \"ARY/HardStake.sol\":4816:4874  user.rewardDebt = (user.amount * accTokensPerShare) / 1e12 */\n      sstore\n        /* \"ARY/HardStake.sol\":4890:4916  Claim(msg.sender, pending) */\n      mload(0x40)\n        /* \"#utility.yul\":160:185   */\n      dup2\n      dup2\n      mstore\n        /* \"ARY/HardStake.sol\":4896:4906  msg.sender */\n      caller\n      swap1\n        /* \"ARY/HardStake.sol\":4890:4916  Claim(msg.sender, pending) */\n      0x47cee97cb7acd717b3c0aa1435d004cd5b3c8c57d70dbceb4e4458bbd60e39d4\n      swap1\n        /* \"#utility.yul\":148:150   */\n      0x20\n        /* \"#utility.yul\":133:151   */\n      add\n        /* \"ARY/HardStake.sol\":4890:4916  Claim(msg.sender, pending) */\n    tag_131:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log2\n        /* \"ARY/HardStake.sol\":4553:4924  {... */\n      pop\n      pop\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2303:2323  _nonReentrantAfter() */\n      tag_132\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1716:1717  1 */\n      0x01\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2809:2831  _status = _NOT_ENTERED */\n      dup1\n      sstore\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2629:2838  function _nonReentrantAfter() private {... */\n      jump\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2303:2323  _nonReentrantAfter() */\n    tag_132:\n        /* \"ARY/HardStake.sol\":4507:4924  function claimRewards() external nonReentrant {... */\n      jump\t// out\n        /* \"ARY/HardStake.sol\":1911:2340  function notifyRewardAmount(uint256 reward) external {... */\n    tag_49:\n        /* \"ARY/HardStake.sol\":2005:2017  swapContract */\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0x02))\n        /* \"ARY/HardStake.sol\":1983:1993  msg.sender */\n      caller\n        /* \"ARY/HardStake.sol\":1983:2018  msg.sender == address(swapContract) */\n      eq\n      dup1\n        /* \"ARY/HardStake.sol\":1983:2043  msg.sender == address(swapContract) || msg.sender == owner() */\n      tag_134\n      jumpi\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1684:1691  address */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1710:1716  _owner */\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n        /* \"ARY/HardStake.sol\":2022:2032  msg.sender */\n      caller\n        /* \"ARY/HardStake.sol\":2022:2043  msg.sender == owner() */\n      eq\n        /* \"ARY/HardStake.sol\":1983:2043  msg.sender == address(swapContract) || msg.sender == owner() */\n    tag_134:\n        /* \"ARY/HardStake.sol\":1975:2062  require(msg.sender == address(swapContract) || msg.sender == owner(), \"Not authorized\") */\n      tag_136\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":3494:3496   */\n      0x20\n        /* \"ARY/HardStake.sol\":1975:2062  require(msg.sender == address(swapContract) || msg.sender == owner(), \"Not authorized\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":3476:3497   */\n      mstore\n        /* \"#utility.yul\":3533:3535   */\n      0x0e\n        /* \"#utility.yul\":3513:3531   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":3506:3536   */\n      mstore\n      shl(0x92, 0x139bdd08185d5d1a1bdc9a5e9959)\n        /* \"#utility.yul\":3552:3570   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":3545:3589   */\n      mstore\n        /* \"#utility.yul\":3606:3624   */\n      0x64\n      add\n        /* \"ARY/HardStake.sol\":1975:2062  require(msg.sender == address(swapContract) || msg.sender == owner(), \"Not authorized\") */\n      tag_98\n        /* \"#utility.yul\":3292:3630   */\n      jump\n        /* \"ARY/HardStake.sol\":1975:2062  require(msg.sender == address(swapContract) || msg.sender == owner(), \"Not authorized\") */\n    tag_136:\n        /* \"ARY/HardStake.sol\":2077:2088  totalStaked */\n      sload(0x03)\n        /* \"ARY/HardStake.sol\":2092:2093  0 */\n      0x00\n        /* \"ARY/HardStake.sol\":2077:2093  totalStaked == 0 */\n      sub\n        /* \"ARY/HardStake.sol\":2073:2167  if (totalStaked == 0) {... */\n      tag_139\n      jumpi\n        /* \"ARY/HardStake.sol\":1911:2340  function notifyRewardAmount(uint256 reward) external {... */\n      pop\n      jump\t// out\n        /* \"ARY/HardStake.sol\":2073:2167  if (totalStaked == 0) {... */\n    tag_139:\n        /* \"ARY/HardStake.sol\":2253:2264  totalStaked */\n      sload(0x03)\n        /* \"ARY/HardStake.sol\":2236:2249  reward * 1e12 */\n      tag_140\n        /* \"ARY/HardStake.sol\":2236:2242  reward */\n      dup3\n        /* \"ARY/HardStake.sol\":2245:2249  1e12 */\n      0xe8d4a51000\n        /* \"ARY/HardStake.sol\":2236:2249  reward * 1e12 */\n      tag_101\n      jump\t// in\n    tag_140:\n        /* \"ARY/HardStake.sol\":2235:2264  (reward * 1e12) / totalStaked */\n      tag_141\n      swap2\n      swap1\n      tag_103\n      jump\t// in\n    tag_141:\n        /* \"ARY/HardStake.sol\":2214:2231  accTokensPerShare */\n      0x05\n      0x00\n        /* \"ARY/HardStake.sol\":2214:2264  accTokensPerShare += (reward * 1e12) / totalStaked */\n      dup3\n      dup3\n      sload\n      tag_142\n      swap2\n      swap1\n      tag_143\n      jump\t// in\n    tag_142:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"ARY/HardStake.sol\":2291:2297  reward */\n      dup1\n        /* \"ARY/HardStake.sol\":2275:2287  totalRewards */\n      0x06\n      0x00\n        /* \"ARY/HardStake.sol\":2275:2297  totalRewards += reward */\n      dup3\n      dup3\n      sload\n      tag_144\n      swap2\n      swap1\n      tag_143\n      jump\t// in\n    tag_144:\n      swap1\n      swap2\n      sstore\n      pop\n      pop\n        /* \"ARY/HardStake.sol\":2313:2332  RewardAdded(reward) */\n      mload(0x40)\n        /* \"#utility.yul\":160:185   */\n      dup2\n      dup2\n      mstore\n        /* \"ARY/HardStake.sol\":2313:2332  RewardAdded(reward) */\n      0xde88a922e0d3b88b24e9623efeb464919c6bf9f66857a65e2bfcf2ce87a9433d\n      swap1\n        /* \"#utility.yul\":148:150   */\n      0x20\n        /* \"#utility.yul\":133:151   */\n      add\n        /* \"ARY/HardStake.sol\":2313:2332  RewardAdded(reward) */\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"ARY/HardStake.sol\":1911:2340  function notifyRewardAmount(uint256 reward) external {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2293:2394  function renounceOwnership() public virtual onlyOwner {... */\n    tag_54:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_147\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_91\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_147:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2357:2387  _transferOwnership(address(0)) */\n      tag_132\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2384:2385  0 */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2357:2375  _transferOwnership */\n      tag_150\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2357:2387  _transferOwnership(address(0)) */\n      jump\t// in\n        /* \"ARY/HardStake.sol\":5664:5911  function recoverERC20(address tokenAddress, uint256 tokenAmount) external onlyOwner {... */\n    tag_65:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_152\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_91\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_152:\n        /* \"ARY/HardStake.sol\":5791:5803  stakingToken */\n      immutable(\"0x0a2c56019ccb5f08608c3b05b18a6137874ce411ef59ecc21ab7d289712eec9f\")\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"ARY/HardStake.sol\":5767:5804  tokenAddress != address(stakingToken) */\n      and\n        /* \"ARY/HardStake.sol\":5767:5779  tokenAddress */\n      dup3\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"ARY/HardStake.sol\":5767:5804  tokenAddress != address(stakingToken) */\n      and\n      sub\n        /* \"ARY/HardStake.sol\":5759:5837  require(tokenAddress != address(stakingToken), \"Cannot recover staking token\") */\n      tag_154\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":3967:3969   */\n      0x20\n        /* \"ARY/HardStake.sol\":5759:5837  require(tokenAddress != address(stakingToken), \"Cannot recover staking token\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":3949:3970   */\n      mstore\n        /* \"#utility.yul\":4006:4008   */\n      0x1c\n        /* \"#utility.yul\":3986:4004   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":3979:4009   */\n      mstore\n        /* \"#utility.yul\":4045:4075   */\n      0x43616e6e6f74207265636f766572207374616b696e6720746f6b656e00000000\n        /* \"#utility.yul\":4025:4043   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":4018:4076   */\n      mstore\n        /* \"#utility.yul\":4093:4111   */\n      0x64\n      add\n        /* \"ARY/HardStake.sol\":5759:5837  require(tokenAddress != address(stakingToken), \"Cannot recover staking token\") */\n      tag_98\n        /* \"#utility.yul\":3765:4117   */\n      jump\n        /* \"ARY/HardStake.sol\":5759:5837  require(tokenAddress != address(stakingToken), \"Cannot recover staking token\") */\n    tag_154:\n        /* \"ARY/HardStake.sol\":5848:5903  IERC20(tokenAddress).safeTransfer(owner(), tokenAmount) */\n      tag_157\n        /* \"ARY/HardStake.sol\":5882:5889  owner() */\n      tag_158\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1684:1691  address */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1710:1716  _owner */\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      swap1\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1638:1723  function owner() public view virtual returns (address) {... */\n      jump\n        /* \"ARY/HardStake.sol\":5882:5889  owner() */\n    tag_158:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"ARY/HardStake.sol\":5848:5881  IERC20(tokenAddress).safeTransfer */\n      dup5\n      and\n      swap1\n        /* \"ARY/HardStake.sol\":5891:5902  tokenAmount */\n      dup4\n        /* \"ARY/HardStake.sol\":5848:5881  IERC20(tokenAddress).safeTransfer */\n      tag_108\n        /* \"ARY/HardStake.sol\":5848:5903  IERC20(tokenAddress).safeTransfer(owner(), tokenAmount) */\n      jump\t// in\n    tag_157:\n        /* \"ARY/HardStake.sol\":5664:5911  function recoverERC20(address tokenAddress, uint256 tokenAmount) external onlyOwner {... */\n      pop\n      pop\n      jump\t// out\n        /* \"ARY/HardStake.sol\":2674:3616  function deposit(uint256 _amount) external nonReentrant {... */\n    tag_76:\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2261:2282  _nonReentrantBefore() */\n      tag_161\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2261:2280  _nonReentrantBefore */\n      tag_95\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2261:2282  _nonReentrantBefore() */\n      jump\t// in\n    tag_161:\n        /* \"ARY/HardStake.sol\":2759:2771  swapContract */\n      sload(0x02)\n        /* \"ARY/HardStake.sol\":2759:2794  swapContract.userVolume(msg.sender) */\n      mload(0x40)\n      shl(0xe3, 0x14ced3df)\n      dup2\n      mstore\n        /* \"ARY/HardStake.sol\":2783:2793  msg.sender */\n      caller\n        /* \"ARY/HardStake.sol\":2759:2794  swapContract.userVolume(msg.sender) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":1163:1214   */\n      mstore\n        /* \"ARY/HardStake.sol\":2741:2756  uint256 userVol */\n      0x00\n      swap2\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"ARY/HardStake.sol\":2759:2771  swapContract */\n      and\n      swap1\n        /* \"ARY/HardStake.sol\":2759:2782  swapContract.userVolume */\n      0xa6769ef8\n      swap1\n        /* \"#utility.yul\":1136:1154   */\n      0x24\n      add\n        /* \"ARY/HardStake.sol\":2759:2794  swapContract.userVolume(msg.sender) */\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_165\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_165:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_166\n      swap2\n      swap1\n      tag_167\n      jump\t// in\n    tag_166:\n        /* \"ARY/HardStake.sol\":2741:2794  uint256 userVol = swapContract.userVolume(msg.sender) */\n      swap1\n      pop\n        /* \"ARY/HardStake.sol\":2824:2845  minimumVolumeRequired */\n      sload(0x07)\n        /* \"ARY/HardStake.sol\":2813:2820  userVol */\n      dup2\n        /* \"ARY/HardStake.sol\":2813:2845  userVol >= minimumVolumeRequired */\n      lt\n      iszero\n        /* \"ARY/HardStake.sol\":2805:2883  require(userVol >= minimumVolumeRequired, \"Insufficient DApp volume to stake\") */\n      tag_168\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":4513:4515   */\n      0x20\n        /* \"ARY/HardStake.sol\":2805:2883  require(userVol >= minimumVolumeRequired, \"Insufficient DApp volume to stake\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":4495:4516   */\n      mstore\n        /* \"#utility.yul\":4552:4554   */\n      0x21\n        /* \"#utility.yul\":4532:4550   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":4525:4555   */\n      mstore\n        /* \"#utility.yul\":4591:4625   */\n      0x496e73756666696369656e74204441707020766f6c756d6520746f207374616b\n        /* \"#utility.yul\":4571:4589   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":4564:4626   */\n      mstore\n      shl(0xf8, 0x65)\n        /* \"#utility.yul\":4642:4660   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":4635:4666   */\n      mstore\n        /* \"#utility.yul\":4683:4702   */\n      0x84\n      add\n        /* \"ARY/HardStake.sol\":2805:2883  require(userVol >= minimumVolumeRequired, \"Insufficient DApp volume to stake\") */\n      tag_98\n        /* \"#utility.yul\":4311:4708   */\n      jump\n        /* \"ARY/HardStake.sol\":2805:2883  require(userVol >= minimumVolumeRequired, \"Insufficient DApp volume to stake\") */\n    tag_168:\n        /* \"ARY/HardStake.sol\":2929:2939  msg.sender */\n      caller\n        /* \"ARY/HardStake.sol\":2896:2917  UserInfo storage user */\n      0x00\n        /* \"ARY/HardStake.sol\":2920:2940  userInfo[msg.sender] */\n      swap1\n      dup2\n      mstore\n        /* \"ARY/HardStake.sol\":2920:2928  userInfo */\n      0x04\n        /* \"ARY/HardStake.sol\":2920:2940  userInfo[msg.sender] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"ARY/HardStake.sol\":3018:3029  user.amount */\n      dup1\n      sload\n        /* \"ARY/HardStake.sol\":3018:3033  user.amount > 0 */\n      iszero\n        /* \"ARY/HardStake.sol\":3014:3299  if (user.amount > 0) {... */\n      tag_171\n      jumpi\n        /* \"ARY/HardStake.sol\":3050:3065  uint256 pending */\n      0x00\n        /* \"ARY/HardStake.sol\":3111:3115  user */\n      dup2\n        /* \"ARY/HardStake.sol\":3111:3126  user.rewardDebt */\n      0x01\n      add\n      sload\n        /* \"ARY/HardStake.sol\":3104:3108  1e12 */\n      0xe8d4a51000\n        /* \"ARY/HardStake.sol\":3083:3100  accTokensPerShare */\n      sload(0x05)\n        /* \"ARY/HardStake.sol\":3069:3073  user */\n      dup5\n        /* \"ARY/HardStake.sol\":3069:3080  user.amount */\n      0x00\n      add\n      sload\n        /* \"ARY/HardStake.sol\":3069:3100  user.amount * accTokensPerShare */\n      tag_172\n      swap2\n      swap1\n      tag_101\n      jump\t// in\n    tag_172:\n        /* \"ARY/HardStake.sol\":3068:3108  (user.amount * accTokensPerShare) / 1e12 */\n      tag_173\n      swap2\n      swap1\n      tag_103\n      jump\t// in\n    tag_173:\n        /* \"ARY/HardStake.sol\":3068:3126  (user.amount * accTokensPerShare) / 1e12 - user.rewardDebt */\n      tag_174\n      swap2\n      swap1\n      tag_105\n      jump\t// in\n    tag_174:\n        /* \"ARY/HardStake.sol\":3050:3126  uint256 pending = (user.amount * accTokensPerShare) / 1e12 - user.rewardDebt */\n      swap1\n      pop\n        /* \"ARY/HardStake.sol\":3145:3156  pending > 0 */\n      dup1\n      iszero\n        /* \"ARY/HardStake.sol\":3141:3288  if (pending > 0) {... */\n      tag_175\n      jumpi\n        /* \"ARY/HardStake.sol\":3177:3222  rewardToken.safeTransfer(msg.sender, pending) */\n      tag_176\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"ARY/HardStake.sol\":3177:3188  rewardToken */\n      immutable(\"0x2f376be2da13ceb7f7d4d291fdf0ead4b1285423c32c5412ff3af6625953248f\")\n        /* \"ARY/HardStake.sol\":3177:3201  rewardToken.safeTransfer */\n      and\n        /* \"ARY/HardStake.sol\":3202:3212  msg.sender */\n      caller\n        /* \"ARY/HardStake.sol\":3214:3221  pending */\n      dup4\n        /* \"ARY/HardStake.sol\":3177:3201  rewardToken.safeTransfer */\n      tag_108\n        /* \"ARY/HardStake.sol\":3177:3222  rewardToken.safeTransfer(msg.sender, pending) */\n      jump\t// in\n    tag_176:\n        /* \"ARY/HardStake.sol\":3246:3272  Claim(msg.sender, pending) */\n      mload(0x40)\n        /* \"#utility.yul\":160:185   */\n      dup2\n      dup2\n      mstore\n        /* \"ARY/HardStake.sol\":3252:3262  msg.sender */\n      caller\n      swap1\n        /* \"ARY/HardStake.sol\":3246:3272  Claim(msg.sender, pending) */\n      0x47cee97cb7acd717b3c0aa1435d004cd5b3c8c57d70dbceb4e4458bbd60e39d4\n      swap1\n        /* \"#utility.yul\":148:150   */\n      0x20\n        /* \"#utility.yul\":133:151   */\n      add\n        /* \"ARY/HardStake.sol\":3246:3272  Claim(msg.sender, pending) */\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log2\n        /* \"ARY/HardStake.sol\":3141:3288  if (pending > 0) {... */\n    tag_175:\n        /* \"ARY/HardStake.sol\":3035:3299  {... */\n      pop\n        /* \"ARY/HardStake.sol\":3014:3299  if (user.amount > 0) {... */\n    tag_171:\n        /* \"ARY/HardStake.sol\":3315:3326  _amount > 0 */\n      dup3\n      iszero\n        /* \"ARY/HardStake.sol\":3311:3494  if (_amount > 0) {... */\n      tag_178\n      jumpi\n        /* \"ARY/HardStake.sol\":3343:3408  stakingToken.safeTransferFrom(msg.sender, address(this), _amount) */\n      tag_179\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"ARY/HardStake.sol\":3343:3355  stakingToken */\n      immutable(\"0x0a2c56019ccb5f08608c3b05b18a6137874ce411ef59ecc21ab7d289712eec9f\")\n        /* \"ARY/HardStake.sol\":3343:3372  stakingToken.safeTransferFrom */\n      and\n        /* \"ARY/HardStake.sol\":3373:3383  msg.sender */\n      caller\n        /* \"ARY/HardStake.sol\":3393:3397  this */\n      address\n        /* \"ARY/HardStake.sol\":3400:3407  _amount */\n      dup7\n        /* \"ARY/HardStake.sol\":3343:3372  stakingToken.safeTransferFrom */\n      tag_180\n        /* \"ARY/HardStake.sol\":3343:3408  stakingToken.safeTransferFrom(msg.sender, address(this), _amount) */\n      jump\t// in\n    tag_179:\n        /* \"ARY/HardStake.sol\":3438:3445  _amount */\n      dup3\n        /* \"ARY/HardStake.sol\":3423:3427  user */\n      dup2\n        /* \"ARY/HardStake.sol\":3423:3434  user.amount */\n      0x00\n      add\n      0x00\n        /* \"ARY/HardStake.sol\":3423:3445  user.amount += _amount */\n      dup3\n      dup3\n      sload\n      tag_181\n      swap2\n      swap1\n      tag_143\n      jump\t// in\n    tag_181:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"ARY/HardStake.sol\":3475:3482  _amount */\n      dup3\n        /* \"ARY/HardStake.sol\":3460:3471  totalStaked */\n      0x03\n      0x00\n        /* \"ARY/HardStake.sol\":3460:3482  totalStaked += _amount */\n      dup3\n      dup3\n      sload\n      tag_182\n      swap2\n      swap1\n      tag_143\n      jump\t// in\n    tag_182:\n      swap1\n      swap2\n      sstore\n      pop\n      pop\n        /* \"ARY/HardStake.sol\":3311:3494  if (_amount > 0) {... */\n    tag_178:\n        /* \"ARY/HardStake.sol\":3539:3556  accTokensPerShare */\n      sload(0x05)\n        /* \"ARY/HardStake.sol\":3525:3536  user.amount */\n      dup2\n      sload\n        /* \"ARY/HardStake.sol\":3560:3564  1e12 */\n      0xe8d4a51000\n      swap2\n        /* \"ARY/HardStake.sol\":3525:3556  user.amount * accTokensPerShare */\n      tag_183\n      swap2\n      tag_101\n      jump\t// in\n    tag_183:\n        /* \"ARY/HardStake.sol\":3524:3564  (user.amount * accTokensPerShare) / 1e12 */\n      tag_184\n      swap2\n      swap1\n      tag_103\n      jump\t// in\n    tag_184:\n        /* \"ARY/HardStake.sol\":3506:3521  user.rewardDebt */\n      0x01\n      dup3\n      add\n        /* \"ARY/HardStake.sol\":3506:3564  user.rewardDebt = (user.amount * accTokensPerShare) / 1e12 */\n      sstore\n        /* \"ARY/HardStake.sol\":3580:3608  Deposit(msg.sender, _amount) */\n      mload(0x40)\n        /* \"#utility.yul\":160:185   */\n      dup4\n      dup2\n      mstore\n        /* \"ARY/HardStake.sol\":3588:3598  msg.sender */\n      caller\n      swap1\n        /* \"ARY/HardStake.sol\":3580:3608  Deposit(msg.sender, _amount) */\n      0xe1fffcc4923d04b559f4d29a8bfc6cda04eb5b0d3c460751c2402c5c5cc9109c\n      swap1\n        /* \"#utility.yul\":148:150   */\n      0x20\n        /* \"#utility.yul\":133:151   */\n      add\n        /* \"ARY/HardStake.sol\":3580:3608  Deposit(msg.sender, _amount) */\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log2\n        /* \"ARY/HardStake.sol\":2730:3616  {... */\n      pop\n      pop\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2303:2323  _nonReentrantAfter() */\n      tag_117\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1716:1717  1 */\n      0x01\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2809:2831  _status = _NOT_ENTERED */\n      dup1\n      sstore\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2629:2838  function _nonReentrantAfter() private {... */\n      jump\n        /* \"ARY/HardStake.sol\":5007:5401  function emergencyWithdraw() external nonReentrant {... */\n    tag_78:\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2261:2282  _nonReentrantBefore() */\n      tag_188\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2261:2280  _nonReentrantBefore */\n      tag_95\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2261:2282  _nonReentrantBefore() */\n      jump\t// in\n    tag_188:\n        /* \"ARY/HardStake.sol\":5102:5112  msg.sender */\n      caller\n        /* \"ARY/HardStake.sol\":5069:5090  UserInfo storage user */\n      0x00\n        /* \"ARY/HardStake.sol\":5093:5113  userInfo[msg.sender] */\n      swap1\n      dup2\n      mstore\n        /* \"ARY/HardStake.sol\":5093:5101  userInfo */\n      0x04\n        /* \"ARY/HardStake.sol\":5093:5113  userInfo[msg.sender] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"ARY/HardStake.sol\":5141:5152  user.amount */\n      dup1\n      sload\n        /* \"ARY/HardStake.sol\":5171:5181  amount > 0 */\n      dup1\n        /* \"ARY/HardStake.sol\":5163:5205  require(amount > 0, \"Nothing to withdraw\") */\n      tag_190\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":4915:4917   */\n      0x20\n        /* \"ARY/HardStake.sol\":5163:5205  require(amount > 0, \"Nothing to withdraw\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":4897:4918   */\n      mstore\n        /* \"#utility.yul\":4954:4956   */\n      0x13\n        /* \"#utility.yul\":4934:4952   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":4927:4957   */\n      mstore\n      shl(0x68, 0x4e6f7468696e6720746f207769746864726177)\n        /* \"#utility.yul\":4973:4991   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":4966:5015   */\n      mstore\n        /* \"#utility.yul\":5032:5050   */\n      0x64\n      add\n        /* \"ARY/HardStake.sol\":5163:5205  require(amount > 0, \"Nothing to withdraw\") */\n      tag_98\n        /* \"#utility.yul\":4713:5056   */\n      jump\n        /* \"ARY/HardStake.sol\":5163:5205  require(amount > 0, \"Nothing to withdraw\") */\n    tag_190:\n        /* \"ARY/HardStake.sol\":5231:5237  amount */\n      dup1\n        /* \"ARY/HardStake.sol\":5216:5227  totalStaked */\n      0x03\n      0x00\n        /* \"ARY/HardStake.sol\":5216:5237  totalStaked -= amount */\n      dup3\n      dup3\n      sload\n      tag_193\n      swap2\n      swap1\n      tag_105\n      jump\t// in\n    tag_193:\n      swap1\n      swap2\n      sstore\n      pop\n      pop\n        /* \"ARY/HardStake.sol\":5262:5263  0 */\n      0x00\n        /* \"ARY/HardStake.sol\":5248:5263  user.amount = 0 */\n      dup1\n      dup4\n      sstore\n        /* \"ARY/HardStake.sol\":5274:5289  user.rewardDebt */\n      0x01\n      dup4\n      add\n        /* \"ARY/HardStake.sol\":5274:5293  user.rewardDebt = 0 */\n      sstore\n        /* \"ARY/HardStake.sol\":5304:5349  stakingToken.safeTransfer(msg.sender, amount) */\n      tag_194\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"ARY/HardStake.sol\":5304:5316  stakingToken */\n      immutable(\"0x0a2c56019ccb5f08608c3b05b18a6137874ce411ef59ecc21ab7d289712eec9f\")\n        /* \"ARY/HardStake.sol\":5304:5329  stakingToken.safeTransfer */\n      and\n        /* \"ARY/HardStake.sol\":5330:5340  msg.sender */\n      caller\n        /* \"ARY/HardStake.sol\":5342:5348  amount */\n      dup4\n        /* \"ARY/HardStake.sol\":5304:5329  stakingToken.safeTransfer */\n      tag_108\n        /* \"ARY/HardStake.sol\":5304:5349  stakingToken.safeTransfer(msg.sender, amount) */\n      jump\t// in\n    tag_194:\n        /* \"ARY/HardStake.sol\":5365:5393  Withdraw(msg.sender, amount) */\n      mload(0x40)\n        /* \"#utility.yul\":160:185   */\n      dup2\n      dup2\n      mstore\n        /* \"ARY/HardStake.sol\":5374:5384  msg.sender */\n      caller\n      swap1\n        /* \"ARY/HardStake.sol\":5365:5393  Withdraw(msg.sender, amount) */\n      0x884edad9ce6fa2440d8a54cc123490eb96d2768479d49ff9c7366125a9424364\n      swap1\n        /* \"#utility.yul\":148:150   */\n      0x20\n        /* \"#utility.yul\":133:151   */\n      add\n        /* \"ARY/HardStake.sol\":5365:5393  Withdraw(msg.sender, amount) */\n      tag_131\n        /* \"#utility.yul\":14:191   */\n      jump\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2543:2758  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_81:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_198\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_91\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_198:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2627:2649  newOwner == address(0) */\n      dup2\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2623:2714  if (newOwner == address(0)) {... */\n      tag_200\n      jumpi\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2672:2703  OwnableInvalidOwner(address(0)) */\n      mload(0x40)\n      shl(0xe0, 0x1e4fbdf7)\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2700:2701  0 */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2672:2703  OwnableInvalidOwner(address(0)) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":1163:1214   */\n      mstore\n        /* \"#utility.yul\":1136:1154   */\n      0x24\n      add\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2672:2703  OwnableInvalidOwner(address(0)) */\n      tag_98\n        /* \"#utility.yul\":1003:1220   */\n      jump\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2623:2714  if (newOwner == address(0)) {... */\n    tag_200:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2723:2751  _transferOwnership(newOwner) */\n      tag_117\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2742:2750  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2723:2741  _transferOwnership */\n      tag_150\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2723:2751  _transferOwnership(newOwner) */\n      jump\t// in\n        /* \"ARY/HardStake.sol\":2405:2645  function pendingReward(address _user) external view returns (uint256) {... */\n    tag_84:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"ARY/HardStake.sol\":2510:2525  userInfo[_user] */\n      dup2\n      and\n        /* \"ARY/HardStake.sol\":2466:2473  uint256 */\n      0x00\n        /* \"ARY/HardStake.sol\":2510:2525  userInfo[_user] */\n      swap1\n      dup2\n      mstore\n        /* \"ARY/HardStake.sol\":2510:2518  userInfo */\n      0x04\n        /* \"ARY/HardStake.sol\":2510:2525  userInfo[_user] */\n      0x20\n      mstore\n      0x40\n      dup2\n      keccak256\n        /* \"ARY/HardStake.sol\":2597:2612  user.rewardDebt */\n      0x01\n      dup2\n      add\n      sload\n        /* \"ARY/HardStake.sol\":2569:2586  accTokensPerShare */\n      sload(0x05)\n        /* \"ARY/HardStake.sol\":2555:2566  user.amount */\n      dup3\n      sload\n        /* \"ARY/HardStake.sol\":2466:2473  uint256 */\n      dup5\n      swap3\n        /* \"ARY/HardStake.sol\":2597:2612  user.rewardDebt */\n      swap2\n        /* \"ARY/HardStake.sol\":2590:2594  1e12 */\n      0xe8d4a51000\n      swap2\n        /* \"ARY/HardStake.sol\":2555:2586  user.amount * accTokensPerShare */\n      tag_204\n      swap2\n        /* \"ARY/HardStake.sol\":2569:2586  accTokensPerShare */\n      swap1\n        /* \"ARY/HardStake.sol\":2555:2586  user.amount * accTokensPerShare */\n      tag_101\n      jump\t// in\n    tag_204:\n        /* \"ARY/HardStake.sol\":2554:2594  (user.amount * accTokensPerShare) / 1e12 */\n      tag_205\n      swap2\n      swap1\n      tag_103\n      jump\t// in\n    tag_205:\n        /* \"ARY/HardStake.sol\":2554:2612  (user.amount * accTokensPerShare) / 1e12 - user.rewardDebt */\n      tag_206\n      swap2\n      swap1\n      tag_105\n      jump\t// in\n    tag_206:\n        /* \"ARY/HardStake.sol\":2536:2612  uint256 pending = (user.amount * accTokensPerShare) / 1e12 - user.rewardDebt */\n      swap5\n        /* \"ARY/HardStake.sol\":2405:2645  function pendingReward(address _user) external view returns (uint256) {... */\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1796:1958  function _checkOwner() internal view virtual {... */\n    tag_91:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1684:1691  address */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1710:1716  _owner */\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n        /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1878  owner() != _msgSender() */\n      eq\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1851:1952  if (owner() != _msgSender()) {... */\n      tag_132\n      jumpi\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1901:1941  OwnableUnauthorizedAccount(_msgSender()) */\n      mload(0x40)\n      shl(0xe0, 0x118cdaa7)\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1901:1941  OwnableUnauthorizedAccount(_msgSender()) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":1163:1214   */\n      mstore\n        /* \"#utility.yul\":1136:1154   */\n      0x24\n      add\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1901:1941  OwnableUnauthorizedAccount(_msgSender()) */\n      tag_98\n        /* \"#utility.yul\":1003:1220   */\n      jump\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2336:2623  function _nonReentrantBefore() private {... */\n    tag_95:\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1759:1760  2 */\n      0x02\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2468:2475  _status */\n      sload(0x01)\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2468:2487  _status != _ENTERED */\n      sub\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2460:2523  require(_status != _ENTERED, \"ReentrancyGuard: reentrant call\") */\n      tag_215\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":5263:5265   */\n      0x20\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2460:2523  require(_status != _ENTERED, \"ReentrancyGuard: reentrant call\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":5245:5266   */\n      mstore\n        /* \"#utility.yul\":5302:5304   */\n      0x1f\n        /* \"#utility.yul\":5282:5300   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":5275:5305   */\n      mstore\n        /* \"#utility.yul\":5341:5374   */\n      0x5265656e7472616e637947756172643a207265656e7472616e742063616c6c00\n        /* \"#utility.yul\":5321:5339   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":5314:5375   */\n      mstore\n        /* \"#utility.yul\":5392:5410   */\n      0x64\n      add\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2460:2523  require(_status != _ENTERED, \"ReentrancyGuard: reentrant call\") */\n      tag_98\n        /* \"#utility.yul\":5061:5416   */\n      jump\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2460:2523  require(_status != _ENTERED, \"ReentrancyGuard: reentrant call\") */\n    tag_215:\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1759:1760  2 */\n      0x02\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2598:2605  _status */\n      0x01\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2598:2616  _status = _ENTERED */\n      sstore\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2336:2623  function _nonReentrantBefore() private {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1271:1431  function safeTransfer(IERC20 token, address to, uint256 value) internal {... */\n    tag_108:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1380:1423  abi.encodeCall(token.transfer, (to, value)) */\n      mload(0x40)\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":5613:5645   */\n      dup4\n      dup2\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1380:1423  abi.encodeCall(token.transfer, (to, value)) */\n      0x24\n      dup4\n      add\n        /* \"#utility.yul\":5595:5646   */\n      mstore\n        /* \"#utility.yul\":5662:5680   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":5655:5689   */\n      dup4\n      swap1\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1353:1424  _callOptionalReturn(token, abi.encodeCall(token.transfer, (to, value))) */\n      tag_219\n      swap2\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1373:1378  token */\n      dup6\n      swap2\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1395:1409  token.transfer */\n      dup3\n      and\n      swap1\n      0xa9059cbb\n      swap1\n        /* \"#utility.yul\":5568:5586   */\n      0x64\n      add\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1380:1423  abi.encodeCall(token.transfer, (to, value)) */\n    tag_220:\n      mload(0x40)\n      0x20\n      dup2\n      dup4\n      sub\n      sub\n      dup2\n      mstore\n      swap1\n      0x40\n      mstore\n      swap2\n      pop\n      0xe0\n      shl\n      0x20\n      dup3\n      add\n      dup1\n      mload\n      sub(shl(0xe0, 0x01), 0x01)\n      dup4\n      dup2\n      dup4\n      and\n      or\n      dup4\n      mstore\n      pop\n      pop\n      pop\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1353:1372  _callOptionalReturn */\n      tag_222\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1353:1424  _callOptionalReturn(token, abi.encodeCall(token.transfer, (to, value))) */\n      jump\t// in\n    tag_219:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1271:1431  function safeTransfer(IERC20 token, address to, uint256 value) internal {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\n    tag_150:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2985:3001  address oldOwner */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3004:3010  _owner */\n      dup1\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3020:3037  _owner = newOwner */\n      dup4\n      dup2\n      and\n      not(sub(shl(0xa0, 0x01), 0x01))\n      dup4\n      and\n      dup2\n      or\n      dup5\n      sstore\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n      mload(0x40)\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3004:3010  _owner */\n      swap2\n      swap1\n      swap3\n      and\n      swap3\n      dup4\n      swap2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n      0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n      swap2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2985:3001  address oldOwner */\n      swap1\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n      log3\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2975:3099  {... */\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1670:1858  function safeTransferFrom(IERC20 token, address from, address to, uint256 value) internal {... */\n    tag_180:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1797:1850  abi.encodeCall(token.transferFrom, (from, to, value)) */\n      mload(0x40)\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":5958:5973   */\n      dup5\n      dup2\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1797:1850  abi.encodeCall(token.transferFrom, (from, to, value)) */\n      0x24\n      dup4\n      add\n        /* \"#utility.yul\":5940:5974   */\n      mstore\n        /* \"#utility.yul\":6010:6025   */\n      dup4\n      dup2\n      and\n        /* \"#utility.yul\":5990:6008   */\n      0x44\n      dup4\n      add\n        /* \"#utility.yul\":5983:6026   */\n      mstore\n        /* \"#utility.yul\":6042:6060   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":6035:6069   */\n      dup4\n      swap1\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1770:1851  _callOptionalReturn(token, abi.encodeCall(token.transferFrom, (from, to, value))) */\n      tag_226\n      swap2\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1790:1795  token */\n      dup7\n      swap2\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1812:1830  token.transferFrom */\n      dup3\n      and\n      swap1\n      0x23b872dd\n      swap1\n        /* \"#utility.yul\":5875:5893   */\n      0x84\n      add\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1797:1850  abi.encodeCall(token.transferFrom, (from, to, value)) */\n      tag_220\n        /* \"#utility.yul\":5700:6075   */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1770:1851  _callOptionalReturn(token, abi.encodeCall(token.transferFrom, (from, to, value))) */\n    tag_226:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1670:1858  function safeTransferFrom(IERC20 token, address from, address to, uint256 value) internal {... */\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":7738:8458  function _callOptionalReturn(IERC20 token, bytes memory data) private {... */\n    tag_222:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":7818:7836  uint256 returnSize */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":7846:7865  uint256 returnValue */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":7984:7988  0x20 */\n      0x20\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":7981:7982  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":7974:7978  data */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":7968:7979  mload(data) */\n      mload\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":7961:7965  0x20 */\n      0x20\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":7955:7959  data */\n      dup7\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":7951:7966  add(data, 0x20) */\n      add\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":7948:7949  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":7941:7946  token */\n      dup9\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":7934:7939  gas() */\n      gas\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":7929:7989  call(gas(), token, 0, add(data, 0x20), mload(data), 0, 0x20) */\n      call\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8041:8048  success */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8031:8207  if iszero(success) {... */\n      tag_231\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8085:8089  0x40 */\n      0x40\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8079:8090  mload(0x40) */\n      mload\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8130:8146  returndatasize() */\n      returndatasize\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8127:8128  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8122:8125  ptr */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8107:8147  returndatacopy(ptr, 0, returndatasize()) */\n      returndatacopy\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8176:8192  returndatasize() */\n      returndatasize\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8171:8174  ptr */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8164:8193  revert(ptr, returndatasize()) */\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8031:8207  if iszero(success) {... */\n    tag_231:\n      pop\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8284:8285  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8278:8286  mload(0) */\n      mload\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8234:8250  returndatasize() */\n      returndatasize\n      swap2\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8310:8325  returnSize == 0 */\n      dup2\n      iszero\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8310:8378  returnSize == 0 ? address(token).code.length == 0 : returnValue != 1 */\n      tag_232\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8362:8373  returnValue */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8377:8378  1 */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8362:8378  returnValue != 1 */\n      eq\n      iszero\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8310:8378  returnSize == 0 ? address(token).code.length == 0 : returnValue != 1 */\n      jump(tag_233)\n    tag_232:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8328:8354  address(token).code.length */\n      dup5\n      and\n      extcodesize\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8328:8359  address(token).code.length == 0 */\n      iszero\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8310:8378  returnSize == 0 ? address(token).code.length == 0 : returnValue != 1 */\n    tag_233:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8306:8452  if (returnSize == 0 ? address(token).code.length == 0 : returnValue != 1) {... */\n      iszero\n      tag_226\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8401:8441  SafeERC20FailedOperation(address(token)) */\n      mload(0x40)\n      shl(0xe0, 0x5274afe7)\n      dup2\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":1181:1213   */\n      dup6\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8401:8441  SafeERC20FailedOperation(address(token)) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":1163:1214   */\n      mstore\n        /* \"#utility.yul\":1136:1154   */\n      0x24\n      add\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8401:8441  SafeERC20FailedOperation(address(token)) */\n      tag_98\n        /* \"#utility.yul\":1003:1220   */\n      jump\n        /* \"#utility.yul\":196:369   */\n    tag_236:\n        /* \"#utility.yul\":264:284   */\n      dup1\n      calldataload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":313:344   */\n      dup2\n      and\n        /* \"#utility.yul\":303:345   */\n      dup2\n      eq\n        /* \"#utility.yul\":293:363   */\n      tag_241\n      jumpi\n        /* \"#utility.yul\":359:360   */\n      0x00\n        /* \"#utility.yul\":356:357   */\n      dup1\n        /* \"#utility.yul\":349:361   */\n      revert\n        /* \"#utility.yul\":293:363   */\n    tag_241:\n        /* \"#utility.yul\":196:369   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":374:560   */\n    tag_31:\n        /* \"#utility.yul\":433:439   */\n      0x00\n        /* \"#utility.yul\":486:488   */\n      0x20\n        /* \"#utility.yul\":474:483   */\n      dup3\n        /* \"#utility.yul\":465:472   */\n      dup5\n        /* \"#utility.yul\":461:484   */\n      sub\n        /* \"#utility.yul\":457:489   */\n      slt\n        /* \"#utility.yul\":454:506   */\n      iszero\n      tag_243\n      jumpi\n        /* \"#utility.yul\":502:503   */\n      0x00\n        /* \"#utility.yul\":499:500   */\n      dup1\n        /* \"#utility.yul\":492:504   */\n      revert\n        /* \"#utility.yul\":454:506   */\n    tag_243:\n        /* \"#utility.yul\":525:554   */\n      tag_244\n        /* \"#utility.yul\":544:553   */\n      dup3\n        /* \"#utility.yul\":525:554   */\n      tag_236\n      jump\t// in\n    tag_244:\n        /* \"#utility.yul\":515:554   */\n      swap4\n        /* \"#utility.yul\":374:560   */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":818:998   */\n    tag_37:\n        /* \"#utility.yul\":877:883   */\n      0x00\n        /* \"#utility.yul\":930:932   */\n      0x20\n        /* \"#utility.yul\":918:927   */\n      dup3\n        /* \"#utility.yul\":909:916   */\n      dup5\n        /* \"#utility.yul\":905:928   */\n      sub\n        /* \"#utility.yul\":901:933   */\n      slt\n        /* \"#utility.yul\":898:950   */\n      iszero\n      tag_247\n      jumpi\n        /* \"#utility.yul\":946:947   */\n      0x00\n        /* \"#utility.yul\":943:944   */\n      dup1\n        /* \"#utility.yul\":936:948   */\n      revert\n        /* \"#utility.yul\":898:950   */\n    tag_247:\n      pop\n        /* \"#utility.yul\":969:992   */\n      calldataload\n      swap2\n        /* \"#utility.yul\":818:998   */\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1225:1479   */\n    tag_64:\n        /* \"#utility.yul\":1293:1299   */\n      0x00\n        /* \"#utility.yul\":1301:1307   */\n      dup1\n        /* \"#utility.yul\":1354:1356   */\n      0x40\n        /* \"#utility.yul\":1342:1351   */\n      dup4\n        /* \"#utility.yul\":1333:1340   */\n      dup6\n        /* \"#utility.yul\":1329:1352   */\n      sub\n        /* \"#utility.yul\":1325:1357   */\n      slt\n        /* \"#utility.yul\":1322:1374   */\n      iszero\n      tag_250\n      jumpi\n        /* \"#utility.yul\":1370:1371   */\n      0x00\n        /* \"#utility.yul\":1367:1368   */\n      dup1\n        /* \"#utility.yul\":1360:1372   */\n      revert\n        /* \"#utility.yul\":1322:1374   */\n    tag_250:\n        /* \"#utility.yul\":1393:1422   */\n      tag_251\n        /* \"#utility.yul\":1412:1421   */\n      dup4\n        /* \"#utility.yul\":1393:1422   */\n      tag_236\n      jump\t// in\n    tag_251:\n        /* \"#utility.yul\":1383:1422   */\n      swap5\n        /* \"#utility.yul\":1469:1471   */\n      0x20\n        /* \"#utility.yul\":1454:1472   */\n      swap4\n      swap1\n      swap4\n      add\n        /* \"#utility.yul\":1441:1473   */\n      calldataload\n      swap4\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":1225:1479   */\n      jump\t// out\n        /* \"#utility.yul\":2284:2411   */\n    tag_237:\n        /* \"#utility.yul\":2345:2355   */\n      0x4e487b71\n        /* \"#utility.yul\":2340:2343   */\n      0xe0\n        /* \"#utility.yul\":2336:2356   */\n      shl\n        /* \"#utility.yul\":2333:2334   */\n      0x00\n        /* \"#utility.yul\":2326:2357   */\n      mstore\n        /* \"#utility.yul\":2376:2380   */\n      0x11\n        /* \"#utility.yul\":2373:2374   */\n      0x04\n        /* \"#utility.yul\":2366:2381   */\n      mstore\n        /* \"#utility.yul\":2400:2404   */\n      0x24\n        /* \"#utility.yul\":2397:2398   */\n      0x00\n        /* \"#utility.yul\":2390:2405   */\n      revert\n        /* \"#utility.yul\":2416:2584   */\n    tag_101:\n        /* \"#utility.yul\":2489:2498   */\n      dup1\n      dup3\n      mul\n        /* \"#utility.yul\":2520:2529   */\n      dup2\n      iszero\n        /* \"#utility.yul\":2537:2552   */\n      dup3\n      dup3\n      div\n        /* \"#utility.yul\":2531:2553   */\n      dup5\n      eq\n        /* \"#utility.yul\":2517:2554   */\n      or\n        /* \"#utility.yul\":2507:2578   */\n      tag_258\n      jumpi\n        /* \"#utility.yul\":2558:2576   */\n      tag_258\n      tag_237\n      jump\t// in\n    tag_258:\n        /* \"#utility.yul\":2416:2584   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2589:2806   */\n    tag_103:\n        /* \"#utility.yul\":2629:2630   */\n      0x00\n        /* \"#utility.yul\":2655:2656   */\n      dup3\n        /* \"#utility.yul\":2645:2777   */\n      tag_260\n      jumpi\n        /* \"#utility.yul\":2699:2709   */\n      0x4e487b71\n        /* \"#utility.yul\":2694:2697   */\n      0xe0\n        /* \"#utility.yul\":2690:2710   */\n      shl\n        /* \"#utility.yul\":2687:2688   */\n      0x00\n        /* \"#utility.yul\":2680:2711   */\n      mstore\n        /* \"#utility.yul\":2734:2738   */\n      0x12\n        /* \"#utility.yul\":2731:2732   */\n      0x04\n        /* \"#utility.yul\":2724:2739   */\n      mstore\n        /* \"#utility.yul\":2762:2766   */\n      0x24\n        /* \"#utility.yul\":2759:2760   */\n      0x00\n        /* \"#utility.yul\":2752:2767   */\n      revert\n        /* \"#utility.yul\":2645:2777   */\n    tag_260:\n      pop\n        /* \"#utility.yul\":2791:2800   */\n      div\n      swap1\n        /* \"#utility.yul\":2589:2806   */\n      jump\t// out\n        /* \"#utility.yul\":2811:2939   */\n    tag_105:\n        /* \"#utility.yul\":2878:2887   */\n      dup2\n      dup2\n      sub\n        /* \"#utility.yul\":2899:2910   */\n      dup2\n      dup2\n      gt\n        /* \"#utility.yul\":2896:2933   */\n      iszero\n      tag_258\n      jumpi\n        /* \"#utility.yul\":2913:2931   */\n      tag_258\n      tag_237\n      jump\t// in\n        /* \"#utility.yul\":3635:3760   */\n    tag_143:\n        /* \"#utility.yul\":3700:3709   */\n      dup1\n      dup3\n      add\n        /* \"#utility.yul\":3721:3731   */\n      dup1\n      dup3\n      gt\n        /* \"#utility.yul\":3718:3754   */\n      iszero\n      tag_258\n      jumpi\n        /* \"#utility.yul\":3734:3752   */\n      tag_258\n      tag_237\n      jump\t// in\n        /* \"#utility.yul\":4122:4306   */\n    tag_167:\n        /* \"#utility.yul\":4192:4198   */\n      0x00\n        /* \"#utility.yul\":4245:4247   */\n      0x20\n        /* \"#utility.yul\":4233:4242   */\n      dup3\n        /* \"#utility.yul\":4224:4231   */\n      dup5\n        /* \"#utility.yul\":4220:4243   */\n      sub\n        /* \"#utility.yul\":4216:4248   */\n      slt\n        /* \"#utility.yul\":4213:4265   */\n      iszero\n      tag_271\n      jumpi\n        /* \"#utility.yul\":4261:4262   */\n      0x00\n        /* \"#utility.yul\":4258:4259   */\n      dup1\n        /* \"#utility.yul\":4251:4263   */\n      revert\n        /* \"#utility.yul\":4213:4265   */\n    tag_271:\n      pop\n        /* \"#utility.yul\":4284:4300   */\n      mload\n      swap2\n        /* \"#utility.yul\":4122:4306   */\n      swap1\n      pop\n      jump\t// out\n\n    auxdata: 0xa264697066735822122073a50a5456ec59df7e185f848fbb6b7fb5c43ef413c8980cbbc3f7ddb42098fb64736f6c63430008140033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_1213": {
									"entryPoint": null,
									"id": 1213,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_256": {
									"entryPoint": null,
									"id": 256,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_50": {
									"entryPoint": null,
									"id": 50,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_transferOwnership_146": {
									"entryPoint": 149,
									"id": 146,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"abi_decode_tuple_t_addresst_address_payablet_uint256_fromMemory": {
									"entryPoint": 251,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"validator_revert_address": {
									"entryPoint": 228,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:814:13",
										"statements": [
											{
												"nodeType": "YulBlock",
												"src": "6:3:13",
												"statements": []
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "59:86:13",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "123:16:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "132:1:13",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "135:1:13",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "125:6:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "125:12:13"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "125:12:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "82:5:13"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "93:5:13"
																					},
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "108:3:13",
																										"type": "",
																										"value": "160"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "113:1:13",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "shl",
																									"nodeType": "YulIdentifier",
																									"src": "104:3:13"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "104:11:13"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "117:1:13",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nodeType": "YulIdentifier",
																							"src": "100:3:13"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "100:19:13"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "89:3:13"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "89:31:13"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "79:2:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "79:42:13"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "72:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "72:50:13"
															},
															"nodeType": "YulIf",
															"src": "69:70:13"
														}
													]
												},
												"name": "validator_revert_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "48:5:13",
														"type": ""
													}
												],
												"src": "14:131:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "273:331:13",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "319:16:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "328:1:13",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "331:1:13",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "321:6:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "321:12:13"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "321:12:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "294:7:13"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "303:9:13"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "290:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "290:23:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "315:2:13",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "286:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "286:32:13"
															},
															"nodeType": "YulIf",
															"src": "283:52:13"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "344:29:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "363:9:13"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "357:5:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "357:16:13"
															},
															"variables": [
																{
																	"name": "value",
																	"nodeType": "YulTypedName",
																	"src": "348:5:13",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "407:5:13"
																	}
																],
																"functionName": {
																	"name": "validator_revert_address",
																	"nodeType": "YulIdentifier",
																	"src": "382:24:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "382:31:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "382:31:13"
														},
														{
															"nodeType": "YulAssignment",
															"src": "422:15:13",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "432:5:13"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "422:6:13"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "446:40:13",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "471:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "482:2:13",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "467:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "467:18:13"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "461:5:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "461:25:13"
															},
															"variables": [
																{
																	"name": "value_1",
																	"nodeType": "YulTypedName",
																	"src": "450:7:13",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value_1",
																		"nodeType": "YulIdentifier",
																		"src": "520:7:13"
																	}
																],
																"functionName": {
																	"name": "validator_revert_address",
																	"nodeType": "YulIdentifier",
																	"src": "495:24:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "495:33:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "495:33:13"
														},
														{
															"nodeType": "YulAssignment",
															"src": "537:17:13",
															"value": {
																"name": "value_1",
																"nodeType": "YulIdentifier",
																"src": "547:7:13"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "537:6:13"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "563:35:13",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "583:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "594:2:13",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "579:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "579:18:13"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "573:5:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "573:25:13"
															},
															"variableNames": [
																{
																	"name": "value2",
																	"nodeType": "YulIdentifier",
																	"src": "563:6:13"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_address_payablet_uint256_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "223:9:13",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "234:7:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "246:6:13",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "254:6:13",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "262:6:13",
														"type": ""
													}
												],
												"src": "150:454:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "710:102:13",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "720:26:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "732:9:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "743:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "728:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "728:18:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "720:4:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "762:9:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "777:6:13"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "793:3:13",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "798:1:13",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nodeType": "YulIdentifier",
																							"src": "789:3:13"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "789:11:13"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "802:1:13",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nodeType": "YulIdentifier",
																					"src": "785:3:13"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "785:19:13"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "773:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "773:32:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "755:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "755:51:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "755:51:13"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "679:9:13",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "690:6:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "701:4:13",
														"type": ""
													}
												],
												"src": "609:203:13"
											}
										]
									},
									"contents": "{\n    { }\n    function validator_revert_address(value)\n    {\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_addresst_address_payablet_uint256_fromMemory(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(0, 0) }\n        let value := mload(headStart)\n        validator_revert_address(value)\n        value0 := value\n        let value_1 := mload(add(headStart, 32))\n        validator_revert_address(value_1)\n        value1 := value_1\n        value2 := mload(add(headStart, 64))\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n}",
									"id": 13,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "",
							"opcodes": "PUSH1 0xC0 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH2 0xFEB CODESIZE SUB DUP1 PUSH2 0xFEB DUP4 CODECOPY DUP2 ADD PUSH1 0x40 DUP2 SWAP1 MSTORE PUSH2 0x2E SWAP2 PUSH2 0xFB JUMP JUMPDEST CALLER DUP1 PUSH2 0x53 JUMPI PUSH1 0x40 MLOAD PUSH4 0x1E4FBDF7 PUSH1 0xE0 SHL DUP2 MSTORE PUSH0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x5C DUP2 PUSH2 0x95 JUMP JUMPDEST POP PUSH1 0x1 DUP1 SSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 DUP4 AND PUSH1 0x80 DUP2 SWAP1 MSTORE PUSH1 0xA0 MSTORE PUSH1 0x2 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND SWAP3 SWAP1 SWAP4 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SWAP2 SSTORE PUSH1 0x7 SSTORE PUSH2 0x13B JUMP JUMPDEST PUSH0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR DUP5 SSTORE PUSH1 0x40 MLOAD SWAP2 SWAP1 SWAP3 AND SWAP3 DUP4 SWAP2 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP2 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0xF8 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x10D JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP4 MLOAD PUSH2 0x118 DUP2 PUSH2 0xE4 JUMP JUMPDEST PUSH1 0x20 DUP6 ADD MLOAD SWAP1 SWAP4 POP PUSH2 0x129 DUP2 PUSH2 0xE4 JUMP JUMPDEST DUP1 SWAP3 POP POP PUSH1 0x40 DUP5 ADD MLOAD SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x80 MLOAD PUSH1 0xA0 MLOAD PUSH2 0xE5E PUSH2 0x18D PUSH0 CODECOPY PUSH0 DUP2 DUP2 PUSH2 0x298 ADD MSTORE DUP2 DUP2 PUSH2 0x379 ADD MSTORE DUP2 DUP2 PUSH2 0x53F ADD MSTORE PUSH2 0x8A5 ADD MSTORE PUSH0 DUP2 DUP2 PUSH2 0x1D9 ADD MSTORE DUP2 DUP2 PUSH2 0x419 ADD MSTORE DUP2 DUP2 PUSH2 0x6D2 ADD MSTORE DUP2 DUP2 PUSH2 0x917 ADD MSTORE PUSH2 0xA5A ADD MSTORE PUSH2 0xE5E PUSH0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x11C JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x72F702F3 GT PUSH2 0xA9 JUMPI DUP1 PUSH4 0xB6B55F25 GT PUSH2 0x6E JUMPI DUP1 PUSH4 0xB6B55F25 EQ PUSH2 0x252 JUMPI DUP1 PUSH4 0xDB2E21BC EQ PUSH2 0x265 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x26D JUMPI DUP1 PUSH4 0xF40F0F52 EQ PUSH2 0x280 JUMPI DUP1 PUSH4 0xF7C618C1 EQ PUSH2 0x293 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x72F702F3 EQ PUSH2 0x1D4 JUMPI DUP1 PUSH4 0x817B1CD2 EQ PUSH2 0x213 JUMPI DUP1 PUSH4 0x8980F11F EQ PUSH2 0x21C JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x22F JUMPI DUP1 PUSH4 0x8EA83031 EQ PUSH2 0x23F JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x2F3C9A4F GT PUSH2 0xEF JUMPI DUP1 PUSH4 0x2F3C9A4F EQ PUSH2 0x19F JUMPI DUP1 PUSH4 0x372500AB EQ PUSH2 0x1A8 JUMPI DUP1 PUSH4 0x3C6B16AB EQ PUSH2 0x1B0 JUMPI DUP1 PUSH4 0x644F362D EQ PUSH2 0x1C3 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x1CC JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0xE15561A EQ PUSH2 0x120 JUMPI DUP1 PUSH4 0x1959A002 EQ PUSH2 0x13C JUMPI DUP1 PUSH4 0x2277D7E1 EQ PUSH2 0x177 JUMPI DUP1 PUSH4 0x2E1A7D4D EQ PUSH2 0x18C JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x129 PUSH1 0x6 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x162 PUSH2 0x14A CALLDATASIZE PUSH1 0x4 PUSH2 0xD3C JUMP JUMPDEST PUSH1 0x4 PUSH1 0x20 MSTORE PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 SWAP1 SWAP2 ADD SLOAD DUP3 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP3 DUP4 MSTORE PUSH1 0x20 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE ADD PUSH2 0x133 JUMP JUMPDEST PUSH2 0x18A PUSH2 0x185 CALLDATASIZE PUSH1 0x4 PUSH2 0xD5C JUMP JUMPDEST PUSH2 0x2BA JUMP JUMPDEST STOP JUMPDEST PUSH2 0x18A PUSH2 0x19A CALLDATASIZE PUSH1 0x4 PUSH2 0xD5C JUMP JUMPDEST PUSH2 0x2C7 JUMP JUMPDEST PUSH2 0x129 PUSH1 0x5 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x18A PUSH2 0x4A4 JUMP JUMPDEST PUSH2 0x18A PUSH2 0x1BE CALLDATASIZE PUSH1 0x4 PUSH2 0xD5C JUMP JUMPDEST PUSH2 0x5CD JUMP JUMPDEST PUSH2 0x129 PUSH1 0x7 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x18A PUSH2 0x6B7 JUMP JUMPDEST PUSH2 0x1FB PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x133 JUMP JUMPDEST PUSH2 0x129 PUSH1 0x3 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x18A PUSH2 0x22A CALLDATASIZE PUSH1 0x4 PUSH2 0xD73 JUMP JUMPDEST PUSH2 0x6C8 JUMP JUMPDEST PUSH0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x1FB JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH2 0x1FB SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH2 0x18A PUSH2 0x260 CALLDATASIZE PUSH1 0x4 PUSH2 0xD5C JUMP JUMPDEST PUSH2 0x77A JUMP JUMPDEST PUSH2 0x18A PUSH2 0x9D3 JUMP JUMPDEST PUSH2 0x18A PUSH2 0x27B CALLDATASIZE PUSH1 0x4 PUSH2 0xD3C JUMP JUMPDEST PUSH2 0xAB3 JUMP JUMPDEST PUSH2 0x129 PUSH2 0x28E CALLDATASIZE PUSH1 0x4 PUSH2 0xD3C JUMP JUMPDEST PUSH2 0xAED JUMP JUMPDEST PUSH2 0x1FB PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH2 0x2C2 PUSH2 0xB3E JUMP JUMPDEST PUSH1 0x7 SSTORE JUMP JUMPDEST PUSH2 0x2CF PUSH2 0xB6A JUMP JUMPDEST CALLER PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD DUP3 GT ISZERO PUSH2 0x333 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x576974686472617720616D6F756E7420657863656564732062616C616E636500 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 DUP2 PUSH1 0x1 ADD SLOAD PUSH5 0xE8D4A51000 PUSH1 0x5 SLOAD DUP5 PUSH0 ADD SLOAD PUSH2 0x350 SWAP2 SWAP1 PUSH2 0xDAF JUMP JUMPDEST PUSH2 0x35A SWAP2 SWAP1 PUSH2 0xDCC JUMP JUMPDEST PUSH2 0x364 SWAP2 SWAP1 PUSH2 0xDEB JUMP JUMPDEST SWAP1 POP DUP1 ISZERO PUSH2 0x3D6 JUMPI PUSH2 0x3A0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND CALLER DUP4 PUSH2 0xBC3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP2 DUP2 MSTORE CALLER SWAP1 PUSH32 0x47CEE97CB7ACD717B3C0AA1435D004CD5B3C8C57D70DBCEB4E4458BBD60E39D4 SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 JUMPDEST DUP3 ISZERO PUSH2 0x476 JUMPI DUP3 DUP3 PUSH0 ADD PUSH0 DUP3 DUP3 SLOAD PUSH2 0x3EE SWAP2 SWAP1 PUSH2 0xDEB JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP3 PUSH1 0x3 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x406 SWAP2 SWAP1 PUSH2 0xDEB JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP PUSH2 0x440 SWAP1 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND CALLER DUP6 PUSH2 0xBC3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP4 DUP2 MSTORE CALLER SWAP1 PUSH32 0x884EDAD9CE6FA2440D8A54CC123490EB96D2768479D49FF9C7366125A9424364 SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 JUMPDEST PUSH1 0x5 SLOAD DUP3 SLOAD PUSH5 0xE8D4A51000 SWAP2 PUSH2 0x48B SWAP2 PUSH2 0xDAF JUMP JUMPDEST PUSH2 0x495 SWAP2 SWAP1 PUSH2 0xDCC JUMP JUMPDEST PUSH1 0x1 SWAP3 DUP4 ADD SSTORE POP DUP1 SSTORE POP JUMP JUMPDEST POP JUMP JUMPDEST PUSH2 0x4AC PUSH2 0xB6A JUMP JUMPDEST CALLER PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 PUSH1 0x1 DUP2 ADD SLOAD PUSH1 0x5 SLOAD DUP3 SLOAD SWAP3 SWAP4 SWAP3 PUSH5 0xE8D4A51000 SWAP2 PUSH2 0x4D7 SWAP2 PUSH2 0xDAF JUMP JUMPDEST PUSH2 0x4E1 SWAP2 SWAP1 PUSH2 0xDCC JUMP JUMPDEST PUSH2 0x4EB SWAP2 SWAP1 PUSH2 0xDEB JUMP JUMPDEST SWAP1 POP PUSH0 DUP2 GT PUSH2 0x532 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x13 PUSH1 0x24 DUP3 ADD MSTORE PUSH19 0x4E6F207265776172647320746F20636C61696D PUSH1 0x68 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x32A JUMP JUMPDEST PUSH2 0x566 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND CALLER DUP4 PUSH2 0xBC3 JUMP JUMPDEST PUSH1 0x5 SLOAD DUP3 SLOAD PUSH5 0xE8D4A51000 SWAP2 PUSH2 0x57B SWAP2 PUSH2 0xDAF JUMP JUMPDEST PUSH2 0x585 SWAP2 SWAP1 PUSH2 0xDCC JUMP JUMPDEST PUSH1 0x1 DUP4 ADD SSTORE PUSH1 0x40 MLOAD DUP2 DUP2 MSTORE CALLER SWAP1 PUSH32 0x47CEE97CB7ACD717B3C0AA1435D004CD5B3C8C57D70DBCEB4E4458BBD60E39D4 SWAP1 PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP PUSH2 0x5CB PUSH1 0x1 DUP1 SSTORE JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ DUP1 PUSH2 0x5EF JUMPI POP PUSH0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ JUMPDEST PUSH2 0x62C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xE PUSH1 0x24 DUP3 ADD MSTORE PUSH14 0x139BDD08185D5D1A1BDC9A5E9959 PUSH1 0x92 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x32A JUMP JUMPDEST PUSH1 0x3 SLOAD PUSH0 SUB PUSH2 0x638 JUMPI POP JUMP JUMPDEST PUSH1 0x3 SLOAD PUSH2 0x64A DUP3 PUSH5 0xE8D4A51000 PUSH2 0xDAF JUMP JUMPDEST PUSH2 0x654 SWAP2 SWAP1 PUSH2 0xDCC JUMP JUMPDEST PUSH1 0x5 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x664 SWAP2 SWAP1 PUSH2 0xDFE JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP1 PUSH1 0x6 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x67C SWAP2 SWAP1 PUSH2 0xDFE JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x40 MLOAD DUP2 DUP2 MSTORE PUSH32 0xDE88A922E0D3B88B24E9623EFEB464919C6BF9F66857A65E2BFCF2CE87A9433D SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP JUMP JUMPDEST PUSH2 0x6BF PUSH2 0xB3E JUMP JUMPDEST PUSH2 0x5CB PUSH0 PUSH2 0xC27 JUMP JUMPDEST PUSH2 0x6D0 PUSH2 0xB3E JUMP JUMPDEST PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SUB PUSH2 0x751 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1C PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x43616E6E6F74207265636F766572207374616B696E6720746F6B656E00000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x32A JUMP JUMPDEST PUSH2 0x776 PUSH2 0x765 PUSH0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND SWAP1 DUP4 PUSH2 0xBC3 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH2 0x782 PUSH2 0xB6A JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH1 0x40 MLOAD PUSH4 0x14CED3DF PUSH1 0xE3 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH0 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH4 0xA6769EF8 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x7C8 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x7EC SWAP2 SWAP1 PUSH2 0xE11 JUMP JUMPDEST SWAP1 POP PUSH1 0x7 SLOAD DUP2 LT ISZERO PUSH2 0x84A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x21 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E73756666696369656E74204441707020766F6C756D6520746F207374616B PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x65 PUSH1 0xF8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x32A JUMP JUMPDEST CALLER PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD ISZERO PUSH2 0x904 JUMPI PUSH0 DUP2 PUSH1 0x1 ADD SLOAD PUSH5 0xE8D4A51000 PUSH1 0x5 SLOAD DUP5 PUSH0 ADD SLOAD PUSH2 0x87C SWAP2 SWAP1 PUSH2 0xDAF JUMP JUMPDEST PUSH2 0x886 SWAP2 SWAP1 PUSH2 0xDCC JUMP JUMPDEST PUSH2 0x890 SWAP2 SWAP1 PUSH2 0xDEB JUMP JUMPDEST SWAP1 POP DUP1 ISZERO PUSH2 0x902 JUMPI PUSH2 0x8CC PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND CALLER DUP4 PUSH2 0xBC3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP2 DUP2 MSTORE CALLER SWAP1 PUSH32 0x47CEE97CB7ACD717B3C0AA1435D004CD5B3C8C57D70DBCEB4E4458BBD60E39D4 SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 JUMPDEST POP JUMPDEST DUP3 ISZERO PUSH2 0x96F JUMPI PUSH2 0x93F PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND CALLER ADDRESS DUP7 PUSH2 0xC76 JUMP JUMPDEST DUP3 DUP2 PUSH0 ADD PUSH0 DUP3 DUP3 SLOAD PUSH2 0x951 SWAP2 SWAP1 PUSH2 0xDFE JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP3 PUSH1 0x3 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x969 SWAP2 SWAP1 PUSH2 0xDFE JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP JUMPDEST PUSH1 0x5 SLOAD DUP2 SLOAD PUSH5 0xE8D4A51000 SWAP2 PUSH2 0x984 SWAP2 PUSH2 0xDAF JUMP JUMPDEST PUSH2 0x98E SWAP2 SWAP1 PUSH2 0xDCC JUMP JUMPDEST PUSH1 0x1 DUP3 ADD SSTORE PUSH1 0x40 MLOAD DUP4 DUP2 MSTORE CALLER SWAP1 PUSH32 0xE1FFFCC4923D04B559F4D29A8BFC6CDA04EB5B0D3C460751C2402C5C5CC9109C SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP PUSH2 0x4A1 PUSH1 0x1 DUP1 SSTORE JUMP JUMPDEST PUSH2 0x9DB PUSH2 0xB6A JUMP JUMPDEST CALLER PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD DUP1 PUSH2 0xA2E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x13 PUSH1 0x24 DUP3 ADD MSTORE PUSH19 0x4E6F7468696E6720746F207769746864726177 PUSH1 0x68 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x32A JUMP JUMPDEST DUP1 PUSH1 0x3 PUSH0 DUP3 DUP3 SLOAD PUSH2 0xA3F SWAP2 SWAP1 PUSH2 0xDEB JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH0 DUP1 DUP4 SSTORE PUSH1 0x1 DUP4 ADD SSTORE PUSH2 0xA81 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND CALLER DUP4 PUSH2 0xBC3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP2 DUP2 MSTORE CALLER SWAP1 PUSH32 0x884EDAD9CE6FA2440D8A54CC123490EB96D2768479D49FF9C7366125A9424364 SWAP1 PUSH1 0x20 ADD PUSH2 0x5B8 JUMP JUMPDEST PUSH2 0xABB PUSH2 0xB3E JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0xAE4 JUMPI PUSH1 0x40 MLOAD PUSH4 0x1E4FBDF7 PUSH1 0xE0 SHL DUP2 MSTORE PUSH0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x32A JUMP JUMPDEST PUSH2 0x4A1 DUP2 PUSH2 0xC27 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 PUSH1 0x1 DUP2 ADD SLOAD PUSH1 0x5 SLOAD DUP3 SLOAD DUP5 SWAP3 SWAP2 PUSH5 0xE8D4A51000 SWAP2 PUSH2 0xB22 SWAP2 SWAP1 PUSH2 0xDAF JUMP JUMPDEST PUSH2 0xB2C SWAP2 SWAP1 PUSH2 0xDCC JUMP JUMPDEST PUSH2 0xB36 SWAP2 SWAP1 PUSH2 0xDEB JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x5CB JUMPI PUSH1 0x40 MLOAD PUSH4 0x118CDAA7 PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x32A JUMP JUMPDEST PUSH1 0x2 PUSH1 0x1 SLOAD SUB PUSH2 0xBBC JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5265656E7472616E637947756172643A207265656E7472616E742063616C6C00 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x32A JUMP JUMPDEST PUSH1 0x2 PUSH1 0x1 SSTORE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x24 DUP4 ADD MSTORE PUSH1 0x44 DUP3 ADD DUP4 SWAP1 MSTORE PUSH2 0xC22 SWAP2 DUP6 SWAP2 DUP3 AND SWAP1 PUSH4 0xA9059CBB SWAP1 PUSH1 0x64 ADD JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP2 POP PUSH1 0xE0 SHL PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB DUP4 DUP2 DUP4 AND OR DUP4 MSTORE POP POP POP POP PUSH2 0xCB5 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR DUP5 SSTORE PUSH1 0x40 MLOAD SWAP2 SWAP1 SWAP3 AND SWAP3 DUP4 SWAP2 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP2 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 DUP2 AND PUSH1 0x24 DUP4 ADD MSTORE DUP4 DUP2 AND PUSH1 0x44 DUP4 ADD MSTORE PUSH1 0x64 DUP3 ADD DUP4 SWAP1 MSTORE PUSH2 0xCAF SWAP2 DUP7 SWAP2 DUP3 AND SWAP1 PUSH4 0x23B872DD SWAP1 PUSH1 0x84 ADD PUSH2 0xBF0 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x20 PUSH0 DUP5 MLOAD PUSH1 0x20 DUP7 ADD PUSH0 DUP9 GAS CALL DUP1 PUSH2 0xCD4 JUMPI PUSH1 0x40 MLOAD RETURNDATASIZE PUSH0 DUP3 RETURNDATACOPY RETURNDATASIZE DUP2 REVERT JUMPDEST POP POP PUSH0 MLOAD RETURNDATASIZE SWAP2 POP DUP2 ISZERO PUSH2 0xCEB JUMPI DUP1 PUSH1 0x1 EQ ISZERO PUSH2 0xCF8 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND EXTCODESIZE ISZERO JUMPDEST ISZERO PUSH2 0xCAF JUMPI PUSH1 0x40 MLOAD PUSH4 0x5274AFE7 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x32A JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0xD37 JUMPI PUSH0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xD4C JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0xD55 DUP3 PUSH2 0xD21 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xD6C JUMPI PUSH0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xD84 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0xD8D DUP4 PUSH2 0xD21 JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST DUP1 DUP3 MUL DUP2 ISZERO DUP3 DUP3 DIV DUP5 EQ OR PUSH2 0xDC6 JUMPI PUSH2 0xDC6 PUSH2 0xD9B JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP3 PUSH2 0xDE6 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST POP DIV SWAP1 JUMP JUMPDEST DUP2 DUP2 SUB DUP2 DUP2 GT ISZERO PUSH2 0xDC6 JUMPI PUSH2 0xDC6 PUSH2 0xD9B JUMP JUMPDEST DUP1 DUP3 ADD DUP1 DUP3 GT ISZERO PUSH2 0xDC6 JUMPI PUSH2 0xDC6 PUSH2 0xD9B JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xE21 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP MLOAD SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH20 0xA50A5456EC59DF7E185F848FBB6B7FB5C43EF413 0xC8 SWAP9 0xC 0xBB 0xC3 0xF7 0xDD 0xB4 KECCAK256 SWAP9 0xFB PUSH5 0x736F6C6343 STOP ADDMOD EQ STOP CALLER ",
							"sourceMap": "301:5613:11:-:0;;;1385:447;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1525:10;;1269:95:0;;1322:31;;-1:-1:-1;;;1322:31:0;;1350:1;1322:31;;;755:51:13;728:18;;1322:31:0;;;;;;;1269:95;1373:32;1392:12;1373:18;:32::i;:::-;-1:-1:-1;1716:1:4;1821:22;;-1:-1:-1;;;;;1595:36:11;;::::1;;::::0;;;1642:35:::1;::::0;1730:12:::1;:37:::0;;-1:-1:-1;;;;;;1730:37:11::1;::::0;;;::::1;::::0;;;::::1;::::0;;;1778:21:::1;:46:::0;301:5613;;2912:187:0;2985:16;3004:6;;-1:-1:-1;;;;;3020:17:0;;;-1:-1:-1;;;;;;3020:17:0;;;;;;3052:40;;3004:6;;;;;;;3052:40;;2985:16;3052:40;2975:124;2912:187;:::o;14:131:13:-;-1:-1:-1;;;;;89:31:13;;79:42;;69:70;;135:1;132;125:12;69:70;14:131;:::o;150:454::-;246:6;254;262;315:2;303:9;294:7;290:23;286:32;283:52;;;331:1;328;321:12;283:52;363:9;357:16;382:31;407:5;382:31;:::i;:::-;482:2;467:18;;461:25;432:5;;-1:-1:-1;495:33:13;461:25;495:33;:::i;:::-;547:7;537:17;;;594:2;583:9;579:18;573:25;563:35;;150:454;;;;;:::o;609:203::-;301:5613:11;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@_callOptionalReturn_749": {
									"entryPoint": 3253,
									"id": 749,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_checkOwner_84": {
									"entryPoint": 2878,
									"id": 84,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_msgSender_1062": {
									"entryPoint": null,
									"id": 1062,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_nonReentrantAfter_290": {
									"entryPoint": null,
									"id": 290,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_nonReentrantBefore_282": {
									"entryPoint": 2922,
									"id": 282,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_transferOwnership_146": {
									"entryPoint": 3111,
									"id": 146,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@accTokensPerShare_1151": {
									"entryPoint": null,
									"id": 1151,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@claimRewards_1560": {
									"entryPoint": 1188,
									"id": 1560,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@deposit_1403": {
									"entryPoint": 1914,
									"id": 1403,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@emergencyWithdraw_1616": {
									"entryPoint": 2515,
									"id": 1616,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@minimumVolumeRequired_1155": {
									"entryPoint": null,
									"id": 1155,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@notifyRewardAmount_1259": {
									"entryPoint": 1485,
									"id": 1259,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@owner_67": {
									"entryPoint": null,
									"id": 67,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@pendingReward_1289": {
									"entryPoint": 2797,
									"id": 1289,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@recoverERC20_1657": {
									"entryPoint": 1736,
									"id": 1657,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@renounceOwnership_98": {
									"entryPoint": 1719,
									"id": 98,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@rewardToken_1142": {
									"entryPoint": null,
									"id": 1142,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@safeTransferFrom_454": {
									"entryPoint": 3190,
									"id": 454,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@safeTransfer_427": {
									"entryPoint": 3011,
									"id": 427,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@stakingToken_1139": {
									"entryPoint": null,
									"id": 1139,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@swapContract_1131": {
									"entryPoint": null,
									"id": 1131,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@totalRewards_1153": {
									"entryPoint": null,
									"id": 1153,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@totalStaked_1144": {
									"entryPoint": null,
									"id": 1144,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@transferOwnership_126": {
									"entryPoint": 2739,
									"id": 126,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@updateMinimumVolumeRequired_1628": {
									"entryPoint": 698,
									"id": 1628,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@userInfo_1149": {
									"entryPoint": null,
									"id": 1149,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@withdraw_1500": {
									"entryPoint": 711,
									"id": 1500,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"abi_decode_address": {
									"entryPoint": 3361,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 3388,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_uint256": {
									"entryPoint": 3443,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_uint256": {
									"entryPoint": 3420,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256_fromMemory": {
									"entryPoint": 3601,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_contract$_IERC20_$380__to_t_address__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_contract$_SwapPro_$2711__to_t_address_payable__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_1b19ac089d87f4146c293e731799080c98f8ee751187f94356e96cb0c086a394__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_4c501aa39f818920bdbabc4e74fb2842a64ecd00cde0a748633014f4258571f4__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_584cf1690fd4124c524340f65c2f0897ce34c8cad61c485ada0c89030473339d__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_648cd7d2c3c6138e60aa25ba2516146489ba1c539e5d2a1fbcb5aa65ada4b39e__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_f2260e3055faa792d924d265619c5330df351b382bad9f6027ac5a13b486d2d4__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_fac3bac318c0d00994f57b0f2f4c643c313072b71db2302bf4b900309cc50b36__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 3582,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_div_t_uint256": {
									"entryPoint": 3532,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_mul_t_uint256": {
									"entryPoint": 3503,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_sub_t_uint256": {
									"entryPoint": 3563,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 3483,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:6077:13",
										"statements": [
											{
												"nodeType": "YulBlock",
												"src": "6:3:13",
												"statements": []
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "115:76:13",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "125:26:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "137:9:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "148:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "133:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "133:18:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "125:4:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "167:9:13"
																	},
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "178:6:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "160:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "160:25:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "160:25:13"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "84:9:13",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "95:6:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "106:4:13",
														"type": ""
													}
												],
												"src": "14:177:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "245:124:13",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "255:29:13",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "277:6:13"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "264:12:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "264:20:13"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "255:5:13"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "347:16:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "356:1:13",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "359:1:13",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "349:6:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "349:12:13"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "349:12:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "306:5:13"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "317:5:13"
																					},
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "332:3:13",
																										"type": "",
																										"value": "160"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "337:1:13",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "shl",
																									"nodeType": "YulIdentifier",
																									"src": "328:3:13"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "328:11:13"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "341:1:13",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nodeType": "YulIdentifier",
																							"src": "324:3:13"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "324:19:13"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "313:3:13"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "313:31:13"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "303:2:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "303:42:13"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "296:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "296:50:13"
															},
															"nodeType": "YulIf",
															"src": "293:70:13"
														}
													]
												},
												"name": "abi_decode_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "224:6:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "235:5:13",
														"type": ""
													}
												],
												"src": "196:173:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "444:116:13",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "490:16:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "499:1:13",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "502:1:13",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "492:6:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "492:12:13"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "492:12:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "465:7:13"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "474:9:13"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "461:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "461:23:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "486:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "457:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "457:32:13"
															},
															"nodeType": "YulIf",
															"src": "454:52:13"
														},
														{
															"nodeType": "YulAssignment",
															"src": "515:39:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "544:9:13"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "525:18:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "525:29:13"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "515:6:13"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "410:9:13",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "421:7:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "433:6:13",
														"type": ""
													}
												],
												"src": "374:186:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "694:119:13",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "704:26:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "716:9:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "727:2:13",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "712:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "712:18:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "704:4:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "746:9:13"
																	},
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "757:6:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "739:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "739:25:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "739:25:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "784:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "795:2:13",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "780:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "780:18:13"
																	},
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "800:6:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "773:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "773:34:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "773:34:13"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "655:9:13",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "666:6:13",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "674:6:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "685:4:13",
														"type": ""
													}
												],
												"src": "565:248:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "888:110:13",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "934:16:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "943:1:13",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "946:1:13",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "936:6:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "936:12:13"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "936:12:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "909:7:13"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "918:9:13"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "905:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "905:23:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "930:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "901:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "901:32:13"
															},
															"nodeType": "YulIf",
															"src": "898:52:13"
														},
														{
															"nodeType": "YulAssignment",
															"src": "959:33:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "982:9:13"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "969:12:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "969:23:13"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "959:6:13"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "854:9:13",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "865:7:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "877:6:13",
														"type": ""
													}
												],
												"src": "818:180:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1118:102:13",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1128:26:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1140:9:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1151:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1136:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "1136:18:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1128:4:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1170:9:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "1185:6:13"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "1201:3:13",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "1206:1:13",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nodeType": "YulIdentifier",
																							"src": "1197:3:13"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "1197:11:13"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "1210:1:13",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nodeType": "YulIdentifier",
																					"src": "1193:3:13"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1193:19:13"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "1181:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1181:32:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1163:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "1163:51:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1163:51:13"
														}
													]
												},
												"name": "abi_encode_tuple_t_contract$_IERC20_$380__to_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1087:9:13",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1098:6:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1109:4:13",
														"type": ""
													}
												],
												"src": "1003:217:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1312:167:13",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1358:16:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1367:1:13",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1370:1:13",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1360:6:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1360:12:13"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1360:12:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1333:7:13"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1342:9:13"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1329:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1329:23:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1354:2:13",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "1325:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "1325:32:13"
															},
															"nodeType": "YulIf",
															"src": "1322:52:13"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1383:39:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1412:9:13"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "1393:18:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "1393:29:13"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "1383:6:13"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "1431:42:13",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1458:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1469:2:13",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1454:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1454:18:13"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "1441:12:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "1441:32:13"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "1431:6:13"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1270:9:13",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "1281:7:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1293:6:13",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "1301:6:13",
														"type": ""
													}
												],
												"src": "1225:254:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1585:102:13",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1595:26:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1607:9:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1618:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1603:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "1603:18:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1595:4:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1637:9:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "1652:6:13"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "1668:3:13",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "1673:1:13",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nodeType": "YulIdentifier",
																							"src": "1664:3:13"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "1664:11:13"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "1677:1:13",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nodeType": "YulIdentifier",
																					"src": "1660:3:13"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1660:19:13"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "1648:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1648:32:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1630:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "1630:51:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1630:51:13"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1554:9:13",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1565:6:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1576:4:13",
														"type": ""
													}
												],
												"src": "1484:203:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1817:102:13",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1827:26:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1839:9:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1850:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1835:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "1835:18:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1827:4:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1869:9:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "1884:6:13"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "1900:3:13",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "1905:1:13",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nodeType": "YulIdentifier",
																							"src": "1896:3:13"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "1896:11:13"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "1909:1:13",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nodeType": "YulIdentifier",
																					"src": "1892:3:13"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1892:19:13"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "1880:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1880:32:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1862:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "1862:51:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1862:51:13"
														}
													]
												},
												"name": "abi_encode_tuple_t_contract$_SwapPro_$2711__to_t_address_payable__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1786:9:13",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1797:6:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1808:4:13",
														"type": ""
													}
												],
												"src": "1692:227:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2098:181:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2115:9:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2126:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2108:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "2108:21:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2108:21:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2149:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2160:2:13",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2145:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2145:18:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2165:2:13",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2138:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "2138:30:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2138:30:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2188:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2199:2:13",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2184:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2184:18:13"
																	},
																	{
																		"hexValue": "576974686472617720616d6f756e7420657863656564732062616c616e6365",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "2204:33:13",
																		"type": "",
																		"value": "Withdraw amount exceeds balance"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2177:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "2177:61:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2177:61:13"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2247:26:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2259:9:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2270:2:13",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2255:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "2255:18:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "2247:4:13"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_4c501aa39f818920bdbabc4e74fb2842a64ecd00cde0a748633014f4258571f4__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2075:9:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "2089:4:13",
														"type": ""
													}
												],
												"src": "1924:355:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2316:95:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2333:1:13",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2340:3:13",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2345:10:13",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "2336:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2336:20:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2326:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "2326:31:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2326:31:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2373:1:13",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2376:4:13",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2366:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "2366:15:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2366:15:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2397:1:13",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2400:4:13",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "2390:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "2390:15:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2390:15:13"
														}
													]
												},
												"name": "panic_error_0x11",
												"nodeType": "YulFunctionDefinition",
												"src": "2284:127:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2468:116:13",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2478:20:13",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "2493:1:13"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "2496:1:13"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nodeType": "YulIdentifier",
																	"src": "2489:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "2489:9:13"
															},
															"variableNames": [
																{
																	"name": "product",
																	"nodeType": "YulIdentifier",
																	"src": "2478:7:13"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2556:22:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "2558:16:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2558:18:13"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2558:18:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "x",
																						"nodeType": "YulIdentifier",
																						"src": "2527:1:13"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nodeType": "YulIdentifier",
																					"src": "2520:6:13"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2520:9:13"
																			},
																			{
																				"arguments": [
																					{
																						"name": "y",
																						"nodeType": "YulIdentifier",
																						"src": "2534:1:13"
																					},
																					{
																						"arguments": [
																							{
																								"name": "product",
																								"nodeType": "YulIdentifier",
																								"src": "2541:7:13"
																							},
																							{
																								"name": "x",
																								"nodeType": "YulIdentifier",
																								"src": "2550:1:13"
																							}
																						],
																						"functionName": {
																							"name": "div",
																							"nodeType": "YulIdentifier",
																							"src": "2537:3:13"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "2537:15:13"
																					}
																				],
																				"functionName": {
																					"name": "eq",
																					"nodeType": "YulIdentifier",
																					"src": "2531:2:13"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2531:22:13"
																			}
																		],
																		"functionName": {
																			"name": "or",
																			"nodeType": "YulIdentifier",
																			"src": "2517:2:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2517:37:13"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "2510:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "2510:45:13"
															},
															"nodeType": "YulIf",
															"src": "2507:71:13"
														}
													]
												},
												"name": "checked_mul_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "2447:1:13",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "2450:1:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "product",
														"nodeType": "YulTypedName",
														"src": "2456:7:13",
														"type": ""
													}
												],
												"src": "2416:168:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2635:171:13",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2666:111:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2687:1:13",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "2694:3:13",
																							"type": "",
																							"value": "224"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "2699:10:13",
																							"type": "",
																							"value": "0x4e487b71"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nodeType": "YulIdentifier",
																						"src": "2690:3:13"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "2690:20:13"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "2680:6:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2680:31:13"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2680:31:13"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2731:1:13",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2734:4:13",
																					"type": "",
																					"value": "0x12"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "2724:6:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2724:15:13"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2724:15:13"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2759:1:13",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2762:4:13",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2752:6:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2752:15:13"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2752:15:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "2655:1:13"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "2648:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "2648:9:13"
															},
															"nodeType": "YulIf",
															"src": "2645:132:13"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2786:14:13",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "2795:1:13"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "2798:1:13"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nodeType": "YulIdentifier",
																	"src": "2791:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "2791:9:13"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nodeType": "YulIdentifier",
																	"src": "2786:1:13"
																}
															]
														}
													]
												},
												"name": "checked_div_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "2620:1:13",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "2623:1:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "r",
														"nodeType": "YulTypedName",
														"src": "2629:1:13",
														"type": ""
													}
												],
												"src": "2589:217:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2860:79:13",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2870:17:13",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "2882:1:13"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "2885:1:13"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "2878:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "2878:9:13"
															},
															"variableNames": [
																{
																	"name": "diff",
																	"nodeType": "YulIdentifier",
																	"src": "2870:4:13"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2911:22:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "2913:16:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2913:18:13"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2913:18:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "diff",
																		"nodeType": "YulIdentifier",
																		"src": "2902:4:13"
																	},
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "2908:1:13"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "2899:2:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "2899:11:13"
															},
															"nodeType": "YulIf",
															"src": "2896:37:13"
														}
													]
												},
												"name": "checked_sub_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "2842:1:13",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "2845:1:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "diff",
														"nodeType": "YulTypedName",
														"src": "2851:4:13",
														"type": ""
													}
												],
												"src": "2811:128:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3118:169:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3135:9:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3146:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3128:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "3128:21:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3128:21:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3169:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3180:2:13",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3165:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3165:18:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3185:2:13",
																		"type": "",
																		"value": "19"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3158:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "3158:30:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3158:30:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3208:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3219:2:13",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3204:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3204:18:13"
																	},
																	{
																		"hexValue": "4e6f207265776172647320746f20636c61696d",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "3224:21:13",
																		"type": "",
																		"value": "No rewards to claim"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3197:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "3197:49:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3197:49:13"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3255:26:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3267:9:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3278:2:13",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3263:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "3263:18:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "3255:4:13"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_584cf1690fd4124c524340f65c2f0897ce34c8cad61c485ada0c89030473339d__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3095:9:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "3109:4:13",
														"type": ""
													}
												],
												"src": "2944:343:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3466:164:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3483:9:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3494:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3476:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "3476:21:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3476:21:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3517:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3528:2:13",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3513:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3513:18:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3533:2:13",
																		"type": "",
																		"value": "14"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3506:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "3506:30:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3506:30:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3556:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3567:2:13",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3552:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3552:18:13"
																	},
																	{
																		"hexValue": "4e6f7420617574686f72697a6564",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "3572:16:13",
																		"type": "",
																		"value": "Not authorized"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3545:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "3545:44:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3545:44:13"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3598:26:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3610:9:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3621:2:13",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3606:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "3606:18:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "3598:4:13"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_fac3bac318c0d00994f57b0f2f4c643c313072b71db2302bf4b900309cc50b36__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3443:9:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "3457:4:13",
														"type": ""
													}
												],
												"src": "3292:338:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3683:77:13",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3693:16:13",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "3704:1:13"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "3707:1:13"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3700:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "3700:9:13"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nodeType": "YulIdentifier",
																	"src": "3693:3:13"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3732:22:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "3734:16:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3734:18:13"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3734:18:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "3724:1:13"
																	},
																	{
																		"name": "sum",
																		"nodeType": "YulIdentifier",
																		"src": "3727:3:13"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "3721:2:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "3721:10:13"
															},
															"nodeType": "YulIf",
															"src": "3718:36:13"
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "3666:1:13",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "3669:1:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nodeType": "YulTypedName",
														"src": "3675:3:13",
														"type": ""
													}
												],
												"src": "3635:125:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3939:178:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3956:9:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3967:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3949:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "3949:21:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3949:21:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3990:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4001:2:13",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3986:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3986:18:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4006:2:13",
																		"type": "",
																		"value": "28"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3979:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "3979:30:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3979:30:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4029:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4040:2:13",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4025:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4025:18:13"
																	},
																	{
																		"hexValue": "43616e6e6f74207265636f766572207374616b696e6720746f6b656e",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "4045:30:13",
																		"type": "",
																		"value": "Cannot recover staking token"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4018:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "4018:58:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4018:58:13"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4085:26:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4097:9:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4108:2:13",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4093:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "4093:18:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "4085:4:13"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_f2260e3055faa792d924d265619c5330df351b382bad9f6027ac5a13b486d2d4__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3916:9:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "3930:4:13",
														"type": ""
													}
												],
												"src": "3765:352:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4203:103:13",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4249:16:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4258:1:13",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4261:1:13",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "4251:6:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4251:12:13"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4251:12:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "4224:7:13"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4233:9:13"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "4220:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4220:23:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4245:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "4216:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "4216:32:13"
															},
															"nodeType": "YulIf",
															"src": "4213:52:13"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4274:26:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4290:9:13"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "4284:5:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "4284:16:13"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "4274:6:13"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4169:9:13",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "4180:7:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "4192:6:13",
														"type": ""
													}
												],
												"src": "4122:184:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4485:223:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4502:9:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4513:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4495:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "4495:21:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4495:21:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4536:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4547:2:13",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4532:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4532:18:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4552:2:13",
																		"type": "",
																		"value": "33"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4525:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "4525:30:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4525:30:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4575:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4586:2:13",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4571:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4571:18:13"
																	},
																	{
																		"hexValue": "496e73756666696369656e74204441707020766f6c756d6520746f207374616b",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "4591:34:13",
																		"type": "",
																		"value": "Insufficient DApp volume to stak"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4564:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "4564:62:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4564:62:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4646:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4657:2:13",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4642:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4642:18:13"
																	},
																	{
																		"hexValue": "65",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "4662:3:13",
																		"type": "",
																		"value": "e"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4635:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "4635:31:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4635:31:13"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4675:27:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4687:9:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4698:3:13",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4683:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "4683:19:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "4675:4:13"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_648cd7d2c3c6138e60aa25ba2516146489ba1c539e5d2a1fbcb5aa65ada4b39e__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4462:9:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "4476:4:13",
														"type": ""
													}
												],
												"src": "4311:397:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4887:169:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4904:9:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4915:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4897:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "4897:21:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4897:21:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4938:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4949:2:13",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4934:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4934:18:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4954:2:13",
																		"type": "",
																		"value": "19"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4927:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "4927:30:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4927:30:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4977:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4988:2:13",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4973:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4973:18:13"
																	},
																	{
																		"hexValue": "4e6f7468696e6720746f207769746864726177",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "4993:21:13",
																		"type": "",
																		"value": "Nothing to withdraw"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4966:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "4966:49:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4966:49:13"
														},
														{
															"nodeType": "YulAssignment",
															"src": "5024:26:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5036:9:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5047:2:13",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5032:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "5032:18:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "5024:4:13"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_1b19ac089d87f4146c293e731799080c98f8ee751187f94356e96cb0c086a394__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4864:9:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "4878:4:13",
														"type": ""
													}
												],
												"src": "4713:343:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5235:181:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5252:9:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5263:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5245:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "5245:21:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5245:21:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5286:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5297:2:13",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5282:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5282:18:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5302:2:13",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5275:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "5275:30:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5275:30:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5325:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5336:2:13",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5321:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5321:18:13"
																	},
																	{
																		"hexValue": "5265656e7472616e637947756172643a207265656e7472616e742063616c6c",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "5341:33:13",
																		"type": "",
																		"value": "ReentrancyGuard: reentrant call"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5314:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "5314:61:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5314:61:13"
														},
														{
															"nodeType": "YulAssignment",
															"src": "5384:26:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5396:9:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5407:2:13",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5392:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "5392:18:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "5384:4:13"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5212:9:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "5226:4:13",
														"type": ""
													}
												],
												"src": "5061:355:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5550:145:13",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5560:26:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5572:9:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5583:2:13",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5568:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "5568:18:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "5560:4:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5602:9:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "5617:6:13"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "5633:3:13",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "5638:1:13",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nodeType": "YulIdentifier",
																							"src": "5629:3:13"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "5629:11:13"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "5642:1:13",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nodeType": "YulIdentifier",
																					"src": "5625:3:13"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "5625:19:13"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "5613:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5613:32:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5595:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "5595:51:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5595:51:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5666:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5677:2:13",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5662:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5662:18:13"
																	},
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "5682:6:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5655:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "5655:34:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5655:34:13"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5511:9:13",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "5522:6:13",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "5530:6:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "5541:4:13",
														"type": ""
													}
												],
												"src": "5421:274:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5857:218:13",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5867:26:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5879:9:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5890:2:13",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5875:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "5875:18:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "5867:4:13"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "5902:29:13",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5920:3:13",
																				"type": "",
																				"value": "160"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5925:1:13",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "5916:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5916:11:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5929:1:13",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "5912:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "5912:19:13"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "5906:2:13",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5947:9:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "5962:6:13"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "5970:2:13"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "5958:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5958:15:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5940:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "5940:34:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5940:34:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5994:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6005:2:13",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5990:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5990:18:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value1",
																				"nodeType": "YulIdentifier",
																				"src": "6014:6:13"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "6022:2:13"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "6010:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6010:15:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5983:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "5983:43:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5983:43:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6046:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6057:2:13",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6042:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6042:18:13"
																	},
																	{
																		"name": "value2",
																		"nodeType": "YulIdentifier",
																		"src": "6062:6:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6035:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "6035:34:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6035:34:13"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5810:9:13",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "5821:6:13",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "5829:6:13",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "5837:6:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "5848:4:13",
														"type": ""
													}
												],
												"src": "5700:375:13"
											}
										]
									},
									"contents": "{\n    { }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_decode_address(offset) -> value\n    {\n        value := calldataload(offset)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n    }\n    function abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, value0)\n        mstore(add(headStart, 32), value1)\n    }\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := calldataload(headStart)\n    }\n    function abi_encode_tuple_t_contract$_IERC20_$380__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := calldataload(add(headStart, 32))\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_encode_tuple_t_contract$_SwapPro_$2711__to_t_address_payable__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_encode_tuple_t_stringliteral_4c501aa39f818920bdbabc4e74fb2842a64ecd00cde0a748633014f4258571f4__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 31)\n        mstore(add(headStart, 64), \"Withdraw amount exceeds balance\")\n        tail := add(headStart, 96)\n    }\n    function panic_error_0x11()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n    function checked_mul_t_uint256(x, y) -> product\n    {\n        product := mul(x, y)\n        if iszero(or(iszero(x), eq(y, div(product, x)))) { panic_error_0x11() }\n    }\n    function checked_div_t_uint256(x, y) -> r\n    {\n        if iszero(y)\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x12)\n            revert(0, 0x24)\n        }\n        r := div(x, y)\n    }\n    function checked_sub_t_uint256(x, y) -> diff\n    {\n        diff := sub(x, y)\n        if gt(diff, x) { panic_error_0x11() }\n    }\n    function abi_encode_tuple_t_stringliteral_584cf1690fd4124c524340f65c2f0897ce34c8cad61c485ada0c89030473339d__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 19)\n        mstore(add(headStart, 64), \"No rewards to claim\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_fac3bac318c0d00994f57b0f2f4c643c313072b71db2302bf4b900309cc50b36__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 14)\n        mstore(add(headStart, 64), \"Not authorized\")\n        tail := add(headStart, 96)\n    }\n    function checked_add_t_uint256(x, y) -> sum\n    {\n        sum := add(x, y)\n        if gt(x, sum) { panic_error_0x11() }\n    }\n    function abi_encode_tuple_t_stringliteral_f2260e3055faa792d924d265619c5330df351b382bad9f6027ac5a13b486d2d4__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 28)\n        mstore(add(headStart, 64), \"Cannot recover staking token\")\n        tail := add(headStart, 96)\n    }\n    function abi_decode_tuple_t_uint256_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := mload(headStart)\n    }\n    function abi_encode_tuple_t_stringliteral_648cd7d2c3c6138e60aa25ba2516146489ba1c539e5d2a1fbcb5aa65ada4b39e__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 33)\n        mstore(add(headStart, 64), \"Insufficient DApp volume to stak\")\n        mstore(add(headStart, 96), \"e\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_1b19ac089d87f4146c293e731799080c98f8ee751187f94356e96cb0c086a394__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 19)\n        mstore(add(headStart, 64), \"Nothing to withdraw\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 31)\n        mstore(add(headStart, 64), \"ReentrancyGuard: reentrant call\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 32), value1)\n    }\n    function abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed(headStart, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 96)\n        let _1 := sub(shl(160, 1), 1)\n        mstore(headStart, and(value0, _1))\n        mstore(add(headStart, 32), and(value1, _1))\n        mstore(add(headStart, 64), value2)\n    }\n}",
									"id": 13,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {
								"1139": [
									{
										"length": 32,
										"start": 473
									},
									{
										"length": 32,
										"start": 1049
									},
									{
										"length": 32,
										"start": 1746
									},
									{
										"length": 32,
										"start": 2327
									},
									{
										"length": 32,
										"start": 2650
									}
								],
								"1142": [
									{
										"length": 32,
										"start": 664
									},
									{
										"length": 32,
										"start": 889
									},
									{
										"length": 32,
										"start": 1343
									},
									{
										"length": 32,
										"start": 2213
									}
								]
							},
							"linkReferences": {},
							"object": "608060405234801561000f575f80fd5b506004361061011c575f3560e01c806372f702f3116100a9578063b6b55f251161006e578063b6b55f2514610252578063db2e21bc14610265578063f2fde38b1461026d578063f40f0f5214610280578063f7c618c114610293575f80fd5b806372f702f3146101d4578063817b1cd2146102135780638980f11f1461021c5780638da5cb5b1461022f5780638ea830311461023f575f80fd5b80632f3c9a4f116100ef5780632f3c9a4f1461019f578063372500ab146101a85780633c6b16ab146101b0578063644f362d146101c3578063715018a6146101cc575f80fd5b80630e15561a146101205780631959a0021461013c5780632277d7e1146101775780632e1a7d4d1461018c575b5f80fd5b61012960065481565b6040519081526020015b60405180910390f35b61016261014a366004610d3c565b60046020525f90815260409020805460019091015482565b60408051928352602083019190915201610133565b61018a610185366004610d5c565b6102ba565b005b61018a61019a366004610d5c565b6102c7565b61012960055481565b61018a6104a4565b61018a6101be366004610d5c565b6105cd565b61012960075481565b61018a6106b7565b6101fb7f000000000000000000000000000000000000000000000000000000000000000081565b6040516001600160a01b039091168152602001610133565b61012960035481565b61018a61022a366004610d73565b6106c8565b5f546001600160a01b03166101fb565b6002546101fb906001600160a01b031681565b61018a610260366004610d5c565b61077a565b61018a6109d3565b61018a61027b366004610d3c565b610ab3565b61012961028e366004610d3c565b610aed565b6101fb7f000000000000000000000000000000000000000000000000000000000000000081565b6102c2610b3e565b600755565b6102cf610b6a565b335f90815260046020526040902080548211156103335760405162461bcd60e51b815260206004820152601f60248201527f576974686472617720616d6f756e7420657863656564732062616c616e63650060448201526064015b60405180910390fd5b5f816001015464e8d4a51000600554845f01546103509190610daf565b61035a9190610dcc565b6103649190610deb565b905080156103d6576103a06001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000163383610bc3565b60405181815233907f47cee97cb7acd717b3c0aa1435d004cd5b3c8c57d70dbceb4e4458bbd60e39d49060200160405180910390a25b82156104765782825f015f8282546103ee9190610deb565b925050819055508260035f8282546104069190610deb565b9091555061044090506001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000163385610bc3565b60405183815233907f884edad9ce6fa2440d8a54cc123490eb96d2768479d49ff9c7366125a94243649060200160405180910390a25b600554825464e8d4a510009161048b91610daf565b6104959190610dcc565b60019283015550805550565b50565b6104ac610b6a565b335f9081526004602052604081206001810154600554825492939264e8d4a51000916104d791610daf565b6104e19190610dcc565b6104eb9190610deb565b90505f81116105325760405162461bcd60e51b81526020600482015260136024820152724e6f207265776172647320746f20636c61696d60681b604482015260640161032a565b6105666001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000163383610bc3565b600554825464e8d4a510009161057b91610daf565b6105859190610dcc565b600183015560405181815233907f47cee97cb7acd717b3c0aa1435d004cd5b3c8c57d70dbceb4e4458bbd60e39d4906020015b60405180910390a250506105cb60018055565b565b6002546001600160a01b03163314806105ef57505f546001600160a01b031633145b61062c5760405162461bcd60e51b815260206004820152600e60248201526d139bdd08185d5d1a1bdc9a5e995960921b604482015260640161032a565b6003545f036106385750565b60035461064a8264e8d4a51000610daf565b6106549190610dcc565b60055f8282546106649190610dfe565b925050819055508060065f82825461067c9190610dfe565b90915550506040518181527fde88a922e0d3b88b24e9623efeb464919c6bf9f66857a65e2bfcf2ce87a9433d9060200160405180910390a150565b6106bf610b3e565b6105cb5f610c27565b6106d0610b3e565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316826001600160a01b0316036107515760405162461bcd60e51b815260206004820152601c60248201527f43616e6e6f74207265636f766572207374616b696e6720746f6b656e00000000604482015260640161032a565b6107766107655f546001600160a01b031690565b6001600160a01b0384169083610bc3565b5050565b610782610b6a565b6002546040516314ced3df60e31b81523360048201525f916001600160a01b03169063a6769ef890602401602060405180830381865afa1580156107c8573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906107ec9190610e11565b905060075481101561084a5760405162461bcd60e51b815260206004820152602160248201527f496e73756666696369656e74204441707020766f6c756d6520746f207374616b6044820152606560f81b606482015260840161032a565b335f908152600460205260409020805415610904575f816001015464e8d4a51000600554845f015461087c9190610daf565b6108869190610dcc565b6108909190610deb565b90508015610902576108cc6001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000163383610bc3565b60405181815233907f47cee97cb7acd717b3c0aa1435d004cd5b3c8c57d70dbceb4e4458bbd60e39d49060200160405180910390a25b505b821561096f5761093f6001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016333086610c76565b82815f015f8282546109519190610dfe565b925050819055508260035f8282546109699190610dfe565b90915550505b600554815464e8d4a510009161098491610daf565b61098e9190610dcc565b600182015560405183815233907fe1fffcc4923d04b559f4d29a8bfc6cda04eb5b0d3c460751c2402c5c5cc9109c9060200160405180910390a250506104a160018055565b6109db610b6a565b335f908152600460205260409020805480610a2e5760405162461bcd60e51b81526020600482015260136024820152724e6f7468696e6720746f20776974686472617760681b604482015260640161032a565b8060035f828254610a3f9190610deb565b90915550505f8083556001830155610a816001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000163383610bc3565b60405181815233907f884edad9ce6fa2440d8a54cc123490eb96d2768479d49ff9c7366125a9424364906020016105b8565b610abb610b3e565b6001600160a01b038116610ae457604051631e4fbdf760e01b81525f600482015260240161032a565b6104a181610c27565b6001600160a01b0381165f9081526004602052604081206001810154600554825484929164e8d4a5100091610b229190610daf565b610b2c9190610dcc565b610b369190610deb565b949350505050565b5f546001600160a01b031633146105cb5760405163118cdaa760e01b815233600482015260240161032a565b600260015403610bbc5760405162461bcd60e51b815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c00604482015260640161032a565b6002600155565b6040516001600160a01b03838116602483015260448201839052610c2291859182169063a9059cbb906064015b604051602081830303815290604052915060e01b6020820180516001600160e01b038381831617835250505050610cb5565b505050565b5f80546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6040516001600160a01b038481166024830152838116604483015260648201839052610caf9186918216906323b872dd90608401610bf0565b50505050565b5f8060205f8451602086015f885af180610cd4576040513d5f823e3d81fd5b50505f513d91508115610ceb578060011415610cf8565b6001600160a01b0384163b155b15610caf57604051635274afe760e01b81526001600160a01b038516600482015260240161032a565b80356001600160a01b0381168114610d37575f80fd5b919050565b5f60208284031215610d4c575f80fd5b610d5582610d21565b9392505050565b5f60208284031215610d6c575f80fd5b5035919050565b5f8060408385031215610d84575f80fd5b610d8d83610d21565b946020939093013593505050565b634e487b7160e01b5f52601160045260245ffd5b8082028115828204841417610dc657610dc6610d9b565b92915050565b5f82610de657634e487b7160e01b5f52601260045260245ffd5b500490565b81810381811115610dc657610dc6610d9b565b80820180821115610dc657610dc6610d9b565b5f60208284031215610e21575f80fd5b505191905056fea264697066735822122073a50a5456ec59df7e185f848fbb6b7fb5c43ef413c8980cbbc3f7ddb42098fb64736f6c63430008140033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x11C JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x72F702F3 GT PUSH2 0xA9 JUMPI DUP1 PUSH4 0xB6B55F25 GT PUSH2 0x6E JUMPI DUP1 PUSH4 0xB6B55F25 EQ PUSH2 0x252 JUMPI DUP1 PUSH4 0xDB2E21BC EQ PUSH2 0x265 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x26D JUMPI DUP1 PUSH4 0xF40F0F52 EQ PUSH2 0x280 JUMPI DUP1 PUSH4 0xF7C618C1 EQ PUSH2 0x293 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x72F702F3 EQ PUSH2 0x1D4 JUMPI DUP1 PUSH4 0x817B1CD2 EQ PUSH2 0x213 JUMPI DUP1 PUSH4 0x8980F11F EQ PUSH2 0x21C JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x22F JUMPI DUP1 PUSH4 0x8EA83031 EQ PUSH2 0x23F JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x2F3C9A4F GT PUSH2 0xEF JUMPI DUP1 PUSH4 0x2F3C9A4F EQ PUSH2 0x19F JUMPI DUP1 PUSH4 0x372500AB EQ PUSH2 0x1A8 JUMPI DUP1 PUSH4 0x3C6B16AB EQ PUSH2 0x1B0 JUMPI DUP1 PUSH4 0x644F362D EQ PUSH2 0x1C3 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x1CC JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0xE15561A EQ PUSH2 0x120 JUMPI DUP1 PUSH4 0x1959A002 EQ PUSH2 0x13C JUMPI DUP1 PUSH4 0x2277D7E1 EQ PUSH2 0x177 JUMPI DUP1 PUSH4 0x2E1A7D4D EQ PUSH2 0x18C JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x129 PUSH1 0x6 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x162 PUSH2 0x14A CALLDATASIZE PUSH1 0x4 PUSH2 0xD3C JUMP JUMPDEST PUSH1 0x4 PUSH1 0x20 MSTORE PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 SWAP1 SWAP2 ADD SLOAD DUP3 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP3 DUP4 MSTORE PUSH1 0x20 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE ADD PUSH2 0x133 JUMP JUMPDEST PUSH2 0x18A PUSH2 0x185 CALLDATASIZE PUSH1 0x4 PUSH2 0xD5C JUMP JUMPDEST PUSH2 0x2BA JUMP JUMPDEST STOP JUMPDEST PUSH2 0x18A PUSH2 0x19A CALLDATASIZE PUSH1 0x4 PUSH2 0xD5C JUMP JUMPDEST PUSH2 0x2C7 JUMP JUMPDEST PUSH2 0x129 PUSH1 0x5 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x18A PUSH2 0x4A4 JUMP JUMPDEST PUSH2 0x18A PUSH2 0x1BE CALLDATASIZE PUSH1 0x4 PUSH2 0xD5C JUMP JUMPDEST PUSH2 0x5CD JUMP JUMPDEST PUSH2 0x129 PUSH1 0x7 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x18A PUSH2 0x6B7 JUMP JUMPDEST PUSH2 0x1FB PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x133 JUMP JUMPDEST PUSH2 0x129 PUSH1 0x3 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x18A PUSH2 0x22A CALLDATASIZE PUSH1 0x4 PUSH2 0xD73 JUMP JUMPDEST PUSH2 0x6C8 JUMP JUMPDEST PUSH0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x1FB JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH2 0x1FB SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH2 0x18A PUSH2 0x260 CALLDATASIZE PUSH1 0x4 PUSH2 0xD5C JUMP JUMPDEST PUSH2 0x77A JUMP JUMPDEST PUSH2 0x18A PUSH2 0x9D3 JUMP JUMPDEST PUSH2 0x18A PUSH2 0x27B CALLDATASIZE PUSH1 0x4 PUSH2 0xD3C JUMP JUMPDEST PUSH2 0xAB3 JUMP JUMPDEST PUSH2 0x129 PUSH2 0x28E CALLDATASIZE PUSH1 0x4 PUSH2 0xD3C JUMP JUMPDEST PUSH2 0xAED JUMP JUMPDEST PUSH2 0x1FB PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH2 0x2C2 PUSH2 0xB3E JUMP JUMPDEST PUSH1 0x7 SSTORE JUMP JUMPDEST PUSH2 0x2CF PUSH2 0xB6A JUMP JUMPDEST CALLER PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD DUP3 GT ISZERO PUSH2 0x333 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x576974686472617720616D6F756E7420657863656564732062616C616E636500 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 DUP2 PUSH1 0x1 ADD SLOAD PUSH5 0xE8D4A51000 PUSH1 0x5 SLOAD DUP5 PUSH0 ADD SLOAD PUSH2 0x350 SWAP2 SWAP1 PUSH2 0xDAF JUMP JUMPDEST PUSH2 0x35A SWAP2 SWAP1 PUSH2 0xDCC JUMP JUMPDEST PUSH2 0x364 SWAP2 SWAP1 PUSH2 0xDEB JUMP JUMPDEST SWAP1 POP DUP1 ISZERO PUSH2 0x3D6 JUMPI PUSH2 0x3A0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND CALLER DUP4 PUSH2 0xBC3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP2 DUP2 MSTORE CALLER SWAP1 PUSH32 0x47CEE97CB7ACD717B3C0AA1435D004CD5B3C8C57D70DBCEB4E4458BBD60E39D4 SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 JUMPDEST DUP3 ISZERO PUSH2 0x476 JUMPI DUP3 DUP3 PUSH0 ADD PUSH0 DUP3 DUP3 SLOAD PUSH2 0x3EE SWAP2 SWAP1 PUSH2 0xDEB JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP3 PUSH1 0x3 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x406 SWAP2 SWAP1 PUSH2 0xDEB JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP PUSH2 0x440 SWAP1 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND CALLER DUP6 PUSH2 0xBC3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP4 DUP2 MSTORE CALLER SWAP1 PUSH32 0x884EDAD9CE6FA2440D8A54CC123490EB96D2768479D49FF9C7366125A9424364 SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 JUMPDEST PUSH1 0x5 SLOAD DUP3 SLOAD PUSH5 0xE8D4A51000 SWAP2 PUSH2 0x48B SWAP2 PUSH2 0xDAF JUMP JUMPDEST PUSH2 0x495 SWAP2 SWAP1 PUSH2 0xDCC JUMP JUMPDEST PUSH1 0x1 SWAP3 DUP4 ADD SSTORE POP DUP1 SSTORE POP JUMP JUMPDEST POP JUMP JUMPDEST PUSH2 0x4AC PUSH2 0xB6A JUMP JUMPDEST CALLER PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 PUSH1 0x1 DUP2 ADD SLOAD PUSH1 0x5 SLOAD DUP3 SLOAD SWAP3 SWAP4 SWAP3 PUSH5 0xE8D4A51000 SWAP2 PUSH2 0x4D7 SWAP2 PUSH2 0xDAF JUMP JUMPDEST PUSH2 0x4E1 SWAP2 SWAP1 PUSH2 0xDCC JUMP JUMPDEST PUSH2 0x4EB SWAP2 SWAP1 PUSH2 0xDEB JUMP JUMPDEST SWAP1 POP PUSH0 DUP2 GT PUSH2 0x532 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x13 PUSH1 0x24 DUP3 ADD MSTORE PUSH19 0x4E6F207265776172647320746F20636C61696D PUSH1 0x68 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x32A JUMP JUMPDEST PUSH2 0x566 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND CALLER DUP4 PUSH2 0xBC3 JUMP JUMPDEST PUSH1 0x5 SLOAD DUP3 SLOAD PUSH5 0xE8D4A51000 SWAP2 PUSH2 0x57B SWAP2 PUSH2 0xDAF JUMP JUMPDEST PUSH2 0x585 SWAP2 SWAP1 PUSH2 0xDCC JUMP JUMPDEST PUSH1 0x1 DUP4 ADD SSTORE PUSH1 0x40 MLOAD DUP2 DUP2 MSTORE CALLER SWAP1 PUSH32 0x47CEE97CB7ACD717B3C0AA1435D004CD5B3C8C57D70DBCEB4E4458BBD60E39D4 SWAP1 PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP PUSH2 0x5CB PUSH1 0x1 DUP1 SSTORE JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ DUP1 PUSH2 0x5EF JUMPI POP PUSH0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ JUMPDEST PUSH2 0x62C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xE PUSH1 0x24 DUP3 ADD MSTORE PUSH14 0x139BDD08185D5D1A1BDC9A5E9959 PUSH1 0x92 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x32A JUMP JUMPDEST PUSH1 0x3 SLOAD PUSH0 SUB PUSH2 0x638 JUMPI POP JUMP JUMPDEST PUSH1 0x3 SLOAD PUSH2 0x64A DUP3 PUSH5 0xE8D4A51000 PUSH2 0xDAF JUMP JUMPDEST PUSH2 0x654 SWAP2 SWAP1 PUSH2 0xDCC JUMP JUMPDEST PUSH1 0x5 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x664 SWAP2 SWAP1 PUSH2 0xDFE JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP1 PUSH1 0x6 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x67C SWAP2 SWAP1 PUSH2 0xDFE JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x40 MLOAD DUP2 DUP2 MSTORE PUSH32 0xDE88A922E0D3B88B24E9623EFEB464919C6BF9F66857A65E2BFCF2CE87A9433D SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP JUMP JUMPDEST PUSH2 0x6BF PUSH2 0xB3E JUMP JUMPDEST PUSH2 0x5CB PUSH0 PUSH2 0xC27 JUMP JUMPDEST PUSH2 0x6D0 PUSH2 0xB3E JUMP JUMPDEST PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SUB PUSH2 0x751 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1C PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x43616E6E6F74207265636F766572207374616B696E6720746F6B656E00000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x32A JUMP JUMPDEST PUSH2 0x776 PUSH2 0x765 PUSH0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND SWAP1 DUP4 PUSH2 0xBC3 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH2 0x782 PUSH2 0xB6A JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH1 0x40 MLOAD PUSH4 0x14CED3DF PUSH1 0xE3 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH0 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH4 0xA6769EF8 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x7C8 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x7EC SWAP2 SWAP1 PUSH2 0xE11 JUMP JUMPDEST SWAP1 POP PUSH1 0x7 SLOAD DUP2 LT ISZERO PUSH2 0x84A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x21 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E73756666696369656E74204441707020766F6C756D6520746F207374616B PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x65 PUSH1 0xF8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x32A JUMP JUMPDEST CALLER PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD ISZERO PUSH2 0x904 JUMPI PUSH0 DUP2 PUSH1 0x1 ADD SLOAD PUSH5 0xE8D4A51000 PUSH1 0x5 SLOAD DUP5 PUSH0 ADD SLOAD PUSH2 0x87C SWAP2 SWAP1 PUSH2 0xDAF JUMP JUMPDEST PUSH2 0x886 SWAP2 SWAP1 PUSH2 0xDCC JUMP JUMPDEST PUSH2 0x890 SWAP2 SWAP1 PUSH2 0xDEB JUMP JUMPDEST SWAP1 POP DUP1 ISZERO PUSH2 0x902 JUMPI PUSH2 0x8CC PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND CALLER DUP4 PUSH2 0xBC3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP2 DUP2 MSTORE CALLER SWAP1 PUSH32 0x47CEE97CB7ACD717B3C0AA1435D004CD5B3C8C57D70DBCEB4E4458BBD60E39D4 SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 JUMPDEST POP JUMPDEST DUP3 ISZERO PUSH2 0x96F JUMPI PUSH2 0x93F PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND CALLER ADDRESS DUP7 PUSH2 0xC76 JUMP JUMPDEST DUP3 DUP2 PUSH0 ADD PUSH0 DUP3 DUP3 SLOAD PUSH2 0x951 SWAP2 SWAP1 PUSH2 0xDFE JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP3 PUSH1 0x3 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x969 SWAP2 SWAP1 PUSH2 0xDFE JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP JUMPDEST PUSH1 0x5 SLOAD DUP2 SLOAD PUSH5 0xE8D4A51000 SWAP2 PUSH2 0x984 SWAP2 PUSH2 0xDAF JUMP JUMPDEST PUSH2 0x98E SWAP2 SWAP1 PUSH2 0xDCC JUMP JUMPDEST PUSH1 0x1 DUP3 ADD SSTORE PUSH1 0x40 MLOAD DUP4 DUP2 MSTORE CALLER SWAP1 PUSH32 0xE1FFFCC4923D04B559F4D29A8BFC6CDA04EB5B0D3C460751C2402C5C5CC9109C SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP PUSH2 0x4A1 PUSH1 0x1 DUP1 SSTORE JUMP JUMPDEST PUSH2 0x9DB PUSH2 0xB6A JUMP JUMPDEST CALLER PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD DUP1 PUSH2 0xA2E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x13 PUSH1 0x24 DUP3 ADD MSTORE PUSH19 0x4E6F7468696E6720746F207769746864726177 PUSH1 0x68 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x32A JUMP JUMPDEST DUP1 PUSH1 0x3 PUSH0 DUP3 DUP3 SLOAD PUSH2 0xA3F SWAP2 SWAP1 PUSH2 0xDEB JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH0 DUP1 DUP4 SSTORE PUSH1 0x1 DUP4 ADD SSTORE PUSH2 0xA81 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND CALLER DUP4 PUSH2 0xBC3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP2 DUP2 MSTORE CALLER SWAP1 PUSH32 0x884EDAD9CE6FA2440D8A54CC123490EB96D2768479D49FF9C7366125A9424364 SWAP1 PUSH1 0x20 ADD PUSH2 0x5B8 JUMP JUMPDEST PUSH2 0xABB PUSH2 0xB3E JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0xAE4 JUMPI PUSH1 0x40 MLOAD PUSH4 0x1E4FBDF7 PUSH1 0xE0 SHL DUP2 MSTORE PUSH0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x32A JUMP JUMPDEST PUSH2 0x4A1 DUP2 PUSH2 0xC27 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 PUSH1 0x1 DUP2 ADD SLOAD PUSH1 0x5 SLOAD DUP3 SLOAD DUP5 SWAP3 SWAP2 PUSH5 0xE8D4A51000 SWAP2 PUSH2 0xB22 SWAP2 SWAP1 PUSH2 0xDAF JUMP JUMPDEST PUSH2 0xB2C SWAP2 SWAP1 PUSH2 0xDCC JUMP JUMPDEST PUSH2 0xB36 SWAP2 SWAP1 PUSH2 0xDEB JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x5CB JUMPI PUSH1 0x40 MLOAD PUSH4 0x118CDAA7 PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x32A JUMP JUMPDEST PUSH1 0x2 PUSH1 0x1 SLOAD SUB PUSH2 0xBBC JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5265656E7472616E637947756172643A207265656E7472616E742063616C6C00 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x32A JUMP JUMPDEST PUSH1 0x2 PUSH1 0x1 SSTORE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x24 DUP4 ADD MSTORE PUSH1 0x44 DUP3 ADD DUP4 SWAP1 MSTORE PUSH2 0xC22 SWAP2 DUP6 SWAP2 DUP3 AND SWAP1 PUSH4 0xA9059CBB SWAP1 PUSH1 0x64 ADD JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP2 POP PUSH1 0xE0 SHL PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB DUP4 DUP2 DUP4 AND OR DUP4 MSTORE POP POP POP POP PUSH2 0xCB5 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR DUP5 SSTORE PUSH1 0x40 MLOAD SWAP2 SWAP1 SWAP3 AND SWAP3 DUP4 SWAP2 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP2 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 DUP2 AND PUSH1 0x24 DUP4 ADD MSTORE DUP4 DUP2 AND PUSH1 0x44 DUP4 ADD MSTORE PUSH1 0x64 DUP3 ADD DUP4 SWAP1 MSTORE PUSH2 0xCAF SWAP2 DUP7 SWAP2 DUP3 AND SWAP1 PUSH4 0x23B872DD SWAP1 PUSH1 0x84 ADD PUSH2 0xBF0 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x20 PUSH0 DUP5 MLOAD PUSH1 0x20 DUP7 ADD PUSH0 DUP9 GAS CALL DUP1 PUSH2 0xCD4 JUMPI PUSH1 0x40 MLOAD RETURNDATASIZE PUSH0 DUP3 RETURNDATACOPY RETURNDATASIZE DUP2 REVERT JUMPDEST POP POP PUSH0 MLOAD RETURNDATASIZE SWAP2 POP DUP2 ISZERO PUSH2 0xCEB JUMPI DUP1 PUSH1 0x1 EQ ISZERO PUSH2 0xCF8 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND EXTCODESIZE ISZERO JUMPDEST ISZERO PUSH2 0xCAF JUMPI PUSH1 0x40 MLOAD PUSH4 0x5274AFE7 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x32A JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0xD37 JUMPI PUSH0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xD4C JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0xD55 DUP3 PUSH2 0xD21 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xD6C JUMPI PUSH0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xD84 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0xD8D DUP4 PUSH2 0xD21 JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST DUP1 DUP3 MUL DUP2 ISZERO DUP3 DUP3 DIV DUP5 EQ OR PUSH2 0xDC6 JUMPI PUSH2 0xDC6 PUSH2 0xD9B JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP3 PUSH2 0xDE6 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST POP DIV SWAP1 JUMP JUMPDEST DUP2 DUP2 SUB DUP2 DUP2 GT ISZERO PUSH2 0xDC6 JUMPI PUSH2 0xDC6 PUSH2 0xD9B JUMP JUMPDEST DUP1 DUP3 ADD DUP1 DUP3 GT ISZERO PUSH2 0xDC6 JUMPI PUSH2 0xDC6 PUSH2 0xD9B JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xE21 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP MLOAD SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH20 0xA50A5456EC59DF7E185F848FBB6B7FB5C43EF413 0xC8 SWAP9 0xC 0xBB 0xC3 0xF7 0xDD 0xB4 KECCAK256 SWAP9 0xFB PUSH5 0x736F6C6343 STOP ADDMOD EQ STOP CALLER ",
							"sourceMap": "301:5613:11:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1015:27;;;;;;;;;160:25:13;;;148:2;133:18;1015:27:11;;;;;;;;835:45;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;739:25:13;;;795:2;780:18;;773:34;;;;712:18;835:45:11;565:248:13;5464:129:11;;;;;;:::i;:::-;;:::i;:::-;;3655:788;;;;;;:::i;:::-;;:::i;940:32::-;;;;;;4507:417;;;:::i;1911:429::-;;;;;;:::i;:::-;;:::i;1098:36::-;;;;;;2293:101:0;;;:::i;639:36:11:-;;;;;;;;-1:-1:-1;;;;;1181:32:13;;;1163:51;;1151:2;1136:18;639:36:11;1003:217:13;754:26:11;;;;;;5664:247;;;;;;:::i;:::-;;:::i;1638:85:0:-;1684:7;1710:6;-1:-1:-1;;;;;1710:6:0;1638:85;;430:27:11;;;;;-1:-1:-1;;;;;430:27:11;;;2674:942;;;;;;:::i;:::-;;:::i;5007:394::-;;;:::i;2543:215:0:-;;;;;;:::i;:::-;;:::i;2405:240:11:-;;;;;;:::i;:::-;;:::i;682:35::-;;;;;5464:129;1531:13:0;:11;:13::i;:::-;5551:21:11::1;:34:::0;5464:129::o;3655:788::-;2261:21:4;:19;:21::i;:::-;3756:10:11::1;3723:21;3747:20:::0;;;:8:::1;:20;::::0;;;;3786:11;;:22;-1:-1:-1;3786:22:11::1;3778:66;;;::::0;-1:-1:-1;;;3778:66:11;;2126:2:13;3778:66:11::1;::::0;::::1;2108:21:13::0;2165:2;2145:18;;;2138:30;2204:33;2184:18;;;2177:61;2255:18;;3778:66:11::1;;;;;;;;;3918:15;3979:4;:15;;;3972:4;3951:17;;3937:4;:11;;;:31;;;;:::i;:::-;3936:40;;;;:::i;:::-;:58;;;;:::i;:::-;3918:76:::0;-1:-1:-1;4009:11:11;;4005:135:::1;;4037:45;-1:-1:-1::0;;;;;4037:11:11::1;:24;4062:10;4074:7:::0;4037:24:::1;:45::i;:::-;4102:26;::::0;160:25:13;;;4108:10:11::1;::::0;4102:26:::1;::::0;148:2:13;133:18;4102:26:11::1;;;;;;;4005:135;4156:11:::0;;4152:213:::1;;4199:7;4184:4;:11;;;:22;;;;;;;:::i;:::-;;;;;;;;4236:7;4221:11;;:22;;;;;;;:::i;:::-;::::0;;;-1:-1:-1;4258:46:11::1;::::0;-1:-1:-1;;;;;;4258:12:11::1;:25;4284:10;4296:7:::0;4258:25:::1;:46::i;:::-;4324:29;::::0;160:25:13;;;4333:10:11::1;::::0;4324:29:::1;::::0;148:2:13;133:18;4324:29:11::1;;;;;;;4152:213;4410:17;::::0;4396:11;;4431:4:::1;::::0;4396:31:::1;::::0;::::1;:::i;:::-;4395:40;;;;:::i;:::-;4377:15;::::0;;::::1;:58:::0;-1:-1:-1;2809:22:4;;3655:788:11;:::o;2303:20:4:-;3655:788:11;:::o;4507:417::-;2261:21:4;:19;:21::i;:::-;4597:10:11::1;4564:21;4588:20:::0;;;:8:::1;:20;::::0;;;;4680:15:::1;::::0;::::1;::::0;4652:17:::1;::::0;4638:11;;4588:20;;4564:21;4673:4:::1;::::0;4638:31:::1;::::0;::::1;:::i;:::-;4637:40;;;;:::i;:::-;:58;;;;:::i;:::-;4619:76;;4724:1;4714:7;:11;4706:43;;;::::0;-1:-1:-1;;;4706:43:11;;3146:2:13;4706:43:11::1;::::0;::::1;3128:21:13::0;3185:2;3165:18;;;3158:30;-1:-1:-1;;;3204:18:13;;;3197:49;3263:18;;4706:43:11::1;2944:343:13::0;4706:43:11::1;4760:45;-1:-1:-1::0;;;;;4760:11:11::1;:24;4785:10;4797:7:::0;4760:24:::1;:45::i;:::-;4849:17;::::0;4835:11;;4870:4:::1;::::0;4835:31:::1;::::0;::::1;:::i;:::-;4834:40;;;;:::i;:::-;4816:15;::::0;::::1;:58:::0;4890:26:::1;::::0;160:25:13;;;4896:10:11::1;::::0;4890:26:::1;::::0;148:2:13;133:18;4890:26:11::1;;;;;;;;4553:371;;2303:20:4::0;1716:1;2809:22;;2629:209;2303:20;4507:417:11:o;1911:429::-;2005:12;;-1:-1:-1;;;;;2005:12:11;1983:10;:35;;:60;;-1:-1:-1;1684:7:0;1710:6;-1:-1:-1;;;;;1710:6:0;2022:10:11;:21;1983:60;1975:87;;;;-1:-1:-1;;;1975:87:11;;3494:2:13;1975:87:11;;;3476:21:13;3533:2;3513:18;;;3506:30;-1:-1:-1;;;3552:18:13;;;3545:44;3606:18;;1975:87:11;3292:338:13;1975:87:11;2077:11;;2092:1;2077:16;2073:94;;1911:429;:::o;2073:94::-;2253:11;;2236:13;:6;2245:4;2236:13;:::i;:::-;2235:29;;;;:::i;:::-;2214:17;;:50;;;;;;;:::i;:::-;;;;;;;;2291:6;2275:12;;:22;;;;;;;:::i;:::-;;;;-1:-1:-1;;2313:19:11;;160:25:13;;;2313:19:11;;148:2:13;133:18;2313:19:11;;;;;;;1911:429;:::o;2293:101:0:-;1531:13;:11;:13::i;:::-;2357:30:::1;2384:1;2357:18;:30::i;5664:247:11:-:0;1531:13:0;:11;:13::i;:::-;5791:12:11::1;-1:-1:-1::0;;;;;5767:37:11::1;:12;-1:-1:-1::0;;;;;5767:37:11::1;::::0;5759:78:::1;;;::::0;-1:-1:-1;;;5759:78:11;;3967:2:13;5759:78:11::1;::::0;::::1;3949:21:13::0;4006:2;3986:18;;;3979:30;4045;4025:18;;;4018:58;4093:18;;5759:78:11::1;3765:352:13::0;5759:78:11::1;5848:55;5882:7;1684::0::0;1710:6;-1:-1:-1;;;;;1710:6:0;;1638:85;5882:7:11::1;-1:-1:-1::0;;;;;5848:33:11;::::1;::::0;5891:11;5848:33:::1;:55::i;:::-;5664:247:::0;;:::o;2674:942::-;2261:21:4;:19;:21::i;:::-;2759:12:11::1;::::0;:35:::1;::::0;-1:-1:-1;;;2759:35:11;;2783:10:::1;2759:35;::::0;::::1;1163:51:13::0;2741:15:11::1;::::0;-1:-1:-1;;;;;2759:12:11::1;::::0;:23:::1;::::0;1136:18:13;;2759:35:11::1;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2741:53;;2824:21;;2813:7;:32;;2805:78;;;::::0;-1:-1:-1;;;2805:78:11;;4513:2:13;2805:78:11::1;::::0;::::1;4495:21:13::0;4552:2;4532:18;;;4525:30;4591:34;4571:18;;;4564:62;-1:-1:-1;;;4642:18:13;;;4635:31;4683:19;;2805:78:11::1;4311:397:13::0;2805:78:11::1;2929:10;2896:21;2920:20:::0;;;:8:::1;:20;::::0;;;;3018:11;;:15;3014:285:::1;;3050:15;3111:4;:15;;;3104:4;3083:17;;3069:4;:11;;;:31;;;;:::i;:::-;3068:40;;;;:::i;:::-;:58;;;;:::i;:::-;3050:76:::0;-1:-1:-1;3145:11:11;;3141:147:::1;;3177:45;-1:-1:-1::0;;;;;3177:11:11::1;:24;3202:10;3214:7:::0;3177:24:::1;:45::i;:::-;3246:26;::::0;160:25:13;;;3252:10:11::1;::::0;3246:26:::1;::::0;148:2:13;133:18;3246:26:11::1;;;;;;;3141:147;3035:264;3014:285;3315:11:::0;;3311:183:::1;;3343:65;-1:-1:-1::0;;;;;3343:12:11::1;:29;3373:10;3393:4;3400:7:::0;3343:29:::1;:65::i;:::-;3438:7;3423:4;:11;;;:22;;;;;;;:::i;:::-;;;;;;;;3475:7;3460:11;;:22;;;;;;;:::i;:::-;::::0;;;-1:-1:-1;;3311:183:11::1;3539:17;::::0;3525:11;;3560:4:::1;::::0;3525:31:::1;::::0;::::1;:::i;:::-;3524:40;;;;:::i;:::-;3506:15;::::0;::::1;:58:::0;3580:28:::1;::::0;160:25:13;;;3588:10:11::1;::::0;3580:28:::1;::::0;148:2:13;133:18;3580:28:11::1;;;;;;;2730:886;;2303:20:4::0;1716:1;2809:22;;2629:209;5007:394:11;2261:21:4;:19;:21::i;:::-;5102:10:11::1;5069:21;5093:20:::0;;;:8:::1;:20;::::0;;;;5141:11;;5171:10;5163:42:::1;;;::::0;-1:-1:-1;;;5163:42:11;;4915:2:13;5163:42:11::1;::::0;::::1;4897:21:13::0;4954:2;4934:18;;;4927:30;-1:-1:-1;;;4973:18:13;;;4966:49;5032:18;;5163:42:11::1;4713:343:13::0;5163:42:11::1;5231:6;5216:11;;:21;;;;;;;:::i;:::-;::::0;;;-1:-1:-1;;5262:1:11::1;5248:15:::0;;;5274::::1;::::0;::::1;:19:::0;5304:45:::1;-1:-1:-1::0;;;;;5304:12:11::1;:25;5330:10;5342:6:::0;5304:25:::1;:45::i;:::-;5365:28;::::0;160:25:13;;;5374:10:11::1;::::0;5365:28:::1;::::0;148:2:13;133:18;5365:28:11::1;14:177:13::0;2543:215:0;1531:13;:11;:13::i;:::-;-1:-1:-1;;;;;2627:22:0;::::1;2623:91;;2672:31;::::0;-1:-1:-1;;;2672:31:0;;2700:1:::1;2672:31;::::0;::::1;1163:51:13::0;1136:18;;2672:31:0::1;1003:217:13::0;2623:91:0::1;2723:28;2742:8;2723:18;:28::i;2405:240:11:-:0;-1:-1:-1;;;;;2510:15:11;;2466:7;2510:15;;;:8;:15;;;;;2597;;;;2569:17;;2555:11;;2466:7;;2597:15;2590:4;;2555:31;;2569:17;2555:31;:::i;:::-;2554:40;;;;:::i;:::-;:58;;;;:::i;:::-;2536:76;2405:240;-1:-1:-1;;;;2405:240:11:o;1796:162:0:-;1684:7;1710:6;-1:-1:-1;;;;;1710:6:0;735:10:8;1855:23:0;1851:101;;1901:40;;-1:-1:-1;;;1901:40:0;;735:10:8;1901:40:0;;;1163:51:13;1136:18;;1901:40:0;1003:217:13;2336:287:4;1759:1;2468:7;;:19;2460:63;;;;-1:-1:-1;;;2460:63:4;;5263:2:13;2460:63:4;;;5245:21:13;5302:2;5282:18;;;5275:30;5341:33;5321:18;;;5314:61;5392:18;;2460:63:4;5061:355:13;2460:63:4;1759:1;2598:7;:18;2336:287::o;1271:160:6:-;1380:43;;-1:-1:-1;;;;;5613:32:13;;;1380:43:6;;;5595:51:13;5662:18;;;5655:34;;;1353:71:6;;1373:5;;1395:14;;;;;5568:18:13;;1380:43:6;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;1380:43:6;;;;;;;;;;;1353:19;:71::i;:::-;1271:160;;;:::o;2912:187:0:-;2985:16;3004:6;;-1:-1:-1;;;;;3020:17:0;;;-1:-1:-1;;;;;;3020:17:0;;;;;;3052:40;;3004:6;;;;;;;3052:40;;2985:16;3052:40;2975:124;2912:187;:::o;1670:188:6:-;1797:53;;-1:-1:-1;;;;;5958:15:13;;;1797:53:6;;;5940:34:13;6010:15;;;5990:18;;;5983:43;6042:18;;;6035:34;;;1770:81:6;;1790:5;;1812:18;;;;;5875::13;;1797:53:6;5700:375:13;1770:81:6;1670:188;;;;:::o;7738:720::-;7818:18;7846:19;7984:4;7981:1;7974:4;7968:11;7961:4;7955;7951:15;7948:1;7941:5;7934;7929:60;8041:7;8031:176;;8085:4;8079:11;8130:16;8127:1;8122:3;8107:40;8176:16;8171:3;8164:29;8031:176;-1:-1:-1;;8284:1:6;8278:8;8234:16;;-1:-1:-1;8310:15:6;;:68;;8362:11;8377:1;8362:16;;8310:68;;;-1:-1:-1;;;;;8328:26:6;;;:31;8310:68;8306:146;;;8401:40;;-1:-1:-1;;;8401:40:6;;-1:-1:-1;;;;;1181:32:13;;8401:40:6;;;1163:51:13;1136:18;;8401:40:6;1003:217:13;196:173;264:20;;-1:-1:-1;;;;;313:31:13;;303:42;;293:70;;359:1;356;349:12;293:70;196:173;;;:::o;374:186::-;433:6;486:2;474:9;465:7;461:23;457:32;454:52;;;502:1;499;492:12;454:52;525:29;544:9;525:29;:::i;:::-;515:39;374:186;-1:-1:-1;;;374:186:13:o;818:180::-;877:6;930:2;918:9;909:7;905:23;901:32;898:52;;;946:1;943;936:12;898:52;-1:-1:-1;969:23:13;;818:180;-1:-1:-1;818:180:13:o;1225:254::-;1293:6;1301;1354:2;1342:9;1333:7;1329:23;1325:32;1322:52;;;1370:1;1367;1360:12;1322:52;1393:29;1412:9;1393:29;:::i;:::-;1383:39;1469:2;1454:18;;;;1441:32;;-1:-1:-1;;;1225:254:13:o;2284:127::-;2345:10;2340:3;2336:20;2333:1;2326:31;2376:4;2373:1;2366:15;2400:4;2397:1;2390:15;2416:168;2489:9;;;2520;;2537:15;;;2531:22;;2517:37;2507:71;;2558:18;;:::i;:::-;2416:168;;;;:::o;2589:217::-;2629:1;2655;2645:132;;2699:10;2694:3;2690:20;2687:1;2680:31;2734:4;2731:1;2724:15;2762:4;2759:1;2752:15;2645:132;-1:-1:-1;2791:9:13;;2589:217::o;2811:128::-;2878:9;;;2899:11;;;2896:37;;;2913:18;;:::i;3635:125::-;3700:9;;;3721:10;;;3718:36;;;3734:18;;:::i;4122:184::-;4192:6;4245:2;4233:9;4224:7;4220:23;4216:32;4213:52;;;4261:1;4258;4251:12;4213:52;-1:-1:-1;4284:16:13;;4122:184;-1:-1:-1;4122:184:13:o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "735600",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"accTokensPerShare()": "2306",
								"claimRewards()": "infinite",
								"deposit(uint256)": "infinite",
								"emergencyWithdraw()": "infinite",
								"minimumVolumeRequired()": "2372",
								"notifyRewardAmount(uint256)": "infinite",
								"owner()": "2418",
								"pendingReward(address)": "infinite",
								"recoverERC20(address,uint256)": "infinite",
								"renounceOwnership()": "infinite",
								"rewardToken()": "infinite",
								"stakingToken()": "infinite",
								"swapContract()": "2447",
								"totalRewards()": "2307",
								"totalStaked()": "2328",
								"transferOwnership(address)": "28395",
								"updateMinimumVolumeRequired(uint256)": "24553",
								"userInfo(address)": "4701",
								"withdraw(uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 301,
									"end": 5914,
									"name": "PUSH",
									"source": 11,
									"value": "C0"
								},
								{
									"begin": 301,
									"end": 5914,
									"name": "PUSH",
									"source": 11,
									"value": "40"
								},
								{
									"begin": 301,
									"end": 5914,
									"name": "MSTORE",
									"source": 11
								},
								{
									"begin": 1385,
									"end": 1832,
									"name": "CALLVALUE",
									"source": 11
								},
								{
									"begin": 1385,
									"end": 1832,
									"name": "DUP1",
									"source": 11
								},
								{
									"begin": 1385,
									"end": 1832,
									"name": "ISZERO",
									"source": 11
								},
								{
									"begin": 1385,
									"end": 1832,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "1"
								},
								{
									"begin": 1385,
									"end": 1832,
									"name": "JUMPI",
									"source": 11
								},
								{
									"begin": 1385,
									"end": 1832,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 1385,
									"end": 1832,
									"name": "DUP1",
									"source": 11
								},
								{
									"begin": 1385,
									"end": 1832,
									"name": "REVERT",
									"source": 11
								},
								{
									"begin": 1385,
									"end": 1832,
									"name": "tag",
									"source": 11,
									"value": "1"
								},
								{
									"begin": 1385,
									"end": 1832,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 1385,
									"end": 1832,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 1385,
									"end": 1832,
									"name": "PUSH",
									"source": 11,
									"value": "40"
								},
								{
									"begin": 1385,
									"end": 1832,
									"name": "MLOAD",
									"source": 11
								},
								{
									"begin": 1385,
									"end": 1832,
									"name": "PUSHSIZE",
									"source": 11
								},
								{
									"begin": 1385,
									"end": 1832,
									"name": "CODESIZE",
									"source": 11
								},
								{
									"begin": 1385,
									"end": 1832,
									"name": "SUB",
									"source": 11
								},
								{
									"begin": 1385,
									"end": 1832,
									"name": "DUP1",
									"source": 11
								},
								{
									"begin": 1385,
									"end": 1832,
									"name": "PUSHSIZE",
									"source": 11
								},
								{
									"begin": 1385,
									"end": 1832,
									"name": "DUP4",
									"source": 11
								},
								{
									"begin": 1385,
									"end": 1832,
									"name": "CODECOPY",
									"source": 11
								},
								{
									"begin": 1385,
									"end": 1832,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 1385,
									"end": 1832,
									"name": "ADD",
									"source": 11
								},
								{
									"begin": 1385,
									"end": 1832,
									"name": "PUSH",
									"source": 11,
									"value": "40"
								},
								{
									"begin": 1385,
									"end": 1832,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 1385,
									"end": 1832,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 1385,
									"end": 1832,
									"name": "MSTORE",
									"source": 11
								},
								{
									"begin": 1385,
									"end": 1832,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "2"
								},
								{
									"begin": 1385,
									"end": 1832,
									"name": "SWAP2",
									"source": 11
								},
								{
									"begin": 1385,
									"end": 1832,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "3"
								},
								{
									"begin": 1385,
									"end": 1832,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 1385,
									"end": 1832,
									"name": "tag",
									"source": 11,
									"value": "2"
								},
								{
									"begin": 1385,
									"end": 1832,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 1525,
									"end": 1535,
									"name": "CALLER",
									"source": 11
								},
								{
									"begin": 1525,
									"end": 1535,
									"name": "DUP1",
									"source": 11
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "8"
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1E4FBDF7"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 1350,
									"end": 1351,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 755,
									"end": 806,
									"name": "MSTORE",
									"source": 13
								},
								{
									"begin": 728,
									"end": 746,
									"name": "PUSH",
									"source": 13,
									"value": "24"
								},
								{
									"begin": 728,
									"end": 746,
									"name": "ADD",
									"source": 13
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "tag",
									"source": 0,
									"value": "8"
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "11"
								},
								{
									"begin": 1392,
									"end": 1404,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1391,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "12"
								},
								{
									"begin": 1373,
									"end": 1405,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "tag",
									"source": 0,
									"value": "11"
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 1716,
									"end": 1717,
									"name": "PUSH",
									"source": 4,
									"value": "1"
								},
								{
									"begin": 1821,
									"end": 1843,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 1821,
									"end": 1843,
									"name": "SSTORE",
									"source": 4
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 1595,
									"end": 1631,
									"name": "SWAP3",
									"source": 11
								},
								{
									"begin": 1595,
									"end": 1631,
									"name": "DUP4",
									"source": 11
								},
								{
									"begin": 1595,
									"end": 1631,
									"modifierDepth": 1,
									"name": "AND",
									"source": 11
								},
								{
									"begin": 1595,
									"end": 1631,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 11,
									"value": "80"
								},
								{
									"begin": 1595,
									"end": 1631,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 1595,
									"end": 1631,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 1595,
									"end": 1631,
									"name": "MSTORE",
									"source": 11
								},
								{
									"begin": 1642,
									"end": 1677,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 11,
									"value": "A0"
								},
								{
									"begin": 1642,
									"end": 1677,
									"name": "MSTORE",
									"source": 11
								},
								{
									"begin": 1730,
									"end": 1742,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 11,
									"value": "2"
								},
								{
									"begin": 1730,
									"end": 1767,
									"name": "DUP1",
									"source": 11
								},
								{
									"begin": 1730,
									"end": 1767,
									"name": "SLOAD",
									"source": 11
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 1730,
									"end": 1767,
									"modifierDepth": 1,
									"name": "AND",
									"source": 11
								},
								{
									"begin": 1730,
									"end": 1767,
									"name": "SWAP3",
									"source": 11
								},
								{
									"begin": 1730,
									"end": 1767,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 1730,
									"end": 1767,
									"name": "SWAP4",
									"source": 11
								},
								{
									"begin": 1730,
									"end": 1767,
									"modifierDepth": 1,
									"name": "AND",
									"source": 11
								},
								{
									"begin": 1730,
									"end": 1767,
									"name": "SWAP2",
									"source": 11
								},
								{
									"begin": 1730,
									"end": 1767,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 1730,
									"end": 1767,
									"name": "SWAP2",
									"source": 11
								},
								{
									"begin": 1730,
									"end": 1767,
									"modifierDepth": 1,
									"name": "OR",
									"source": 11
								},
								{
									"begin": 1730,
									"end": 1767,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 1730,
									"end": 1767,
									"name": "SWAP2",
									"source": 11
								},
								{
									"begin": 1730,
									"end": 1767,
									"name": "SSTORE",
									"source": 11
								},
								{
									"begin": 1778,
									"end": 1799,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 11,
									"value": "7"
								},
								{
									"begin": 1778,
									"end": 1824,
									"name": "SSTORE",
									"source": 11
								},
								{
									"begin": 301,
									"end": 5914,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "18"
								},
								{
									"begin": 301,
									"end": 5914,
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 2912,
									"end": 3099,
									"name": "tag",
									"source": 0,
									"value": "12"
								},
								{
									"begin": 2912,
									"end": 3099,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 2985,
									"end": 3001,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "AND",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "DUP5",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SWAP3",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SWAP3",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 0,
									"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 2985,
									"end": 3001,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "LOG3",
									"source": 0
								},
								{
									"begin": 2975,
									"end": 3099,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2912,
									"end": 3099,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2912,
									"end": 3099,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 14,
									"end": 145,
									"name": "tag",
									"source": 13,
									"value": "17"
								},
								{
									"begin": 14,
									"end": 145,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 89,
									"end": 120,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 89,
									"end": 120,
									"name": "AND",
									"source": 13
								},
								{
									"begin": 79,
									"end": 121,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 79,
									"end": 121,
									"name": "EQ",
									"source": 13
								},
								{
									"begin": 69,
									"end": 139,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "20"
								},
								{
									"begin": 69,
									"end": 139,
									"name": "JUMPI",
									"source": 13
								},
								{
									"begin": 135,
									"end": 136,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 132,
									"end": 133,
									"name": "DUP1",
									"source": 13
								},
								{
									"begin": 125,
									"end": 137,
									"name": "REVERT",
									"source": 13
								},
								{
									"begin": 69,
									"end": 139,
									"name": "tag",
									"source": 13,
									"value": "20"
								},
								{
									"begin": 69,
									"end": 139,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 14,
									"end": 145,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 14,
									"end": 145,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 150,
									"end": 604,
									"name": "tag",
									"source": 13,
									"value": "3"
								},
								{
									"begin": 150,
									"end": 604,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 246,
									"end": 252,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 254,
									"end": 260,
									"name": "DUP1",
									"source": 13
								},
								{
									"begin": 262,
									"end": 268,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 315,
									"end": 317,
									"name": "PUSH",
									"source": 13,
									"value": "60"
								},
								{
									"begin": 303,
									"end": 312,
									"name": "DUP5",
									"source": 13
								},
								{
									"begin": 294,
									"end": 301,
									"name": "DUP7",
									"source": 13
								},
								{
									"begin": 290,
									"end": 313,
									"name": "SUB",
									"source": 13
								},
								{
									"begin": 286,
									"end": 318,
									"name": "SLT",
									"source": 13
								},
								{
									"begin": 283,
									"end": 335,
									"name": "ISZERO",
									"source": 13
								},
								{
									"begin": 283,
									"end": 335,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "22"
								},
								{
									"begin": 283,
									"end": 335,
									"name": "JUMPI",
									"source": 13
								},
								{
									"begin": 331,
									"end": 332,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 328,
									"end": 329,
									"name": "DUP1",
									"source": 13
								},
								{
									"begin": 321,
									"end": 333,
									"name": "REVERT",
									"source": 13
								},
								{
									"begin": 283,
									"end": 335,
									"name": "tag",
									"source": 13,
									"value": "22"
								},
								{
									"begin": 283,
									"end": 335,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 363,
									"end": 372,
									"name": "DUP4",
									"source": 13
								},
								{
									"begin": 357,
									"end": 373,
									"name": "MLOAD",
									"source": 13
								},
								{
									"begin": 382,
									"end": 413,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "23"
								},
								{
									"begin": 407,
									"end": 412,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 382,
									"end": 413,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "17"
								},
								{
									"begin": 382,
									"end": 413,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 382,
									"end": 413,
									"name": "tag",
									"source": 13,
									"value": "23"
								},
								{
									"begin": 382,
									"end": 413,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 482,
									"end": 484,
									"name": "PUSH",
									"source": 13,
									"value": "20"
								},
								{
									"begin": 467,
									"end": 485,
									"name": "DUP6",
									"source": 13
								},
								{
									"begin": 467,
									"end": 485,
									"name": "ADD",
									"source": 13
								},
								{
									"begin": 461,
									"end": 486,
									"name": "MLOAD",
									"source": 13
								},
								{
									"begin": 432,
									"end": 437,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 432,
									"end": 437,
									"name": "SWAP4",
									"source": 13
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 495,
									"end": 528,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "24"
								},
								{
									"begin": 461,
									"end": 486,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 495,
									"end": 528,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "17"
								},
								{
									"begin": 495,
									"end": 528,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 495,
									"end": 528,
									"name": "tag",
									"source": 13,
									"value": "24"
								},
								{
									"begin": 495,
									"end": 528,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 547,
									"end": 554,
									"name": "DUP1",
									"source": 13
								},
								{
									"begin": 537,
									"end": 554,
									"name": "SWAP3",
									"source": 13
								},
								{
									"begin": 537,
									"end": 554,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 537,
									"end": 554,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 594,
									"end": 596,
									"name": "PUSH",
									"source": 13,
									"value": "40"
								},
								{
									"begin": 583,
									"end": 592,
									"name": "DUP5",
									"source": 13
								},
								{
									"begin": 579,
									"end": 597,
									"name": "ADD",
									"source": 13
								},
								{
									"begin": 573,
									"end": 598,
									"name": "MLOAD",
									"source": 13
								},
								{
									"begin": 563,
									"end": 598,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 563,
									"end": 598,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 150,
									"end": 604,
									"name": "SWAP3",
									"source": 13
								},
								{
									"begin": 150,
									"end": 604,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 150,
									"end": 604,
									"name": "SWAP3",
									"source": 13
								},
								{
									"begin": 150,
									"end": 604,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 150,
									"end": 604,
									"name": "SWAP3",
									"source": 13
								},
								{
									"begin": 150,
									"end": 604,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 609,
									"end": 812,
									"name": "tag",
									"source": 13,
									"value": "18"
								},
								{
									"begin": 609,
									"end": 812,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 301,
									"end": 5914,
									"name": "PUSH",
									"source": 11,
									"value": "80"
								},
								{
									"begin": 301,
									"end": 5914,
									"name": "MLOAD",
									"source": 11
								},
								{
									"begin": 301,
									"end": 5914,
									"name": "PUSH",
									"source": 11,
									"value": "A0"
								},
								{
									"begin": 301,
									"end": 5914,
									"name": "MLOAD",
									"source": 11
								},
								{
									"begin": 301,
									"end": 5914,
									"name": "PUSH #[$]",
									"source": 11,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 301,
									"end": 5914,
									"name": "PUSH [$]",
									"source": 11,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 301,
									"end": 5914,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 301,
									"end": 5914,
									"name": "CODECOPY",
									"source": 11
								},
								{
									"begin": 301,
									"end": 5914,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 301,
									"end": 5914,
									"name": "ASSIGNIMMUTABLE",
									"source": 11,
									"value": "1142"
								},
								{
									"begin": 301,
									"end": 5914,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 301,
									"end": 5914,
									"name": "ASSIGNIMMUTABLE",
									"source": 11,
									"value": "1139"
								},
								{
									"begin": 301,
									"end": 5914,
									"name": "PUSH #[$]",
									"source": 11,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 301,
									"end": 5914,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 301,
									"end": 5914,
									"name": "RETURN",
									"source": 11
								}
							],
							".data": {
								"0": {
									".auxdata": "a264697066735822122073a50a5456ec59df7e185f848fbb6b7fb5c43ef413c8980cbbc3f7ddb42098fb64736f6c63430008140033",
									".code": [
										{
											"begin": 301,
											"end": 5914,
											"name": "PUSH",
											"source": 11,
											"value": "80"
										},
										{
											"begin": 301,
											"end": 5914,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 301,
											"end": 5914,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 301,
											"end": 5914,
											"name": "CALLVALUE",
											"source": 11
										},
										{
											"begin": 301,
											"end": 5914,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 301,
											"end": 5914,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 301,
											"end": 5914,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "1"
										},
										{
											"begin": 301,
											"end": 5914,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 301,
											"end": 5914,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 301,
											"end": 5914,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 301,
											"end": 5914,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 301,
											"end": 5914,
											"name": "tag",
											"source": 11,
											"value": "1"
										},
										{
											"begin": 301,
											"end": 5914,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 301,
											"end": 5914,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 301,
											"end": 5914,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 301,
											"end": 5914,
											"name": "CALLDATASIZE",
											"source": 11
										},
										{
											"begin": 301,
											"end": 5914,
											"name": "LT",
											"source": 11
										},
										{
											"begin": 301,
											"end": 5914,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "2"
										},
										{
											"begin": 301,
											"end": 5914,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 301,
											"end": 5914,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 301,
											"end": 5914,
											"name": "CALLDATALOAD",
											"source": 11
										},
										{
											"begin": 301,
											"end": 5914,
											"name": "PUSH",
											"source": 11,
											"value": "E0"
										},
										{
											"begin": 301,
											"end": 5914,
											"name": "SHR",
											"source": 11
										},
										{
											"begin": 301,
											"end": 5914,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 301,
											"end": 5914,
											"name": "PUSH",
											"source": 11,
											"value": "72F702F3"
										},
										{
											"begin": 301,
											"end": 5914,
											"name": "GT",
											"source": 11
										},
										{
											"begin": 301,
											"end": 5914,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "22"
										},
										{
											"begin": 301,
											"end": 5914,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 301,
											"end": 5914,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 301,
											"end": 5914,
											"name": "PUSH",
											"source": 11,
											"value": "B6B55F25"
										},
										{
											"begin": 301,
											"end": 5914,
											"name": "GT",
											"source": 11
										},
										{
											"begin": 301,
											"end": 5914,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "23"
										},
										{
											"begin": 301,
											"end": 5914,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 301,
											"end": 5914,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 301,
											"end": 5914,
											"name": "PUSH",
											"source": 11,
											"value": "B6B55F25"
										},
										{
											"begin": 301,
											"end": 5914,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 301,
											"end": 5914,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "17"
										},
										{
											"begin": 301,
											"end": 5914,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 301,
											"end": 5914,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 301,
											"end": 5914,
											"name": "PUSH",
											"source": 11,
											"value": "DB2E21BC"
										},
										{
											"begin": 301,
											"end": 5914,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 301,
											"end": 5914,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "18"
										},
										{
											"begin": 301,
											"end": 5914,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 301,
											"end": 5914,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 301,
											"end": 5914,
											"name": "PUSH",
											"source": 11,
											"value": "F2FDE38B"
										},
										{
											"begin": 301,
											"end": 5914,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 301,
											"end": 5914,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "19"
										},
										{
											"begin": 301,
											"end": 5914,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 301,
											"end": 5914,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 301,
											"end": 5914,
											"name": "PUSH",
											"source": 11,
											"value": "F40F0F52"
										},
										{
											"begin": 301,
											"end": 5914,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 301,
											"end": 5914,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 301,
											"end": 5914,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 301,
											"end": 5914,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 301,
											"end": 5914,
											"name": "PUSH",
											"source": 11,
											"value": "F7C618C1"
										},
										{
											"begin": 301,
											"end": 5914,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 301,
											"end": 5914,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "21"
										},
										{
											"begin": 301,
											"end": 5914,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 301,
											"end": 5914,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 301,
											"end": 5914,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 301,
											"end": 5914,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 301,
											"end": 5914,
											"name": "tag",
											"source": 11,
											"value": "23"
										},
										{
											"begin": 301,
											"end": 5914,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 301,
											"end": 5914,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 301,
											"end": 5914,
											"name": "PUSH",
											"source": 11,
											"value": "72F702F3"
										},
										{
											"begin": 301,
											"end": 5914,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 301,
											"end": 5914,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "12"
										},
										{
											"begin": 301,
											"end": 5914,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 301,
											"end": 5914,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 301,
											"end": 5914,
											"name": "PUSH",
											"source": 11,
											"value": "817B1CD2"
										},
										{
											"begin": 301,
											"end": 5914,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 301,
											"end": 5914,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "13"
										},
										{
											"begin": 301,
											"end": 5914,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 301,
											"end": 5914,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 301,
											"end": 5914,
											"name": "PUSH",
											"source": 11,
											"value": "8980F11F"
										},
										{
											"begin": 301,
											"end": 5914,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 301,
											"end": 5914,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "14"
										},
										{
											"begin": 301,
											"end": 5914,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 301,
											"end": 5914,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 301,
											"end": 5914,
											"name": "PUSH",
											"source": 11,
											"value": "8DA5CB5B"
										},
										{
											"begin": 301,
											"end": 5914,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 301,
											"end": 5914,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "15"
										},
										{
											"begin": 301,
											"end": 5914,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 301,
											"end": 5914,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 301,
											"end": 5914,
											"name": "PUSH",
											"source": 11,
											"value": "8EA83031"
										},
										{
											"begin": 301,
											"end": 5914,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 301,
											"end": 5914,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "16"
										},
										{
											"begin": 301,
											"end": 5914,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 301,
											"end": 5914,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 301,
											"end": 5914,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 301,
											"end": 5914,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 301,
											"end": 5914,
											"name": "tag",
											"source": 11,
											"value": "22"
										},
										{
											"begin": 301,
											"end": 5914,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 301,
											"end": 5914,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 301,
											"end": 5914,
											"name": "PUSH",
											"source": 11,
											"value": "2F3C9A4F"
										},
										{
											"begin": 301,
											"end": 5914,
											"name": "GT",
											"source": 11
										},
										{
											"begin": 301,
											"end": 5914,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "24"
										},
										{
											"begin": 301,
											"end": 5914,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 301,
											"end": 5914,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 301,
											"end": 5914,
											"name": "PUSH",
											"source": 11,
											"value": "2F3C9A4F"
										},
										{
											"begin": 301,
											"end": 5914,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 301,
											"end": 5914,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "7"
										},
										{
											"begin": 301,
											"end": 5914,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 301,
											"end": 5914,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 301,
											"end": 5914,
											"name": "PUSH",
											"source": 11,
											"value": "372500AB"
										},
										{
											"begin": 301,
											"end": 5914,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 301,
											"end": 5914,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "8"
										},
										{
											"begin": 301,
											"end": 5914,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 301,
											"end": 5914,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 301,
											"end": 5914,
											"name": "PUSH",
											"source": 11,
											"value": "3C6B16AB"
										},
										{
											"begin": 301,
											"end": 5914,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 301,
											"end": 5914,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "9"
										},
										{
											"begin": 301,
											"end": 5914,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 301,
											"end": 5914,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 301,
											"end": 5914,
											"name": "PUSH",
											"source": 11,
											"value": "644F362D"
										},
										{
											"begin": 301,
											"end": 5914,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 301,
											"end": 5914,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "10"
										},
										{
											"begin": 301,
											"end": 5914,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 301,
											"end": 5914,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 301,
											"end": 5914,
											"name": "PUSH",
											"source": 11,
											"value": "715018A6"
										},
										{
											"begin": 301,
											"end": 5914,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 301,
											"end": 5914,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "11"
										},
										{
											"begin": 301,
											"end": 5914,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 301,
											"end": 5914,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 301,
											"end": 5914,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 301,
											"end": 5914,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 301,
											"end": 5914,
											"name": "tag",
											"source": 11,
											"value": "24"
										},
										{
											"begin": 301,
											"end": 5914,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 301,
											"end": 5914,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 301,
											"end": 5914,
											"name": "PUSH",
											"source": 11,
											"value": "E15561A"
										},
										{
											"begin": 301,
											"end": 5914,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 301,
											"end": 5914,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "3"
										},
										{
											"begin": 301,
											"end": 5914,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 301,
											"end": 5914,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 301,
											"end": 5914,
											"name": "PUSH",
											"source": 11,
											"value": "1959A002"
										},
										{
											"begin": 301,
											"end": 5914,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 301,
											"end": 5914,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 301,
											"end": 5914,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 301,
											"end": 5914,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 301,
											"end": 5914,
											"name": "PUSH",
											"source": 11,
											"value": "2277D7E1"
										},
										{
											"begin": 301,
											"end": 5914,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 301,
											"end": 5914,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "5"
										},
										{
											"begin": 301,
											"end": 5914,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 301,
											"end": 5914,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 301,
											"end": 5914,
											"name": "PUSH",
											"source": 11,
											"value": "2E1A7D4D"
										},
										{
											"begin": 301,
											"end": 5914,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 301,
											"end": 5914,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "6"
										},
										{
											"begin": 301,
											"end": 5914,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 301,
											"end": 5914,
											"name": "tag",
											"source": 11,
											"value": "2"
										},
										{
											"begin": 301,
											"end": 5914,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 301,
											"end": 5914,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 301,
											"end": 5914,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 301,
											"end": 5914,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 1015,
											"end": 1042,
											"name": "tag",
											"source": 11,
											"value": "3"
										},
										{
											"begin": 1015,
											"end": 1042,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1015,
											"end": 1042,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "25"
										},
										{
											"begin": 1015,
											"end": 1042,
											"name": "PUSH",
											"source": 11,
											"value": "6"
										},
										{
											"begin": 1015,
											"end": 1042,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 1015,
											"end": 1042,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 1015,
											"end": 1042,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 1015,
											"end": 1042,
											"name": "tag",
											"source": 11,
											"value": "25"
										},
										{
											"begin": 1015,
											"end": 1042,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1015,
											"end": 1042,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 1015,
											"end": 1042,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 160,
											"end": 185,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 160,
											"end": 185,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 160,
											"end": 185,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 148,
											"end": 150,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 133,
											"end": 151,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 1015,
											"end": 1042,
											"name": "tag",
											"source": 11,
											"value": "27"
										},
										{
											"begin": 1015,
											"end": 1042,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1015,
											"end": 1042,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 1015,
											"end": 1042,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 1015,
											"end": 1042,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 1015,
											"end": 1042,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 1015,
											"end": 1042,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 1015,
											"end": 1042,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1015,
											"end": 1042,
											"name": "RETURN",
											"source": 11
										},
										{
											"begin": 835,
											"end": 880,
											"name": "tag",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 835,
											"end": 880,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 835,
											"end": 880,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "29"
										},
										{
											"begin": 835,
											"end": 880,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "30"
										},
										{
											"begin": 835,
											"end": 880,
											"name": "CALLDATASIZE",
											"source": 11
										},
										{
											"begin": 835,
											"end": 880,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 835,
											"end": 880,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "31"
										},
										{
											"begin": 835,
											"end": 880,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 835,
											"end": 880,
											"name": "tag",
											"source": 11,
											"value": "30"
										},
										{
											"begin": 835,
											"end": 880,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 835,
											"end": 880,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 835,
											"end": 880,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 835,
											"end": 880,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 835,
											"end": 880,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 835,
											"end": 880,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 835,
											"end": 880,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 835,
											"end": 880,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 835,
											"end": 880,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 835,
											"end": 880,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 835,
											"end": 880,
											"name": "KECCAK256",
											"source": 11
										},
										{
											"begin": 835,
											"end": 880,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 835,
											"end": 880,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 835,
											"end": 880,
											"name": "PUSH",
											"source": 11,
											"value": "1"
										},
										{
											"begin": 835,
											"end": 880,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 835,
											"end": 880,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 835,
											"end": 880,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 835,
											"end": 880,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 835,
											"end": 880,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 835,
											"end": 880,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 835,
											"end": 880,
											"name": "tag",
											"source": 11,
											"value": "29"
										},
										{
											"begin": 835,
											"end": 880,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 835,
											"end": 880,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 835,
											"end": 880,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 835,
											"end": 880,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 739,
											"end": 764,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 739,
											"end": 764,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 739,
											"end": 764,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 795,
											"end": 797,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 780,
											"end": 798,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 780,
											"end": 798,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 773,
											"end": 807,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 773,
											"end": 807,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 773,
											"end": 807,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 773,
											"end": 807,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 712,
											"end": 730,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 835,
											"end": 880,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "27"
										},
										{
											"begin": 565,
											"end": 813,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 5464,
											"end": 5593,
											"name": "tag",
											"source": 11,
											"value": "5"
										},
										{
											"begin": 5464,
											"end": 5593,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 5464,
											"end": 5593,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "35"
										},
										{
											"begin": 5464,
											"end": 5593,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "36"
										},
										{
											"begin": 5464,
											"end": 5593,
											"name": "CALLDATASIZE",
											"source": 11
										},
										{
											"begin": 5464,
											"end": 5593,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 5464,
											"end": 5593,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "37"
										},
										{
											"begin": 5464,
											"end": 5593,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 5464,
											"end": 5593,
											"name": "tag",
											"source": 11,
											"value": "36"
										},
										{
											"begin": 5464,
											"end": 5593,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 5464,
											"end": 5593,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "38"
										},
										{
											"begin": 5464,
											"end": 5593,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 5464,
											"end": 5593,
											"name": "tag",
											"source": 11,
											"value": "35"
										},
										{
											"begin": 5464,
											"end": 5593,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 5464,
											"end": 5593,
											"name": "STOP",
											"source": 11
										},
										{
											"begin": 3655,
											"end": 4443,
											"name": "tag",
											"source": 11,
											"value": "6"
										},
										{
											"begin": 3655,
											"end": 4443,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3655,
											"end": 4443,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "35"
										},
										{
											"begin": 3655,
											"end": 4443,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 3655,
											"end": 4443,
											"name": "CALLDATASIZE",
											"source": 11
										},
										{
											"begin": 3655,
											"end": 4443,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 3655,
											"end": 4443,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "37"
										},
										{
											"begin": 3655,
											"end": 4443,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 3655,
											"end": 4443,
											"name": "tag",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 3655,
											"end": 4443,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3655,
											"end": 4443,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "41"
										},
										{
											"begin": 3655,
											"end": 4443,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 940,
											"end": 972,
											"name": "tag",
											"source": 11,
											"value": "7"
										},
										{
											"begin": 940,
											"end": 972,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 940,
											"end": 972,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "25"
										},
										{
											"begin": 940,
											"end": 972,
											"name": "PUSH",
											"source": 11,
											"value": "5"
										},
										{
											"begin": 940,
											"end": 972,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 940,
											"end": 972,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 940,
											"end": 972,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 4507,
											"end": 4924,
											"name": "tag",
											"source": 11,
											"value": "8"
										},
										{
											"begin": 4507,
											"end": 4924,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4507,
											"end": 4924,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "35"
										},
										{
											"begin": 4507,
											"end": 4924,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "46"
										},
										{
											"begin": 4507,
											"end": 4924,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 1911,
											"end": 2340,
											"name": "tag",
											"source": 11,
											"value": "9"
										},
										{
											"begin": 1911,
											"end": 2340,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1911,
											"end": 2340,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "35"
										},
										{
											"begin": 1911,
											"end": 2340,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "48"
										},
										{
											"begin": 1911,
											"end": 2340,
											"name": "CALLDATASIZE",
											"source": 11
										},
										{
											"begin": 1911,
											"end": 2340,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 1911,
											"end": 2340,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "37"
										},
										{
											"begin": 1911,
											"end": 2340,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 1911,
											"end": 2340,
											"name": "tag",
											"source": 11,
											"value": "48"
										},
										{
											"begin": 1911,
											"end": 2340,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1911,
											"end": 2340,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "49"
										},
										{
											"begin": 1911,
											"end": 2340,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 1098,
											"end": 1134,
											"name": "tag",
											"source": 11,
											"value": "10"
										},
										{
											"begin": 1098,
											"end": 1134,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1098,
											"end": 1134,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "25"
										},
										{
											"begin": 1098,
											"end": 1134,
											"name": "PUSH",
											"source": 11,
											"value": "7"
										},
										{
											"begin": 1098,
											"end": 1134,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 1098,
											"end": 1134,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 1098,
											"end": 1134,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "tag",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "35"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "54"
										},
										{
											"begin": 2293,
											"end": 2394,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 639,
											"end": 675,
											"name": "tag",
											"source": 11,
											"value": "12"
										},
										{
											"begin": 639,
											"end": 675,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 639,
											"end": 675,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "55"
										},
										{
											"begin": 639,
											"end": 675,
											"name": "PUSHIMMUTABLE",
											"source": 11,
											"value": "1139"
										},
										{
											"begin": 639,
											"end": 675,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 639,
											"end": 675,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 639,
											"end": 675,
											"name": "tag",
											"source": 11,
											"value": "55"
										},
										{
											"begin": 639,
											"end": 675,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 639,
											"end": 675,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 639,
											"end": 675,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1181,
											"end": 1213,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 1181,
											"end": 1213,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 1181,
											"end": 1213,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 1163,
											"end": 1214,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 1163,
											"end": 1214,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 1151,
											"end": 1153,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 1136,
											"end": 1154,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 639,
											"end": 675,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "27"
										},
										{
											"begin": 1003,
											"end": 1220,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 754,
											"end": 780,
											"name": "tag",
											"source": 11,
											"value": "13"
										},
										{
											"begin": 754,
											"end": 780,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 754,
											"end": 780,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "25"
										},
										{
											"begin": 754,
											"end": 780,
											"name": "PUSH",
											"source": 11,
											"value": "3"
										},
										{
											"begin": 754,
											"end": 780,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 754,
											"end": 780,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 754,
											"end": 780,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 5664,
											"end": 5911,
											"name": "tag",
											"source": 11,
											"value": "14"
										},
										{
											"begin": 5664,
											"end": 5911,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 5664,
											"end": 5911,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "35"
										},
										{
											"begin": 5664,
											"end": 5911,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "63"
										},
										{
											"begin": 5664,
											"end": 5911,
											"name": "CALLDATASIZE",
											"source": 11
										},
										{
											"begin": 5664,
											"end": 5911,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 5664,
											"end": 5911,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "64"
										},
										{
											"begin": 5664,
											"end": 5911,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 5664,
											"end": 5911,
											"name": "tag",
											"source": 11,
											"value": "63"
										},
										{
											"begin": 5664,
											"end": 5911,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 5664,
											"end": 5911,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "65"
										},
										{
											"begin": 5664,
											"end": 5911,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "tag",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1684,
											"end": 1691,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "55"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 430,
											"end": 457,
											"name": "tag",
											"source": 11,
											"value": "16"
										},
										{
											"begin": 430,
											"end": 457,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 430,
											"end": 457,
											"name": "PUSH",
											"source": 11,
											"value": "2"
										},
										{
											"begin": 430,
											"end": 457,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 430,
											"end": 457,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "55"
										},
										{
											"begin": 430,
											"end": 457,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 430,
											"end": 457,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 430,
											"end": 457,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 430,
											"end": 457,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 2674,
											"end": 3616,
											"name": "tag",
											"source": 11,
											"value": "17"
										},
										{
											"begin": 2674,
											"end": 3616,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2674,
											"end": 3616,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "35"
										},
										{
											"begin": 2674,
											"end": 3616,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "75"
										},
										{
											"begin": 2674,
											"end": 3616,
											"name": "CALLDATASIZE",
											"source": 11
										},
										{
											"begin": 2674,
											"end": 3616,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 2674,
											"end": 3616,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "37"
										},
										{
											"begin": 2674,
											"end": 3616,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 2674,
											"end": 3616,
											"name": "tag",
											"source": 11,
											"value": "75"
										},
										{
											"begin": 2674,
											"end": 3616,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2674,
											"end": 3616,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "76"
										},
										{
											"begin": 2674,
											"end": 3616,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 5007,
											"end": 5401,
											"name": "tag",
											"source": 11,
											"value": "18"
										},
										{
											"begin": 5007,
											"end": 5401,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 5007,
											"end": 5401,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "35"
										},
										{
											"begin": 5007,
											"end": 5401,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "78"
										},
										{
											"begin": 5007,
											"end": 5401,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "35"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "31"
										},
										{
											"begin": 2543,
											"end": 2758,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "81"
										},
										{
											"begin": 2543,
											"end": 2758,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2405,
											"end": 2645,
											"name": "tag",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 2405,
											"end": 2645,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2405,
											"end": 2645,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "25"
										},
										{
											"begin": 2405,
											"end": 2645,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "83"
										},
										{
											"begin": 2405,
											"end": 2645,
											"name": "CALLDATASIZE",
											"source": 11
										},
										{
											"begin": 2405,
											"end": 2645,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 2405,
											"end": 2645,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "31"
										},
										{
											"begin": 2405,
											"end": 2645,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 2405,
											"end": 2645,
											"name": "tag",
											"source": 11,
											"value": "83"
										},
										{
											"begin": 2405,
											"end": 2645,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2405,
											"end": 2645,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "84"
										},
										{
											"begin": 2405,
											"end": 2645,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 682,
											"end": 717,
											"name": "tag",
											"source": 11,
											"value": "21"
										},
										{
											"begin": 682,
											"end": 717,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 682,
											"end": 717,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "55"
										},
										{
											"begin": 682,
											"end": 717,
											"name": "PUSHIMMUTABLE",
											"source": 11,
											"value": "1142"
										},
										{
											"begin": 682,
											"end": 717,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 682,
											"end": 717,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 5464,
											"end": 5593,
											"name": "tag",
											"source": 11,
											"value": "38"
										},
										{
											"begin": 5464,
											"end": 5593,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "90"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "91"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "90"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5551,
											"end": 5572,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "7"
										},
										{
											"begin": 5551,
											"end": 5585,
											"name": "SSTORE",
											"source": 11
										},
										{
											"begin": 5464,
											"end": 5593,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 3655,
											"end": 4443,
											"name": "tag",
											"source": 11,
											"value": "41"
										},
										{
											"begin": 3655,
											"end": 4443,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2261,
											"end": 2282,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "94"
										},
										{
											"begin": 2261,
											"end": 2280,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "95"
										},
										{
											"begin": 2261,
											"end": 2282,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2261,
											"end": 2282,
											"name": "tag",
											"source": 4,
											"value": "94"
										},
										{
											"begin": 2261,
											"end": 2282,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3756,
											"end": 3766,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 11
										},
										{
											"begin": 3723,
											"end": 3744,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 3747,
											"end": 3767,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 3747,
											"end": 3767,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 3747,
											"end": 3767,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 3747,
											"end": 3755,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 3747,
											"end": 3767,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 3747,
											"end": 3767,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 3747,
											"end": 3767,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 3747,
											"end": 3767,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 3747,
											"end": 3767,
											"name": "KECCAK256",
											"source": 11
										},
										{
											"begin": 3786,
											"end": 3797,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 3786,
											"end": 3797,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 3786,
											"end": 3808,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "GT",
											"source": -1
										},
										{
											"begin": 3786,
											"end": 3808,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 3778,
											"end": 3844,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "97"
										},
										{
											"begin": 3778,
											"end": 3844,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 3778,
											"end": 3844,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 3778,
											"end": 3844,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3778,
											"end": 3844,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 3778,
											"end": 3844,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 2126,
											"end": 2128,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 3778,
											"end": 3844,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 3778,
											"end": 3844,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 3778,
											"end": 3844,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 2108,
											"end": 2129,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 2165,
											"end": 2167,
											"name": "PUSH",
											"source": 13,
											"value": "1F"
										},
										{
											"begin": 2145,
											"end": 2163,
											"name": "PUSH",
											"source": 13,
											"value": "24"
										},
										{
											"begin": 2145,
											"end": 2163,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 2145,
											"end": 2163,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 2138,
											"end": 2168,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 2204,
											"end": 2237,
											"name": "PUSH",
											"source": 13,
											"value": "576974686472617720616D6F756E7420657863656564732062616C616E636500"
										},
										{
											"begin": 2184,
											"end": 2202,
											"name": "PUSH",
											"source": 13,
											"value": "44"
										},
										{
											"begin": 2184,
											"end": 2202,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 2184,
											"end": 2202,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 2177,
											"end": 2238,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 2255,
											"end": 2273,
											"name": "PUSH",
											"source": 13,
											"value": "64"
										},
										{
											"begin": 2255,
											"end": 2273,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 3778,
											"end": 3844,
											"modifierDepth": 1,
											"name": "tag",
											"source": 11,
											"value": "98"
										},
										{
											"begin": 3778,
											"end": 3844,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3778,
											"end": 3844,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 3778,
											"end": 3844,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 3778,
											"end": 3844,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 3778,
											"end": 3844,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 3778,
											"end": 3844,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 3778,
											"end": 3844,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 3778,
											"end": 3844,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 3778,
											"end": 3844,
											"modifierDepth": 1,
											"name": "tag",
											"source": 11,
											"value": "97"
										},
										{
											"begin": 3778,
											"end": 3844,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3918,
											"end": 3933,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 3979,
											"end": 3983,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 3979,
											"end": 3994,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "1"
										},
										{
											"begin": 3979,
											"end": 3994,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 3979,
											"end": 3994,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 3972,
											"end": 3976,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "E8D4A51000"
										},
										{
											"begin": 3951,
											"end": 3968,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "5"
										},
										{
											"begin": 3951,
											"end": 3968,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 3937,
											"end": 3941,
											"modifierDepth": 1,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 3937,
											"end": 3948,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 3937,
											"end": 3948,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 3937,
											"end": 3948,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 3937,
											"end": 3968,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "100"
										},
										{
											"begin": 3937,
											"end": 3968,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 3937,
											"end": 3968,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 3937,
											"end": 3968,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "101"
										},
										{
											"begin": 3937,
											"end": 3968,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 3937,
											"end": 3968,
											"modifierDepth": 1,
											"name": "tag",
											"source": 11,
											"value": "100"
										},
										{
											"begin": 3937,
											"end": 3968,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3936,
											"end": 3976,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "102"
										},
										{
											"begin": 3936,
											"end": 3976,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 3936,
											"end": 3976,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 3936,
											"end": 3976,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "103"
										},
										{
											"begin": 3936,
											"end": 3976,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 3936,
											"end": 3976,
											"modifierDepth": 1,
											"name": "tag",
											"source": 11,
											"value": "102"
										},
										{
											"begin": 3936,
											"end": 3976,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3936,
											"end": 3994,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "104"
										},
										{
											"begin": 3936,
											"end": 3994,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 3936,
											"end": 3994,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 3936,
											"end": 3994,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "105"
										},
										{
											"begin": 3936,
											"end": 3994,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 3936,
											"end": 3994,
											"modifierDepth": 1,
											"name": "tag",
											"source": 11,
											"value": "104"
										},
										{
											"begin": 3936,
											"end": 3994,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3918,
											"end": 3994,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4009,
											"end": 4020,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 4009,
											"end": 4020,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 4005,
											"end": 4140,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "106"
										},
										{
											"begin": 4005,
											"end": 4140,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 4037,
											"end": 4082,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "107"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4037,
											"end": 4048,
											"modifierDepth": 1,
											"name": "PUSHIMMUTABLE",
											"source": 11,
											"value": "1142"
										},
										{
											"begin": 4037,
											"end": 4061,
											"modifierDepth": 1,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 4062,
											"end": 4072,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 11
										},
										{
											"begin": 4074,
											"end": 4081,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 4037,
											"end": 4061,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "108"
										},
										{
											"begin": 4037,
											"end": 4082,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 4037,
											"end": 4082,
											"modifierDepth": 1,
											"name": "tag",
											"source": 11,
											"value": "107"
										},
										{
											"begin": 4037,
											"end": 4082,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4102,
											"end": 4128,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 4102,
											"end": 4128,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 160,
											"end": 185,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 160,
											"end": 185,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 160,
											"end": 185,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 4108,
											"end": 4118,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 11
										},
										{
											"begin": 4108,
											"end": 4118,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 4102,
											"end": 4128,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "47CEE97CB7ACD717B3C0AA1435D004CD5B3C8C57D70DBCEB4E4458BBD60E39D4"
										},
										{
											"begin": 4102,
											"end": 4128,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 148,
											"end": 150,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 133,
											"end": 151,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 4102,
											"end": 4128,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 4102,
											"end": 4128,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 4102,
											"end": 4128,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 4102,
											"end": 4128,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 4102,
											"end": 4128,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 4102,
											"end": 4128,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 4102,
											"end": 4128,
											"modifierDepth": 1,
											"name": "LOG2",
											"source": 11
										},
										{
											"begin": 4005,
											"end": 4140,
											"modifierDepth": 1,
											"name": "tag",
											"source": 11,
											"value": "106"
										},
										{
											"begin": 4005,
											"end": 4140,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4156,
											"end": 4167,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 4156,
											"end": 4167,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 4152,
											"end": 4365,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "110"
										},
										{
											"begin": 4152,
											"end": 4365,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 4199,
											"end": 4206,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 4184,
											"end": 4188,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 4184,
											"end": 4195,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 4184,
											"end": 4195,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 4184,
											"end": 4195,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 4184,
											"end": 4206,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 4184,
											"end": 4206,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 4184,
											"end": 4206,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 4184,
											"end": 4206,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "111"
										},
										{
											"begin": 4184,
											"end": 4206,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 4184,
											"end": 4206,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 4184,
											"end": 4206,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "105"
										},
										{
											"begin": 4184,
											"end": 4206,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 4184,
											"end": 4206,
											"modifierDepth": 1,
											"name": "tag",
											"source": 11,
											"value": "111"
										},
										{
											"begin": 4184,
											"end": 4206,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4184,
											"end": 4206,
											"modifierDepth": 1,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 4184,
											"end": 4206,
											"modifierDepth": 1,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 4184,
											"end": 4206,
											"modifierDepth": 1,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 4184,
											"end": 4206,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 4184,
											"end": 4206,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 4184,
											"end": 4206,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 11
										},
										{
											"begin": 4184,
											"end": 4206,
											"modifierDepth": 1,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 4236,
											"end": 4243,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 4221,
											"end": 4232,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "3"
										},
										{
											"begin": 4221,
											"end": 4232,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 4221,
											"end": 4243,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 4221,
											"end": 4243,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 4221,
											"end": 4243,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 4221,
											"end": 4243,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "112"
										},
										{
											"begin": 4221,
											"end": 4243,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 4221,
											"end": 4243,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 4221,
											"end": 4243,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "105"
										},
										{
											"begin": 4221,
											"end": 4243,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 4221,
											"end": 4243,
											"modifierDepth": 1,
											"name": "tag",
											"source": 11,
											"value": "112"
										},
										{
											"begin": 4221,
											"end": 4243,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4221,
											"end": 4243,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 4221,
											"end": 4243,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 4221,
											"end": 4243,
											"name": "SSTORE",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4258,
											"end": 4304,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "113"
										},
										{
											"begin": 4258,
											"end": 4304,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4258,
											"end": 4270,
											"modifierDepth": 1,
											"name": "PUSHIMMUTABLE",
											"source": 11,
											"value": "1139"
										},
										{
											"begin": 4258,
											"end": 4283,
											"modifierDepth": 1,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 4284,
											"end": 4294,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 11
										},
										{
											"begin": 4296,
											"end": 4303,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 4258,
											"end": 4283,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "108"
										},
										{
											"begin": 4258,
											"end": 4304,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 4258,
											"end": 4304,
											"modifierDepth": 1,
											"name": "tag",
											"source": 11,
											"value": "113"
										},
										{
											"begin": 4258,
											"end": 4304,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4324,
											"end": 4353,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 4324,
											"end": 4353,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 160,
											"end": 185,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 160,
											"end": 185,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 160,
											"end": 185,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 4333,
											"end": 4343,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 11
										},
										{
											"begin": 4333,
											"end": 4343,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 4324,
											"end": 4353,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "884EDAD9CE6FA2440D8A54CC123490EB96D2768479D49FF9C7366125A9424364"
										},
										{
											"begin": 4324,
											"end": 4353,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 148,
											"end": 150,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 133,
											"end": 151,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 4324,
											"end": 4353,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 4324,
											"end": 4353,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 4324,
											"end": 4353,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 4324,
											"end": 4353,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 4324,
											"end": 4353,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 4324,
											"end": 4353,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 4324,
											"end": 4353,
											"modifierDepth": 1,
											"name": "LOG2",
											"source": 11
										},
										{
											"begin": 4152,
											"end": 4365,
											"modifierDepth": 1,
											"name": "tag",
											"source": 11,
											"value": "110"
										},
										{
											"begin": 4152,
											"end": 4365,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4410,
											"end": 4427,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "5"
										},
										{
											"begin": 4410,
											"end": 4427,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 4396,
											"end": 4407,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 4396,
											"end": 4407,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 4431,
											"end": 4435,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "E8D4A51000"
										},
										{
											"begin": 4431,
											"end": 4435,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 4396,
											"end": 4427,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "115"
										},
										{
											"begin": 4396,
											"end": 4427,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 4396,
											"end": 4427,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "101"
										},
										{
											"begin": 4396,
											"end": 4427,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 4396,
											"end": 4427,
											"modifierDepth": 1,
											"name": "tag",
											"source": 11,
											"value": "115"
										},
										{
											"begin": 4396,
											"end": 4427,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4395,
											"end": 4435,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "116"
										},
										{
											"begin": 4395,
											"end": 4435,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 4395,
											"end": 4435,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 4395,
											"end": 4435,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "103"
										},
										{
											"begin": 4395,
											"end": 4435,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 4395,
											"end": 4435,
											"modifierDepth": 1,
											"name": "tag",
											"source": 11,
											"value": "116"
										},
										{
											"begin": 4395,
											"end": 4435,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4377,
											"end": 4392,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "1"
										},
										{
											"begin": 4377,
											"end": 4392,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 4377,
											"end": 4392,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 4377,
											"end": 4392,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 4377,
											"end": 4435,
											"name": "SSTORE",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2809,
											"end": 2831,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2809,
											"end": 2831,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 3655,
											"end": 4443,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 3655,
											"end": 4443,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 2303,
											"end": 2323,
											"name": "tag",
											"source": 4,
											"value": "117"
										},
										{
											"begin": 2303,
											"end": 2323,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3655,
											"end": 4443,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 3655,
											"end": 4443,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 4507,
											"end": 4924,
											"name": "tag",
											"source": 11,
											"value": "46"
										},
										{
											"begin": 4507,
											"end": 4924,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2261,
											"end": 2282,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "120"
										},
										{
											"begin": 2261,
											"end": 2280,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "95"
										},
										{
											"begin": 2261,
											"end": 2282,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2261,
											"end": 2282,
											"name": "tag",
											"source": 4,
											"value": "120"
										},
										{
											"begin": 2261,
											"end": 2282,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4597,
											"end": 4607,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 11
										},
										{
											"begin": 4564,
											"end": 4585,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 4588,
											"end": 4608,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 4588,
											"end": 4608,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 4588,
											"end": 4608,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 4588,
											"end": 4596,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 4588,
											"end": 4608,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 4588,
											"end": 4608,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 4588,
											"end": 4608,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 4588,
											"end": 4608,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 4588,
											"end": 4608,
											"name": "KECCAK256",
											"source": 11
										},
										{
											"begin": 4680,
											"end": 4695,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "1"
										},
										{
											"begin": 4680,
											"end": 4695,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 4680,
											"end": 4695,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 4680,
											"end": 4695,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 4652,
											"end": 4669,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "5"
										},
										{
											"begin": 4652,
											"end": 4669,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 4638,
											"end": 4649,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 4638,
											"end": 4649,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 4588,
											"end": 4608,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 4588,
											"end": 4608,
											"name": "SWAP4",
											"source": 11
										},
										{
											"begin": 4564,
											"end": 4585,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 4673,
											"end": 4677,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "E8D4A51000"
										},
										{
											"begin": 4673,
											"end": 4677,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 4638,
											"end": 4669,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "122"
										},
										{
											"begin": 4638,
											"end": 4669,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 4638,
											"end": 4669,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "101"
										},
										{
											"begin": 4638,
											"end": 4669,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 4638,
											"end": 4669,
											"modifierDepth": 1,
											"name": "tag",
											"source": 11,
											"value": "122"
										},
										{
											"begin": 4638,
											"end": 4669,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4637,
											"end": 4677,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "123"
										},
										{
											"begin": 4637,
											"end": 4677,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 4637,
											"end": 4677,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 4637,
											"end": 4677,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "103"
										},
										{
											"begin": 4637,
											"end": 4677,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 4637,
											"end": 4677,
											"modifierDepth": 1,
											"name": "tag",
											"source": 11,
											"value": "123"
										},
										{
											"begin": 4637,
											"end": 4677,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4637,
											"end": 4695,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "124"
										},
										{
											"begin": 4637,
											"end": 4695,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 4637,
											"end": 4695,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 4637,
											"end": 4695,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "105"
										},
										{
											"begin": 4637,
											"end": 4695,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 4637,
											"end": 4695,
											"modifierDepth": 1,
											"name": "tag",
											"source": 11,
											"value": "124"
										},
										{
											"begin": 4637,
											"end": 4695,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4619,
											"end": 4695,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 4619,
											"end": 4695,
											"modifierDepth": 1,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 4724,
											"end": 4725,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 4714,
											"end": 4721,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 4714,
											"end": 4725,
											"modifierDepth": 1,
											"name": "GT",
											"source": 11
										},
										{
											"begin": 4706,
											"end": 4749,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "125"
										},
										{
											"begin": 4706,
											"end": 4749,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 4706,
											"end": 4749,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 4706,
											"end": 4749,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4706,
											"end": 4749,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 4706,
											"end": 4749,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 3146,
											"end": 3148,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 4706,
											"end": 4749,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 4706,
											"end": 4749,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 4706,
											"end": 4749,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 3128,
											"end": 3149,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 3185,
											"end": 3187,
											"name": "PUSH",
											"source": 13,
											"value": "13"
										},
										{
											"begin": 3165,
											"end": 3183,
											"name": "PUSH",
											"source": 13,
											"value": "24"
										},
										{
											"begin": 3165,
											"end": 3183,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 3165,
											"end": 3183,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 3158,
											"end": 3188,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "4E6F207265776172647320746F20636C61696D"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "68"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3204,
											"end": 3222,
											"name": "PUSH",
											"source": 13,
											"value": "44"
										},
										{
											"begin": 3204,
											"end": 3222,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 3204,
											"end": 3222,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 3197,
											"end": 3246,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 3263,
											"end": 3281,
											"name": "PUSH",
											"source": 13,
											"value": "64"
										},
										{
											"begin": 3263,
											"end": 3281,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 4706,
											"end": 4749,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "98"
										},
										{
											"begin": 2944,
											"end": 3287,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 4706,
											"end": 4749,
											"modifierDepth": 1,
											"name": "tag",
											"source": 11,
											"value": "125"
										},
										{
											"begin": 4706,
											"end": 4749,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4760,
											"end": 4805,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "128"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4760,
											"end": 4771,
											"modifierDepth": 1,
											"name": "PUSHIMMUTABLE",
											"source": 11,
											"value": "1142"
										},
										{
											"begin": 4760,
											"end": 4784,
											"modifierDepth": 1,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 4785,
											"end": 4795,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 11
										},
										{
											"begin": 4797,
											"end": 4804,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 4760,
											"end": 4784,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "108"
										},
										{
											"begin": 4760,
											"end": 4805,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 4760,
											"end": 4805,
											"modifierDepth": 1,
											"name": "tag",
											"source": 11,
											"value": "128"
										},
										{
											"begin": 4760,
											"end": 4805,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4849,
											"end": 4866,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "5"
										},
										{
											"begin": 4849,
											"end": 4866,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 4835,
											"end": 4846,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 4835,
											"end": 4846,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 4870,
											"end": 4874,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "E8D4A51000"
										},
										{
											"begin": 4870,
											"end": 4874,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 4835,
											"end": 4866,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "129"
										},
										{
											"begin": 4835,
											"end": 4866,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 4835,
											"end": 4866,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "101"
										},
										{
											"begin": 4835,
											"end": 4866,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 4835,
											"end": 4866,
											"modifierDepth": 1,
											"name": "tag",
											"source": 11,
											"value": "129"
										},
										{
											"begin": 4835,
											"end": 4866,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4834,
											"end": 4874,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "130"
										},
										{
											"begin": 4834,
											"end": 4874,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 4834,
											"end": 4874,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 4834,
											"end": 4874,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "103"
										},
										{
											"begin": 4834,
											"end": 4874,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 4834,
											"end": 4874,
											"modifierDepth": 1,
											"name": "tag",
											"source": 11,
											"value": "130"
										},
										{
											"begin": 4834,
											"end": 4874,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4816,
											"end": 4831,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "1"
										},
										{
											"begin": 4816,
											"end": 4831,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 4816,
											"end": 4831,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 4816,
											"end": 4874,
											"name": "SSTORE",
											"source": 11
										},
										{
											"begin": 4890,
											"end": 4916,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 4890,
											"end": 4916,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 160,
											"end": 185,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 160,
											"end": 185,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 160,
											"end": 185,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 4896,
											"end": 4906,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 11
										},
										{
											"begin": 4896,
											"end": 4906,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 4890,
											"end": 4916,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "47CEE97CB7ACD717B3C0AA1435D004CD5B3C8C57D70DBCEB4E4458BBD60E39D4"
										},
										{
											"begin": 4890,
											"end": 4916,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 148,
											"end": 150,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 133,
											"end": 151,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 4890,
											"end": 4916,
											"modifierDepth": 1,
											"name": "tag",
											"source": 11,
											"value": "131"
										},
										{
											"begin": 4890,
											"end": 4916,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4890,
											"end": 4916,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 4890,
											"end": 4916,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 4890,
											"end": 4916,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 4890,
											"end": 4916,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 4890,
											"end": 4916,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 4890,
											"end": 4916,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 4890,
											"end": 4916,
											"modifierDepth": 1,
											"name": "LOG2",
											"source": 11
										},
										{
											"begin": 4553,
											"end": 4924,
											"modifierDepth": 1,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 4553,
											"end": 4924,
											"modifierDepth": 1,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2303,
											"end": 2323,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "132"
										},
										{
											"begin": 1716,
											"end": 1717,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 2809,
											"end": 2831,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2809,
											"end": 2831,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 2629,
											"end": 2838,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2303,
											"end": 2323,
											"name": "tag",
											"source": 4,
											"value": "132"
										},
										{
											"begin": 2303,
											"end": 2323,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4507,
											"end": 4924,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 1911,
											"end": 2340,
											"name": "tag",
											"source": 11,
											"value": "49"
										},
										{
											"begin": 1911,
											"end": 2340,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2005,
											"end": 2017,
											"name": "PUSH",
											"source": 11,
											"value": "2"
										},
										{
											"begin": 2005,
											"end": 2017,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2005,
											"end": 2017,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 1983,
											"end": 1993,
											"name": "CALLER",
											"source": 11
										},
										{
											"begin": 1983,
											"end": 2018,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 1983,
											"end": 2018,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 1983,
											"end": 2043,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "134"
										},
										{
											"begin": 1983,
											"end": 2043,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1684,
											"end": 1691,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2022,
											"end": 2032,
											"name": "CALLER",
											"source": 11
										},
										{
											"begin": 2022,
											"end": 2043,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 1983,
											"end": 2043,
											"name": "tag",
											"source": 11,
											"value": "134"
										},
										{
											"begin": 1983,
											"end": 2043,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1975,
											"end": 2062,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "136"
										},
										{
											"begin": 1975,
											"end": 2062,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 1975,
											"end": 2062,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 1975,
											"end": 2062,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1975,
											"end": 2062,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 1975,
											"end": 2062,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 3494,
											"end": 3496,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 1975,
											"end": 2062,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 1975,
											"end": 2062,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 1975,
											"end": 2062,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 3476,
											"end": 3497,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 3533,
											"end": 3535,
											"name": "PUSH",
											"source": 13,
											"value": "E"
										},
										{
											"begin": 3513,
											"end": 3531,
											"name": "PUSH",
											"source": 13,
											"value": "24"
										},
										{
											"begin": 3513,
											"end": 3531,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 3513,
											"end": 3531,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 3506,
											"end": 3536,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "139BDD08185D5D1A1BDC9A5E9959"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "92"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3552,
											"end": 3570,
											"name": "PUSH",
											"source": 13,
											"value": "44"
										},
										{
											"begin": 3552,
											"end": 3570,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 3552,
											"end": 3570,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 3545,
											"end": 3589,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 3606,
											"end": 3624,
											"name": "PUSH",
											"source": 13,
											"value": "64"
										},
										{
											"begin": 3606,
											"end": 3624,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 1975,
											"end": 2062,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "98"
										},
										{
											"begin": 3292,
											"end": 3630,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 1975,
											"end": 2062,
											"name": "tag",
											"source": 11,
											"value": "136"
										},
										{
											"begin": 1975,
											"end": 2062,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2077,
											"end": 2088,
											"name": "PUSH",
											"source": 11,
											"value": "3"
										},
										{
											"begin": 2077,
											"end": 2088,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 2092,
											"end": 2093,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 2077,
											"end": 2093,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 2073,
											"end": 2167,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "139"
										},
										{
											"begin": 2073,
											"end": 2167,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 1911,
											"end": 2340,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1911,
											"end": 2340,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 2073,
											"end": 2167,
											"name": "tag",
											"source": 11,
											"value": "139"
										},
										{
											"begin": 2073,
											"end": 2167,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2253,
											"end": 2264,
											"name": "PUSH",
											"source": 11,
											"value": "3"
										},
										{
											"begin": 2253,
											"end": 2264,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 2236,
											"end": 2249,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "140"
										},
										{
											"begin": 2236,
											"end": 2242,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 2245,
											"end": 2249,
											"name": "PUSH",
											"source": 11,
											"value": "E8D4A51000"
										},
										{
											"begin": 2236,
											"end": 2249,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "101"
										},
										{
											"begin": 2236,
											"end": 2249,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 2236,
											"end": 2249,
											"name": "tag",
											"source": 11,
											"value": "140"
										},
										{
											"begin": 2236,
											"end": 2249,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2235,
											"end": 2264,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "141"
										},
										{
											"begin": 2235,
											"end": 2264,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 2235,
											"end": 2264,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2235,
											"end": 2264,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "103"
										},
										{
											"begin": 2235,
											"end": 2264,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 2235,
											"end": 2264,
											"name": "tag",
											"source": 11,
											"value": "141"
										},
										{
											"begin": 2235,
											"end": 2264,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2214,
											"end": 2231,
											"name": "PUSH",
											"source": 11,
											"value": "5"
										},
										{
											"begin": 2214,
											"end": 2231,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 2214,
											"end": 2264,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 2214,
											"end": 2264,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 2214,
											"end": 2264,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 2214,
											"end": 2264,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "142"
										},
										{
											"begin": 2214,
											"end": 2264,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 2214,
											"end": 2264,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2214,
											"end": 2264,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "143"
										},
										{
											"begin": 2214,
											"end": 2264,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 2214,
											"end": 2264,
											"name": "tag",
											"source": 11,
											"value": "142"
										},
										{
											"begin": 2214,
											"end": 2264,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2214,
											"end": 2264,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 2214,
											"end": 2264,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2214,
											"end": 2264,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2214,
											"end": 2264,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 2214,
											"end": 2264,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2214,
											"end": 2264,
											"name": "SSTORE",
											"source": 11
										},
										{
											"begin": 2214,
											"end": 2264,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2291,
											"end": 2297,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 2275,
											"end": 2287,
											"name": "PUSH",
											"source": 11,
											"value": "6"
										},
										{
											"begin": 2275,
											"end": 2287,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 2275,
											"end": 2297,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 2275,
											"end": 2297,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 2275,
											"end": 2297,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 2275,
											"end": 2297,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "144"
										},
										{
											"begin": 2275,
											"end": 2297,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 2275,
											"end": 2297,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2275,
											"end": 2297,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "143"
										},
										{
											"begin": 2275,
											"end": 2297,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 2275,
											"end": 2297,
											"name": "tag",
											"source": 11,
											"value": "144"
										},
										{
											"begin": 2275,
											"end": 2297,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2275,
											"end": 2297,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2275,
											"end": 2297,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 2275,
											"end": 2297,
											"name": "SSTORE",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2313,
											"end": 2332,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 2313,
											"end": 2332,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 160,
											"end": 185,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 160,
											"end": 185,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 160,
											"end": 185,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 2313,
											"end": 2332,
											"name": "PUSH",
											"source": 11,
											"value": "DE88A922E0D3B88B24E9623EFEB464919C6BF9F66857A65E2BFCF2CE87A9433D"
										},
										{
											"begin": 2313,
											"end": 2332,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 148,
											"end": 150,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 133,
											"end": 151,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 2313,
											"end": 2332,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 2313,
											"end": 2332,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 2313,
											"end": 2332,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 2313,
											"end": 2332,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 2313,
											"end": 2332,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 2313,
											"end": 2332,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2313,
											"end": 2332,
											"name": "LOG1",
											"source": 11
										},
										{
											"begin": 1911,
											"end": 2340,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1911,
											"end": 2340,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "tag",
											"source": 0,
											"value": "54"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "147"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "91"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "147"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2357,
											"end": 2387,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "132"
										},
										{
											"begin": 2384,
											"end": 2385,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2357,
											"end": 2375,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "150"
										},
										{
											"begin": 2357,
											"end": 2387,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5664,
											"end": 5911,
											"name": "tag",
											"source": 11,
											"value": "65"
										},
										{
											"begin": 5664,
											"end": 5911,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "152"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "91"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "152"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5791,
											"end": 5803,
											"modifierDepth": 1,
											"name": "PUSHIMMUTABLE",
											"source": 11,
											"value": "1139"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5767,
											"end": 5804,
											"modifierDepth": 1,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 5767,
											"end": 5779,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5767,
											"end": 5804,
											"modifierDepth": 1,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 5767,
											"end": 5804,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 5759,
											"end": 5837,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "154"
										},
										{
											"begin": 5759,
											"end": 5837,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 5759,
											"end": 5837,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 5759,
											"end": 5837,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5759,
											"end": 5837,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 5759,
											"end": 5837,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 3967,
											"end": 3969,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 5759,
											"end": 5837,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 5759,
											"end": 5837,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 5759,
											"end": 5837,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 3949,
											"end": 3970,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 4006,
											"end": 4008,
											"name": "PUSH",
											"source": 13,
											"value": "1C"
										},
										{
											"begin": 3986,
											"end": 4004,
											"name": "PUSH",
											"source": 13,
											"value": "24"
										},
										{
											"begin": 3986,
											"end": 4004,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 3986,
											"end": 4004,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 3979,
											"end": 4009,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 4045,
											"end": 4075,
											"name": "PUSH",
											"source": 13,
											"value": "43616E6E6F74207265636F766572207374616B696E6720746F6B656E00000000"
										},
										{
											"begin": 4025,
											"end": 4043,
											"name": "PUSH",
											"source": 13,
											"value": "44"
										},
										{
											"begin": 4025,
											"end": 4043,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 4025,
											"end": 4043,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 4018,
											"end": 4076,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 4093,
											"end": 4111,
											"name": "PUSH",
											"source": 13,
											"value": "64"
										},
										{
											"begin": 4093,
											"end": 4111,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 5759,
											"end": 5837,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "98"
										},
										{
											"begin": 3765,
											"end": 4117,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 5759,
											"end": 5837,
											"modifierDepth": 1,
											"name": "tag",
											"source": 11,
											"value": "154"
										},
										{
											"begin": 5759,
											"end": 5837,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 5848,
											"end": 5903,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "157"
										},
										{
											"begin": 5882,
											"end": 5889,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "158"
										},
										{
											"begin": 1684,
											"end": 1691,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5882,
											"end": 5889,
											"modifierDepth": 1,
											"name": "tag",
											"source": 11,
											"value": "158"
										},
										{
											"begin": 5882,
											"end": 5889,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5848,
											"end": 5881,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 5848,
											"end": 5881,
											"modifierDepth": 1,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 5848,
											"end": 5881,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 5891,
											"end": 5902,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 5848,
											"end": 5881,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "108"
										},
										{
											"begin": 5848,
											"end": 5903,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 5848,
											"end": 5903,
											"modifierDepth": 1,
											"name": "tag",
											"source": 11,
											"value": "157"
										},
										{
											"begin": 5848,
											"end": 5903,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 5664,
											"end": 5911,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 5664,
											"end": 5911,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 5664,
											"end": 5911,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 2674,
											"end": 3616,
											"name": "tag",
											"source": 11,
											"value": "76"
										},
										{
											"begin": 2674,
											"end": 3616,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2261,
											"end": 2282,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "161"
										},
										{
											"begin": 2261,
											"end": 2280,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "95"
										},
										{
											"begin": 2261,
											"end": 2282,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2261,
											"end": 2282,
											"name": "tag",
											"source": 4,
											"value": "161"
										},
										{
											"begin": 2261,
											"end": 2282,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2759,
											"end": 2771,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "2"
										},
										{
											"begin": 2759,
											"end": 2771,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 2759,
											"end": 2794,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 2759,
											"end": 2794,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "14CED3DF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2759,
											"end": 2794,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 2759,
											"end": 2794,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 2783,
											"end": 2793,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 11
										},
										{
											"begin": 2759,
											"end": 2794,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 2759,
											"end": 2794,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 2759,
											"end": 2794,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 1163,
											"end": 1214,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 2741,
											"end": 2756,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 2741,
											"end": 2756,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2759,
											"end": 2771,
											"modifierDepth": 1,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 2759,
											"end": 2771,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2759,
											"end": 2782,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "A6769EF8"
										},
										{
											"begin": 2759,
											"end": 2782,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1136,
											"end": 1154,
											"name": "PUSH",
											"source": 13,
											"value": "24"
										},
										{
											"begin": 1136,
											"end": 1154,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 2759,
											"end": 2794,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 2759,
											"end": 2794,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 2759,
											"end": 2794,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 2759,
											"end": 2794,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 2759,
											"end": 2794,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 2759,
											"end": 2794,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 2759,
											"end": 2794,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 2759,
											"end": 2794,
											"modifierDepth": 1,
											"name": "DUP7",
											"source": 11
										},
										{
											"begin": 2759,
											"end": 2794,
											"modifierDepth": 1,
											"name": "GAS",
											"source": 11
										},
										{
											"begin": 2759,
											"end": 2794,
											"modifierDepth": 1,
											"name": "STATICCALL",
											"source": 11
										},
										{
											"begin": 2759,
											"end": 2794,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 2759,
											"end": 2794,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 2759,
											"end": 2794,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 2759,
											"end": 2794,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "165"
										},
										{
											"begin": 2759,
											"end": 2794,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 2759,
											"end": 2794,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 11
										},
										{
											"begin": 2759,
											"end": 2794,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 2759,
											"end": 2794,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 2759,
											"end": 2794,
											"modifierDepth": 1,
											"name": "RETURNDATACOPY",
											"source": 11
										},
										{
											"begin": 2759,
											"end": 2794,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 11
										},
										{
											"begin": 2759,
											"end": 2794,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 2759,
											"end": 2794,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 2759,
											"end": 2794,
											"modifierDepth": 1,
											"name": "tag",
											"source": 11,
											"value": "165"
										},
										{
											"begin": 2759,
											"end": 2794,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2759,
											"end": 2794,
											"modifierDepth": 1,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2759,
											"end": 2794,
											"modifierDepth": 1,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2759,
											"end": 2794,
											"modifierDepth": 1,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2759,
											"end": 2794,
											"modifierDepth": 1,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2759,
											"end": 2794,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 2759,
											"end": 2794,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 2759,
											"end": 2794,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 11
										},
										{
											"begin": 2759,
											"end": 2794,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "1F"
										},
										{
											"begin": 2759,
											"end": 2794,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 11
										},
										{
											"begin": 2759,
											"end": 2794,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "1F"
										},
										{
											"begin": 2759,
											"end": 2794,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 2759,
											"end": 2794,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 2759,
											"end": 2794,
											"modifierDepth": 1,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 2759,
											"end": 2794,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 2759,
											"end": 2794,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 2759,
											"end": 2794,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 2759,
											"end": 2794,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 2759,
											"end": 2794,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 2759,
											"end": 2794,
											"modifierDepth": 1,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2759,
											"end": 2794,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 2759,
											"end": 2794,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 2759,
											"end": 2794,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2759,
											"end": 2794,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "166"
										},
										{
											"begin": 2759,
											"end": 2794,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 2759,
											"end": 2794,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2759,
											"end": 2794,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "167"
										},
										{
											"begin": 2759,
											"end": 2794,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 2759,
											"end": 2794,
											"modifierDepth": 1,
											"name": "tag",
											"source": 11,
											"value": "166"
										},
										{
											"begin": 2759,
											"end": 2794,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2741,
											"end": 2794,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2741,
											"end": 2794,
											"modifierDepth": 1,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2824,
											"end": 2845,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "7"
										},
										{
											"begin": 2824,
											"end": 2845,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 2813,
											"end": 2820,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 2813,
											"end": 2845,
											"modifierDepth": 1,
											"name": "LT",
											"source": 11
										},
										{
											"begin": 2813,
											"end": 2845,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 2805,
											"end": 2883,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "168"
										},
										{
											"begin": 2805,
											"end": 2883,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 2805,
											"end": 2883,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 2805,
											"end": 2883,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2805,
											"end": 2883,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 2805,
											"end": 2883,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 4513,
											"end": 4515,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 2805,
											"end": 2883,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 2805,
											"end": 2883,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 2805,
											"end": 2883,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 4495,
											"end": 4516,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 4552,
											"end": 4554,
											"name": "PUSH",
											"source": 13,
											"value": "21"
										},
										{
											"begin": 4532,
											"end": 4550,
											"name": "PUSH",
											"source": 13,
											"value": "24"
										},
										{
											"begin": 4532,
											"end": 4550,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 4532,
											"end": 4550,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 4525,
											"end": 4555,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 4591,
											"end": 4625,
											"name": "PUSH",
											"source": 13,
											"value": "496E73756666696369656E74204441707020766F6C756D6520746F207374616B"
										},
										{
											"begin": 4571,
											"end": 4589,
											"name": "PUSH",
											"source": 13,
											"value": "44"
										},
										{
											"begin": 4571,
											"end": 4589,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 4571,
											"end": 4589,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 4564,
											"end": 4626,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "65"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "F8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4642,
											"end": 4660,
											"name": "PUSH",
											"source": 13,
											"value": "64"
										},
										{
											"begin": 4642,
											"end": 4660,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 4642,
											"end": 4660,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 4635,
											"end": 4666,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 4683,
											"end": 4702,
											"name": "PUSH",
											"source": 13,
											"value": "84"
										},
										{
											"begin": 4683,
											"end": 4702,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 2805,
											"end": 2883,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "98"
										},
										{
											"begin": 4311,
											"end": 4708,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 2805,
											"end": 2883,
											"modifierDepth": 1,
											"name": "tag",
											"source": 11,
											"value": "168"
										},
										{
											"begin": 2805,
											"end": 2883,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2929,
											"end": 2939,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 11
										},
										{
											"begin": 2896,
											"end": 2917,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 2920,
											"end": 2940,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2920,
											"end": 2940,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 2920,
											"end": 2940,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 2920,
											"end": 2928,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 2920,
											"end": 2940,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 2920,
											"end": 2940,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 2920,
											"end": 2940,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 2920,
											"end": 2940,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2920,
											"end": 2940,
											"name": "KECCAK256",
											"source": 11
										},
										{
											"begin": 3018,
											"end": 3029,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 3018,
											"end": 3029,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 3018,
											"end": 3033,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 3014,
											"end": 3299,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "171"
										},
										{
											"begin": 3014,
											"end": 3299,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 3050,
											"end": 3065,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 3111,
											"end": 3115,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 3111,
											"end": 3126,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "1"
										},
										{
											"begin": 3111,
											"end": 3126,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 3111,
											"end": 3126,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 3104,
											"end": 3108,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "E8D4A51000"
										},
										{
											"begin": 3083,
											"end": 3100,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "5"
										},
										{
											"begin": 3083,
											"end": 3100,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 3069,
											"end": 3073,
											"modifierDepth": 1,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 3069,
											"end": 3080,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 3069,
											"end": 3080,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 3069,
											"end": 3080,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 3069,
											"end": 3100,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "172"
										},
										{
											"begin": 3069,
											"end": 3100,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 3069,
											"end": 3100,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 3069,
											"end": 3100,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "101"
										},
										{
											"begin": 3069,
											"end": 3100,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 3069,
											"end": 3100,
											"modifierDepth": 1,
											"name": "tag",
											"source": 11,
											"value": "172"
										},
										{
											"begin": 3069,
											"end": 3100,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3068,
											"end": 3108,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "173"
										},
										{
											"begin": 3068,
											"end": 3108,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 3068,
											"end": 3108,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 3068,
											"end": 3108,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "103"
										},
										{
											"begin": 3068,
											"end": 3108,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 3068,
											"end": 3108,
											"modifierDepth": 1,
											"name": "tag",
											"source": 11,
											"value": "173"
										},
										{
											"begin": 3068,
											"end": 3108,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3068,
											"end": 3126,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "174"
										},
										{
											"begin": 3068,
											"end": 3126,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 3068,
											"end": 3126,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 3068,
											"end": 3126,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "105"
										},
										{
											"begin": 3068,
											"end": 3126,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 3068,
											"end": 3126,
											"modifierDepth": 1,
											"name": "tag",
											"source": 11,
											"value": "174"
										},
										{
											"begin": 3068,
											"end": 3126,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3050,
											"end": 3126,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3145,
											"end": 3156,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 3145,
											"end": 3156,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 3141,
											"end": 3288,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "175"
										},
										{
											"begin": 3141,
											"end": 3288,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 3177,
											"end": 3222,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "176"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3177,
											"end": 3188,
											"modifierDepth": 1,
											"name": "PUSHIMMUTABLE",
											"source": 11,
											"value": "1142"
										},
										{
											"begin": 3177,
											"end": 3201,
											"modifierDepth": 1,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 3202,
											"end": 3212,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 11
										},
										{
											"begin": 3214,
											"end": 3221,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 3177,
											"end": 3201,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "108"
										},
										{
											"begin": 3177,
											"end": 3222,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 3177,
											"end": 3222,
											"modifierDepth": 1,
											"name": "tag",
											"source": 11,
											"value": "176"
										},
										{
											"begin": 3177,
											"end": 3222,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3246,
											"end": 3272,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 3246,
											"end": 3272,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 160,
											"end": 185,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 160,
											"end": 185,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 160,
											"end": 185,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 3252,
											"end": 3262,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 11
										},
										{
											"begin": 3252,
											"end": 3262,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 3246,
											"end": 3272,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "47CEE97CB7ACD717B3C0AA1435D004CD5B3C8C57D70DBCEB4E4458BBD60E39D4"
										},
										{
											"begin": 3246,
											"end": 3272,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 148,
											"end": 150,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 133,
											"end": 151,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 3246,
											"end": 3272,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 3246,
											"end": 3272,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 3246,
											"end": 3272,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 3246,
											"end": 3272,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 3246,
											"end": 3272,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 3246,
											"end": 3272,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 3246,
											"end": 3272,
											"modifierDepth": 1,
											"name": "LOG2",
											"source": 11
										},
										{
											"begin": 3141,
											"end": 3288,
											"modifierDepth": 1,
											"name": "tag",
											"source": 11,
											"value": "175"
										},
										{
											"begin": 3141,
											"end": 3288,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3035,
											"end": 3299,
											"modifierDepth": 1,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 3014,
											"end": 3299,
											"modifierDepth": 1,
											"name": "tag",
											"source": 11,
											"value": "171"
										},
										{
											"begin": 3014,
											"end": 3299,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3315,
											"end": 3326,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 3315,
											"end": 3326,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 3311,
											"end": 3494,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "178"
										},
										{
											"begin": 3311,
											"end": 3494,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 3343,
											"end": 3408,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "179"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3343,
											"end": 3355,
											"modifierDepth": 1,
											"name": "PUSHIMMUTABLE",
											"source": 11,
											"value": "1139"
										},
										{
											"begin": 3343,
											"end": 3372,
											"modifierDepth": 1,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 3373,
											"end": 3383,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 11
										},
										{
											"begin": 3393,
											"end": 3397,
											"modifierDepth": 1,
											"name": "ADDRESS",
											"source": 11
										},
										{
											"begin": 3400,
											"end": 3407,
											"name": "DUP7",
											"source": 11
										},
										{
											"begin": 3343,
											"end": 3372,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "180"
										},
										{
											"begin": 3343,
											"end": 3408,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 3343,
											"end": 3408,
											"modifierDepth": 1,
											"name": "tag",
											"source": 11,
											"value": "179"
										},
										{
											"begin": 3343,
											"end": 3408,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3438,
											"end": 3445,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 3423,
											"end": 3427,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 3423,
											"end": 3434,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 3423,
											"end": 3434,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 3423,
											"end": 3434,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 3423,
											"end": 3445,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 3423,
											"end": 3445,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 3423,
											"end": 3445,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 3423,
											"end": 3445,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "181"
										},
										{
											"begin": 3423,
											"end": 3445,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 3423,
											"end": 3445,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 3423,
											"end": 3445,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "143"
										},
										{
											"begin": 3423,
											"end": 3445,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 3423,
											"end": 3445,
											"modifierDepth": 1,
											"name": "tag",
											"source": 11,
											"value": "181"
										},
										{
											"begin": 3423,
											"end": 3445,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3423,
											"end": 3445,
											"modifierDepth": 1,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 3423,
											"end": 3445,
											"modifierDepth": 1,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 3423,
											"end": 3445,
											"modifierDepth": 1,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 3423,
											"end": 3445,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 3423,
											"end": 3445,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 3423,
											"end": 3445,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 11
										},
										{
											"begin": 3423,
											"end": 3445,
											"modifierDepth": 1,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 3475,
											"end": 3482,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 3460,
											"end": 3471,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "3"
										},
										{
											"begin": 3460,
											"end": 3471,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 3460,
											"end": 3482,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 3460,
											"end": 3482,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 3460,
											"end": 3482,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 3460,
											"end": 3482,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "182"
										},
										{
											"begin": 3460,
											"end": 3482,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 3460,
											"end": 3482,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 3460,
											"end": 3482,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "143"
										},
										{
											"begin": 3460,
											"end": 3482,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 3460,
											"end": 3482,
											"modifierDepth": 1,
											"name": "tag",
											"source": 11,
											"value": "182"
										},
										{
											"begin": 3460,
											"end": 3482,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3460,
											"end": 3482,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 3460,
											"end": 3482,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 3460,
											"end": 3482,
											"name": "SSTORE",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3311,
											"end": 3494,
											"modifierDepth": 1,
											"name": "tag",
											"source": 11,
											"value": "178"
										},
										{
											"begin": 3311,
											"end": 3494,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3539,
											"end": 3556,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "5"
										},
										{
											"begin": 3539,
											"end": 3556,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 3525,
											"end": 3536,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 3525,
											"end": 3536,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 3560,
											"end": 3564,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "E8D4A51000"
										},
										{
											"begin": 3560,
											"end": 3564,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 3525,
											"end": 3556,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "183"
										},
										{
											"begin": 3525,
											"end": 3556,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 3525,
											"end": 3556,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "101"
										},
										{
											"begin": 3525,
											"end": 3556,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 3525,
											"end": 3556,
											"modifierDepth": 1,
											"name": "tag",
											"source": 11,
											"value": "183"
										},
										{
											"begin": 3525,
											"end": 3556,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3524,
											"end": 3564,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "184"
										},
										{
											"begin": 3524,
											"end": 3564,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 3524,
											"end": 3564,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 3524,
											"end": 3564,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "103"
										},
										{
											"begin": 3524,
											"end": 3564,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 3524,
											"end": 3564,
											"modifierDepth": 1,
											"name": "tag",
											"source": 11,
											"value": "184"
										},
										{
											"begin": 3524,
											"end": 3564,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3506,
											"end": 3521,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "1"
										},
										{
											"begin": 3506,
											"end": 3521,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 3506,
											"end": 3521,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 3506,
											"end": 3564,
											"name": "SSTORE",
											"source": 11
										},
										{
											"begin": 3580,
											"end": 3608,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 3580,
											"end": 3608,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 160,
											"end": 185,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 160,
											"end": 185,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 160,
											"end": 185,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 3588,
											"end": 3598,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 11
										},
										{
											"begin": 3588,
											"end": 3598,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 3580,
											"end": 3608,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "E1FFFCC4923D04B559F4D29A8BFC6CDA04EB5B0D3C460751C2402C5C5CC9109C"
										},
										{
											"begin": 3580,
											"end": 3608,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 148,
											"end": 150,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 133,
											"end": 151,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 3580,
											"end": 3608,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 3580,
											"end": 3608,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 3580,
											"end": 3608,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 3580,
											"end": 3608,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 3580,
											"end": 3608,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 3580,
											"end": 3608,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 3580,
											"end": 3608,
											"modifierDepth": 1,
											"name": "LOG2",
											"source": 11
										},
										{
											"begin": 2730,
											"end": 3616,
											"modifierDepth": 1,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2730,
											"end": 3616,
											"modifierDepth": 1,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2303,
											"end": 2323,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "117"
										},
										{
											"begin": 1716,
											"end": 1717,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 2809,
											"end": 2831,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2809,
											"end": 2831,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 2629,
											"end": 2838,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 5007,
											"end": 5401,
											"name": "tag",
											"source": 11,
											"value": "78"
										},
										{
											"begin": 5007,
											"end": 5401,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2261,
											"end": 2282,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "188"
										},
										{
											"begin": 2261,
											"end": 2280,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "95"
										},
										{
											"begin": 2261,
											"end": 2282,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2261,
											"end": 2282,
											"name": "tag",
											"source": 4,
											"value": "188"
										},
										{
											"begin": 2261,
											"end": 2282,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5102,
											"end": 5112,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 11
										},
										{
											"begin": 5069,
											"end": 5090,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 5093,
											"end": 5113,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 5093,
											"end": 5113,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 5093,
											"end": 5113,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 5093,
											"end": 5101,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 5093,
											"end": 5113,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 5093,
											"end": 5113,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 5093,
											"end": 5113,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 5093,
											"end": 5113,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 5093,
											"end": 5113,
											"name": "KECCAK256",
											"source": 11
										},
										{
											"begin": 5141,
											"end": 5152,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 5141,
											"end": 5152,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 5171,
											"end": 5181,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 5163,
											"end": 5205,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "190"
										},
										{
											"begin": 5163,
											"end": 5205,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 5163,
											"end": 5205,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 5163,
											"end": 5205,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5163,
											"end": 5205,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 5163,
											"end": 5205,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 4915,
											"end": 4917,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 5163,
											"end": 5205,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 5163,
											"end": 5205,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 5163,
											"end": 5205,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 4897,
											"end": 4918,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 4954,
											"end": 4956,
											"name": "PUSH",
											"source": 13,
											"value": "13"
										},
										{
											"begin": 4934,
											"end": 4952,
											"name": "PUSH",
											"source": 13,
											"value": "24"
										},
										{
											"begin": 4934,
											"end": 4952,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 4934,
											"end": 4952,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 4927,
											"end": 4957,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "4E6F7468696E6720746F207769746864726177"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "68"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4973,
											"end": 4991,
											"name": "PUSH",
											"source": 13,
											"value": "44"
										},
										{
											"begin": 4973,
											"end": 4991,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 4973,
											"end": 4991,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 4966,
											"end": 5015,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 5032,
											"end": 5050,
											"name": "PUSH",
											"source": 13,
											"value": "64"
										},
										{
											"begin": 5032,
											"end": 5050,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 5163,
											"end": 5205,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "98"
										},
										{
											"begin": 4713,
											"end": 5056,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 5163,
											"end": 5205,
											"modifierDepth": 1,
											"name": "tag",
											"source": 11,
											"value": "190"
										},
										{
											"begin": 5163,
											"end": 5205,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 5231,
											"end": 5237,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 5216,
											"end": 5227,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "3"
										},
										{
											"begin": 5216,
											"end": 5227,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 5216,
											"end": 5237,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 5216,
											"end": 5237,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 5216,
											"end": 5237,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 5216,
											"end": 5237,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "193"
										},
										{
											"begin": 5216,
											"end": 5237,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 5216,
											"end": 5237,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 5216,
											"end": 5237,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "105"
										},
										{
											"begin": 5216,
											"end": 5237,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 5216,
											"end": 5237,
											"modifierDepth": 1,
											"name": "tag",
											"source": 11,
											"value": "193"
										},
										{
											"begin": 5216,
											"end": 5237,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 5216,
											"end": 5237,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 5216,
											"end": 5237,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 5216,
											"end": 5237,
											"name": "SSTORE",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5262,
											"end": 5263,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 5248,
											"end": 5263,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 5248,
											"end": 5263,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 5248,
											"end": 5263,
											"name": "SSTORE",
											"source": 11
										},
										{
											"begin": 5274,
											"end": 5289,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "1"
										},
										{
											"begin": 5274,
											"end": 5289,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 5274,
											"end": 5289,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 5274,
											"end": 5293,
											"name": "SSTORE",
											"source": 11
										},
										{
											"begin": 5304,
											"end": 5349,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "194"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5304,
											"end": 5316,
											"modifierDepth": 1,
											"name": "PUSHIMMUTABLE",
											"source": 11,
											"value": "1139"
										},
										{
											"begin": 5304,
											"end": 5329,
											"modifierDepth": 1,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 5330,
											"end": 5340,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 11
										},
										{
											"begin": 5342,
											"end": 5348,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 5304,
											"end": 5329,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "108"
										},
										{
											"begin": 5304,
											"end": 5349,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 5304,
											"end": 5349,
											"modifierDepth": 1,
											"name": "tag",
											"source": 11,
											"value": "194"
										},
										{
											"begin": 5304,
											"end": 5349,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 5365,
											"end": 5393,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 5365,
											"end": 5393,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 160,
											"end": 185,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 160,
											"end": 185,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 160,
											"end": 185,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 5374,
											"end": 5384,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 11
										},
										{
											"begin": 5374,
											"end": 5384,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 5365,
											"end": 5393,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "884EDAD9CE6FA2440D8A54CC123490EB96D2768479D49FF9C7366125A9424364"
										},
										{
											"begin": 5365,
											"end": 5393,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 148,
											"end": 150,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 133,
											"end": 151,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 5365,
											"end": 5393,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "131"
										},
										{
											"begin": 14,
											"end": 191,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 0,
											"value": "81"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "198"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "91"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "198"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2627,
											"end": 2649,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2627,
											"end": 2649,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "200"
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2672,
											"end": 2703,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1E4FBDF7"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2672,
											"end": 2703,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2700,
											"end": 2701,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2672,
											"end": 2703,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1163,
											"end": 1214,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 1136,
											"end": 1154,
											"name": "PUSH",
											"source": 13,
											"value": "24"
										},
										{
											"begin": 1136,
											"end": 1154,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "98"
										},
										{
											"begin": 1003,
											"end": 1220,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "200"
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2723,
											"end": 2751,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "117"
										},
										{
											"begin": 2742,
											"end": 2750,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2723,
											"end": 2741,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "150"
										},
										{
											"begin": 2723,
											"end": 2751,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2405,
											"end": 2645,
											"name": "tag",
											"source": 11,
											"value": "84"
										},
										{
											"begin": 2405,
											"end": 2645,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2510,
											"end": 2525,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 2510,
											"end": 2525,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 2466,
											"end": 2473,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 2510,
											"end": 2525,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2510,
											"end": 2525,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 2510,
											"end": 2525,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 2510,
											"end": 2518,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 2510,
											"end": 2525,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 2510,
											"end": 2525,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 2510,
											"end": 2525,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 2510,
											"end": 2525,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 2510,
											"end": 2525,
											"name": "KECCAK256",
											"source": 11
										},
										{
											"begin": 2597,
											"end": 2612,
											"name": "PUSH",
											"source": 11,
											"value": "1"
										},
										{
											"begin": 2597,
											"end": 2612,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 2597,
											"end": 2612,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 2597,
											"end": 2612,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 2569,
											"end": 2586,
											"name": "PUSH",
											"source": 11,
											"value": "5"
										},
										{
											"begin": 2569,
											"end": 2586,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 2555,
											"end": 2566,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 2555,
											"end": 2566,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 2466,
											"end": 2473,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 2466,
											"end": 2473,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 2597,
											"end": 2612,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 2590,
											"end": 2594,
											"name": "PUSH",
											"source": 11,
											"value": "E8D4A51000"
										},
										{
											"begin": 2590,
											"end": 2594,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 2555,
											"end": 2586,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "204"
										},
										{
											"begin": 2555,
											"end": 2586,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 2569,
											"end": 2586,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2555,
											"end": 2586,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "101"
										},
										{
											"begin": 2555,
											"end": 2586,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 2555,
											"end": 2586,
											"name": "tag",
											"source": 11,
											"value": "204"
										},
										{
											"begin": 2555,
											"end": 2586,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2554,
											"end": 2594,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "205"
										},
										{
											"begin": 2554,
											"end": 2594,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 2554,
											"end": 2594,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2554,
											"end": 2594,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "103"
										},
										{
											"begin": 2554,
											"end": 2594,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 2554,
											"end": 2594,
											"name": "tag",
											"source": 11,
											"value": "205"
										},
										{
											"begin": 2554,
											"end": 2594,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2554,
											"end": 2612,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "206"
										},
										{
											"begin": 2554,
											"end": 2612,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 2554,
											"end": 2612,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2554,
											"end": 2612,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "105"
										},
										{
											"begin": 2554,
											"end": 2612,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 2554,
											"end": 2612,
											"name": "tag",
											"source": 11,
											"value": "206"
										},
										{
											"begin": 2554,
											"end": 2612,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2536,
											"end": 2612,
											"name": "SWAP5",
											"source": 11
										},
										{
											"begin": 2405,
											"end": 2645,
											"name": "SWAP4",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2405,
											"end": 2645,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 1796,
											"end": 1958,
											"name": "tag",
											"source": 0,
											"value": "91"
										},
										{
											"begin": 1796,
											"end": 1958,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1684,
											"end": 1691,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 735,
											"end": 745,
											"name": "CALLER",
											"source": 8
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1851,
											"end": 1952,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "132"
										},
										{
											"begin": 1851,
											"end": 1952,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "118CDAA7"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 735,
											"end": 745,
											"name": "CALLER",
											"source": 8
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1163,
											"end": 1214,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 1136,
											"end": 1154,
											"name": "PUSH",
											"source": 13,
											"value": "24"
										},
										{
											"begin": 1136,
											"end": 1154,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "98"
										},
										{
											"begin": 1003,
											"end": 1220,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 2336,
											"end": 2623,
											"name": "tag",
											"source": 4,
											"value": "95"
										},
										{
											"begin": 2336,
											"end": 2623,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1759,
											"end": 1760,
											"name": "PUSH",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 2468,
											"end": 2475,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 2468,
											"end": 2475,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 2468,
											"end": 2487,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "215"
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 5263,
											"end": 5265,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 5245,
											"end": 5266,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 5302,
											"end": 5304,
											"name": "PUSH",
											"source": 13,
											"value": "1F"
										},
										{
											"begin": 5282,
											"end": 5300,
											"name": "PUSH",
											"source": 13,
											"value": "24"
										},
										{
											"begin": 5282,
											"end": 5300,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 5282,
											"end": 5300,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 5275,
											"end": 5305,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 5341,
											"end": 5374,
											"name": "PUSH",
											"source": 13,
											"value": "5265656E7472616E637947756172643A207265656E7472616E742063616C6C00"
										},
										{
											"begin": 5321,
											"end": 5339,
											"name": "PUSH",
											"source": 13,
											"value": "44"
										},
										{
											"begin": 5321,
											"end": 5339,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 5321,
											"end": 5339,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 5314,
											"end": 5375,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 5392,
											"end": 5410,
											"name": "PUSH",
											"source": 13,
											"value": "64"
										},
										{
											"begin": 5392,
											"end": 5410,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "98"
										},
										{
											"begin": 5061,
											"end": 5416,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "tag",
											"source": 4,
											"value": "215"
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1759,
											"end": 1760,
											"name": "PUSH",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 2598,
											"end": 2605,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 2598,
											"end": 2616,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 2336,
											"end": 2623,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1271,
											"end": 1431,
											"name": "tag",
											"source": 6,
											"value": "108"
										},
										{
											"begin": 1271,
											"end": 1431,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1380,
											"end": 1423,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1380,
											"end": 1423,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5613,
											"end": 5645,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 5613,
											"end": 5645,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 5613,
											"end": 5645,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 1380,
											"end": 1423,
											"name": "PUSH",
											"source": 6,
											"value": "24"
										},
										{
											"begin": 1380,
											"end": 1423,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 1380,
											"end": 1423,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5595,
											"end": 5646,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 5662,
											"end": 5680,
											"name": "PUSH",
											"source": 13,
											"value": "44"
										},
										{
											"begin": 5662,
											"end": 5680,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 5662,
											"end": 5680,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 5655,
											"end": 5689,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 5655,
											"end": 5689,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 5655,
											"end": 5689,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 1353,
											"end": 1424,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "219"
										},
										{
											"begin": 1353,
											"end": 1424,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1373,
											"end": 1378,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 1373,
											"end": 1378,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1395,
											"end": 1409,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1395,
											"end": 1409,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 1395,
											"end": 1409,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1395,
											"end": 1409,
											"name": "PUSH",
											"source": 6,
											"value": "A9059CBB"
										},
										{
											"begin": 1395,
											"end": 1409,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5568,
											"end": 5586,
											"name": "PUSH",
											"source": 13,
											"value": "64"
										},
										{
											"begin": 5568,
											"end": 5586,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 1380,
											"end": 1423,
											"name": "tag",
											"source": 6,
											"value": "220"
										},
										{
											"begin": 1380,
											"end": 1423,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1380,
											"end": 1423,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1380,
											"end": 1423,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 1380,
											"end": 1423,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1380,
											"end": 1423,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1380,
											"end": 1423,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 1380,
											"end": 1423,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 1380,
											"end": 1423,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 1380,
											"end": 1423,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1380,
											"end": 1423,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1380,
											"end": 1423,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1380,
											"end": 1423,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1380,
											"end": 1423,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1380,
											"end": 1423,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1380,
											"end": 1423,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1380,
											"end": 1423,
											"name": "PUSH",
											"source": 6,
											"value": "E0"
										},
										{
											"begin": 1380,
											"end": 1423,
											"name": "SHL",
											"source": 6
										},
										{
											"begin": 1380,
											"end": 1423,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1380,
											"end": 1423,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1380,
											"end": 1423,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1380,
											"end": 1423,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1380,
											"end": 1423,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1380,
											"end": 1423,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 1380,
											"end": 1423,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1380,
											"end": 1423,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 1380,
											"end": 1423,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 1380,
											"end": 1423,
											"name": "OR",
											"source": 6
										},
										{
											"begin": 1380,
											"end": 1423,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 1380,
											"end": 1423,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1380,
											"end": 1423,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1380,
											"end": 1423,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1380,
											"end": 1423,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1380,
											"end": 1423,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1353,
											"end": 1372,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "222"
										},
										{
											"begin": 1353,
											"end": 1424,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1353,
											"end": 1424,
											"name": "tag",
											"source": 6,
											"value": "219"
										},
										{
											"begin": 1353,
											"end": 1424,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1271,
											"end": 1431,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1271,
											"end": 1431,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1271,
											"end": 1431,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1271,
											"end": 1431,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2912,
											"end": 3099,
											"name": "tag",
											"source": 0,
											"value": "150"
										},
										{
											"begin": 2912,
											"end": 3099,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2985,
											"end": 3001,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "AND",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 0,
											"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2985,
											"end": 3001,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 2975,
											"end": 3099,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2912,
											"end": 3099,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2912,
											"end": 3099,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1670,
											"end": 1858,
											"name": "tag",
											"source": 6,
											"value": "180"
										},
										{
											"begin": 1670,
											"end": 1858,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1797,
											"end": 1850,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1797,
											"end": 1850,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5958,
											"end": 5973,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 5958,
											"end": 5973,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 5958,
											"end": 5973,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 1797,
											"end": 1850,
											"name": "PUSH",
											"source": 6,
											"value": "24"
										},
										{
											"begin": 1797,
											"end": 1850,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 1797,
											"end": 1850,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5940,
											"end": 5974,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 6010,
											"end": 6025,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 6010,
											"end": 6025,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 6010,
											"end": 6025,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 5990,
											"end": 6008,
											"name": "PUSH",
											"source": 13,
											"value": "44"
										},
										{
											"begin": 5990,
											"end": 6008,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 5990,
											"end": 6008,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 5983,
											"end": 6026,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 6042,
											"end": 6060,
											"name": "PUSH",
											"source": 13,
											"value": "64"
										},
										{
											"begin": 6042,
											"end": 6060,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 6042,
											"end": 6060,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 6035,
											"end": 6069,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 6035,
											"end": 6069,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 6035,
											"end": 6069,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 1770,
											"end": 1851,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "226"
										},
										{
											"begin": 1770,
											"end": 1851,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1790,
											"end": 1795,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 1790,
											"end": 1795,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1812,
											"end": 1830,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1812,
											"end": 1830,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 1812,
											"end": 1830,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1812,
											"end": 1830,
											"name": "PUSH",
											"source": 6,
											"value": "23B872DD"
										},
										{
											"begin": 1812,
											"end": 1830,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5875,
											"end": 5893,
											"name": "PUSH",
											"source": 13,
											"value": "84"
										},
										{
											"begin": 5875,
											"end": 5893,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 1797,
											"end": 1850,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "220"
										},
										{
											"begin": 5700,
											"end": 6075,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 1770,
											"end": 1851,
											"name": "tag",
											"source": 6,
											"value": "226"
										},
										{
											"begin": 1770,
											"end": 1851,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1670,
											"end": 1858,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1670,
											"end": 1858,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1670,
											"end": 1858,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1670,
											"end": 1858,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1670,
											"end": 1858,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 7738,
											"end": 8458,
											"name": "tag",
											"source": 6,
											"value": "222"
										},
										{
											"begin": 7738,
											"end": 8458,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7818,
											"end": 7836,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 7846,
											"end": 7865,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 7984,
											"end": 7988,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 7981,
											"end": 7982,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 7974,
											"end": 7978,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 7968,
											"end": 7979,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 7961,
											"end": 7965,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 7955,
											"end": 7959,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 7951,
											"end": 7966,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 7948,
											"end": 7949,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 7941,
											"end": 7946,
											"name": "DUP9",
											"source": 6
										},
										{
											"begin": 7934,
											"end": 7939,
											"name": "GAS",
											"source": 6
										},
										{
											"begin": 7929,
											"end": 7989,
											"name": "CALL",
											"source": 6
										},
										{
											"begin": 8041,
											"end": 8048,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 8031,
											"end": 8207,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "231"
										},
										{
											"begin": 8031,
											"end": 8207,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 8085,
											"end": 8089,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 8079,
											"end": 8090,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 8130,
											"end": 8146,
											"name": "RETURNDATASIZE",
											"source": 6
										},
										{
											"begin": 8127,
											"end": 8128,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 8122,
											"end": 8125,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 8107,
											"end": 8147,
											"name": "RETURNDATACOPY",
											"source": 6
										},
										{
											"begin": 8176,
											"end": 8192,
											"name": "RETURNDATASIZE",
											"source": 6
										},
										{
											"begin": 8171,
											"end": 8174,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 8164,
											"end": 8193,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 8031,
											"end": 8207,
											"name": "tag",
											"source": 6,
											"value": "231"
										},
										{
											"begin": 8031,
											"end": 8207,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 8284,
											"end": 8285,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 8278,
											"end": 8286,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 8234,
											"end": 8250,
											"name": "RETURNDATASIZE",
											"source": 6
										},
										{
											"begin": 8234,
											"end": 8250,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 8310,
											"end": 8325,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 8310,
											"end": 8325,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 8310,
											"end": 8378,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "232"
										},
										{
											"begin": 8310,
											"end": 8378,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 8362,
											"end": 8373,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 8377,
											"end": 8378,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 8362,
											"end": 8378,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 8362,
											"end": 8378,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 8310,
											"end": 8378,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "233"
										},
										{
											"begin": 8310,
											"end": 8378,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 8310,
											"end": 8378,
											"name": "tag",
											"source": 6,
											"value": "232"
										},
										{
											"begin": 8310,
											"end": 8378,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 8328,
											"end": 8354,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 8328,
											"end": 8354,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 8328,
											"end": 8354,
											"name": "EXTCODESIZE",
											"source": 6
										},
										{
											"begin": 8328,
											"end": 8359,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 8310,
											"end": 8378,
											"name": "tag",
											"source": 6,
											"value": "233"
										},
										{
											"begin": 8310,
											"end": 8378,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 8306,
											"end": 8452,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 8306,
											"end": 8452,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "226"
										},
										{
											"begin": 8306,
											"end": 8452,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 8401,
											"end": 8441,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 8401,
											"end": 8441,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "5274AFE7"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 8401,
											"end": 8441,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 8401,
											"end": 8441,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1181,
											"end": 1213,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 1181,
											"end": 1213,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 8401,
											"end": 8441,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 8401,
											"end": 8441,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 8401,
											"end": 8441,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1163,
											"end": 1214,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 1136,
											"end": 1154,
											"name": "PUSH",
											"source": 13,
											"value": "24"
										},
										{
											"begin": 1136,
											"end": 1154,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 8401,
											"end": 8441,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "98"
										},
										{
											"begin": 1003,
											"end": 1220,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 196,
											"end": 369,
											"name": "tag",
											"source": 13,
											"value": "236"
										},
										{
											"begin": 196,
											"end": 369,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 264,
											"end": 284,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 264,
											"end": 284,
											"name": "CALLDATALOAD",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 313,
											"end": 344,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 313,
											"end": 344,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 303,
											"end": 345,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 303,
											"end": 345,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 293,
											"end": 363,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "241"
										},
										{
											"begin": 293,
											"end": 363,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 359,
											"end": 360,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 356,
											"end": 357,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 349,
											"end": 361,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 293,
											"end": 363,
											"name": "tag",
											"source": 13,
											"value": "241"
										},
										{
											"begin": 293,
											"end": 363,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 196,
											"end": 369,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 196,
											"end": 369,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 196,
											"end": 369,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 196,
											"end": 369,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 374,
											"end": 560,
											"name": "tag",
											"source": 13,
											"value": "31"
										},
										{
											"begin": 374,
											"end": 560,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 433,
											"end": 439,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 486,
											"end": 488,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 474,
											"end": 483,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 465,
											"end": 472,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 461,
											"end": 484,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 457,
											"end": 489,
											"name": "SLT",
											"source": 13
										},
										{
											"begin": 454,
											"end": 506,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 454,
											"end": 506,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "243"
										},
										{
											"begin": 454,
											"end": 506,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 502,
											"end": 503,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 499,
											"end": 500,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 492,
											"end": 504,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 454,
											"end": 506,
											"name": "tag",
											"source": 13,
											"value": "243"
										},
										{
											"begin": 454,
											"end": 506,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 525,
											"end": 554,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "244"
										},
										{
											"begin": 544,
											"end": 553,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 525,
											"end": 554,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "236"
										},
										{
											"begin": 525,
											"end": 554,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 525,
											"end": 554,
											"name": "tag",
											"source": 13,
											"value": "244"
										},
										{
											"begin": 525,
											"end": 554,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 515,
											"end": 554,
											"name": "SWAP4",
											"source": 13
										},
										{
											"begin": 374,
											"end": 560,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 374,
											"end": 560,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 818,
											"end": 998,
											"name": "tag",
											"source": 13,
											"value": "37"
										},
										{
											"begin": 818,
											"end": 998,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 877,
											"end": 883,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 930,
											"end": 932,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 918,
											"end": 927,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 909,
											"end": 916,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 905,
											"end": 928,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 901,
											"end": 933,
											"name": "SLT",
											"source": 13
										},
										{
											"begin": 898,
											"end": 950,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 898,
											"end": 950,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "247"
										},
										{
											"begin": 898,
											"end": 950,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 946,
											"end": 947,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 943,
											"end": 944,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 936,
											"end": 948,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 898,
											"end": 950,
											"name": "tag",
											"source": 13,
											"value": "247"
										},
										{
											"begin": 898,
											"end": 950,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 969,
											"end": 992,
											"name": "CALLDATALOAD",
											"source": 13
										},
										{
											"begin": 969,
											"end": 992,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 818,
											"end": 998,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 818,
											"end": 998,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 1225,
											"end": 1479,
											"name": "tag",
											"source": 13,
											"value": "64"
										},
										{
											"begin": 1225,
											"end": 1479,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1293,
											"end": 1299,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 1301,
											"end": 1307,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 1354,
											"end": 1356,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 1342,
											"end": 1351,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 1333,
											"end": 1340,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 1329,
											"end": 1352,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 1325,
											"end": 1357,
											"name": "SLT",
											"source": 13
										},
										{
											"begin": 1322,
											"end": 1374,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 1322,
											"end": 1374,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "250"
										},
										{
											"begin": 1322,
											"end": 1374,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 1370,
											"end": 1371,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 1367,
											"end": 1368,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 1360,
											"end": 1372,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 1322,
											"end": 1374,
											"name": "tag",
											"source": 13,
											"value": "250"
										},
										{
											"begin": 1322,
											"end": 1374,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1393,
											"end": 1422,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "251"
										},
										{
											"begin": 1412,
											"end": 1421,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 1393,
											"end": 1422,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "236"
										},
										{
											"begin": 1393,
											"end": 1422,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 1393,
											"end": 1422,
											"name": "tag",
											"source": 13,
											"value": "251"
										},
										{
											"begin": 1393,
											"end": 1422,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1383,
											"end": 1422,
											"name": "SWAP5",
											"source": 13
										},
										{
											"begin": 1469,
											"end": 1471,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 1454,
											"end": 1472,
											"name": "SWAP4",
											"source": 13
										},
										{
											"begin": 1454,
											"end": 1472,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 1454,
											"end": 1472,
											"name": "SWAP4",
											"source": 13
										},
										{
											"begin": 1454,
											"end": 1472,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 1441,
											"end": 1473,
											"name": "CALLDATALOAD",
											"source": 13
										},
										{
											"begin": 1441,
											"end": 1473,
											"name": "SWAP4",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1225,
											"end": 1479,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 2284,
											"end": 2411,
											"name": "tag",
											"source": 13,
											"value": "237"
										},
										{
											"begin": 2284,
											"end": 2411,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2345,
											"end": 2355,
											"name": "PUSH",
											"source": 13,
											"value": "4E487B71"
										},
										{
											"begin": 2340,
											"end": 2343,
											"name": "PUSH",
											"source": 13,
											"value": "E0"
										},
										{
											"begin": 2336,
											"end": 2356,
											"name": "SHL",
											"source": 13
										},
										{
											"begin": 2333,
											"end": 2334,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 2326,
											"end": 2357,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 2376,
											"end": 2380,
											"name": "PUSH",
											"source": 13,
											"value": "11"
										},
										{
											"begin": 2373,
											"end": 2374,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 2366,
											"end": 2381,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 2400,
											"end": 2404,
											"name": "PUSH",
											"source": 13,
											"value": "24"
										},
										{
											"begin": 2397,
											"end": 2398,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 2390,
											"end": 2405,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 2416,
											"end": 2584,
											"name": "tag",
											"source": 13,
											"value": "101"
										},
										{
											"begin": 2416,
											"end": 2584,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2489,
											"end": 2498,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 2489,
											"end": 2498,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 2489,
											"end": 2498,
											"name": "MUL",
											"source": 13
										},
										{
											"begin": 2520,
											"end": 2529,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 2520,
											"end": 2529,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 2537,
											"end": 2552,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 2537,
											"end": 2552,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 2537,
											"end": 2552,
											"name": "DIV",
											"source": 13
										},
										{
											"begin": 2531,
											"end": 2553,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 2531,
											"end": 2553,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 2517,
											"end": 2554,
											"name": "OR",
											"source": 13
										},
										{
											"begin": 2507,
											"end": 2578,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "258"
										},
										{
											"begin": 2507,
											"end": 2578,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 2558,
											"end": 2576,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "258"
										},
										{
											"begin": 2558,
											"end": 2576,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "237"
										},
										{
											"begin": 2558,
											"end": 2576,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 2558,
											"end": 2576,
											"name": "tag",
											"source": 13,
											"value": "258"
										},
										{
											"begin": 2558,
											"end": 2576,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2416,
											"end": 2584,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 2416,
											"end": 2584,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 2416,
											"end": 2584,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 2416,
											"end": 2584,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 2416,
											"end": 2584,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 2589,
											"end": 2806,
											"name": "tag",
											"source": 13,
											"value": "103"
										},
										{
											"begin": 2589,
											"end": 2806,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2629,
											"end": 2630,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 2655,
											"end": 2656,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 2645,
											"end": 2777,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "260"
										},
										{
											"begin": 2645,
											"end": 2777,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 2699,
											"end": 2709,
											"name": "PUSH",
											"source": 13,
											"value": "4E487B71"
										},
										{
											"begin": 2694,
											"end": 2697,
											"name": "PUSH",
											"source": 13,
											"value": "E0"
										},
										{
											"begin": 2690,
											"end": 2710,
											"name": "SHL",
											"source": 13
										},
										{
											"begin": 2687,
											"end": 2688,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 2680,
											"end": 2711,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 2734,
											"end": 2738,
											"name": "PUSH",
											"source": 13,
											"value": "12"
										},
										{
											"begin": 2731,
											"end": 2732,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 2724,
											"end": 2739,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 2762,
											"end": 2766,
											"name": "PUSH",
											"source": 13,
											"value": "24"
										},
										{
											"begin": 2759,
											"end": 2760,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 2752,
											"end": 2767,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 2645,
											"end": 2777,
											"name": "tag",
											"source": 13,
											"value": "260"
										},
										{
											"begin": 2645,
											"end": 2777,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2791,
											"end": 2800,
											"name": "DIV",
											"source": 13
										},
										{
											"begin": 2791,
											"end": 2800,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 2589,
											"end": 2806,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 2811,
											"end": 2939,
											"name": "tag",
											"source": 13,
											"value": "105"
										},
										{
											"begin": 2811,
											"end": 2939,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2878,
											"end": 2887,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 2878,
											"end": 2887,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 2878,
											"end": 2887,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 2899,
											"end": 2910,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 2899,
											"end": 2910,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 2899,
											"end": 2910,
											"name": "GT",
											"source": 13
										},
										{
											"begin": 2896,
											"end": 2933,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 2896,
											"end": 2933,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "258"
										},
										{
											"begin": 2896,
											"end": 2933,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 2913,
											"end": 2931,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "258"
										},
										{
											"begin": 2913,
											"end": 2931,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "237"
										},
										{
											"begin": 2913,
											"end": 2931,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 3635,
											"end": 3760,
											"name": "tag",
											"source": 13,
											"value": "143"
										},
										{
											"begin": 3635,
											"end": 3760,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3700,
											"end": 3709,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 3700,
											"end": 3709,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 3700,
											"end": 3709,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 3721,
											"end": 3731,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 3721,
											"end": 3731,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 3721,
											"end": 3731,
											"name": "GT",
											"source": 13
										},
										{
											"begin": 3718,
											"end": 3754,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 3718,
											"end": 3754,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "258"
										},
										{
											"begin": 3718,
											"end": 3754,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 3734,
											"end": 3752,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "258"
										},
										{
											"begin": 3734,
											"end": 3752,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "237"
										},
										{
											"begin": 3734,
											"end": 3752,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 4122,
											"end": 4306,
											"name": "tag",
											"source": 13,
											"value": "167"
										},
										{
											"begin": 4122,
											"end": 4306,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 4192,
											"end": 4198,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 4245,
											"end": 4247,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 4233,
											"end": 4242,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 4224,
											"end": 4231,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 4220,
											"end": 4243,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 4216,
											"end": 4248,
											"name": "SLT",
											"source": 13
										},
										{
											"begin": 4213,
											"end": 4265,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 4213,
											"end": 4265,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "271"
										},
										{
											"begin": 4213,
											"end": 4265,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 4261,
											"end": 4262,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 4258,
											"end": 4259,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 4251,
											"end": 4263,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 4213,
											"end": 4265,
											"name": "tag",
											"source": 13,
											"value": "271"
										},
										{
											"begin": 4213,
											"end": 4265,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4284,
											"end": 4300,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 4284,
											"end": 4300,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 4122,
											"end": 4306,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4122,
											"end": 4306,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/access/Ownable.sol",
								"@openzeppelin/contracts/interfaces/IERC1363.sol",
								"@openzeppelin/contracts/interfaces/IERC165.sol",
								"@openzeppelin/contracts/interfaces/IERC20.sol",
								"@openzeppelin/contracts/security/ReentrancyGuard.sol",
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
								"@openzeppelin/contracts/utils/Address.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"@openzeppelin/contracts/utils/Errors.sol",
								"@openzeppelin/contracts/utils/introspection/IERC165.sol",
								"ARY/HardStake.sol",
								"ARY/SwapPro.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"accTokensPerShare()": "2f3c9a4f",
							"claimRewards()": "372500ab",
							"deposit(uint256)": "b6b55f25",
							"emergencyWithdraw()": "db2e21bc",
							"minimumVolumeRequired()": "644f362d",
							"notifyRewardAmount(uint256)": "3c6b16ab",
							"owner()": "8da5cb5b",
							"pendingReward(address)": "f40f0f52",
							"recoverERC20(address,uint256)": "8980f11f",
							"renounceOwnership()": "715018a6",
							"rewardToken()": "f7c618c1",
							"stakingToken()": "72f702f3",
							"swapContract()": "8ea83031",
							"totalRewards()": "0e15561a",
							"totalStaked()": "817b1cd2",
							"transferOwnership(address)": "f2fde38b",
							"updateMinimumVolumeRequired(uint256)": "2277d7e1",
							"userInfo(address)": "1959a002",
							"withdraw(uint256)": "2e1a7d4d"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_stakingToken\",\"type\":\"address\"},{\"internalType\":\"address payable\",\"name\":\"_swapContract\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_minimumVolumeRequired\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"SafeERC20FailedOperation\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Claim\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Deposit\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"RewardAdded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Withdraw\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"accTokensPerShare\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"claimRewards\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"deposit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"emergencyWithdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"minimumVolumeRequired\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"reward\",\"type\":\"uint256\"}],\"name\":\"notifyRewardAmount\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_user\",\"type\":\"address\"}],\"name\":\"pendingReward\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenAmount\",\"type\":\"uint256\"}],\"name\":\"recoverERC20\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"rewardToken\",\"outputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"stakingToken\",\"outputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"swapContract\",\"outputs\":[{\"internalType\":\"contract SwapPro\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalRewards\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalStaked\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_newVolume\",\"type\":\"uint256\"}],\"name\":\"updateMinimumVolumeRequired\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"userInfo\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"rewardDebt\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"errors\":{\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}],\"SafeERC20FailedOperation(address)\":[{\"details\":\"An operation with an ERC-20 token failed.\"}]},\"kind\":\"dev\",\"methods\":{\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"ARY/HardStake.sol\":\"HardStake\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"@openzeppelin/contracts/interfaces/IERC1363.sol\":{\"keccak256\":\"0x9b6b3e7803bc5f2f8cd7ad57db8ac1def61a9930a5a3107df4882e028a9605d7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://da62d6be1f5c6edf577f0cb45666a8aa9c2086a4bac87d95d65f02e2f4c36a4b\",\"dweb:/ipfs/QmNkpvBpoCMvX8JwAFNSc5XxJ2q5BXJpL5L1txb4QkqVFF\"]},\"@openzeppelin/contracts/interfaces/IERC165.sol\":{\"keccak256\":\"0xde7e9fd9aee8d4f40772f96bb3b58836cbc6dfc0227014a061947f8821ea9724\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://11fea9f8bc98949ac6709f0c1699db7430d2948137aa94d5a9e95a91f61a710a\",\"dweb:/ipfs/QmQdfRXxQjwP6yn3DVo1GHPpriKNcFghSPi94Z1oKEFUNS\"]},\"@openzeppelin/contracts/interfaces/IERC20.sol\":{\"keccak256\":\"0xce41876e78d1badc0512229b4d14e4daf83bc1003d7f83978d18e0e56f965b9c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a2608291cb038b388d80b79a06b6118a42f7894ff67b7da10ec0dbbf5b2973ba\",\"dweb:/ipfs/QmWohqcBLbcxmA4eGPhZDXe5RYMMEEpFq22nfkaUMvTfw1\"]},\"@openzeppelin/contracts/security/ReentrancyGuard.sol\":{\"keccak256\":\"0xa535a5df777d44e945dd24aa43a11e44b024140fc340ad0dfe42acf4002aade1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://41319e7f621f2dc3733511332c4fd032f8e32ad2aa7fd6f665c19741d9941a34\",\"dweb:/ipfs/QmcYR3bd862GD1Bc7jwrU9bGxrhUu5na1oP964bDCu2id1\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]},\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":{\"keccak256\":\"0xca2ae13e0610f6a99238dd00b97bd786bc92732dae6d6b9d61f573ec51018310\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://75f8c71ce0c91c40dd5f249ace0b7d8270f8f1767231bcf71490f7157d6ba862\",\"dweb:/ipfs/QmYXgxeDyFHvz3JsXxLEYN6GNUR44ThHeFj5XkpkgMoG4w\"]},\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0x9d8da059267bac779a2dbbb9a26c2acf00ca83085e105d62d5d4ef96054a47f5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c78e2aa4313323cecd1ef12a8d6265b96beee1a199923abf55d9a2a9e291ad23\",\"dweb:/ipfs/QmUTs2KStXucZezzFo3EYeqYu47utu56qrF7jj1Gue65vb\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"@openzeppelin/contracts/utils/Errors.sol\":{\"keccak256\":\"0x6afa713bfd42cf0f7656efa91201007ac465e42049d7de1d50753a373648c123\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ba1d02f4847670a1b83dec9f7d37f0b0418d6043447b69f3a29a5f9efc547fcf\",\"dweb:/ipfs/QmQ7iH2keLNUKgq2xSWcRmuBE5eZ3F5whYAkAGzCNNoEWB\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x79796192ec90263f21b464d5bc90b777a525971d3de8232be80d9c4f9fb353b8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f6fda447a62815e8064f47eff0dd1cf58d9207ad69b5d32280f8d7ed1d1e4621\",\"dweb:/ipfs/QmfDRc7pxfaXB2Dh9np5Uf29Na3pQ7tafRS684wd3GLjVL\"]},\"ARY/HardStake.sol\":{\"keccak256\":\"0x6e27af6ec81ea0af9c2b0eaee10ad27f1be7f3fd66b838f3da464eaf2c8650ae\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://58e4f0c61455aeff6ad70786b730f940e660016a8d0bb3dbc943b6c2394cb6d1\",\"dweb:/ipfs/QmcwPTru1MzmgYEsDWqL7nruLbLacRG6g8C4S2egbBhw1M\"]},\"ARY/SwapPro.sol\":{\"keccak256\":\"0xae8d740d234c37974ff3218b29ceb9cd11aa6411198a581783988be94e8433d0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c6d909c51a123835a6e1320a81b26f5a0bae6fff7c5f1ab04052511faf1ef64a\",\"dweb:/ipfs/QmV6EVkEHgqHRaunnNKcyCuDN42z7BBNHqcmGTtf63hvqh\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 8,
								"contract": "ARY/HardStake.sol:HardStake",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							},
							{
								"astId": 248,
								"contract": "ARY/HardStake.sol:HardStake",
								"label": "_status",
								"offset": 0,
								"slot": "1",
								"type": "t_uint256"
							},
							{
								"astId": 1131,
								"contract": "ARY/HardStake.sol:HardStake",
								"label": "swapContract",
								"offset": 0,
								"slot": "2",
								"type": "t_contract(SwapPro)2711"
							},
							{
								"astId": 1144,
								"contract": "ARY/HardStake.sol:HardStake",
								"label": "totalStaked",
								"offset": 0,
								"slot": "3",
								"type": "t_uint256"
							},
							{
								"astId": 1149,
								"contract": "ARY/HardStake.sol:HardStake",
								"label": "userInfo",
								"offset": 0,
								"slot": "4",
								"type": "t_mapping(t_address,t_struct(UserInfo)1136_storage)"
							},
							{
								"astId": 1151,
								"contract": "ARY/HardStake.sol:HardStake",
								"label": "accTokensPerShare",
								"offset": 0,
								"slot": "5",
								"type": "t_uint256"
							},
							{
								"astId": 1153,
								"contract": "ARY/HardStake.sol:HardStake",
								"label": "totalRewards",
								"offset": 0,
								"slot": "6",
								"type": "t_uint256"
							},
							{
								"astId": 1155,
								"contract": "ARY/HardStake.sol:HardStake",
								"label": "minimumVolumeRequired",
								"offset": 0,
								"slot": "7",
								"type": "t_uint256"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_contract(SwapPro)2711": {
								"encoding": "inplace",
								"label": "contract SwapPro",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_struct(UserInfo)1136_storage)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => struct HardStake.UserInfo)",
								"numberOfBytes": "32",
								"value": "t_struct(UserInfo)1136_storage"
							},
							"t_struct(UserInfo)1136_storage": {
								"encoding": "inplace",
								"label": "struct HardStake.UserInfo",
								"members": [
									{
										"astId": 1133,
										"contract": "ARY/HardStake.sol:HardStake",
										"label": "amount",
										"offset": 0,
										"slot": "0",
										"type": "t_uint256"
									},
									{
										"astId": 1135,
										"contract": "ARY/HardStake.sol:HardStake",
										"label": "rewardDebt",
										"offset": 0,
										"slot": "1",
										"type": "t_uint256"
									}
								],
								"numberOfBytes": "64"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"ARY/SwapPro.sol": {
				"IDEXFactory": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "tokenA",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "tokenB",
									"type": "address"
								}
							],
							"name": "createPair",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "tokenA",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "tokenB",
									"type": "address"
								}
							],
							"name": "getPair",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"createPair(address,address)": "c9c65396",
							"getPair(address,address)": "e6a43905"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenA\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"tokenB\",\"type\":\"address\"}],\"name\":\"createPair\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenA\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"tokenB\",\"type\":\"address\"}],\"name\":\"getPair\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"ARY/SwapPro.sol\":\"IDEXFactory\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"ARY/SwapPro.sol\":{\"keccak256\":\"0xae8d740d234c37974ff3218b29ceb9cd11aa6411198a581783988be94e8433d0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c6d909c51a123835a6e1320a81b26f5a0bae6fff7c5f1ab04052511faf1ef64a\",\"dweb:/ipfs/QmV6EVkEHgqHRaunnNKcyCuDN42z7BBNHqcmGTtf63hvqh\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IDEXRouter": {
					"abi": [
						{
							"inputs": [],
							"name": "WETH",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "pure",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "factory",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "pure",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amountIn",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "reserveIn",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "reserveOut",
									"type": "uint256"
								}
							],
							"name": "getAmountOut",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "pure",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amountOut",
									"type": "uint256"
								},
								{
									"internalType": "address[]",
									"name": "path",
									"type": "address[]"
								}
							],
							"name": "getAmountsIn",
							"outputs": [
								{
									"internalType": "uint256[]",
									"name": "",
									"type": "uint256[]"
								}
							],
							"stateMutability": "pure",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amountIn",
									"type": "uint256"
								},
								{
									"internalType": "address[]",
									"name": "path",
									"type": "address[]"
								}
							],
							"name": "getAmountsOut",
							"outputs": [
								{
									"internalType": "uint256[]",
									"name": "",
									"type": "uint256[]"
								}
							],
							"stateMutability": "pure",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amountOutMin",
									"type": "uint256"
								},
								{
									"internalType": "address[]",
									"name": "path",
									"type": "address[]"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								}
							],
							"name": "swapExactETHForTokensSupportingFeeOnTransferTokens",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amountIn",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountOutMin",
									"type": "uint256"
								},
								{
									"internalType": "address[]",
									"name": "path",
									"type": "address[]"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								}
							],
							"name": "swapExactTokensForETHSupportingFeeOnTransferTokens",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amountIn",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountOutMin",
									"type": "uint256"
								},
								{
									"internalType": "address[]",
									"name": "path",
									"type": "address[]"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								}
							],
							"name": "swapExactTokensForTokensSupportingFeeOnTransferTokens",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"WETH()": "ad5c4648",
							"factory()": "c45a0155",
							"getAmountOut(uint256,uint256,uint256)": "054d50d4",
							"getAmountsIn(uint256,address[])": "1f00ca74",
							"getAmountsOut(uint256,address[])": "d06ca61f",
							"swapExactETHForTokensSupportingFeeOnTransferTokens(uint256,address[],address,uint256)": "b6f9de95",
							"swapExactTokensForETHSupportingFeeOnTransferTokens(uint256,uint256,address[],address,uint256)": "791ac947",
							"swapExactTokensForTokensSupportingFeeOnTransferTokens(uint256,uint256,address[],address,uint256)": "5c11d795"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"WETH\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"factory\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountIn\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"reserveIn\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"reserveOut\",\"type\":\"uint256\"}],\"name\":\"getAmountOut\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountOut\",\"type\":\"uint256\"},{\"internalType\":\"address[]\",\"name\":\"path\",\"type\":\"address[]\"}],\"name\":\"getAmountsIn\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountIn\",\"type\":\"uint256\"},{\"internalType\":\"address[]\",\"name\":\"path\",\"type\":\"address[]\"}],\"name\":\"getAmountsOut\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountOutMin\",\"type\":\"uint256\"},{\"internalType\":\"address[]\",\"name\":\"path\",\"type\":\"address[]\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"swapExactETHForTokensSupportingFeeOnTransferTokens\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountIn\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountOutMin\",\"type\":\"uint256\"},{\"internalType\":\"address[]\",\"name\":\"path\",\"type\":\"address[]\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"swapExactTokensForETHSupportingFeeOnTransferTokens\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountIn\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountOutMin\",\"type\":\"uint256\"},{\"internalType\":\"address[]\",\"name\":\"path\",\"type\":\"address[]\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"swapExactTokensForTokensSupportingFeeOnTransferTokens\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"ARY/SwapPro.sol\":\"IDEXRouter\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"ARY/SwapPro.sol\":{\"keccak256\":\"0xae8d740d234c37974ff3218b29ceb9cd11aa6411198a581783988be94e8433d0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c6d909c51a123835a6e1320a81b26f5a0bae6fff7c5f1ab04052511faf1ef64a\",\"dweb:/ipfs/QmV6EVkEHgqHRaunnNKcyCuDN42z7BBNHqcmGTtf63hvqh\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IPair": {
					"abi": [
						{
							"inputs": [],
							"name": "getReserves",
							"outputs": [
								{
									"internalType": "uint112",
									"name": "",
									"type": "uint112"
								},
								{
									"internalType": "uint112",
									"name": "",
									"type": "uint112"
								},
								{
									"internalType": "uint32",
									"name": "",
									"type": "uint32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "token0",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "token1",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"getReserves()": "0902f1ac",
							"token0()": "0dfe1681",
							"token1()": "d21220a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"getReserves\",\"outputs\":[{\"internalType\":\"uint112\",\"name\":\"\",\"type\":\"uint112\"},{\"internalType\":\"uint112\",\"name\":\"\",\"type\":\"uint112\"},{\"internalType\":\"uint32\",\"name\":\"\",\"type\":\"uint32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"token0\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"token1\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"ARY/SwapPro.sol\":\"IPair\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"ARY/SwapPro.sol\":{\"keccak256\":\"0xae8d740d234c37974ff3218b29ceb9cd11aa6411198a581783988be94e8433d0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c6d909c51a123835a6e1320a81b26f5a0bae6fff7c5f1ab04052511faf1ef64a\",\"dweb:/ipfs/QmV6EVkEHgqHRaunnNKcyCuDN42z7BBNHqcmGTtf63hvqh\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IWCRO": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "deposit",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "wad",
									"type": "uint256"
								}
							],
							"name": "withdraw",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the value of tokens owned by `account`."
							},
							"totalSupply()": {
								"details": "Returns the value of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"deposit()": "d0e30db0",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd",
							"withdraw(uint256)": "2e1a7d4d"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"deposit\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"ARY/SwapPro.sol\":\"IWCRO\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"ARY/SwapPro.sol\":{\"keccak256\":\"0xae8d740d234c37974ff3218b29ceb9cd11aa6411198a581783988be94e8433d0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c6d909c51a123835a6e1320a81b26f5a0bae6fff7c5f1ab04052511faf1ef64a\",\"dweb:/ipfs/QmV6EVkEHgqHRaunnNKcyCuDN42z7BBNHqcmGTtf63hvqh\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"SwapPro": {
					"abi": [
						{
							"inputs": [],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "OwnableInvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "OwnableUnauthorizedAccount",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "ARY",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "CUSDC",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "CUSDT",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "DEXFACTORY",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "DEXROUTER",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "MERY",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "WCRO",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"name": "addresses",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "clearVolume",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "competition_started",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "deposit",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "feePercent",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "feeReceiver",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getUserVolumes",
							"outputs": [
								{
									"components": [
										{
											"internalType": "address",
											"name": "user",
											"type": "address"
										},
										{
											"internalType": "uint256",
											"name": "volume",
											"type": "uint256"
										}
									],
									"internalType": "struct Volume[]",
									"name": "",
									"type": "tuple[]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_feeReceiver",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "_feePercent",
									"type": "uint256"
								}
							],
							"name": "setFeeData",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "startCompetition",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "stopCompetition",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "toToken",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amountOutMin",
									"type": "uint256"
								}
							],
							"name": "swapCROForToken",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "fromToken",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amountIn",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountOutMin",
									"type": "uint256"
								}
							],
							"name": "swapTokenForCRO",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "fromToken",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "toToken",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amountIn",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountOutMin",
									"type": "uint256"
								}
							],
							"name": "swapTokenForToken",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "userVolume",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "wad",
									"type": "uint256"
								}
							],
							"name": "withdraw",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"stateMutability": "payable",
							"type": "receive"
						}
					],
					"devdoc": {
						"errors": {
							"OwnableInvalidOwner(address)": [
								{
									"details": "The owner is not a valid owner account. (eg. `address(0)`)"
								}
							],
							"OwnableUnauthorizedAccount(address)": [
								{
									"details": "The caller account is not authorized to perform an operation."
								}
							]
						},
						"kind": "dev",
						"methods": {
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"ARY/SwapPro.sol\":2107:10094  contract SwapPro is Ownable {... */\n  mstore(0x40, 0x80)\n    /* \"ARY/SwapPro.sol\":2797:2836  bool public competition_started = false */\n  0x03\n  dup1\n  sload\n  not(0xff)\n  and\n  swap1\n  sstore\n    /* \"ARY/SwapPro.sol\":3118:3760  constructor() Ownable(msg.sender) {... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n    /* \"ARY/SwapPro.sol\":3140:3150  msg.sender */\n  caller\n  dup1\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1269:1364  if (initialOwner == address(0)) {... */\n  tag_5\n  jumpi\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1322:1353  OwnableInvalidOwner(address(0)) */\n  mload(0x40)\n  shl(0xe0, 0x1e4fbdf7)\n  dup2\n  mstore\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1350:1351  0 */\n  0x00\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1322:1353  OwnableInvalidOwner(address(0)) */\n  0x04\n  dup3\n  add\n    /* \"#utility.yul\":160:211   */\n  mstore\n    /* \"#utility.yul\":133:151   */\n  0x24\n  add\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1322:1353  OwnableInvalidOwner(address(0)) */\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1269:1364  if (initialOwner == address(0)) {... */\ntag_5:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1373:1405  _transferOwnership(initialOwner) */\n  tag_8\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1392:1404  initialOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1373:1391  _transferOwnership */\n  tag_9\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1373:1405  _transferOwnership(initialOwner) */\n  jump\t// in\ntag_8:\n  pop\n    /* \"ARY/SwapPro.sol\":3163:3170  factory */\n  0x07\n    /* \"ARY/SwapPro.sol\":3163:3196  factory = IDEXFactory(DEXFACTORY) */\n  dup1\n  sload\n  not(sub(shl(0xa0, 0x01), 0x01))\n  swap1\n  dup2\n  and\n    /* \"ARY/SwapPro.sol\":2683:2725  0x3B44B2a187a7b3824131F8db5a74194D0a42Fc15 */\n  0x3b44b2a187a7b3824131f8db5a74194d0a42fc15\n    /* \"ARY/SwapPro.sol\":3163:3196  factory = IDEXFactory(DEXFACTORY) */\n  or\n  swap1\n  swap2\n  sstore\n    /* \"ARY/SwapPro.sol\":3207:3213  router */\n  0x08\n    /* \"ARY/SwapPro.sol\":3207:3237  router = IDEXRouter(DEXROUTER) */\n  dup1\n  sload\n  dup3\n  and\n  0x00\n  dup1\n  mload\n  0x20\n  data_bb9835c734ea2ee08b9eb3f6004f5f118e5b999fbe41c94259ac9a08cb0aff12\n  dup4\n  codecopy\n  dup2\n  mload\n  swap2\n  mstore\n  swap1\n  dup2\n  or\n  swap1\n  swap2\n  sstore\n    /* \"ARY/SwapPro.sol\":3248:3253  cusdc */\n  0x09\n    /* \"ARY/SwapPro.sol\":3248:3269  cusdc = IERC20(CUSDC) */\n  dup1\n  sload\n  dup4\n  and\n    /* \"ARY/SwapPro.sol\":2174:2216  0xc21223249CA28397B4B6541dfFaEcC539BfF0c59 */\n  0xc21223249ca28397b4b6541dffaecc539bff0c59\n    /* \"ARY/SwapPro.sol\":3248:3269  cusdc = IERC20(CUSDC) */\n  swap1\n  dup2\n  or\n  swap1\n  swap2\n  sstore\n    /* \"ARY/SwapPro.sol\":3280:3285  cusdt */\n  0x0a\n    /* \"ARY/SwapPro.sol\":3280:3301  cusdt = IERC20(CUSDT) */\n  dup1\n  sload\n  dup5\n  and\n    /* \"ARY/SwapPro.sol\":2255:2297  0x66e428c3f67a68878562e79A0234c1F83c208770 */\n  0x66e428c3f67a68878562e79a0234c1f83c208770\n    /* \"ARY/SwapPro.sol\":3280:3301  cusdt = IERC20(CUSDT) */\n  or\n  swap1\n  sstore\n    /* \"ARY/SwapPro.sol\":3312:3315  ary */\n  0x0b\n    /* \"ARY/SwapPro.sol\":3312:3329  ary = IERC20(ARY) */\n  dup1\n  sload\n  dup5\n  and\n    /* \"ARY/SwapPro.sol\":2414:2456  0x41bc026dABe978bc2FAfeA1850456511ca4B01bc */\n  0x41bc026dabe978bc2fafea1850456511ca4b01bc\n    /* \"ARY/SwapPro.sol\":3312:3329  ary = IERC20(ARY) */\n  or\n  swap1\n  sstore\n    /* \"ARY/SwapPro.sol\":3340:3344  mery */\n  0x0c\n    /* \"ARY/SwapPro.sol\":3340:3359  mery = IERC20(MERY) */\n  dup1\n  sload\n  dup5\n  and\n    /* \"ARY/SwapPro.sol\":2494:2536  0x3b41B27E74Dd366CE27cB389dc7877D4e1516d4d */\n  0x3b41b27e74dd366ce27cb389dc7877d4e1516d4d\n    /* \"ARY/SwapPro.sol\":3340:3359  mery = IERC20(MERY) */\n  or\n  swap1\n  sstore\n    /* \"ARY/SwapPro.sol\":3370:3374  wcro */\n  0x0d\n    /* \"ARY/SwapPro.sol\":3370:3388  wcro = IWCRO(WCRO) */\n  dup1\n  sload\n  dup5\n  and\n    /* \"ARY/SwapPro.sol\":2335:2377  0x5C7F8A570d578ED84E63fdFA7b1eE72dEae1AE23 */\n  0x5c7f8a570d578ed84e63fdfa7b1ee72deae1ae23\n    /* \"ARY/SwapPro.sol\":3370:3388  wcro = IWCRO(WCRO) */\n  or\n  swap1\n  sstore\n    /* \"ARY/SwapPro.sol\":3163:3196  factory = IDEXFactory(DEXFACTORY) */\n  0x01\n    /* \"ARY/SwapPro.sol\":3399:3423  feeReceiver = msg.sender */\n  dup1\n  sload\n  swap1\n  swap4\n  and\n    /* \"ARY/SwapPro.sol\":3413:3423  msg.sender */\n  caller\n    /* \"ARY/SwapPro.sol\":3399:3423  feeReceiver = msg.sender */\n  or\n  swap1\n  swap3\n  sstore\n    /* \"ARY/SwapPro.sol\":3447:3448  3 */\n  0x03\n    /* \"ARY/SwapPro.sol\":3434:3444  feePercent */\n  0x02\n    /* \"ARY/SwapPro.sol\":3434:3448  feePercent = 3 */\n  sstore\n    /* \"ARY/SwapPro.sol\":3497:3540  cusdc.approve(DEXROUTER, type(uint256).max) */\n  mload(0x40)\n  shl(0xe0, 0x095ea7b3)\n  dup2\n  mstore\n    /* \"ARY/SwapPro.sol\":3497:3510  cusdc.approve */\n  0x095ea7b3\n  swap2\n    /* \"ARY/SwapPro.sol\":3497:3540  cusdc.approve(DEXROUTER, type(uint256).max) */\n  tag_11\n  swap2\n  not(0x00)\n  swap1\n  0x04\n  add\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"#utility.yul\":414:446   */\n  swap3\n  swap1\n  swap3\n  and\n    /* \"#utility.yul\":396:447   */\n  dup3\n  mstore\n    /* \"#utility.yul\":478:480   */\n  0x20\n    /* \"#utility.yul\":463:481   */\n  dup3\n  add\n    /* \"#utility.yul\":456:490   */\n  mstore\n    /* \"#utility.yul\":384:386   */\n  0x40\n    /* \"#utility.yul\":369:387   */\n  add\n  swap1\n    /* \"#utility.yul\":222:496   */\n  jump\n    /* \"ARY/SwapPro.sol\":3497:3540  cusdc.approve(DEXROUTER, type(uint256).max) */\ntag_11:\n  0x20\n  mload(0x40)\n  dup1\n  dup4\n  sub\n  dup2\n  0x00\n  dup8\n  gas\n  call\n  iszero\n  dup1\n  iszero\n  tag_14\n  jumpi\n  returndatasize\n  0x00\n  dup1\n  returndatacopy\n  revert(0x00, returndatasize)\ntag_14:\n  pop\n  pop\n  pop\n  pop\n  mload(0x40)\n  returndatasize\n  not(0x1f)\n  0x1f\n  dup3\n  add\n  and\n  dup3\n  add\n  dup1\n  0x40\n  mstore\n  pop\n  dup2\n  add\n  swap1\n  tag_15\n  swap2\n  swap1\n  tag_16\n  jump\t// in\ntag_15:\n  pop\n    /* \"ARY/SwapPro.sol\":3551:3556  cusdt */\n  sload(0x0a)\n    /* \"ARY/SwapPro.sol\":3551:3594  cusdt.approve(DEXROUTER, type(uint256).max) */\n  mload(0x40)\n  shl(0xe0, 0x095ea7b3)\n  dup2\n  mstore\n  0x00\n  dup1\n  mload\n  0x20\n  data_bb9835c734ea2ee08b9eb3f6004f5f118e5b999fbe41c94259ac9a08cb0aff12\n  dup4\n  codecopy\n  dup2\n  mload\n  swap2\n  mstore\n  0x04\n  dup3\n  add\n    /* \"#utility.yul\":396:447   */\n  mstore\n  not(0x00)\n    /* \"#utility.yul\":463:481   */\n  0x24\n  dup3\n  add\n    /* \"#utility.yul\":456:490   */\n  mstore\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"ARY/SwapPro.sol\":3551:3556  cusdt */\n  swap1\n  swap2\n  and\n  swap1\n    /* \"ARY/SwapPro.sol\":3551:3564  cusdt.approve */\n  0x095ea7b3\n  swap1\n    /* \"#utility.yul\":369:387   */\n  0x44\n  add\n    /* \"ARY/SwapPro.sol\":3551:3594  cusdt.approve(DEXROUTER, type(uint256).max) */\n  0x20\n  mload(0x40)\n  dup1\n  dup4\n  sub\n  dup2\n  0x00\n  dup8\n  gas\n  call\n  iszero\n  dup1\n  iszero\n  tag_19\n  jumpi\n  returndatasize\n  0x00\n  dup1\n  returndatacopy\n  revert(0x00, returndatasize)\ntag_19:\n  pop\n  pop\n  pop\n  pop\n  mload(0x40)\n  returndatasize\n  not(0x1f)\n  0x1f\n  dup3\n  add\n  and\n  dup3\n  add\n  dup1\n  0x40\n  mstore\n  pop\n  dup2\n  add\n  swap1\n  tag_20\n  swap2\n  swap1\n  tag_16\n  jump\t// in\ntag_20:\n  pop\n    /* \"ARY/SwapPro.sol\":3605:3608  ary */\n  sload(0x0b)\n    /* \"ARY/SwapPro.sol\":3605:3646  ary.approve(DEXROUTER, type(uint256).max) */\n  mload(0x40)\n  shl(0xe0, 0x095ea7b3)\n  dup2\n  mstore\n  0x00\n  dup1\n  mload\n  0x20\n  data_bb9835c734ea2ee08b9eb3f6004f5f118e5b999fbe41c94259ac9a08cb0aff12\n  dup4\n  codecopy\n  dup2\n  mload\n  swap2\n  mstore\n  0x04\n  dup3\n  add\n    /* \"#utility.yul\":396:447   */\n  mstore\n  not(0x00)\n    /* \"#utility.yul\":463:481   */\n  0x24\n  dup3\n  add\n    /* \"#utility.yul\":456:490   */\n  mstore\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"ARY/SwapPro.sol\":3605:3608  ary */\n  swap1\n  swap2\n  and\n  swap1\n    /* \"ARY/SwapPro.sol\":3605:3616  ary.approve */\n  0x095ea7b3\n  swap1\n    /* \"#utility.yul\":369:387   */\n  0x44\n  add\n    /* \"ARY/SwapPro.sol\":3605:3646  ary.approve(DEXROUTER, type(uint256).max) */\n  0x20\n  mload(0x40)\n  dup1\n  dup4\n  sub\n  dup2\n  0x00\n  dup8\n  gas\n  call\n  iszero\n  dup1\n  iszero\n  tag_23\n  jumpi\n  returndatasize\n  0x00\n  dup1\n  returndatacopy\n  revert(0x00, returndatasize)\ntag_23:\n  pop\n  pop\n  pop\n  pop\n  mload(0x40)\n  returndatasize\n  not(0x1f)\n  0x1f\n  dup3\n  add\n  and\n  dup3\n  add\n  dup1\n  0x40\n  mstore\n  pop\n  dup2\n  add\n  swap1\n  tag_24\n  swap2\n  swap1\n  tag_16\n  jump\t// in\ntag_24:\n  pop\n    /* \"ARY/SwapPro.sol\":3657:3661  wcro */\n  sload(0x0d)\n    /* \"ARY/SwapPro.sol\":3657:3699  wcro.approve(DEXROUTER, type(uint256).max) */\n  mload(0x40)\n  shl(0xe0, 0x095ea7b3)\n  dup2\n  mstore\n  0x00\n  dup1\n  mload\n  0x20\n  data_bb9835c734ea2ee08b9eb3f6004f5f118e5b999fbe41c94259ac9a08cb0aff12\n  dup4\n  codecopy\n  dup2\n  mload\n  swap2\n  mstore\n  0x04\n  dup3\n  add\n    /* \"#utility.yul\":396:447   */\n  mstore\n  not(0x00)\n    /* \"#utility.yul\":463:481   */\n  0x24\n  dup3\n  add\n    /* \"#utility.yul\":456:490   */\n  mstore\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"ARY/SwapPro.sol\":3657:3661  wcro */\n  swap1\n  swap2\n  and\n  swap1\n    /* \"ARY/SwapPro.sol\":3657:3669  wcro.approve */\n  0x095ea7b3\n  swap1\n    /* \"#utility.yul\":369:387   */\n  0x44\n  add\n    /* \"ARY/SwapPro.sol\":3657:3699  wcro.approve(DEXROUTER, type(uint256).max) */\n  0x20\n  mload(0x40)\n  dup1\n  dup4\n  sub\n  dup2\n  0x00\n  dup8\n  gas\n  call\n  iszero\n  dup1\n  iszero\n  tag_27\n  jumpi\n  returndatasize\n  0x00\n  dup1\n  returndatacopy\n  revert(0x00, returndatasize)\ntag_27:\n  pop\n  pop\n  pop\n  pop\n  mload(0x40)\n  returndatasize\n  not(0x1f)\n  0x1f\n  dup3\n  add\n  and\n  dup3\n  add\n  dup1\n  0x40\n  mstore\n  pop\n  dup2\n  add\n  swap1\n  tag_28\n  swap2\n  swap1\n  tag_16\n  jump\t// in\ntag_28:\n  pop\n    /* \"ARY/SwapPro.sol\":3710:3714  mery */\n  sload(0x0c)\n    /* \"ARY/SwapPro.sol\":3710:3752  mery.approve(DEXROUTER, type(uint256).max) */\n  mload(0x40)\n  shl(0xe0, 0x095ea7b3)\n  dup2\n  mstore\n  0x00\n  dup1\n  mload\n  0x20\n  data_bb9835c734ea2ee08b9eb3f6004f5f118e5b999fbe41c94259ac9a08cb0aff12\n  dup4\n  codecopy\n  dup2\n  mload\n  swap2\n  mstore\n  0x04\n  dup3\n  add\n    /* \"#utility.yul\":396:447   */\n  mstore\n  not(0x00)\n    /* \"#utility.yul\":463:481   */\n  0x24\n  dup3\n  add\n    /* \"#utility.yul\":456:490   */\n  mstore\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"ARY/SwapPro.sol\":3710:3714  mery */\n  swap1\n  swap2\n  and\n  swap1\n    /* \"ARY/SwapPro.sol\":3710:3722  mery.approve */\n  0x095ea7b3\n  swap1\n    /* \"#utility.yul\":369:387   */\n  0x44\n  add\n    /* \"ARY/SwapPro.sol\":3710:3752  mery.approve(DEXROUTER, type(uint256).max) */\n  0x20\n  mload(0x40)\n  dup1\n  dup4\n  sub\n  dup2\n  0x00\n  dup8\n  gas\n  call\n  iszero\n  dup1\n  iszero\n  tag_31\n  jumpi\n  returndatasize\n  0x00\n  dup1\n  returndatacopy\n  revert(0x00, returndatasize)\ntag_31:\n  pop\n  pop\n  pop\n  pop\n  mload(0x40)\n  returndatasize\n  not(0x1f)\n  0x1f\n  dup3\n  add\n  and\n  dup3\n  add\n  dup1\n  0x40\n  mstore\n  pop\n  dup2\n  add\n  swap1\n  tag_32\n  swap2\n  swap1\n  tag_16\n  jump\t// in\ntag_32:\n  pop\n    /* \"ARY/SwapPro.sol\":2107:10094  contract SwapPro is Ownable {... */\n  jump(tag_35)\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\ntag_9:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2985:3001  address oldOwner */\n  0x00\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3004:3010  _owner */\n  dup1\n  sload\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3020:3037  _owner = newOwner */\n  dup4\n  dup2\n  and\n  not(sub(shl(0xa0, 0x01), 0x01))\n  dup4\n  and\n  dup2\n  or\n  dup5\n  sstore\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n  mload(0x40)\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3004:3010  _owner */\n  swap2\n  swap1\n  swap3\n  and\n  swap3\n  dup4\n  swap2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n  0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n  swap2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2985:3001  address oldOwner */\n  swap1\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n  log3\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2975:3099  {... */\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":501:778   */\ntag_16:\n    /* \"#utility.yul\":568:574   */\n  0x00\n    /* \"#utility.yul\":621:623   */\n  0x20\n    /* \"#utility.yul\":609:618   */\n  dup3\n    /* \"#utility.yul\":600:607   */\n  dup5\n    /* \"#utility.yul\":596:619   */\n  sub\n    /* \"#utility.yul\":592:624   */\n  slt\n    /* \"#utility.yul\":589:641   */\n  iszero\n  tag_39\n  jumpi\n    /* \"#utility.yul\":637:638   */\n  0x00\n    /* \"#utility.yul\":634:635   */\n  dup1\n    /* \"#utility.yul\":627:639   */\n  revert\n    /* \"#utility.yul\":589:641   */\ntag_39:\n    /* \"#utility.yul\":669:678   */\n  dup2\n    /* \"#utility.yul\":663:679   */\n  mload\n    /* \"#utility.yul\":722:727   */\n  dup1\n    /* \"#utility.yul\":715:728   */\n  iszero\n    /* \"#utility.yul\":708:729   */\n  iszero\n    /* \"#utility.yul\":701:706   */\n  dup2\n    /* \"#utility.yul\":698:730   */\n  eq\n    /* \"#utility.yul\":688:748   */\n  tag_40\n  jumpi\n    /* \"#utility.yul\":744:745   */\n  0x00\n    /* \"#utility.yul\":741:742   */\n  dup1\n    /* \"#utility.yul\":734:746   */\n  revert\n    /* \"#utility.yul\":688:748   */\ntag_40:\n    /* \"#utility.yul\":767:772   */\n  swap4\n    /* \"#utility.yul\":501:778   */\n  swap3\n  pop\n  pop\n  pop\n  jump\t// out\ntag_35:\n    /* \"ARY/SwapPro.sol\":2107:10094  contract SwapPro is Ownable {... */\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\ndata_bb9835c734ea2ee08b9eb3f6004f5f118e5b999fbe41c94259ac9a08cb0aff12 000000000000000000000000145863eb42cf62847a6ca784e6416c1682b1b2ae\n\nsub_0: assembly {\n        /* \"ARY/SwapPro.sol\":2107:10094  contract SwapPro is Ownable {... */\n      mstore(0x40, 0x80)\n      jumpi(tag_1, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0xa37b9e7f\n      gt\n      tag_28\n      jumpi\n      dup1\n      0xb3f00674\n      gt\n      tag_29\n      jumpi\n      dup1\n      0xd3e66a9e\n      gt\n      tag_30\n      jumpi\n      dup1\n      0xd3e66a9e\n      eq\n      tag_24\n      jumpi\n      dup1\n      0xd7b7d3f3\n      eq\n      tag_25\n      jumpi\n      dup1\n      0xedf26d9b\n      eq\n      tag_26\n      jumpi\n      dup1\n      0xf2fde38b\n      eq\n      tag_27\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_30:\n      dup1\n      0xb3f00674\n      eq\n      tag_21\n      jumpi\n      dup1\n      0xd0e30db0\n      eq\n      tag_22\n      jumpi\n      dup1\n      0xd16a4010\n      eq\n      tag_23\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_29:\n      dup1\n      0xa37b9e7f\n      eq\n      tag_15\n      jumpi\n      dup1\n      0xa6769ef8\n      eq\n      tag_16\n      jumpi\n      dup1\n      0xac65334f\n      eq\n      tag_17\n      jumpi\n      dup1\n      0xae38a070\n      eq\n      tag_18\n      jumpi\n      dup1\n      0xafe43b94\n      eq\n      tag_19\n      jumpi\n      dup1\n      0xb0befe63\n      eq\n      tag_20\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_28:\n      dup1\n      0x5f0018cd\n      gt\n      tag_31\n      jumpi\n      dup1\n      0x5f0018cd\n      eq\n      tag_9\n      jumpi\n      dup1\n      0x6504fbad\n      eq\n      tag_10\n      jumpi\n      dup1\n      0x715018a6\n      eq\n      tag_11\n      jumpi\n      dup1\n      0x7c6f8fae\n      eq\n      tag_12\n      jumpi\n      dup1\n      0x7fd6f15c\n      eq\n      tag_13\n      jumpi\n      dup1\n      0x8da5cb5b\n      eq\n      tag_14\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_31:\n      dup1\n      0x16214120\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x1d470cb1\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x2e1a7d4d\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x3977d68d\n      eq\n      tag_6\n      jumpi\n      dup1\n      0x39bda01c\n      eq\n      tag_7\n      jumpi\n      dup1\n      0x53ac861e\n      eq\n      tag_8\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      jumpi(tag_2, calldatasize)\n      stop\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"ARY/SwapPro.sol\":8894:9636  function swapTokenForCRO(... */\n    tag_3:\n      callvalue\n      dup1\n      iszero\n      tag_34\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_34:\n      pop\n      tag_35\n      tag_36\n      calldatasize\n      0x04\n      tag_37\n      jump\t// in\n    tag_36:\n      tag_38\n      jump\t// in\n    tag_35:\n      stop\n        /* \"ARY/SwapPro.sol\":2304:2377  address public constant WCRO = 0x5C7F8A570d578ED84E63fdFA7b1eE72dEae1AE23 */\n    tag_4:\n      callvalue\n      dup1\n      iszero\n      tag_39\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_39:\n      pop\n      tag_40\n        /* \"ARY/SwapPro.sol\":2335:2377  0x5C7F8A570d578ED84E63fdFA7b1eE72dEae1AE23 */\n      0x5c7f8a570d578ed84e63fdfa7b1ee72deae1ae23\n        /* \"ARY/SwapPro.sol\":2304:2377  address public constant WCRO = 0x5C7F8A570d578ED84E63fdFA7b1eE72dEae1AE23 */\n      dup2\n      jump\n    tag_40:\n      mload(0x40)\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":683:715   */\n      swap1\n      swap2\n      and\n        /* \"#utility.yul\":665:716   */\n      dup2\n      mstore\n        /* \"#utility.yul\":653:655   */\n      0x20\n        /* \"#utility.yul\":638:656   */\n      add\n        /* \"ARY/SwapPro.sol\":2304:2377  address public constant WCRO = 0x5C7F8A570d578ED84E63fdFA7b1eE72dEae1AE23 */\n    tag_42:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"ARY/SwapPro.sol\":9851:10054  function withdraw (... */\n    tag_5:\n      callvalue\n      dup1\n      iszero\n      tag_44\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_44:\n      pop\n      tag_35\n      tag_46\n      calldatasize\n      0x04\n      tag_47\n      jump\t// in\n    tag_46:\n      tag_48\n      jump\t// in\n        /* \"ARY/SwapPro.sol\":4731:4891  function setFeeData(address _feeReceiver, uint256 _feePercent) public onlyOwner {... */\n    tag_6:\n      callvalue\n      dup1\n      iszero\n      tag_49\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_49:\n      pop\n      tag_35\n      tag_51\n      calldatasize\n      0x04\n      tag_52\n      jump\t// in\n    tag_51:\n      tag_53\n      jump\t// in\n        /* \"ARY/SwapPro.sol\":4222:4472  function clearVolume() public onlyOwner{... */\n    tag_7:\n      callvalue\n      dup1\n      iszero\n      tag_54\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_54:\n      pop\n      tag_35\n      tag_56\n      jump\t// in\n        /* \"ARY/SwapPro.sol\":8047:8842  function swapCROForToken (... */\n    tag_8:\n      tag_35\n      tag_58\n      calldatasize\n      0x04\n      tag_52\n      jump\t// in\n    tag_58:\n      tag_59\n      jump\t// in\n        /* \"ARY/SwapPro.sol\":4480:4570  function stopCompetition() public onlyOwner {... */\n    tag_9:\n      callvalue\n      dup1\n      iszero\n      tag_60\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_60:\n      pop\n      tag_35\n      tag_62\n      jump\t// in\n        /* \"ARY/SwapPro.sol\":2223:2297  address public constant CUSDT = 0x66e428c3f67a68878562e79A0234c1F83c208770 */\n    tag_10:\n      callvalue\n      dup1\n      iszero\n      tag_63\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_63:\n      pop\n      tag_40\n        /* \"ARY/SwapPro.sol\":2255:2297  0x66e428c3f67a68878562e79A0234c1F83c208770 */\n      0x66e428c3f67a68878562e79a0234c1f83c208770\n        /* \"ARY/SwapPro.sol\":2223:2297  address public constant CUSDT = 0x66e428c3f67a68878562e79A0234c1F83c208770 */\n      dup2\n      jump\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2293:2394  function renounceOwnership() public virtual onlyOwner {... */\n    tag_11:\n      callvalue\n      dup1\n      iszero\n      tag_67\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_67:\n      pop\n      tag_35\n      tag_69\n      jump\t// in\n        /* \"ARY/SwapPro.sol\":2637:2725  address public constant DEXFACTORY =... */\n    tag_12:\n      callvalue\n      dup1\n      iszero\n      tag_70\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_70:\n      pop\n      tag_40\n        /* \"ARY/SwapPro.sol\":2683:2725  0x3B44B2a187a7b3824131F8db5a74194D0a42Fc15 */\n      0x3b44b2a187a7b3824131f8db5a74194d0a42fc15\n        /* \"ARY/SwapPro.sol\":2637:2725  address public constant DEXFACTORY =... */\n      dup2\n      jump\n        /* \"ARY/SwapPro.sol\":2765:2790  uint256 public feePercent */\n    tag_13:\n      callvalue\n      dup1\n      iszero\n      tag_74\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_74:\n      pop\n      tag_75\n      sload(0x02)\n      dup2\n      jump\n    tag_75:\n      mload(0x40)\n        /* \"#utility.yul\":1317:1342   */\n      swap1\n      dup2\n      mstore\n        /* \"#utility.yul\":1305:1307   */\n      0x20\n        /* \"#utility.yul\":1290:1308   */\n      add\n        /* \"ARY/SwapPro.sol\":2765:2790  uint256 public feePercent */\n      tag_42\n        /* \"#utility.yul\":1171:1348   */\n      jump\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1638:1723  function owner() public view virtual returns (address) {... */\n    tag_14:\n      callvalue\n      dup1\n      iszero\n      tag_79\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_79:\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1684:1691  address */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1710:1716  _owner */\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1638:1723  function owner() public view virtual returns (address) {... */\n      jump(tag_40)\n        /* \"ARY/SwapPro.sol\":2142:2216  address public constant CUSDC = 0xc21223249CA28397B4B6541dfFaEcC539BfF0c59 */\n    tag_15:\n      callvalue\n      dup1\n      iszero\n      tag_83\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_83:\n      pop\n      tag_40\n        /* \"ARY/SwapPro.sol\":2174:2216  0xc21223249CA28397B4B6541dfFaEcC539BfF0c59 */\n      0xc21223249ca28397b4b6541dffaecc539bff0c59\n        /* \"ARY/SwapPro.sol\":2142:2216  address public constant CUSDC = 0xc21223249CA28397B4B6541dfFaEcC539BfF0c59 */\n      dup2\n      jump\n        /* \"ARY/SwapPro.sol\":2843:2888  mapping(address => uint256) public userVolume */\n    tag_16:\n      callvalue\n      dup1\n      iszero\n      tag_87\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_87:\n      pop\n      tag_75\n      tag_89\n      calldatasize\n      0x04\n      tag_90\n      jump\t// in\n    tag_89:\n      mstore(0x20, 0x04)\n      0x00\n      swap1\n      dup2\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      dup2\n      jump\n        /* \"ARY/SwapPro.sol\":2797:2836  bool public competition_started = false */\n    tag_17:\n      callvalue\n      dup1\n      iszero\n      tag_93\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_93:\n      pop\n      sload(0x03)\n      tag_94\n      swap1\n      0xff\n      and\n      dup2\n      jump\n    tag_94:\n      mload(0x40)\n        /* \"#utility.yul\":1709:1723   */\n      swap1\n      iszero\n        /* \"#utility.yul\":1702:1724   */\n      iszero\n        /* \"#utility.yul\":1684:1725   */\n      dup2\n      mstore\n        /* \"#utility.yul\":1672:1674   */\n      0x20\n        /* \"#utility.yul\":1657:1675   */\n      add\n        /* \"ARY/SwapPro.sol\":2797:2836  bool public competition_started = false */\n      tag_42\n        /* \"#utility.yul\":1544:1731   */\n      jump\n        /* \"ARY/SwapPro.sol\":3809:4174  function getUserVolumes() external view returns (Volume[] memory) {... */\n    tag_18:\n      callvalue\n      dup1\n      iszero\n      tag_98\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_98:\n      pop\n      tag_99\n      tag_100\n      jump\t// in\n    tag_99:\n      mload(0x40)\n      tag_42\n      swap2\n      swap1\n      tag_102\n      jump\t// in\n        /* \"ARY/SwapPro.sol\":2384:2456  address public constant ARY = 0x41bc026dABe978bc2FAfeA1850456511ca4B01bc */\n    tag_19:\n      callvalue\n      dup1\n      iszero\n      tag_103\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_103:\n      pop\n      tag_40\n        /* \"ARY/SwapPro.sol\":2414:2456  0x41bc026dABe978bc2FAfeA1850456511ca4B01bc */\n      0x41bc026dabe978bc2fafea1850456511ca4b01bc\n        /* \"ARY/SwapPro.sol\":2384:2456  address public constant ARY = 0x41bc026dABe978bc2FAfeA1850456511ca4B01bc */\n      dup2\n      jump\n        /* \"ARY/SwapPro.sol\":2463:2536  address public constant MERY = 0x3b41B27E74Dd366CE27cB389dc7877D4e1516d4d */\n    tag_20:\n      callvalue\n      dup1\n      iszero\n      tag_107\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_107:\n      pop\n      tag_40\n        /* \"ARY/SwapPro.sol\":2494:2536  0x3b41B27E74Dd366CE27cB389dc7877D4e1516d4d */\n      0x3b41b27e74dd366ce27cb389dc7877d4e1516d4d\n        /* \"ARY/SwapPro.sol\":2463:2536  address public constant MERY = 0x3b41B27E74Dd366CE27cB389dc7877D4e1516d4d */\n      dup2\n      jump\n        /* \"ARY/SwapPro.sol\":2732:2758  address public feeReceiver */\n    tag_21:\n      callvalue\n      dup1\n      iszero\n      tag_111\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_111:\n      pop\n      sload(0x01)\n      tag_40\n      swap1\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      dup2\n      jump\n        /* \"ARY/SwapPro.sol\":9672:9843  function deposit () public payable {... */\n    tag_22:\n      tag_35\n      tag_116\n      jump\t// in\n        /* \"ARY/SwapPro.sol\":5854:7999  function swapTokenForToken(... */\n    tag_23:\n      callvalue\n      dup1\n      iszero\n      tag_117\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_117:\n      pop\n      tag_35\n      tag_119\n      calldatasize\n      0x04\n      tag_120\n      jump\t// in\n    tag_119:\n      tag_121\n      jump\t// in\n        /* \"ARY/SwapPro.sol\":4576:4666  function startCompetition() public onlyOwner {... */\n    tag_24:\n      callvalue\n      dup1\n      iszero\n      tag_122\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_122:\n      pop\n      tag_35\n      tag_124\n      jump\t// in\n        /* \"ARY/SwapPro.sol\":2543:2630  address public constant DEXROUTER =... */\n    tag_25:\n      callvalue\n      dup1\n      iszero\n      tag_125\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_125:\n      pop\n      tag_40\n        /* \"ARY/SwapPro.sol\":2588:2630  0x145863Eb42Cf62847A6Ca784e6416C1682b1b2Ae */\n      0x145863eb42cf62847a6ca784e6416c1682b1b2ae\n        /* \"ARY/SwapPro.sol\":2543:2630  address public constant DEXROUTER =... */\n      dup2\n      jump\n        /* \"ARY/SwapPro.sol\":2941:2967  address[] public addresses */\n    tag_26:\n      callvalue\n      dup1\n      iszero\n      tag_129\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_129:\n      pop\n      tag_40\n      tag_131\n      calldatasize\n      0x04\n      tag_47\n      jump\t// in\n    tag_131:\n      tag_132\n      jump\t// in\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2543:2758  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_27:\n      callvalue\n      dup1\n      iszero\n      tag_134\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_134:\n      pop\n      tag_35\n      tag_136\n      calldatasize\n      0x04\n      tag_90\n      jump\t// in\n    tag_136:\n      tag_137\n      jump\t// in\n        /* \"ARY/SwapPro.sol\":8894:9636  function swapTokenForCRO(... */\n    tag_38:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"ARY/SwapPro.sol\":9035:9051  fromToken == ARY */\n      dup4\n      and\n        /* \"ARY/SwapPro.sol\":2414:2456  0x41bc026dABe978bc2FAfeA1850456511ca4B01bc */\n      0x41bc026dabe978bc2fafea1850456511ca4b01bc\n        /* \"ARY/SwapPro.sol\":9035:9051  fromToken == ARY */\n      eq\n        /* \"ARY/SwapPro.sol\":9035:9074  fromToken == ARY && competition_started */\n      dup1\n      iszero\n      tag_139\n      jumpi\n      pop\n        /* \"ARY/SwapPro.sol\":9055:9074  competition_started */\n      and(0xff, sload(0x03))\n        /* \"ARY/SwapPro.sol\":9035:9074  fromToken == ARY && competition_started */\n    tag_139:\n        /* \"ARY/SwapPro.sol\":9032:9107  if(fromToken == ARY && competition_started) addVolume(msg.sender, amountIn) */\n      iszero\n      tag_141\n      jumpi\n        /* \"ARY/SwapPro.sol\":9076:9107  addVolume(msg.sender, amountIn) */\n      tag_141\n        /* \"ARY/SwapPro.sol\":9086:9096  msg.sender */\n      caller\n        /* \"ARY/SwapPro.sol\":9098:9106  amountIn */\n      dup4\n        /* \"ARY/SwapPro.sol\":9076:9085  addVolume */\n      tag_142\n        /* \"ARY/SwapPro.sol\":9076:9107  addVolume(msg.sender, amountIn) */\n      jump\t// in\n    tag_141:\n        /* \"ARY/SwapPro.sol\":9118:9185  IERC20(fromToken).transferFrom(msg.sender, address(this), amountIn) */\n      mload(0x40)\n      shl(0xe0, 0x23b872dd)\n      dup2\n      mstore\n        /* \"ARY/SwapPro.sol\":9149:9159  msg.sender */\n      caller\n        /* \"ARY/SwapPro.sol\":9118:9185  IERC20(fromToken).transferFrom(msg.sender, address(this), amountIn) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":3195:3229   */\n      mstore\n        /* \"ARY/SwapPro.sol\":9169:9173  this */\n      address\n        /* \"#utility.yul\":3245:3263   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":3238:3281   */\n      mstore\n        /* \"#utility.yul\":3297:3315   */\n      0x44\n      dup2\n      add\n        /* \"#utility.yul\":3290:3324   */\n      dup4\n      swap1\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"ARY/SwapPro.sol\":9118:9148  IERC20(fromToken).transferFrom */\n      dup5\n      and\n      swap1\n      0x23b872dd\n      swap1\n        /* \"#utility.yul\":3130:3148   */\n      0x64\n      add\n        /* \"ARY/SwapPro.sol\":9118:9185  IERC20(fromToken).transferFrom(msg.sender, address(this), amountIn) */\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_146\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_146:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_147\n      swap2\n      swap1\n      tag_148\n      jump\t// in\n    tag_147:\n      pop\n        /* \"ARY/SwapPro.sol\":9206:9223  uint256 feeAmount */\n      0x00\n        /* \"ARY/SwapPro.sol\":9250:9254  1000 */\n      0x03e8\n        /* \"ARY/SwapPro.sol\":9237:9247  feePercent */\n      sload(0x02)\n        /* \"ARY/SwapPro.sol\":9226:9234  amountIn */\n      dup5\n        /* \"ARY/SwapPro.sol\":9226:9247  amountIn * feePercent */\n      tag_149\n      swap2\n      swap1\n      tag_150\n      jump\t// in\n    tag_149:\n        /* \"ARY/SwapPro.sol\":9226:9254  amountIn * feePercent / 1000 */\n      tag_151\n      swap2\n      swap1\n      tag_152\n      jump\t// in\n    tag_151:\n        /* \"ARY/SwapPro.sol\":9206:9254  uint256 feeAmount = amountIn * feePercent / 1000 */\n      swap1\n      pop\n        /* \"ARY/SwapPro.sol\":9267:9295  getFee(fromToken, feeAmount) */\n      tag_153\n        /* \"ARY/SwapPro.sol\":9274:9283  fromToken */\n      dup5\n        /* \"ARY/SwapPro.sol\":9285:9294  feeAmount */\n      dup3\n        /* \"ARY/SwapPro.sol\":9267:9273  getFee */\n      tag_154\n        /* \"ARY/SwapPro.sol\":9267:9295  getFee(fromToken, feeAmount) */\n      jump\t// in\n    tag_153:\n        /* \"ARY/SwapPro.sol\":9332:9348  new address[](2) */\n      0x40\n      dup1\n      mload\n        /* \"ARY/SwapPro.sol\":9346:9347  2 */\n      0x02\n        /* \"ARY/SwapPro.sol\":9332:9348  new address[](2) */\n      dup1\n      dup3\n      mstore\n      0x60\n      dup3\n      add\n      dup4\n      mstore\n        /* \"ARY/SwapPro.sol\":9308:9329  address[] memory path */\n      0x00\n      swap3\n        /* \"ARY/SwapPro.sol\":9332:9348  new address[](2) */\n      0x20\n      dup4\n      add\n      swap1\n      dup1\n      calldatasize\n      dup4\n      calldatacopy\n      add\n      swap1\n      pop\n      pop\n        /* \"ARY/SwapPro.sol\":9308:9348  address[] memory path = new address[](2) */\n      swap1\n      pop\n        /* \"ARY/SwapPro.sol\":9369:9378  fromToken */\n      dup5\n        /* \"ARY/SwapPro.sol\":9359:9363  path */\n      dup2\n        /* \"ARY/SwapPro.sol\":9364:9365  0 */\n      0x00\n        /* \"ARY/SwapPro.sol\":9359:9366  path[0] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_160\n      jumpi\n      tag_160\n      tag_161\n      jump\t// in\n    tag_160:\n      0x20\n      mul\n      0x20\n      add\n      add\n        /* \"ARY/SwapPro.sol\":9359:9378  path[0] = fromToken */\n      swap1\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      swap1\n      dup2\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      dup2\n      mstore\n      pop\n      pop\n        /* \"ARY/SwapPro.sol\":2335:2377  0x5C7F8A570d578ED84E63fdFA7b1eE72dEae1AE23 */\n      0x5c7f8a570d578ed84e63fdfa7b1ee72deae1ae23\n        /* \"ARY/SwapPro.sol\":9389:9393  path */\n      dup2\n        /* \"ARY/SwapPro.sol\":9394:9395  1 */\n      0x01\n        /* \"ARY/SwapPro.sol\":9389:9396  path[1] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_163\n      jumpi\n      tag_163\n      tag_161\n      jump\t// in\n    tag_163:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"ARY/SwapPro.sol\":9389:9403  path[1] = WCRO */\n      swap3\n      dup4\n      and\n        /* \"ARY/SwapPro.sol\":9389:9396  path[1] */\n      0x20\n      swap2\n      dup3\n      mul\n      swap3\n      swap1\n      swap3\n      add\n      add\n        /* \"ARY/SwapPro.sol\":9389:9403  path[1] = WCRO */\n      mstore\n        /* \"ARY/SwapPro.sol\":9414:9420  router */\n      sload(0x08)\n      and\n        /* \"ARY/SwapPro.sol\":9414:9471  router.swapExactTokensForETHSupportingFeeOnTransferTokens */\n      0x791ac947\n        /* \"ARY/SwapPro.sol\":9486:9506  amountIn - feeAmount */\n      tag_164\n        /* \"ARY/SwapPro.sol\":9497:9506  feeAmount */\n      dup5\n        /* \"ARY/SwapPro.sol\":9486:9494  amountIn */\n      dup8\n        /* \"ARY/SwapPro.sol\":9486:9506  amountIn - feeAmount */\n      tag_165\n      jump\t// in\n    tag_164:\n        /* \"ARY/SwapPro.sol\":9521:9533  amountOutMin */\n      dup6\n        /* \"ARY/SwapPro.sol\":9548:9552  path */\n      dup5\n        /* \"ARY/SwapPro.sol\":9567:9577  msg.sender */\n      caller\n        /* \"ARY/SwapPro.sol\":9592:9617  block.timestamp + 1 hours */\n      tag_166\n        /* \"ARY/SwapPro.sol\":9592:9607  block.timestamp */\n      timestamp\n        /* \"ARY/SwapPro.sol\":9610:9617  1 hours */\n      0x0e10\n        /* \"ARY/SwapPro.sol\":9592:9617  block.timestamp + 1 hours */\n      tag_167\n      jump\t// in\n    tag_166:\n        /* \"ARY/SwapPro.sol\":9414:9628  router.swapExactTokensForETHSupportingFeeOnTransferTokens(... */\n      mload(0x40)\n      dup7\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_168\n      swap6\n      swap5\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_169\n      jump\t// in\n    tag_168:\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_170\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_170:\n      pop\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_172\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_172:\n      pop\n      pop\n      pop\n      pop\n        /* \"ARY/SwapPro.sol\":9019:9636  {... */\n      pop\n      pop\n        /* \"ARY/SwapPro.sol\":8894:9636  function swapTokenForCRO(... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"ARY/SwapPro.sol\":9851:10054  function withdraw (... */\n    tag_48:\n        /* \"ARY/SwapPro.sol\":9917:9921  wcro */\n      sload(0x0d)\n        /* \"ARY/SwapPro.sol\":9917:9966  wcro.transferFrom(msg.sender, address(this), wad) */\n      mload(0x40)\n      shl(0xe0, 0x23b872dd)\n      dup2\n      mstore\n        /* \"ARY/SwapPro.sol\":9935:9945  msg.sender */\n      caller\n        /* \"ARY/SwapPro.sol\":9917:9966  wcro.transferFrom(msg.sender, address(this), wad) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":3195:3229   */\n      mstore\n        /* \"ARY/SwapPro.sol\":9955:9959  this */\n      address\n        /* \"#utility.yul\":3245:3263   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":3238:3281   */\n      mstore\n        /* \"#utility.yul\":3297:3315   */\n      0x44\n      dup2\n      add\n        /* \"#utility.yul\":3290:3324   */\n      dup4\n      swap1\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"ARY/SwapPro.sol\":9917:9921  wcro */\n      swap1\n      swap2\n      and\n      swap1\n        /* \"ARY/SwapPro.sol\":9917:9934  wcro.transferFrom */\n      0x23b872dd\n      swap1\n        /* \"#utility.yul\":3130:3148   */\n      0x64\n      add\n        /* \"ARY/SwapPro.sol\":9917:9966  wcro.transferFrom(msg.sender, address(this), wad) */\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_176\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_176:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_177\n      swap2\n      swap1\n      tag_148\n      jump\t// in\n    tag_177:\n      pop\n        /* \"ARY/SwapPro.sol\":9977:9981  wcro */\n      sload(0x0d)\n        /* \"ARY/SwapPro.sol\":9977:9995  wcro.withdraw(wad) */\n      mload(0x40)\n      shl(0xe0, 0x2e1a7d4d)\n      dup2\n      mstore\n      0x04\n      dup2\n      add\n        /* \"#utility.yul\":1317:1342   */\n      dup4\n      swap1\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"ARY/SwapPro.sol\":9977:9981  wcro */\n      swap1\n      swap2\n      and\n      swap1\n        /* \"ARY/SwapPro.sol\":9977:9990  wcro.withdraw */\n      0x2e1a7d4d\n      swap1\n        /* \"#utility.yul\":1290:1308   */\n      0x24\n      add\n        /* \"ARY/SwapPro.sol\":9977:9995  wcro.withdraw(wad) */\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_179\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_179:\n      pop\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_181\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_181:\n      pop\n      pop\n        /* \"ARY/SwapPro.sol\":10013:10046  payable(msg.sender).transfer(wad) */\n      mload(0x40)\n        /* \"ARY/SwapPro.sol\":10021:10031  msg.sender */\n      caller\n      swap3\n      pop\n        /* \"ARY/SwapPro.sol\":10013:10046  payable(msg.sender).transfer(wad) */\n      dup4\n      iszero\n      0x08fc\n      mul\n      swap2\n      pop\n        /* \"ARY/SwapPro.sol\":10042:10045  wad */\n      dup4\n      swap1\n        /* \"ARY/SwapPro.sol\":10013:10046  payable(msg.sender).transfer(wad) */\n      0x00\n      dup2\n      dup2\n      dup2\n        /* \"ARY/SwapPro.sol\":10042:10045  wad */\n      dup6\n        /* \"ARY/SwapPro.sol\":10021:10031  msg.sender */\n      dup9\n        /* \"ARY/SwapPro.sol\":10013:10046  payable(msg.sender).transfer(wad) */\n      dup9\n      call\n      swap4\n      pop\n      pop\n      pop\n      pop\n      iszero\n      dup1\n      iszero\n      tag_183\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_183:\n      pop\n        /* \"ARY/SwapPro.sol\":9851:10054  function withdraw (... */\n      pop\n      jump\t// out\n        /* \"ARY/SwapPro.sol\":4731:4891  function setFeeData(address _feeReceiver, uint256 _feePercent) public onlyOwner {... */\n    tag_53:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_185\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_186\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_185:\n        /* \"ARY/SwapPro.sol\":4822:4833  feeReceiver */\n      0x01\n        /* \"ARY/SwapPro.sol\":4822:4848  feeReceiver = _feeReceiver */\n      dup1\n      sload\n      not(sub(shl(0xa0, 0x01), 0x01))\n      and\n      sub(shl(0xa0, 0x01), 0x01)\n      swap4\n      swap1\n      swap4\n      and\n      swap3\n      swap1\n      swap3\n      or\n      swap1\n      swap2\n      sstore\n        /* \"ARY/SwapPro.sol\":4859:4869  feePercent */\n      0x02\n        /* \"ARY/SwapPro.sol\":4859:4883  feePercent = _feePercent */\n      sstore\n        /* \"ARY/SwapPro.sol\":4731:4891  function setFeeData(address _feeReceiver, uint256 _feePercent) public onlyOwner {... */\n      jump\t// out\n        /* \"ARY/SwapPro.sol\":4222:4472  function clearVolume() public onlyOwner{... */\n    tag_56:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_189\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_186\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_189:\n        /* \"ARY/SwapPro.sol\":4284:4293  addresses */\n      0x06\n        /* \"ARY/SwapPro.sol\":4284:4300  addresses.length */\n      sload\n        /* \"ARY/SwapPro.sol\":4272:4281  uint256 n */\n      0x00\n        /* \"ARY/SwapPro.sol\":4311:4400  for(uint256 i = 0; i < n; i++) {... */\n    tag_191:\n        /* \"ARY/SwapPro.sol\":4334:4335  n */\n      dup2\n        /* \"ARY/SwapPro.sol\":4330:4331  i */\n      dup2\n        /* \"ARY/SwapPro.sol\":4330:4335  i < n */\n      lt\n        /* \"ARY/SwapPro.sol\":4311:4400  for(uint256 i = 0; i < n; i++) {... */\n      iszero\n      tag_192\n      jumpi\n        /* \"ARY/SwapPro.sol\":4364:4374  userVolume */\n      0x04\n        /* \"ARY/SwapPro.sol\":4364:4388  userVolume[addresses[i]] */\n      0x00\n        /* \"ARY/SwapPro.sol\":4375:4384  addresses */\n      0x06\n        /* \"ARY/SwapPro.sol\":4385:4386  i */\n      dup4\n        /* \"ARY/SwapPro.sol\":4375:4387  addresses[i] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_195\n      jumpi\n      tag_195\n      tag_161\n      jump\t// in\n    tag_195:\n      0x00\n      swap2\n      dup3\n      mstore\n      0x20\n      dup1\n      dup4\n      keccak256\n      swap1\n      swap2\n      add\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n        /* \"ARY/SwapPro.sol\":4364:4388  userVolume[addresses[i]] */\n      dup4\n      mstore\n      dup3\n      add\n      swap3\n      swap1\n      swap3\n      mstore\n      0x40\n      add\n      dup2\n      keccak256\n        /* \"ARY/SwapPro.sol\":4357:4388  delete userVolume[addresses[i]] */\n      sstore\n        /* \"ARY/SwapPro.sol\":4337:4340  i++ */\n      dup1\n      tag_197\n      dup2\n      tag_198\n      jump\t// in\n    tag_197:\n      swap2\n      pop\n      pop\n        /* \"ARY/SwapPro.sol\":4311:4400  for(uint256 i = 0; i < n; i++) {... */\n      jump(tag_191)\n    tag_192:\n      pop\n        /* \"ARY/SwapPro.sol\":4410:4426  delete addresses */\n      tag_199\n        /* \"ARY/SwapPro.sol\":4417:4426  addresses */\n      0x06\n      0x00\n        /* \"ARY/SwapPro.sol\":4410:4426  delete addresses */\n      tag_200\n      jump\t// in\n    tag_199:\n      pop\n        /* \"ARY/SwapPro.sol\":4437:4456  competition_started */\n      0x03\n        /* \"ARY/SwapPro.sol\":4437:4464  competition_started = false */\n      dup1\n      sload\n      not(0xff)\n      and\n      swap1\n      sstore\n        /* \"ARY/SwapPro.sol\":4222:4472  function clearVolume() public onlyOwner{... */\n      jump\t// out\n        /* \"ARY/SwapPro.sol\":8047:8842  function swapCROForToken (... */\n    tag_59:\n        /* \"ARY/SwapPro.sol\":8233:8243  feePercent */\n      sload(0x02)\n        /* \"ARY/SwapPro.sol\":8182:8191  msg.value */\n      callvalue\n      swap1\n        /* \"ARY/SwapPro.sol\":8163:8179  uint256 amountIn */\n      0x00\n      swap1\n        /* \"ARY/SwapPro.sol\":8246:8250  1000 */\n      0x03e8\n      swap1\n        /* \"ARY/SwapPro.sol\":8222:8243  amountIn * feePercent */\n      tag_202\n      swap1\n        /* \"ARY/SwapPro.sol\":8182:8191  msg.value */\n      dup5\n        /* \"ARY/SwapPro.sol\":8222:8243  amountIn * feePercent */\n      tag_150\n      jump\t// in\n    tag_202:\n        /* \"ARY/SwapPro.sol\":8222:8250  amountIn * feePercent / 1000 */\n      tag_203\n      swap2\n      swap1\n      tag_152\n      jump\t// in\n    tag_203:\n        /* \"ARY/SwapPro.sol\":8269:8280  feeReceiver */\n      sload(0x01)\n        /* \"ARY/SwapPro.sol\":8261:8301  payable(feeReceiver).transfer(feeAmount) */\n      mload(0x40)\n        /* \"ARY/SwapPro.sol\":8202:8250  uint256 feeAmount = amountIn * feePercent / 1000 */\n      swap2\n      swap3\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"ARY/SwapPro.sol\":8269:8280  feeReceiver */\n      and\n      swap1\n        /* \"ARY/SwapPro.sol\":8261:8301  payable(feeReceiver).transfer(feeAmount) */\n      dup3\n      iszero\n      0x08fc\n      mul\n      swap1\n        /* \"ARY/SwapPro.sol\":8202:8250  uint256 feeAmount = amountIn * feePercent / 1000 */\n      dup4\n      swap1\n        /* \"ARY/SwapPro.sol\":8269:8280  feeReceiver */\n      0x00\n        /* \"ARY/SwapPro.sol\":8261:8301  payable(feeReceiver).transfer(feeAmount) */\n      dup2\n        /* \"ARY/SwapPro.sol\":8269:8280  feeReceiver */\n      dup2\n        /* \"ARY/SwapPro.sol\":8261:8301  payable(feeReceiver).transfer(feeAmount) */\n      dup2\n        /* \"ARY/SwapPro.sol\":8202:8250  uint256 feeAmount = amountIn * feePercent / 1000 */\n      dup6\n        /* \"ARY/SwapPro.sol\":8269:8280  feeReceiver */\n      dup9\n        /* \"ARY/SwapPro.sol\":8261:8301  payable(feeReceiver).transfer(feeAmount) */\n      dup9\n      call\n      swap4\n      pop\n      pop\n      pop\n      pop\n      iszero\n      dup1\n      iszero\n      tag_205\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_205:\n      pop\n        /* \"ARY/SwapPro.sol\":8338:8354  new address[](2) */\n      0x40\n      dup1\n      mload\n        /* \"ARY/SwapPro.sol\":8352:8353  2 */\n      0x02\n        /* \"ARY/SwapPro.sol\":8338:8354  new address[](2) */\n      dup1\n      dup3\n      mstore\n      0x60\n      dup3\n      add\n      dup4\n      mstore\n        /* \"ARY/SwapPro.sol\":8314:8335  address[] memory path */\n      0x00\n      swap3\n        /* \"ARY/SwapPro.sol\":8338:8354  new address[](2) */\n      0x20\n      dup4\n      add\n      swap1\n      dup1\n      calldatasize\n      dup4\n      calldatacopy\n      add\n      swap1\n      pop\n      pop\n        /* \"ARY/SwapPro.sol\":8314:8354  address[] memory path = new address[](2) */\n      swap1\n      pop\n        /* \"ARY/SwapPro.sol\":2335:2377  0x5C7F8A570d578ED84E63fdFA7b1eE72dEae1AE23 */\n      0x5c7f8a570d578ed84e63fdfa7b1ee72deae1ae23\n        /* \"ARY/SwapPro.sol\":8365:8369  path */\n      dup2\n        /* \"ARY/SwapPro.sol\":8370:8371  0 */\n      0x00\n        /* \"ARY/SwapPro.sol\":8365:8372  path[0] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_210\n      jumpi\n      tag_210\n      tag_161\n      jump\t// in\n    tag_210:\n      0x20\n      mul\n      0x20\n      add\n      add\n        /* \"ARY/SwapPro.sol\":8365:8379  path[0] = WCRO */\n      swap1\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      swap1\n      dup2\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      dup2\n      mstore\n      pop\n      pop\n        /* \"ARY/SwapPro.sol\":8400:8407  toToken */\n      dup5\n        /* \"ARY/SwapPro.sol\":8390:8394  path */\n      dup2\n        /* \"ARY/SwapPro.sol\":8395:8396  1 */\n      0x01\n        /* \"ARY/SwapPro.sol\":8390:8397  path[1] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_212\n      jumpi\n      tag_212\n      tag_161\n      jump\t// in\n    tag_212:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"ARY/SwapPro.sol\":8390:8407  path[1] = toToken */\n      swap3\n      dup4\n      and\n        /* \"ARY/SwapPro.sol\":8390:8397  path[1] */\n      0x20\n      swap2\n      dup3\n      mul\n      swap3\n      swap1\n      swap3\n      add\n      add\n        /* \"ARY/SwapPro.sol\":8390:8407  path[1] = toToken */\n      mstore\n        /* \"ARY/SwapPro.sol\":8450:8456  router */\n      sload(0x08)\n        /* \"ARY/SwapPro.sol\":8420:8447  uint256[] memory amountsOut */\n      0x00\n      swap2\n        /* \"ARY/SwapPro.sol\":8450:8456  router */\n      and\n        /* \"ARY/SwapPro.sol\":8450:8470  router.getAmountsOut */\n      0xd06ca61f\n        /* \"ARY/SwapPro.sol\":8471:8491  amountIn - feeAmount */\n      tag_213\n        /* \"ARY/SwapPro.sol\":8482:8491  feeAmount */\n      dup6\n        /* \"ARY/SwapPro.sol\":8471:8479  amountIn */\n      dup8\n        /* \"ARY/SwapPro.sol\":8471:8491  amountIn - feeAmount */\n      tag_165\n      jump\t// in\n    tag_213:\n        /* \"ARY/SwapPro.sol\":8493:8497  path */\n      dup5\n        /* \"ARY/SwapPro.sol\":8450:8498  router.getAmountsOut(amountIn - feeAmount, path) */\n      mload(0x40)\n      dup4\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_214\n      swap3\n      swap2\n      swap1\n      tag_215\n      jump\t// in\n    tag_214:\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_217\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_217:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      0x00\n      dup3\n      returndatacopy\n      0x1f\n      returndatasize\n      swap1\n      dup2\n      add\n      not(0x1f)\n      and\n      dup3\n      add\n      0x40\n      mstore\n      tag_218\n      swap2\n      swap1\n      dup2\n      add\n      swap1\n      tag_219\n      jump\t// in\n    tag_218:\n        /* \"ARY/SwapPro.sol\":8509:8515  router */\n      sload(0x08)\n        /* \"ARY/SwapPro.sol\":8420:8498  uint256[] memory amountsOut = router.getAmountsOut(amountIn - feeAmount, path) */\n      swap1\n      swap2\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"ARY/SwapPro.sol\":8509:8515  router */\n      and\n        /* \"ARY/SwapPro.sol\":8509:8566  router.swapExactETHForTokensSupportingFeeOnTransferTokens */\n      0xb6f9de95\n        /* \"ARY/SwapPro.sol\":8574:8594  amountIn - feeAmount */\n      tag_220\n        /* \"ARY/SwapPro.sol\":8585:8594  feeAmount */\n      dup6\n        /* \"ARY/SwapPro.sol\":8574:8582  amountIn */\n      dup8\n        /* \"ARY/SwapPro.sol\":8574:8594  amountIn - feeAmount */\n      tag_165\n      jump\t// in\n    tag_220:\n        /* \"ARY/SwapPro.sol\":8610:8622  amountOutMin */\n      dup8\n        /* \"ARY/SwapPro.sol\":8637:8641  path */\n      dup6\n        /* \"ARY/SwapPro.sol\":8656:8666  msg.sender */\n      caller\n        /* \"ARY/SwapPro.sol\":8681:8706  block.timestamp + 1 hours */\n      tag_221\n        /* \"ARY/SwapPro.sol\":8681:8696  block.timestamp */\n      timestamp\n        /* \"ARY/SwapPro.sol\":8699:8706  1 hours */\n      0x0e10\n        /* \"ARY/SwapPro.sol\":8681:8706  block.timestamp + 1 hours */\n      tag_167\n      jump\t// in\n    tag_221:\n        /* \"ARY/SwapPro.sol\":8509:8717  router.swapExactETHForTokensSupportingFeeOnTransferTokens{ value:amountIn - feeAmount}(... */\n      mload(0x40)\n      dup7\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_222\n      swap5\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_223\n      jump\t// in\n    tag_222:\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup6\n      dup9\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_224\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_224:\n      pop\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_226\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_226:\n      pop\n      pop\n      pop\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"ARY/SwapPro.sol\":8733:8747  toToken == ARY */\n      dup8\n      and\n        /* \"ARY/SwapPro.sol\":2414:2456  0x41bc026dABe978bc2FAfeA1850456511ca4B01bc */\n      0x41bc026dabe978bc2fafea1850456511ca4b01bc\n        /* \"ARY/SwapPro.sol\":8733:8747  toToken == ARY */\n      eq\n      swap1\n      pop\n        /* \"ARY/SwapPro.sol\":8733:8770  toToken == ARY && competition_started */\n      dup1\n      iszero\n      tag_227\n      jumpi\n      pop\n        /* \"ARY/SwapPro.sol\":8751:8770  competition_started */\n      and(0xff, sload(0x03))\n        /* \"ARY/SwapPro.sol\":8733:8770  toToken == ARY && competition_started */\n    tag_227:\n        /* \"ARY/SwapPro.sol\":8730:8835  if(toToken == ARY && competition_started) {... */\n      iszero\n      tag_229\n      jumpi\n        /* \"ARY/SwapPro.sol\":8787:8823  addVolume(msg.sender, amountsOut[1]) */\n      tag_229\n        /* \"ARY/SwapPro.sol\":8797:8807  msg.sender */\n      caller\n        /* \"ARY/SwapPro.sol\":8809:8819  amountsOut */\n      dup3\n        /* \"ARY/SwapPro.sol\":8820:8821  1 */\n      0x01\n        /* \"ARY/SwapPro.sol\":8809:8822  amountsOut[1] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_231\n      jumpi\n      tag_231\n      tag_161\n      jump\t// in\n    tag_231:\n      0x20\n      mul\n      0x20\n      add\n      add\n      mload\n        /* \"ARY/SwapPro.sol\":8787:8796  addVolume */\n      tag_142\n        /* \"ARY/SwapPro.sol\":8787:8823  addVolume(msg.sender, amountsOut[1]) */\n      jump\t// in\n    tag_229:\n        /* \"ARY/SwapPro.sol\":8152:8842  {... */\n      pop\n      pop\n      pop\n      pop\n        /* \"ARY/SwapPro.sol\":8047:8842  function swapCROForToken (... */\n      pop\n      pop\n      jump\t// out\n        /* \"ARY/SwapPro.sol\":4480:4570  function stopCompetition() public onlyOwner {... */\n    tag_62:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_233\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_186\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_233:\n        /* \"ARY/SwapPro.sol\":4535:4554  competition_started */\n      0x03\n        /* \"ARY/SwapPro.sol\":4535:4562  competition_started = false */\n      dup1\n      sload\n      not(0xff)\n      and\n      swap1\n      sstore\n        /* \"ARY/SwapPro.sol\":4480:4570  function stopCompetition() public onlyOwner {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2293:2394  function renounceOwnership() public virtual onlyOwner {... */\n    tag_69:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_236\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_186\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_236:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2357:2387  _transferOwnership(address(0)) */\n      tag_238\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2384:2385  0 */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2357:2375  _transferOwnership */\n      tag_239\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2357:2387  _transferOwnership(address(0)) */\n      jump\t// in\n    tag_238:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2293:2394  function renounceOwnership() public virtual onlyOwner {... */\n      jump\t// out\n        /* \"ARY/SwapPro.sol\":3809:4174  function getUserVolumes() external view returns (Volume[] memory) {... */\n    tag_100:\n        /* \"ARY/SwapPro.sol\":3898:3907  addresses */\n      0x06\n        /* \"ARY/SwapPro.sol\":3898:3914  addresses.length */\n      sload\n        /* \"ARY/SwapPro.sol\":3858:3873  Volume[] memory */\n      0x60\n      swap1\n        /* \"ARY/SwapPro.sol\":3886:3895  uint256 n */\n      0x00\n        /* \"ARY/SwapPro.sol\":3898:3914  addresses.length */\n      dup2\n        /* \"ARY/SwapPro.sol\":3951:3966  new Volume[](n) */\n      0xffffffffffffffff\n      dup2\n      gt\n      iszero\n      tag_243\n      jumpi\n      tag_243\n      tag_157\n      jump\t// in\n    tag_243:\n      mload(0x40)\n      swap1\n      dup1\n      dup3\n      mstore\n      dup1\n      0x20\n      mul\n      0x20\n      add\n      dup3\n      add\n      0x40\n      mstore\n      dup1\n      iszero\n      tag_244\n      jumpi\n      dup2\n      0x20\n      add\n    tag_245:\n      0x40\n      dup1\n      mload\n      dup1\n      dup3\n      add\n      swap1\n      swap2\n      mstore\n      0x00\n      dup1\n      dup3\n      mstore\n      0x20\n      dup3\n      add\n      mstore\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      0x01\n      swap1\n      sub\n      swap1\n      dup2\n      tag_245\n      jumpi\n      swap1\n      pop\n    tag_244:\n      pop\n        /* \"ARY/SwapPro.sol\":3925:3966  Volume[] memory volumes = new Volume[](n) */\n      swap1\n      pop\n        /* \"ARY/SwapPro.sol\":4027:4036  uint256 i */\n      0x00\n        /* \"ARY/SwapPro.sol\":4022:4140  for (uint256 i = 0; i < n; i++) {... */\n    tag_248:\n        /* \"ARY/SwapPro.sol\":4046:4047  n */\n      dup3\n        /* \"ARY/SwapPro.sol\":4042:4043  i */\n      dup2\n        /* \"ARY/SwapPro.sol\":4042:4047  i < n */\n      lt\n        /* \"ARY/SwapPro.sol\":4022:4140  for (uint256 i = 0; i < n; i++) {... */\n      iszero\n      tag_249\n      jumpi\n        /* \"ARY/SwapPro.sol\":4082:4128  Volume(addresses[i], userVolume[addresses[i]]) */\n      mload(0x40)\n      dup1\n      0x40\n      add\n      0x40\n      mstore\n      dup1\n        /* \"ARY/SwapPro.sol\":4089:4098  addresses */\n      0x06\n        /* \"ARY/SwapPro.sol\":4099:4100  i */\n      dup4\n        /* \"ARY/SwapPro.sol\":4089:4101  addresses[i] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_252\n      jumpi\n      tag_252\n      tag_161\n      jump\t// in\n    tag_252:\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"ARY/SwapPro.sol\":4082:4128  Volume(addresses[i], userVolume[addresses[i]]) */\n      and\n      dup2\n      mstore\n      0x20\n      add\n        /* \"ARY/SwapPro.sol\":4103:4113  userVolume */\n      0x04\n        /* \"ARY/SwapPro.sol\":4103:4127  userVolume[addresses[i]] */\n      0x00\n        /* \"ARY/SwapPro.sol\":4114:4123  addresses */\n      0x06\n        /* \"ARY/SwapPro.sol\":4124:4125  i */\n      dup6\n        /* \"ARY/SwapPro.sol\":4114:4126  addresses[i] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_255\n      jumpi\n      tag_255\n      tag_161\n      jump\t// in\n    tag_255:\n      0x00\n      swap2\n      dup3\n      mstore\n      0x20\n      dup1\n      dup4\n      keccak256\n      swap1\n      swap2\n      add\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n        /* \"ARY/SwapPro.sol\":4103:4127  userVolume[addresses[i]] */\n      dup4\n      mstore\n      dup3\n      add\n      swap3\n      swap1\n      swap3\n      mstore\n      0x40\n      add\n      swap1\n      keccak256\n      sload\n        /* \"ARY/SwapPro.sol\":4082:4128  Volume(addresses[i], userVolume[addresses[i]]) */\n      swap1\n      mstore\n        /* \"ARY/SwapPro.sol\":4069:4079  volumes[i] */\n      dup3\n      mload\n        /* \"ARY/SwapPro.sol\":4069:4076  volumes */\n      dup4\n      swap1\n        /* \"ARY/SwapPro.sol\":4077:4078  i */\n      dup4\n      swap1\n        /* \"ARY/SwapPro.sol\":4069:4079  volumes[i] */\n      dup2\n      lt\n      tag_258\n      jumpi\n      tag_258\n      tag_161\n      jump\t// in\n    tag_258:\n      0x20\n      mul\n      0x20\n      add\n      add\n        /* \"ARY/SwapPro.sol\":4069:4128  volumes[i] = Volume(addresses[i], userVolume[addresses[i]]) */\n      dup2\n      swap1\n      mstore\n      pop\n        /* \"ARY/SwapPro.sol\":4049:4052  i++ */\n      dup1\n      dup1\n      tag_259\n      swap1\n      tag_198\n      jump\t// in\n    tag_259:\n      swap2\n      pop\n      pop\n        /* \"ARY/SwapPro.sol\":4022:4140  for (uint256 i = 0; i < n; i++) {... */\n      jump(tag_248)\n    tag_249:\n      pop\n        /* \"ARY/SwapPro.sol\":4159:4166  volumes */\n      swap3\n        /* \"ARY/SwapPro.sol\":3809:4174  function getUserVolumes() external view returns (Volume[] memory) {... */\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"ARY/SwapPro.sol\":9672:9843  function deposit () public payable {... */\n    tag_116:\n        /* \"ARY/SwapPro.sol\":9757:9761  wcro */\n      sload(0x0d)\n        /* \"ARY/SwapPro.sol\":9757:9787  wcro.deposit{value:amountIn}() */\n      0x40\n      dup1\n      mload\n      shl(0xe4, 0x0d0e30db)\n      dup2\n      mstore\n      swap1\n      mload\n        /* \"ARY/SwapPro.sol\":9737:9746  msg.value */\n      callvalue\n      swap3\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"ARY/SwapPro.sol\":9757:9761  wcro */\n      and\n      swap2\n        /* \"ARY/SwapPro.sol\":9757:9769  wcro.deposit */\n      0xd0e30db0\n      swap2\n        /* \"ARY/SwapPro.sol\":9737:9746  msg.value */\n      dup5\n      swap2\n        /* \"ARY/SwapPro.sol\":9757:9787  wcro.deposit{value:amountIn}() */\n      0x04\n      dup1\n      dup3\n      add\n      swap3\n        /* \"ARY/SwapPro.sol\":9718:9734  uint256 amountIn */\n      0x00\n      swap3\n        /* \"ARY/SwapPro.sol\":9757:9787  wcro.deposit{value:amountIn}() */\n      swap1\n      swap2\n      swap1\n      dup3\n      swap1\n      sub\n      add\n      dup2\n        /* \"ARY/SwapPro.sol\":9737:9746  msg.value */\n      dup6\n        /* \"ARY/SwapPro.sol\":9757:9761  wcro */\n      dup9\n        /* \"ARY/SwapPro.sol\":9757:9787  wcro.deposit{value:amountIn}() */\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_261\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_261:\n      pop\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_263\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_263:\n      pop\n      pop\n        /* \"ARY/SwapPro.sol\":9798:9802  wcro */\n      sload(0x0d)\n        /* \"ARY/SwapPro.sol\":9798:9835  wcro.transfer( msg.sender, amountIn ) */\n      mload(0x40)\n      shl(0xe0, 0xa9059cbb)\n      dup2\n      mstore\n        /* \"ARY/SwapPro.sol\":9813:9823  msg.sender */\n      caller\n        /* \"ARY/SwapPro.sol\":9798:9835  wcro.transfer( msg.sender, amountIn ) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":7984:8035   */\n      mstore\n        /* \"#utility.yul\":8051:8069   */\n      0x24\n      dup2\n      add\n        /* \"#utility.yul\":8044:8078   */\n      dup7\n      swap1\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"ARY/SwapPro.sol\":9798:9802  wcro */\n      swap1\n      swap2\n      and\n      swap4\n      pop\n        /* \"ARY/SwapPro.sol\":9798:9811  wcro.transfer */\n      0xa9059cbb\n      swap3\n      pop\n        /* \"#utility.yul\":7957:7975   */\n      0x44\n      add\n      swap1\n      pop\n        /* \"ARY/SwapPro.sol\":9798:9835  wcro.transfer( msg.sender, amountIn ) */\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_267\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_267:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_183\n      swap2\n      swap1\n      tag_148\n      jump\t// in\n        /* \"ARY/SwapPro.sol\":5854:7999  function swapTokenForToken(... */\n    tag_121:\n        /* \"ARY/SwapPro.sol\":6018:6085  IERC20(fromToken).transferFrom(msg.sender, address(this), amountIn) */\n      mload(0x40)\n      shl(0xe0, 0x23b872dd)\n      dup2\n      mstore\n        /* \"ARY/SwapPro.sol\":6049:6059  msg.sender */\n      caller\n        /* \"ARY/SwapPro.sol\":6018:6085  IERC20(fromToken).transferFrom(msg.sender, address(this), amountIn) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":3195:3229   */\n      mstore\n        /* \"ARY/SwapPro.sol\":6069:6073  this */\n      address\n        /* \"#utility.yul\":3245:3263   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":3238:3281   */\n      mstore\n        /* \"#utility.yul\":3297:3315   */\n      0x44\n      dup2\n      add\n        /* \"#utility.yul\":3290:3324   */\n      dup4\n      swap1\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"ARY/SwapPro.sol\":6018:6048  IERC20(fromToken).transferFrom */\n      dup6\n      and\n      swap1\n      0x23b872dd\n      swap1\n        /* \"#utility.yul\":3130:3148   */\n      0x64\n      add\n        /* \"ARY/SwapPro.sol\":6018:6085  IERC20(fromToken).transferFrom(msg.sender, address(this), amountIn) */\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_272\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_272:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_273\n      swap2\n      swap1\n      tag_148\n      jump\t// in\n    tag_273:\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"ARY/SwapPro.sol\":6117:6133  fromToken == ARY */\n      dup5\n      and\n        /* \"ARY/SwapPro.sol\":2414:2456  0x41bc026dABe978bc2FAfeA1850456511ca4B01bc */\n      0x41bc026dabe978bc2fafea1850456511ca4b01bc\n        /* \"ARY/SwapPro.sol\":6117:6133  fromToken == ARY */\n      eq\n        /* \"ARY/SwapPro.sol\":6117:6156  fromToken == ARY && competition_started */\n      dup1\n      iszero\n      tag_274\n      jumpi\n      pop\n        /* \"ARY/SwapPro.sol\":6137:6156  competition_started */\n      and(0xff, sload(0x03))\n        /* \"ARY/SwapPro.sol\":6117:6156  fromToken == ARY && competition_started */\n    tag_274:\n        /* \"ARY/SwapPro.sol\":6098:6227  if (... */\n      iszero\n      tag_276\n      jumpi\n        /* \"ARY/SwapPro.sol\":6184:6215  addVolume(msg.sender, amountIn) */\n      tag_276\n        /* \"ARY/SwapPro.sol\":6194:6204  msg.sender */\n      caller\n        /* \"ARY/SwapPro.sol\":6206:6214  amountIn */\n      dup4\n        /* \"ARY/SwapPro.sol\":6184:6193  addVolume */\n      tag_142\n        /* \"ARY/SwapPro.sol\":6184:6215  addVolume(msg.sender, amountIn) */\n      jump\t// in\n    tag_276:\n        /* \"ARY/SwapPro.sol\":6239:6256  uint256 feeAmount */\n      0x00\n        /* \"ARY/SwapPro.sol\":6285:6289  1000 */\n      0x03e8\n        /* \"ARY/SwapPro.sol\":6271:6281  feePercent */\n      sload(0x02)\n        /* \"ARY/SwapPro.sol\":6260:6268  amountIn */\n      dup5\n        /* \"ARY/SwapPro.sol\":6260:6281  amountIn * feePercent */\n      tag_277\n      swap2\n      swap1\n      tag_150\n      jump\t// in\n    tag_277:\n        /* \"ARY/SwapPro.sol\":6259:6289  (amountIn * feePercent) / 1000 */\n      tag_278\n      swap2\n      swap1\n      tag_152\n      jump\t// in\n    tag_278:\n        /* \"ARY/SwapPro.sol\":6239:6289  uint256 feeAmount = (amountIn * feePercent) / 1000 */\n      swap1\n      pop\n        /* \"ARY/SwapPro.sol\":6300:6328  getFee(fromToken, feeAmount) */\n      tag_279\n        /* \"ARY/SwapPro.sol\":6307:6316  fromToken */\n      dup6\n        /* \"ARY/SwapPro.sol\":6318:6327  feeAmount */\n      dup3\n        /* \"ARY/SwapPro.sol\":6300:6306  getFee */\n      tag_154\n        /* \"ARY/SwapPro.sol\":6300:6328  getFee(fromToken, feeAmount) */\n      jump\t// in\n    tag_279:\n        /* \"ARY/SwapPro.sol\":6341:6356  uint256 pathLen */\n      0x00\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"ARY/SwapPro.sol\":6378:6395  fromToken == WCRO */\n      dup7\n      and\n        /* \"ARY/SwapPro.sol\":2335:2377  0x5C7F8A570d578ED84E63fdFA7b1eE72dEae1AE23 */\n      0x5c7f8a570d578ed84e63fdfa7b1ee72deae1ae23\n        /* \"ARY/SwapPro.sol\":6378:6395  fromToken == WCRO */\n      eq\n      dup1\n        /* \"ARY/SwapPro.sol\":6378:6414  fromToken == WCRO || toToken == WCRO */\n      tag_280\n      jumpi\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"ARY/SwapPro.sol\":6399:6414  toToken == WCRO */\n      dup6\n      and\n        /* \"ARY/SwapPro.sol\":2335:2377  0x5C7F8A570d578ED84E63fdFA7b1eE72dEae1AE23 */\n      0x5c7f8a570d578ed84e63fdfa7b1ee72deae1ae23\n        /* \"ARY/SwapPro.sol\":6399:6414  toToken == WCRO */\n      eq\n        /* \"ARY/SwapPro.sol\":6378:6414  fromToken == WCRO || toToken == WCRO */\n    tag_280:\n        /* \"ARY/SwapPro.sol\":6377:6423  (fromToken == WCRO || toToken == WCRO) ? 2 : 3 */\n      tag_281\n      jumpi\n        /* \"ARY/SwapPro.sol\":6422:6423  3 */\n      0x03\n        /* \"ARY/SwapPro.sol\":6377:6423  (fromToken == WCRO || toToken == WCRO) ? 2 : 3 */\n      jump(tag_282)\n    tag_281:\n        /* \"ARY/SwapPro.sol\":6418:6419  2 */\n      0x02\n        /* \"ARY/SwapPro.sol\":6377:6423  (fromToken == WCRO || toToken == WCRO) ? 2 : 3 */\n    tag_282:\n        /* \"ARY/SwapPro.sol\":6367:6423  pathLen = (fromToken == WCRO || toToken == WCRO) ? 2 : 3 */\n      0xff\n      and\n      swap1\n      pop\n        /* \"ARY/SwapPro.sol\":6436:6453  uint256 amountOut */\n      0x00\n        /* \"ARY/SwapPro.sol\":6464:6485  address[] memory path */\n      0x60\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"ARY/SwapPro.sol\":6500:6517  fromToken == WCRO */\n      dup9\n      and\n        /* \"ARY/SwapPro.sol\":2335:2377  0x5C7F8A570d578ED84E63fdFA7b1eE72dEae1AE23 */\n      0x5c7f8a570d578ed84e63fdfa7b1ee72deae1ae23\n        /* \"ARY/SwapPro.sol\":6500:6517  fromToken == WCRO */\n      eq\n      dup1\n        /* \"ARY/SwapPro.sol\":6500:6536  fromToken == WCRO || toToken == WCRO */\n      tag_283\n      jumpi\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"ARY/SwapPro.sol\":6521:6536  toToken == WCRO */\n      dup8\n      and\n        /* \"ARY/SwapPro.sol\":2335:2377  0x5C7F8A570d578ED84E63fdFA7b1eE72dEae1AE23 */\n      0x5c7f8a570d578ed84e63fdfa7b1ee72deae1ae23\n        /* \"ARY/SwapPro.sol\":6521:6536  toToken == WCRO */\n      eq\n        /* \"ARY/SwapPro.sol\":6500:6536  fromToken == WCRO || toToken == WCRO */\n    tag_283:\n        /* \"ARY/SwapPro.sol\":6496:7594  if (fromToken == WCRO || toToken == WCRO) {... */\n      iszero\n      tag_284\n      jumpi\n        /* \"ARY/SwapPro.sol\":6574:6575  2 */\n      0x02\n        /* \"ARY/SwapPro.sol\":6560:6576  new address[](2) */\n    tag_286:\n      mload(0x40)\n      swap1\n      dup1\n      dup3\n      mstore\n      dup1\n      0x20\n      mul\n      0x20\n      add\n      dup3\n      add\n      0x40\n      mstore\n      dup1\n      iszero\n      tag_287\n      jumpi\n      dup2\n      0x20\n      add\n      0x20\n      dup3\n      mul\n      dup1\n      calldatasize\n      dup4\n      calldatacopy\n      add\n      swap1\n      pop\n    tag_287:\n      pop\n        /* \"ARY/SwapPro.sol\":6553:6576  path = new address[](2) */\n      swap1\n      pop\n        /* \"ARY/SwapPro.sol\":6601:6610  fromToken */\n      dup8\n        /* \"ARY/SwapPro.sol\":6591:6595  path */\n      dup2\n        /* \"ARY/SwapPro.sol\":6596:6597  0 */\n      0x00\n        /* \"ARY/SwapPro.sol\":6591:6598  path[0] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_289\n      jumpi\n      tag_289\n      tag_161\n      jump\t// in\n    tag_289:\n      0x20\n      mul\n      0x20\n      add\n      add\n        /* \"ARY/SwapPro.sol\":6591:6610  path[0] = fromToken */\n      swap1\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      swap1\n      dup2\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      dup2\n      mstore\n      pop\n      pop\n        /* \"ARY/SwapPro.sol\":6635:6642  toToken */\n      dup7\n        /* \"ARY/SwapPro.sol\":6625:6629  path */\n      dup2\n        /* \"ARY/SwapPro.sol\":6630:6631  1 */\n      0x01\n        /* \"ARY/SwapPro.sol\":6625:6632  path[1] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_291\n      jumpi\n      tag_291\n      tag_161\n      jump\t// in\n    tag_291:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"ARY/SwapPro.sol\":6625:6642  path[1] = toToken */\n      swap3\n      dup4\n      and\n        /* \"ARY/SwapPro.sol\":6625:6632  path[1] */\n      0x20\n      swap2\n      dup3\n      mul\n      swap3\n      swap1\n      swap3\n      add\n      add\n        /* \"ARY/SwapPro.sol\":6625:6642  path[1] = toToken */\n      mstore\n        /* \"ARY/SwapPro.sol\":6687:6693  router */\n      sload(0x08)\n        /* \"ARY/SwapPro.sol\":6657:6684  uint256[] memory amountsOut */\n      0x00\n      swap2\n        /* \"ARY/SwapPro.sol\":6687:6693  router */\n      and\n        /* \"ARY/SwapPro.sol\":6687:6707  router.getAmountsOut */\n      0xd06ca61f\n        /* \"ARY/SwapPro.sol\":6726:6746  amountIn - feeAmount */\n      tag_292\n        /* \"ARY/SwapPro.sol\":6737:6746  feeAmount */\n      dup8\n        /* \"ARY/SwapPro.sol\":6726:6734  amountIn */\n      dup11\n        /* \"ARY/SwapPro.sol\":6726:6746  amountIn - feeAmount */\n      tag_165\n      jump\t// in\n    tag_292:\n        /* \"ARY/SwapPro.sol\":6765:6769  path */\n      dup5\n        /* \"ARY/SwapPro.sol\":6687:6784  router.getAmountsOut(... */\n      mload(0x40)\n      dup4\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_293\n      swap3\n      swap2\n      swap1\n      tag_215\n      jump\t// in\n    tag_293:\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_295\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_295:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      0x00\n      dup3\n      returndatacopy\n      0x1f\n      returndatasize\n      swap1\n      dup2\n      add\n      not(0x1f)\n      and\n      dup3\n      add\n      0x40\n      mstore\n      tag_296\n      swap2\n      swap1\n      dup2\n      add\n      swap1\n      tag_219\n      jump\t// in\n    tag_296:\n        /* \"ARY/SwapPro.sol\":6657:6784  uint256[] memory amountsOut = router.getAmountsOut(... */\n      swap1\n      pop\n        /* \"ARY/SwapPro.sol\":6811:6821  amountsOut */\n      dup1\n        /* \"ARY/SwapPro.sol\":6822:6823  1 */\n      0x01\n        /* \"ARY/SwapPro.sol\":6811:6824  amountsOut[1] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_298\n      jumpi\n      tag_298\n      tag_161\n      jump\t// in\n    tag_298:\n      0x20\n      mul\n      0x20\n      add\n      add\n      mload\n        /* \"ARY/SwapPro.sol\":6799:6824  amountOut = amountsOut[1] */\n      swap3\n      pop\n        /* \"ARY/SwapPro.sol\":6538:6836  {... */\n      pop\n        /* \"ARY/SwapPro.sol\":6496:7594  if (fromToken == WCRO || toToken == WCRO) {... */\n      jump(tag_318)\n    tag_284:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"ARY/SwapPro.sol\":6861:6877  fromToken == ARY */\n      dup9\n      and\n        /* \"ARY/SwapPro.sol\":2414:2456  0x41bc026dABe978bc2FAfeA1850456511ca4B01bc */\n      0x41bc026dabe978bc2fafea1850456511ca4b01bc\n        /* \"ARY/SwapPro.sol\":6861:6877  fromToken == ARY */\n      eq\n        /* \"ARY/SwapPro.sol\":6861:6896  fromToken == ARY && toToken == MERY */\n      dup1\n      iszero\n      tag_300\n      jumpi\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"ARY/SwapPro.sol\":6881:6896  toToken == MERY */\n      dup8\n      and\n        /* \"ARY/SwapPro.sol\":2494:2536  0x3b41B27E74Dd366CE27cB389dc7877D4e1516d4d */\n      0x3b41b27e74dd366ce27cb389dc7877d4e1516d4d\n        /* \"ARY/SwapPro.sol\":6881:6896  toToken == MERY */\n      eq\n        /* \"ARY/SwapPro.sol\":6861:6896  fromToken == ARY && toToken == MERY */\n    tag_300:\n        /* \"ARY/SwapPro.sol\":6860:6951  (fromToken == ARY && toToken == MERY) ||... */\n      dup1\n      tag_302\n      jumpi\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"ARY/SwapPro.sol\":6915:6932  fromToken == MERY */\n      dup9\n      and\n        /* \"ARY/SwapPro.sol\":2494:2536  0x3b41B27E74Dd366CE27cB389dc7877D4e1516d4d */\n      0x3b41b27e74dd366ce27cb389dc7877d4e1516d4d\n        /* \"ARY/SwapPro.sol\":6915:6932  fromToken == MERY */\n      eq\n        /* \"ARY/SwapPro.sol\":6915:6950  fromToken == MERY && toToken == ARY */\n      dup1\n      iszero\n      tag_302\n      jumpi\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"ARY/SwapPro.sol\":6936:6950  toToken == ARY */\n      dup8\n      and\n        /* \"ARY/SwapPro.sol\":2414:2456  0x41bc026dABe978bc2FAfeA1850456511ca4B01bc */\n      0x41bc026dabe978bc2fafea1850456511ca4b01bc\n        /* \"ARY/SwapPro.sol\":6936:6950  toToken == ARY */\n      eq\n        /* \"ARY/SwapPro.sol\":6915:6950  fromToken == MERY && toToken == ARY */\n    tag_302:\n        /* \"ARY/SwapPro.sol\":6842:7594  if (... */\n      iszero\n      tag_303\n      jumpi\n        /* \"ARY/SwapPro.sol\":6999:7000  2 */\n      0x02\n        /* \"ARY/SwapPro.sol\":6985:7001  new address[](2) */\n      jump(tag_286)\n        /* \"ARY/SwapPro.sol\":6842:7594  if (... */\n    tag_303:\n        /* \"ARY/SwapPro.sol\":7289:7305  new address[](3) */\n      0x40\n      dup1\n      mload\n        /* \"ARY/SwapPro.sol\":7303:7304  3 */\n      0x03\n        /* \"ARY/SwapPro.sol\":7289:7305  new address[](3) */\n      dup1\n      dup3\n      mstore\n      0x80\n      dup3\n      add\n      swap1\n      swap3\n      mstore\n      swap1\n      0x20\n      dup3\n      add\n      0x60\n      dup1\n      calldatasize\n      dup4\n      calldatacopy\n      add\n      swap1\n      pop\n      pop\n        /* \"ARY/SwapPro.sol\":7282:7305  path = new address[](3) */\n      swap1\n      pop\n        /* \"ARY/SwapPro.sol\":7330:7339  fromToken */\n      dup8\n        /* \"ARY/SwapPro.sol\":7320:7324  path */\n      dup2\n        /* \"ARY/SwapPro.sol\":7325:7326  0 */\n      0x00\n        /* \"ARY/SwapPro.sol\":7320:7327  path[0] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_323\n      jumpi\n      tag_323\n      tag_161\n      jump\t// in\n    tag_323:\n      0x20\n      mul\n      0x20\n      add\n      add\n        /* \"ARY/SwapPro.sol\":7320:7339  path[0] = fromToken */\n      swap1\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      swap1\n      dup2\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      dup2\n      mstore\n      pop\n      pop\n        /* \"ARY/SwapPro.sol\":2335:2377  0x5C7F8A570d578ED84E63fdFA7b1eE72dEae1AE23 */\n      0x5c7f8a570d578ed84e63fdfa7b1ee72deae1ae23\n        /* \"ARY/SwapPro.sol\":7354:7358  path */\n      dup2\n        /* \"ARY/SwapPro.sol\":7359:7360  1 */\n      0x01\n        /* \"ARY/SwapPro.sol\":7354:7361  path[1] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_325\n      jumpi\n      tag_325\n      tag_161\n      jump\t// in\n    tag_325:\n      0x20\n      mul\n      0x20\n      add\n      add\n        /* \"ARY/SwapPro.sol\":7354:7368  path[1] = WCRO */\n      swap1\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      swap1\n      dup2\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      dup2\n      mstore\n      pop\n      pop\n        /* \"ARY/SwapPro.sol\":7393:7400  toToken */\n      dup7\n        /* \"ARY/SwapPro.sol\":7383:7387  path */\n      dup2\n        /* \"ARY/SwapPro.sol\":7388:7389  2 */\n      0x02\n        /* \"ARY/SwapPro.sol\":7383:7390  path[2] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_327\n      jumpi\n      tag_327\n      tag_161\n      jump\t// in\n    tag_327:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"ARY/SwapPro.sol\":7383:7400  path[2] = toToken */\n      swap3\n      dup4\n      and\n        /* \"ARY/SwapPro.sol\":7383:7390  path[2] */\n      0x20\n      swap2\n      dup3\n      mul\n      swap3\n      swap1\n      swap3\n      add\n      add\n        /* \"ARY/SwapPro.sol\":7383:7400  path[2] = toToken */\n      mstore\n        /* \"ARY/SwapPro.sol\":7445:7451  router */\n      sload(0x08)\n        /* \"ARY/SwapPro.sol\":7415:7442  uint256[] memory amountsOut */\n      0x00\n      swap2\n        /* \"ARY/SwapPro.sol\":7445:7451  router */\n      and\n        /* \"ARY/SwapPro.sol\":7445:7465  router.getAmountsOut */\n      0xd06ca61f\n        /* \"ARY/SwapPro.sol\":7484:7504  amountIn - feeAmount */\n      tag_328\n        /* \"ARY/SwapPro.sol\":7495:7504  feeAmount */\n      dup8\n        /* \"ARY/SwapPro.sol\":7484:7492  amountIn */\n      dup11\n        /* \"ARY/SwapPro.sol\":7484:7504  amountIn - feeAmount */\n      tag_165\n      jump\t// in\n    tag_328:\n        /* \"ARY/SwapPro.sol\":7523:7527  path */\n      dup5\n        /* \"ARY/SwapPro.sol\":7445:7542  router.getAmountsOut(... */\n      mload(0x40)\n      dup4\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_329\n      swap3\n      swap2\n      swap1\n      tag_215\n      jump\t// in\n    tag_329:\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_331\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_331:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      0x00\n      dup3\n      returndatacopy\n      0x1f\n      returndatasize\n      swap1\n      dup2\n      add\n      not(0x1f)\n      and\n      dup3\n      add\n      0x40\n      mstore\n      tag_332\n      swap2\n      swap1\n      dup2\n      add\n      swap1\n      tag_219\n      jump\t// in\n    tag_332:\n        /* \"ARY/SwapPro.sol\":7415:7542  uint256[] memory amountsOut = router.getAmountsOut(... */\n      swap1\n      pop\n        /* \"ARY/SwapPro.sol\":7569:7579  amountsOut */\n      dup1\n        /* \"ARY/SwapPro.sol\":7580:7581  2 */\n      0x02\n        /* \"ARY/SwapPro.sol\":7569:7582  amountsOut[2] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_334\n      jumpi\n      tag_334\n      tag_161\n      jump\t// in\n    tag_334:\n      0x20\n      mul\n      0x20\n      add\n      add\n      mload\n        /* \"ARY/SwapPro.sol\":7557:7582  amountOut = amountsOut[2] */\n      swap3\n      pop\n        /* \"ARY/SwapPro.sol\":7267:7594  {... */\n      pop\n        /* \"ARY/SwapPro.sol\":6842:7594  if (... */\n    tag_318:\n        /* \"ARY/SwapPro.sol\":7610:7616  router */\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0x08))\n        /* \"ARY/SwapPro.sol\":7610:7670  router.swapExactTokensForTokensSupportingFeeOnTransferTokens */\n      0x5c11d795\n        /* \"ARY/SwapPro.sol\":7689:7709  amountIn - feeAmount */\n      tag_335\n        /* \"ARY/SwapPro.sol\":7700:7709  feeAmount */\n      dup7\n        /* \"ARY/SwapPro.sol\":7689:7697  amountIn */\n      dup10\n        /* \"ARY/SwapPro.sol\":7689:7709  amountIn - feeAmount */\n      tag_165\n      jump\t// in\n    tag_335:\n        /* \"ARY/SwapPro.sol\":7728:7740  amountOutMin */\n      dup8\n        /* \"ARY/SwapPro.sol\":7759:7763  path */\n      dup5\n        /* \"ARY/SwapPro.sol\":7782:7792  msg.sender */\n      caller\n        /* \"ARY/SwapPro.sol\":7811:7836  block.timestamp + 1 hours */\n      tag_336\n        /* \"ARY/SwapPro.sol\":7811:7826  block.timestamp */\n      timestamp\n        /* \"ARY/SwapPro.sol\":7829:7836  1 hours */\n      0x0e10\n        /* \"ARY/SwapPro.sol\":7811:7836  block.timestamp + 1 hours */\n      tag_167\n      jump\t// in\n    tag_336:\n        /* \"ARY/SwapPro.sol\":7610:7851  router.swapExactTokensForTokensSupportingFeeOnTransferTokens(... */\n      mload(0x40)\n      dup7\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_337\n      swap6\n      swap5\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_169\n      jump\t// in\n    tag_337:\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_338\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_338:\n      pop\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_340\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_340:\n      pop\n      pop\n      pop\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"ARY/SwapPro.sol\":7883:7897  toToken == ARY */\n      dup8\n      and\n        /* \"ARY/SwapPro.sol\":2414:2456  0x41bc026dABe978bc2FAfeA1850456511ca4B01bc */\n      0x41bc026dabe978bc2fafea1850456511ca4b01bc\n        /* \"ARY/SwapPro.sol\":7883:7897  toToken == ARY */\n      eq\n        /* \"ARY/SwapPro.sol\":7883:7920  toToken == ARY && competition_started */\n      dup1\n      iszero\n      tag_341\n      jumpi\n      pop\n        /* \"ARY/SwapPro.sol\":7901:7920  competition_started */\n      and(0xff, sload(0x03))\n        /* \"ARY/SwapPro.sol\":7883:7920  toToken == ARY && competition_started */\n    tag_341:\n        /* \"ARY/SwapPro.sol\":7864:7992  if (... */\n      iszero\n      tag_343\n      jumpi\n        /* \"ARY/SwapPro.sol\":7948:7980  addVolume(msg.sender, amountOut) */\n      tag_343\n        /* \"ARY/SwapPro.sol\":7958:7968  msg.sender */\n      caller\n        /* \"ARY/SwapPro.sol\":7970:7979  amountOut */\n      dup4\n        /* \"ARY/SwapPro.sol\":7948:7957  addVolume */\n      tag_142\n        /* \"ARY/SwapPro.sol\":7948:7980  addVolume(msg.sender, amountOut) */\n      jump\t// in\n    tag_343:\n        /* \"ARY/SwapPro.sol\":6007:7999  {... */\n      pop\n      pop\n      pop\n      pop\n        /* \"ARY/SwapPro.sol\":5854:7999  function swapTokenForToken(... */\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"ARY/SwapPro.sol\":4576:4666  function startCompetition() public onlyOwner {... */\n    tag_124:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_345\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_186\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_345:\n        /* \"ARY/SwapPro.sol\":4632:4651  competition_started */\n      0x03\n        /* \"ARY/SwapPro.sol\":4632:4658  competition_started = true */\n      dup1\n      sload\n      not(0xff)\n      and\n        /* \"ARY/SwapPro.sol\":4654:4658  true */\n      0x01\n        /* \"ARY/SwapPro.sol\":4632:4658  competition_started = true */\n      or\n      swap1\n      sstore\n        /* \"ARY/SwapPro.sol\":4576:4666  function startCompetition() public onlyOwner {... */\n      jump\t// out\n        /* \"ARY/SwapPro.sol\":2941:2967  address[] public addresses */\n    tag_132:\n      0x06\n      dup2\n      dup2\n      sload\n      dup2\n      lt\n      tag_347\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_347:\n      0x00\n      swap2\n      dup3\n      mstore\n      0x20\n      swap1\n      swap2\n      keccak256\n      add\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      swap1\n      pop\n      dup2\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2543:2758  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_137:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_350\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_186\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_350:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2627:2649  newOwner == address(0) */\n      dup2\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2623:2714  if (newOwner == address(0)) {... */\n      tag_352\n      jumpi\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2672:2703  OwnableInvalidOwner(address(0)) */\n      mload(0x40)\n      shl(0xe0, 0x1e4fbdf7)\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2700:2701  0 */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2672:2703  OwnableInvalidOwner(address(0)) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":665:716   */\n      mstore\n        /* \"#utility.yul\":638:656   */\n      0x24\n      add\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2672:2703  OwnableInvalidOwner(address(0)) */\n    tag_353:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2623:2714  if (newOwner == address(0)) {... */\n    tag_352:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2723:2751  _transferOwnership(newOwner) */\n      tag_354\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2742:2750  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2723:2741  _transferOwnership */\n      tag_239\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2723:2751  _transferOwnership(newOwner) */\n      jump\t// in\n    tag_354:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2543:2758  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"ARY/SwapPro.sol\":5541:5805  function addVolume (... */\n    tag_142:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"ARY/SwapPro.sol\":5639:5659  isExistAddress[user] */\n      dup3\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"ARY/SwapPro.sol\":5639:5653  isExistAddress */\n      0x05\n        /* \"ARY/SwapPro.sol\":5639:5659  isExistAddress[user] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      0xff\n      and\n        /* \"ARY/SwapPro.sol\":5635:5750  if(!isExistAddress[user]) {... */\n      tag_356\n      jumpi\n        /* \"ARY/SwapPro.sol\":5676:5685  addresses */\n      0x06\n        /* \"ARY/SwapPro.sol\":5676:5696  addresses.push(user) */\n      dup1\n      sload\n      0x01\n      dup1\n      dup3\n      add\n      swap1\n      swap3\n      sstore\n      0xf652222313e28459528d920b65115c16c04f3efc82aaedc97be59f3f377c0d3f\n      add\n      dup1\n      sload\n      not(sub(shl(0xa0, 0x01), 0x01))\n      and\n      sub(shl(0xa0, 0x01), 0x01)\n      dup6\n      and\n      swap1\n      dup2\n      or\n      swap1\n      swap2\n      sstore\n      0x00\n        /* \"ARY/SwapPro.sol\":5711:5731  isExistAddress[user] */\n      swap1\n      dup2\n      mstore\n        /* \"ARY/SwapPro.sol\":5711:5725  isExistAddress */\n      0x05\n        /* \"ARY/SwapPro.sol\":5676:5696  addresses.push(user) */\n      0x20\n        /* \"ARY/SwapPro.sol\":5711:5731  isExistAddress[user] */\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"ARY/SwapPro.sol\":5711:5738  isExistAddress[user] = true */\n      dup1\n      sload\n      not(0xff)\n      and\n      swap1\n      swap2\n      or\n      swap1\n      sstore\n        /* \"ARY/SwapPro.sol\":5635:5750  if(!isExistAddress[user]) {... */\n    tag_356:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"ARY/SwapPro.sol\":5771:5787  userVolume[user] */\n      dup3\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"ARY/SwapPro.sol\":5771:5781  userVolume */\n      0x04\n        /* \"ARY/SwapPro.sol\":5771:5787  userVolume[user] */\n      0x20\n      mstore\n      0x40\n      dup2\n      keccak256\n        /* \"ARY/SwapPro.sol\":5771:5797  userVolume[user] += volume */\n      dup1\n      sload\n        /* \"ARY/SwapPro.sol\":5791:5797  volume */\n      dup4\n      swap3\n        /* \"ARY/SwapPro.sol\":5771:5787  userVolume[user] */\n      swap1\n        /* \"ARY/SwapPro.sol\":5771:5797  userVolume[user] += volume */\n      tag_358\n      swap1\n        /* \"ARY/SwapPro.sol\":5791:5797  volume */\n      dup5\n      swap1\n        /* \"ARY/SwapPro.sol\":5771:5797  userVolume[user] += volume */\n      tag_167\n      jump\t// in\n    tag_358:\n      swap1\n      swap2\n      sstore\n      pop\n      pop\n      pop\n      pop\n        /* \"ARY/SwapPro.sol\":5541:5805  function addVolume (... */\n      jump\t// out\n        /* \"ARY/SwapPro.sol\":4940:5533  function getFee(address fromToken, uint256 feeAmount) private {... */\n    tag_154:\n        /* \"ARY/SwapPro.sol\":5013:5028  uint256 pathLen */\n      0x00\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"ARY/SwapPro.sol\":5031:5048  fromToken == WCRO */\n      dup4\n      and\n        /* \"ARY/SwapPro.sol\":2335:2377  0x5C7F8A570d578ED84E63fdFA7b1eE72dEae1AE23 */\n      0x5c7f8a570d578ed84e63fdfa7b1ee72deae1ae23\n        /* \"ARY/SwapPro.sol\":5031:5048  fromToken == WCRO */\n      eq\n        /* \"ARY/SwapPro.sol\":5031:5056  fromToken == WCRO ? 1 : 2 */\n      tag_360\n      jumpi\n        /* \"ARY/SwapPro.sol\":5055:5056  2 */\n      0x02\n        /* \"ARY/SwapPro.sol\":5031:5056  fromToken == WCRO ? 1 : 2 */\n      jump(tag_361)\n    tag_360:\n        /* \"ARY/SwapPro.sol\":5051:5052  1 */\n      0x01\n        /* \"ARY/SwapPro.sol\":5031:5056  fromToken == WCRO ? 1 : 2 */\n    tag_361:\n        /* \"ARY/SwapPro.sol\":5013:5056  uint256 pathLen = fromToken == WCRO ? 1 : 2 */\n      0xff\n      and\n      swap1\n      pop\n        /* \"ARY/SwapPro.sol\":5070:5077  pathLen */\n      dup1\n        /* \"ARY/SwapPro.sol\":5081:5082  1 */\n      0x01\n        /* \"ARY/SwapPro.sol\":5070:5082  pathLen == 1 */\n      sub\n        /* \"ARY/SwapPro.sol\":5067:5526  if(pathLen == 1){... */\n      tag_362\n      jumpi\n        /* \"ARY/SwapPro.sol\":5098:5102  wcro */\n      sload(0x0d)\n      0x01\n        /* \"ARY/SwapPro.sol\":5112:5123  feeReceiver */\n      sload\n        /* \"ARY/SwapPro.sol\":5098:5135  wcro.transfer(feeReceiver, feeAmount) */\n      mload(0x40)\n      shl(0xe0, 0xa9059cbb)\n      dup2\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"ARY/SwapPro.sol\":5112:5123  feeReceiver */\n      swap2\n      dup3\n      and\n        /* \"ARY/SwapPro.sol\":5098:5135  wcro.transfer(feeReceiver, feeAmount) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":7984:8035   */\n      mstore\n        /* \"#utility.yul\":8051:8069   */\n      0x24\n      dup2\n      add\n        /* \"#utility.yul\":8044:8078   */\n      dup6\n      swap1\n      mstore\n        /* \"ARY/SwapPro.sol\":5098:5102  wcro */\n      swap2\n      and\n      swap1\n        /* \"ARY/SwapPro.sol\":5098:5111  wcro.transfer */\n      0xa9059cbb\n      swap1\n        /* \"#utility.yul\":7957:7975   */\n      0x44\n      add\n        /* \"ARY/SwapPro.sol\":5098:5135  wcro.transfer(feeReceiver, feeAmount) */\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_365\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_365:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_366\n      swap2\n      swap1\n      tag_148\n      jump\t// in\n    tag_366:\n      pop\n        /* \"ARY/SwapPro.sol\":5002:5533  {... */\n      pop\n        /* \"ARY/SwapPro.sol\":4940:5533  function getFee(address fromToken, uint256 feeAmount) private {... */\n      pop\n      pop\n      jump\t// out\n        /* \"ARY/SwapPro.sol\":5067:5526  if(pathLen == 1){... */\n    tag_362:\n        /* \"ARY/SwapPro.sol\":5168:5189  address[] memory path */\n      0x00\n        /* \"ARY/SwapPro.sol\":5206:5213  pathLen */\n      dup2\n        /* \"ARY/SwapPro.sol\":5192:5214  new address[](pathLen) */\n      0xffffffffffffffff\n      dup2\n      gt\n      iszero\n      tag_369\n      jumpi\n      tag_369\n      tag_157\n      jump\t// in\n    tag_369:\n      mload(0x40)\n      swap1\n      dup1\n      dup3\n      mstore\n      dup1\n      0x20\n      mul\n      0x20\n      add\n      dup3\n      add\n      0x40\n      mstore\n      dup1\n      iszero\n      tag_370\n      jumpi\n      dup2\n      0x20\n      add\n      0x20\n      dup3\n      mul\n      dup1\n      calldatasize\n      dup4\n      calldatacopy\n      add\n      swap1\n      pop\n    tag_370:\n      pop\n        /* \"ARY/SwapPro.sol\":5168:5214  address[] memory path = new address[](pathLen) */\n      swap1\n      pop\n        /* \"ARY/SwapPro.sol\":5239:5248  fromToken */\n      dup4\n        /* \"ARY/SwapPro.sol\":5229:5233  path */\n      dup2\n        /* \"ARY/SwapPro.sol\":5234:5235  0 */\n      0x00\n        /* \"ARY/SwapPro.sol\":5229:5236  path[0] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_372\n      jumpi\n      tag_372\n      tag_161\n      jump\t// in\n    tag_372:\n      0x20\n      mul\n      0x20\n      add\n      add\n        /* \"ARY/SwapPro.sol\":5229:5248  path[0] = fromToken */\n      swap1\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      swap1\n      dup2\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      dup2\n      mstore\n      pop\n      pop\n        /* \"ARY/SwapPro.sol\":2335:2377  0x5C7F8A570d578ED84E63fdFA7b1eE72dEae1AE23 */\n      0x5c7f8a570d578ed84e63fdfa7b1ee72deae1ae23\n        /* \"ARY/SwapPro.sol\":5263:5267  path */\n      dup2\n        /* \"ARY/SwapPro.sol\":5268:5269  1 */\n      0x01\n        /* \"ARY/SwapPro.sol\":5263:5270  path[1] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_374\n      jumpi\n      tag_374\n      tag_161\n      jump\t// in\n    tag_374:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"ARY/SwapPro.sol\":5263:5277  path[1] = WCRO */\n      swap3\n      dup4\n      and\n        /* \"ARY/SwapPro.sol\":5263:5270  path[1] */\n      0x20\n      swap2\n      dup3\n      mul\n      swap3\n      swap1\n      swap3\n      add\n      add\n        /* \"ARY/SwapPro.sol\":5263:5277  path[1] = WCRO */\n      mstore\n        /* \"ARY/SwapPro.sol\":5294:5300  router */\n      sload(0x08)\n      0x01\n        /* \"ARY/SwapPro.sol\":5444:5455  feeReceiver */\n      sload\n        /* \"ARY/SwapPro.sol\":5294:5300  router */\n      swap1\n      dup3\n      and\n      swap2\n        /* \"ARY/SwapPro.sol\":5294:5354  router.swapExactTokensForTokensSupportingFeeOnTransferTokens */\n      0x5c11d795\n      swap2\n        /* \"ARY/SwapPro.sol\":5373:5382  feeAmount */\n      dup7\n      swap2\n        /* \"ARY/SwapPro.sol\":5294:5300  router */\n      0x00\n      swap2\n        /* \"ARY/SwapPro.sol\":5421:5425  path */\n      dup7\n      swap2\n        /* \"ARY/SwapPro.sol\":5444:5455  feeReceiver */\n      and\n        /* \"ARY/SwapPro.sol\":5474:5499  block.timestamp + 1 hours */\n      tag_375\n        /* \"ARY/SwapPro.sol\":5474:5489  block.timestamp */\n      timestamp\n        /* \"ARY/SwapPro.sol\":5492:5499  1 hours */\n      0x0e10\n        /* \"ARY/SwapPro.sol\":5474:5499  block.timestamp + 1 hours */\n      tag_167\n      jump\t// in\n    tag_375:\n        /* \"ARY/SwapPro.sol\":5294:5514  router.swapExactTokensForTokensSupportingFeeOnTransferTokens(... */\n      mload(0x40)\n      dup7\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_376\n      swap6\n      swap5\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_169\n      jump\t// in\n    tag_376:\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_378\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_378:\n      pop\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_343\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1796:1958  function _checkOwner() internal view virtual {... */\n    tag_186:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1684:1691  address */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1710:1716  _owner */\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n        /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1878  owner() != _msgSender() */\n      eq\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1851:1952  if (owner() != _msgSender()) {... */\n      tag_238\n      jumpi\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1901:1941  OwnableUnauthorizedAccount(_msgSender()) */\n      mload(0x40)\n      shl(0xe0, 0x118cdaa7)\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1901:1941  OwnableUnauthorizedAccount(_msgSender()) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":665:716   */\n      mstore\n        /* \"#utility.yul\":638:656   */\n      0x24\n      add\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1901:1941  OwnableUnauthorizedAccount(_msgSender()) */\n      tag_353\n        /* \"#utility.yul\":519:722   */\n      jump\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\n    tag_239:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2985:3001  address oldOwner */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3004:3010  _owner */\n      dup1\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3020:3037  _owner = newOwner */\n      dup4\n      dup2\n      and\n      not(sub(shl(0xa0, 0x01), 0x01))\n      dup4\n      and\n      dup2\n      or\n      dup5\n      sstore\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n      mload(0x40)\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3004:3010  _owner */\n      swap2\n      swap1\n      swap3\n      and\n      swap3\n      dup4\n      swap2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n      0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n      swap2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2985:3001  address oldOwner */\n      swap1\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n      log3\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2975:3099  {... */\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\n      pop\n      jump\t// out\n    tag_200:\n      pop\n      dup1\n      sload\n      0x00\n      dup3\n      sstore\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n      dup2\n      add\n      swap1\n      tag_354\n      swap2\n      swap1\n    tag_393:\n      dup1\n      dup3\n      gt\n      iszero\n      tag_394\n      jumpi\n      0x00\n      dup2\n      sstore\n      0x01\n      add\n      jump(tag_393)\n    tag_394:\n      pop\n      swap1\n      jump\t// out\n        /* \"#utility.yul\":14:187   */\n    tag_395:\n        /* \"#utility.yul\":82:102   */\n      dup1\n      calldataload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":131:162   */\n      dup2\n      and\n        /* \"#utility.yul\":121:163   */\n      dup2\n      eq\n        /* \"#utility.yul\":111:181   */\n      tag_400\n      jumpi\n        /* \"#utility.yul\":177:178   */\n      0x00\n        /* \"#utility.yul\":174:175   */\n      dup1\n        /* \"#utility.yul\":167:179   */\n      revert\n        /* \"#utility.yul\":111:181   */\n    tag_400:\n        /* \"#utility.yul\":14:187   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":192:514   */\n    tag_37:\n        /* \"#utility.yul\":269:275   */\n      0x00\n        /* \"#utility.yul\":277:283   */\n      dup1\n        /* \"#utility.yul\":285:291   */\n      0x00\n        /* \"#utility.yul\":338:340   */\n      0x60\n        /* \"#utility.yul\":326:335   */\n      dup5\n        /* \"#utility.yul\":317:324   */\n      dup7\n        /* \"#utility.yul\":313:336   */\n      sub\n        /* \"#utility.yul\":309:341   */\n      slt\n        /* \"#utility.yul\":306:358   */\n      iszero\n      tag_402\n      jumpi\n        /* \"#utility.yul\":354:355   */\n      0x00\n        /* \"#utility.yul\":351:352   */\n      dup1\n        /* \"#utility.yul\":344:356   */\n      revert\n        /* \"#utility.yul\":306:358   */\n    tag_402:\n        /* \"#utility.yul\":377:406   */\n      tag_403\n        /* \"#utility.yul\":396:405   */\n      dup5\n        /* \"#utility.yul\":377:406   */\n      tag_395\n      jump\t// in\n    tag_403:\n        /* \"#utility.yul\":367:406   */\n      swap6\n        /* \"#utility.yul\":453:455   */\n      0x20\n        /* \"#utility.yul\":438:456   */\n      dup6\n      add\n        /* \"#utility.yul\":425:457   */\n      calldataload\n      swap6\n      pop\n        /* \"#utility.yul\":504:506   */\n      0x40\n        /* \"#utility.yul\":489:507   */\n      swap1\n      swap5\n      add\n        /* \"#utility.yul\":476:508   */\n      calldataload\n      swap4\n        /* \"#utility.yul\":192:514   */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":727:907   */\n    tag_47:\n        /* \"#utility.yul\":786:792   */\n      0x00\n        /* \"#utility.yul\":839:841   */\n      0x20\n        /* \"#utility.yul\":827:836   */\n      dup3\n        /* \"#utility.yul\":818:825   */\n      dup5\n        /* \"#utility.yul\":814:837   */\n      sub\n        /* \"#utility.yul\":810:842   */\n      slt\n        /* \"#utility.yul\":807:859   */\n      iszero\n      tag_406\n      jumpi\n        /* \"#utility.yul\":855:856   */\n      0x00\n        /* \"#utility.yul\":852:853   */\n      dup1\n        /* \"#utility.yul\":845:857   */\n      revert\n        /* \"#utility.yul\":807:859   */\n    tag_406:\n      pop\n        /* \"#utility.yul\":878:901   */\n      calldataload\n      swap2\n        /* \"#utility.yul\":727:907   */\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":912:1166   */\n    tag_52:\n        /* \"#utility.yul\":980:986   */\n      0x00\n        /* \"#utility.yul\":988:994   */\n      dup1\n        /* \"#utility.yul\":1041:1043   */\n      0x40\n        /* \"#utility.yul\":1029:1038   */\n      dup4\n        /* \"#utility.yul\":1020:1027   */\n      dup6\n        /* \"#utility.yul\":1016:1039   */\n      sub\n        /* \"#utility.yul\":1012:1044   */\n      slt\n        /* \"#utility.yul\":1009:1061   */\n      iszero\n      tag_408\n      jumpi\n        /* \"#utility.yul\":1057:1058   */\n      0x00\n        /* \"#utility.yul\":1054:1055   */\n      dup1\n        /* \"#utility.yul\":1047:1059   */\n      revert\n        /* \"#utility.yul\":1009:1061   */\n    tag_408:\n        /* \"#utility.yul\":1080:1109   */\n      tag_409\n        /* \"#utility.yul\":1099:1108   */\n      dup4\n        /* \"#utility.yul\":1080:1109   */\n      tag_395\n      jump\t// in\n    tag_409:\n        /* \"#utility.yul\":1070:1109   */\n      swap5\n        /* \"#utility.yul\":1156:1158   */\n      0x20\n        /* \"#utility.yul\":1141:1159   */\n      swap4\n      swap1\n      swap4\n      add\n        /* \"#utility.yul\":1128:1160   */\n      calldataload\n      swap4\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":912:1166   */\n      jump\t// out\n        /* \"#utility.yul\":1353:1539   */\n    tag_90:\n        /* \"#utility.yul\":1412:1418   */\n      0x00\n        /* \"#utility.yul\":1465:1467   */\n      0x20\n        /* \"#utility.yul\":1453:1462   */\n      dup3\n        /* \"#utility.yul\":1444:1451   */\n      dup5\n        /* \"#utility.yul\":1440:1463   */\n      sub\n        /* \"#utility.yul\":1436:1468   */\n      slt\n        /* \"#utility.yul\":1433:1485   */\n      iszero\n      tag_412\n      jumpi\n        /* \"#utility.yul\":1481:1482   */\n      0x00\n        /* \"#utility.yul\":1478:1479   */\n      dup1\n        /* \"#utility.yul\":1471:1483   */\n      revert\n        /* \"#utility.yul\":1433:1485   */\n    tag_412:\n        /* \"#utility.yul\":1504:1533   */\n      tag_413\n        /* \"#utility.yul\":1523:1532   */\n      dup3\n        /* \"#utility.yul\":1504:1533   */\n      tag_395\n      jump\t// in\n    tag_413:\n        /* \"#utility.yul\":1494:1533   */\n      swap4\n        /* \"#utility.yul\":1353:1539   */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1736:2548   */\n    tag_102:\n        /* \"#utility.yul\":1955:1957   */\n      0x20\n        /* \"#utility.yul\":2007:2028   */\n      dup1\n      dup3\n      mstore\n        /* \"#utility.yul\":2077:2090   */\n      dup3\n      mload\n        /* \"#utility.yul\":1980:1998   */\n      dup3\n      dup3\n      add\n        /* \"#utility.yul\":2099:2121   */\n      dup2\n      swap1\n      mstore\n        /* \"#utility.yul\":1926:1930   */\n      0x00\n      swap2\n        /* \"#utility.yul\":1955:1957   */\n      swap1\n        /* \"#utility.yul\":2140:2142   */\n      0x40\n      swap1\n        /* \"#utility.yul\":2158:2176   */\n      dup2\n      dup6\n      add\n      swap1\n        /* \"#utility.yul\":2199:2214   */\n      dup7\n      dup5\n      add\n        /* \"#utility.yul\":1926:1930   */\n      dup6\n        /* \"#utility.yul\":2242:2522   */\n    tag_416:\n        /* \"#utility.yul\":2256:2262   */\n      dup3\n        /* \"#utility.yul\":2253:2254   */\n      dup2\n        /* \"#utility.yul\":2250:2263   */\n      lt\n        /* \"#utility.yul\":2242:2522   */\n      iszero\n      tag_418\n      jumpi\n        /* \"#utility.yul\":2315:2328   */\n      dup2\n      mload\n        /* \"#utility.yul\":2357:2366   */\n      dup1\n      mload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":2353:2388   */\n      and\n        /* \"#utility.yul\":2341:2389   */\n      dup6\n      mstore\n        /* \"#utility.yul\":2429:2440   */\n      dup7\n      add\n        /* \"#utility.yul\":2423:2441   */\n      mload\n        /* \"#utility.yul\":2409:2421   */\n      dup7\n      dup6\n      add\n        /* \"#utility.yul\":2402:2442   */\n      mstore\n        /* \"#utility.yul\":2462:2474   */\n      swap3\n      dup5\n      add\n      swap3\n        /* \"#utility.yul\":2497:2512   */\n      swap1\n      dup6\n      add\n      swap1\n        /* \"#utility.yul\":2385:2386   */\n      0x01\n        /* \"#utility.yul\":2271:2280   */\n      add\n        /* \"#utility.yul\":2242:2522   */\n      jump(tag_416)\n    tag_418:\n      pop\n        /* \"#utility.yul\":2539:2542   */\n      swap2\n      swap8\n        /* \"#utility.yul\":1736:2548   */\n      swap7\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2553:2950   */\n    tag_120:\n        /* \"#utility.yul\":2639:2645   */\n      0x00\n        /* \"#utility.yul\":2647:2653   */\n      dup1\n        /* \"#utility.yul\":2655:2661   */\n      0x00\n        /* \"#utility.yul\":2663:2669   */\n      dup1\n        /* \"#utility.yul\":2716:2719   */\n      0x80\n        /* \"#utility.yul\":2704:2713   */\n      dup6\n        /* \"#utility.yul\":2695:2702   */\n      dup8\n        /* \"#utility.yul\":2691:2714   */\n      sub\n        /* \"#utility.yul\":2687:2720   */\n      slt\n        /* \"#utility.yul\":2684:2737   */\n      iszero\n      tag_420\n      jumpi\n        /* \"#utility.yul\":2733:2734   */\n      0x00\n        /* \"#utility.yul\":2730:2731   */\n      dup1\n        /* \"#utility.yul\":2723:2735   */\n      revert\n        /* \"#utility.yul\":2684:2737   */\n    tag_420:\n        /* \"#utility.yul\":2756:2785   */\n      tag_421\n        /* \"#utility.yul\":2775:2784   */\n      dup6\n        /* \"#utility.yul\":2756:2785   */\n      tag_395\n      jump\t// in\n    tag_421:\n        /* \"#utility.yul\":2746:2785   */\n      swap4\n      pop\n        /* \"#utility.yul\":2804:2842   */\n      tag_422\n        /* \"#utility.yul\":2838:2840   */\n      0x20\n        /* \"#utility.yul\":2827:2836   */\n      dup7\n        /* \"#utility.yul\":2823:2841   */\n      add\n        /* \"#utility.yul\":2804:2842   */\n      tag_395\n      jump\t// in\n    tag_422:\n        /* \"#utility.yul\":2553:2950   */\n      swap4\n      swap7\n        /* \"#utility.yul\":2794:2842   */\n      swap4\n      swap6\n      pop\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":2889:2891   */\n      0x40\n        /* \"#utility.yul\":2874:2892   */\n      dup3\n      add\n        /* \"#utility.yul\":2861:2893   */\n      calldataload\n      swap2\n        /* \"#utility.yul\":2940:2942   */\n      0x60\n        /* \"#utility.yul\":2925:2943   */\n      add\n        /* \"#utility.yul\":2912:2944   */\n      calldataload\n      swap1\n        /* \"#utility.yul\":2553:2950   */\n      jump\t// out\n        /* \"#utility.yul\":3335:3612   */\n    tag_148:\n        /* \"#utility.yul\":3402:3408   */\n      0x00\n        /* \"#utility.yul\":3455:3457   */\n      0x20\n        /* \"#utility.yul\":3443:3452   */\n      dup3\n        /* \"#utility.yul\":3434:3441   */\n      dup5\n        /* \"#utility.yul\":3430:3453   */\n      sub\n        /* \"#utility.yul\":3426:3458   */\n      slt\n        /* \"#utility.yul\":3423:3475   */\n      iszero\n      tag_425\n      jumpi\n        /* \"#utility.yul\":3471:3472   */\n      0x00\n        /* \"#utility.yul\":3468:3469   */\n      dup1\n        /* \"#utility.yul\":3461:3473   */\n      revert\n        /* \"#utility.yul\":3423:3475   */\n    tag_425:\n        /* \"#utility.yul\":3503:3512   */\n      dup2\n        /* \"#utility.yul\":3497:3513   */\n      mload\n        /* \"#utility.yul\":3556:3561   */\n      dup1\n        /* \"#utility.yul\":3549:3562   */\n      iszero\n        /* \"#utility.yul\":3542:3563   */\n      iszero\n        /* \"#utility.yul\":3535:3540   */\n      dup2\n        /* \"#utility.yul\":3532:3564   */\n      eq\n        /* \"#utility.yul\":3522:3582   */\n      tag_413\n      jumpi\n        /* \"#utility.yul\":3578:3579   */\n      0x00\n        /* \"#utility.yul\":3575:3576   */\n      dup1\n        /* \"#utility.yul\":3568:3580   */\n      revert\n        /* \"#utility.yul\":3617:3744   */\n    tag_396:\n        /* \"#utility.yul\":3678:3688   */\n      0x4e487b71\n        /* \"#utility.yul\":3673:3676   */\n      0xe0\n        /* \"#utility.yul\":3669:3689   */\n      shl\n        /* \"#utility.yul\":3666:3667   */\n      0x00\n        /* \"#utility.yul\":3659:3690   */\n      mstore\n        /* \"#utility.yul\":3709:3713   */\n      0x11\n        /* \"#utility.yul\":3706:3707   */\n      0x04\n        /* \"#utility.yul\":3699:3714   */\n      mstore\n        /* \"#utility.yul\":3733:3737   */\n      0x24\n        /* \"#utility.yul\":3730:3731   */\n      0x00\n        /* \"#utility.yul\":3723:3738   */\n      revert\n        /* \"#utility.yul\":3749:3917   */\n    tag_150:\n        /* \"#utility.yul\":3822:3831   */\n      dup1\n      dup3\n      mul\n        /* \"#utility.yul\":3853:3862   */\n      dup2\n      iszero\n        /* \"#utility.yul\":3870:3885   */\n      dup3\n      dup3\n      div\n        /* \"#utility.yul\":3864:3886   */\n      dup5\n      eq\n        /* \"#utility.yul\":3850:3887   */\n      or\n        /* \"#utility.yul\":3840:3911   */\n      tag_430\n      jumpi\n        /* \"#utility.yul\":3891:3909   */\n      tag_430\n      tag_396\n      jump\t// in\n    tag_430:\n        /* \"#utility.yul\":3749:3917   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3922:4139   */\n    tag_152:\n        /* \"#utility.yul\":3962:3963   */\n      0x00\n        /* \"#utility.yul\":3988:3989   */\n      dup3\n        /* \"#utility.yul\":3978:4110   */\n      tag_432\n      jumpi\n        /* \"#utility.yul\":4032:4042   */\n      0x4e487b71\n        /* \"#utility.yul\":4027:4030   */\n      0xe0\n        /* \"#utility.yul\":4023:4043   */\n      shl\n        /* \"#utility.yul\":4020:4021   */\n      0x00\n        /* \"#utility.yul\":4013:4044   */\n      mstore\n        /* \"#utility.yul\":4067:4071   */\n      0x12\n        /* \"#utility.yul\":4064:4065   */\n      0x04\n        /* \"#utility.yul\":4057:4072   */\n      mstore\n        /* \"#utility.yul\":4095:4099   */\n      0x24\n        /* \"#utility.yul\":4092:4093   */\n      0x00\n        /* \"#utility.yul\":4085:4100   */\n      revert\n        /* \"#utility.yul\":3978:4110   */\n    tag_432:\n      pop\n        /* \"#utility.yul\":4124:4133   */\n      div\n      swap1\n        /* \"#utility.yul\":3922:4139   */\n      jump\t// out\n        /* \"#utility.yul\":4144:4271   */\n    tag_157:\n        /* \"#utility.yul\":4205:4215   */\n      0x4e487b71\n        /* \"#utility.yul\":4200:4203   */\n      0xe0\n        /* \"#utility.yul\":4196:4216   */\n      shl\n        /* \"#utility.yul\":4193:4194   */\n      0x00\n        /* \"#utility.yul\":4186:4217   */\n      mstore\n        /* \"#utility.yul\":4236:4240   */\n      0x41\n        /* \"#utility.yul\":4233:4234   */\n      0x04\n        /* \"#utility.yul\":4226:4241   */\n      mstore\n        /* \"#utility.yul\":4260:4264   */\n      0x24\n        /* \"#utility.yul\":4257:4258   */\n      0x00\n        /* \"#utility.yul\":4250:4265   */\n      revert\n        /* \"#utility.yul\":4276:4403   */\n    tag_161:\n        /* \"#utility.yul\":4337:4347   */\n      0x4e487b71\n        /* \"#utility.yul\":4332:4335   */\n      0xe0\n        /* \"#utility.yul\":4328:4348   */\n      shl\n        /* \"#utility.yul\":4325:4326   */\n      0x00\n        /* \"#utility.yul\":4318:4349   */\n      mstore\n        /* \"#utility.yul\":4368:4372   */\n      0x32\n        /* \"#utility.yul\":4365:4366   */\n      0x04\n        /* \"#utility.yul\":4358:4373   */\n      mstore\n        /* \"#utility.yul\":4392:4396   */\n      0x24\n        /* \"#utility.yul\":4389:4390   */\n      0x00\n        /* \"#utility.yul\":4382:4397   */\n      revert\n        /* \"#utility.yul\":4408:4536   */\n    tag_165:\n        /* \"#utility.yul\":4475:4484   */\n      dup2\n      dup2\n      sub\n        /* \"#utility.yul\":4496:4507   */\n      dup2\n      dup2\n      gt\n        /* \"#utility.yul\":4493:4530   */\n      iszero\n      tag_430\n      jumpi\n        /* \"#utility.yul\":4510:4528   */\n      tag_430\n      tag_396\n      jump\t// in\n        /* \"#utility.yul\":4541:4666   */\n    tag_167:\n        /* \"#utility.yul\":4606:4615   */\n      dup1\n      dup3\n      add\n        /* \"#utility.yul\":4627:4637   */\n      dup1\n      dup3\n      gt\n        /* \"#utility.yul\":4624:4660   */\n      iszero\n      tag_430\n      jumpi\n        /* \"#utility.yul\":4640:4658   */\n      tag_430\n      tag_396\n      jump\t// in\n        /* \"#utility.yul\":4671:5132   */\n    tag_397:\n        /* \"#utility.yul\":4724:4727   */\n      0x00\n        /* \"#utility.yul\":4762:4767   */\n      dup2\n        /* \"#utility.yul\":4756:4768   */\n      mload\n        /* \"#utility.yul\":4789:4795   */\n      dup1\n        /* \"#utility.yul\":4784:4787   */\n      dup5\n        /* \"#utility.yul\":4777:4796   */\n      mstore\n        /* \"#utility.yul\":4815:4819   */\n      0x20\n        /* \"#utility.yul\":4844:4846   */\n      dup1\n        /* \"#utility.yul\":4839:4842   */\n      dup6\n        /* \"#utility.yul\":4835:4847   */\n      add\n        /* \"#utility.yul\":4828:4847   */\n      swap5\n      pop\n        /* \"#utility.yul\":4881:4883   */\n      dup1\n        /* \"#utility.yul\":4874:4879   */\n      dup5\n        /* \"#utility.yul\":4870:4884   */\n      add\n        /* \"#utility.yul\":4902:4903   */\n      0x00\n        /* \"#utility.yul\":4912:5107   */\n    tag_442:\n        /* \"#utility.yul\":4926:4932   */\n      dup4\n        /* \"#utility.yul\":4923:4924   */\n      dup2\n        /* \"#utility.yul\":4920:4933   */\n      lt\n        /* \"#utility.yul\":4912:5107   */\n      iszero\n      tag_444\n      jumpi\n        /* \"#utility.yul\":4991:5004   */\n      dup2\n      mload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":4987:5026   */\n      and\n        /* \"#utility.yul\":4975:5027   */\n      dup8\n      mstore\n        /* \"#utility.yul\":5047:5059   */\n      swap6\n      dup3\n      add\n      swap6\n        /* \"#utility.yul\":5082:5097   */\n      swap1\n      dup3\n      add\n      swap1\n        /* \"#utility.yul\":5023:5024   */\n      0x01\n        /* \"#utility.yul\":4941:4950   */\n      add\n        /* \"#utility.yul\":4912:5107   */\n      jump(tag_442)\n    tag_444:\n      pop\n        /* \"#utility.yul\":5123:5126   */\n      swap5\n      swap6\n        /* \"#utility.yul\":4671:5132   */\n      swap5\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5137:5711   */\n    tag_169:\n        /* \"#utility.yul\":5428:5434   */\n      dup6\n        /* \"#utility.yul\":5417:5426   */\n      dup2\n        /* \"#utility.yul\":5410:5435   */\n      mstore\n        /* \"#utility.yul\":5471:5477   */\n      dup5\n        /* \"#utility.yul\":5466:5468   */\n      0x20\n        /* \"#utility.yul\":5455:5464   */\n      dup3\n        /* \"#utility.yul\":5451:5469   */\n      add\n        /* \"#utility.yul\":5444:5478   */\n      mstore\n        /* \"#utility.yul\":5514:5517   */\n      0xa0\n        /* \"#utility.yul\":5509:5511   */\n      0x40\n        /* \"#utility.yul\":5498:5507   */\n      dup3\n        /* \"#utility.yul\":5494:5512   */\n      add\n        /* \"#utility.yul\":5487:5518   */\n      mstore\n        /* \"#utility.yul\":5391:5395   */\n      0x00\n        /* \"#utility.yul\":5535:5592   */\n      tag_446\n        /* \"#utility.yul\":5587:5590   */\n      0xa0\n        /* \"#utility.yul\":5576:5585   */\n      dup4\n        /* \"#utility.yul\":5572:5591   */\n      add\n        /* \"#utility.yul\":5564:5570   */\n      dup7\n        /* \"#utility.yul\":5535:5592   */\n      tag_397\n      jump\t// in\n    tag_446:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":5628:5660   */\n      swap5\n      swap1\n      swap5\n      and\n        /* \"#utility.yul\":5623:5625   */\n      0x60\n        /* \"#utility.yul\":5608:5626   */\n      dup4\n      add\n        /* \"#utility.yul\":5601:5661   */\n      mstore\n      pop\n        /* \"#utility.yul\":5692:5695   */\n      0x80\n        /* \"#utility.yul\":5677:5696   */\n      add\n        /* \"#utility.yul\":5670:5705   */\n      mstore\n        /* \"#utility.yul\":5527:5592   */\n      swap4\n        /* \"#utility.yul\":5137:5711   */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5716:5851   */\n    tag_198:\n        /* \"#utility.yul\":5755:5758   */\n      0x00\n        /* \"#utility.yul\":5776:5793   */\n      0x01\n      dup3\n      add\n        /* \"#utility.yul\":5773:5816   */\n      tag_449\n      jumpi\n        /* \"#utility.yul\":5796:5814   */\n      tag_449\n      tag_396\n      jump\t// in\n    tag_449:\n      pop\n        /* \"#utility.yul\":5843:5844   */\n      0x01\n        /* \"#utility.yul\":5832:5845   */\n      add\n      swap1\n        /* \"#utility.yul\":5716:5851   */\n      jump\t// out\n        /* \"#utility.yul\":5856:6188   */\n    tag_215:\n        /* \"#utility.yul\":6063:6069   */\n      dup3\n        /* \"#utility.yul\":6052:6061   */\n      dup2\n        /* \"#utility.yul\":6045:6070   */\n      mstore\n        /* \"#utility.yul\":6106:6108   */\n      0x40\n        /* \"#utility.yul\":6101:6103   */\n      0x20\n        /* \"#utility.yul\":6090:6099   */\n      dup3\n        /* \"#utility.yul\":6086:6104   */\n      add\n        /* \"#utility.yul\":6079:6109   */\n      mstore\n        /* \"#utility.yul\":6026:6030   */\n      0x00\n        /* \"#utility.yul\":6126:6182   */\n      tag_451\n        /* \"#utility.yul\":6178:6180   */\n      0x40\n        /* \"#utility.yul\":6167:6176   */\n      dup4\n        /* \"#utility.yul\":6163:6181   */\n      add\n        /* \"#utility.yul\":6155:6161   */\n      dup5\n        /* \"#utility.yul\":6126:6182   */\n      tag_397\n      jump\t// in\n    tag_451:\n        /* \"#utility.yul\":6118:6182   */\n      swap5\n        /* \"#utility.yul\":5856:6188   */\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6193:7298   */\n    tag_219:\n        /* \"#utility.yul\":6288:6294   */\n      0x00\n        /* \"#utility.yul\":6319:6321   */\n      0x20\n        /* \"#utility.yul\":6362:6364   */\n      dup1\n        /* \"#utility.yul\":6350:6359   */\n      dup4\n        /* \"#utility.yul\":6341:6348   */\n      dup6\n        /* \"#utility.yul\":6337:6360   */\n      sub\n        /* \"#utility.yul\":6333:6365   */\n      slt\n        /* \"#utility.yul\":6330:6382   */\n      iszero\n      tag_453\n      jumpi\n        /* \"#utility.yul\":6378:6379   */\n      0x00\n        /* \"#utility.yul\":6375:6376   */\n      dup1\n        /* \"#utility.yul\":6368:6380   */\n      revert\n        /* \"#utility.yul\":6330:6382   */\n    tag_453:\n        /* \"#utility.yul\":6411:6420   */\n      dup3\n        /* \"#utility.yul\":6405:6421   */\n      mload\n        /* \"#utility.yul\":6440:6458   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":6481:6483   */\n      dup1\n        /* \"#utility.yul\":6473:6479   */\n      dup3\n        /* \"#utility.yul\":6470:6484   */\n      gt\n        /* \"#utility.yul\":6467:6501   */\n      iszero\n      tag_454\n      jumpi\n        /* \"#utility.yul\":6497:6498   */\n      0x00\n        /* \"#utility.yul\":6494:6495   */\n      dup1\n        /* \"#utility.yul\":6487:6499   */\n      revert\n        /* \"#utility.yul\":6467:6501   */\n    tag_454:\n        /* \"#utility.yul\":6535:6541   */\n      dup2\n        /* \"#utility.yul\":6524:6533   */\n      dup6\n        /* \"#utility.yul\":6520:6542   */\n      add\n        /* \"#utility.yul\":6510:6542   */\n      swap2\n      pop\n        /* \"#utility.yul\":6580:6587   */\n      dup6\n        /* \"#utility.yul\":6573:6577   */\n      0x1f\n        /* \"#utility.yul\":6569:6571   */\n      dup4\n        /* \"#utility.yul\":6565:6578   */\n      add\n        /* \"#utility.yul\":6561:6588   */\n      slt\n        /* \"#utility.yul\":6551:6606   */\n      tag_455\n      jumpi\n        /* \"#utility.yul\":6602:6603   */\n      0x00\n        /* \"#utility.yul\":6599:6600   */\n      dup1\n        /* \"#utility.yul\":6592:6604   */\n      revert\n        /* \"#utility.yul\":6551:6606   */\n    tag_455:\n        /* \"#utility.yul\":6631:6633   */\n      dup2\n        /* \"#utility.yul\":6625:6634   */\n      mload\n        /* \"#utility.yul\":6653:6655   */\n      dup2\n        /* \"#utility.yul\":6649:6651   */\n      dup2\n        /* \"#utility.yul\":6646:6656   */\n      gt\n        /* \"#utility.yul\":6643:6679   */\n      iszero\n      tag_457\n      jumpi\n        /* \"#utility.yul\":6659:6677   */\n      tag_457\n      tag_157\n      jump\t// in\n    tag_457:\n        /* \"#utility.yul\":6705:6707   */\n      dup1\n        /* \"#utility.yul\":6702:6703   */\n      0x05\n        /* \"#utility.yul\":6698:6708   */\n      shl\n        /* \"#utility.yul\":6737:6739   */\n      0x40\n        /* \"#utility.yul\":6731:6740   */\n      mload\n        /* \"#utility.yul\":6800:6802   */\n      0x1f\n        /* \"#utility.yul\":6796:6803   */\n      not\n        /* \"#utility.yul\":6791:6793   */\n      0x3f\n        /* \"#utility.yul\":6787:6789   */\n      dup4\n        /* \"#utility.yul\":6783:6794   */\n      add\n        /* \"#utility.yul\":6779:6804   */\n      and\n        /* \"#utility.yul\":6771:6777   */\n      dup2\n        /* \"#utility.yul\":6767:6805   */\n      add\n        /* \"#utility.yul\":6855:6861   */\n      dup2\n        /* \"#utility.yul\":6843:6853   */\n      dup2\n        /* \"#utility.yul\":6840:6862   */\n      lt\n        /* \"#utility.yul\":6835:6837   */\n      dup6\n        /* \"#utility.yul\":6823:6833   */\n      dup3\n        /* \"#utility.yul\":6820:6838   */\n      gt\n        /* \"#utility.yul\":6817:6863   */\n      or\n        /* \"#utility.yul\":6814:6886   */\n      iszero\n      tag_459\n      jumpi\n        /* \"#utility.yul\":6866:6884   */\n      tag_459\n      tag_157\n      jump\t// in\n    tag_459:\n        /* \"#utility.yul\":6902:6904   */\n      0x40\n        /* \"#utility.yul\":6895:6917   */\n      mstore\n        /* \"#utility.yul\":6952:6970   */\n      swap2\n      dup3\n      mstore\n        /* \"#utility.yul\":6986:7001   */\n      dup5\n      dup3\n      add\n      swap3\n      pop\n        /* \"#utility.yul\":7028:7039   */\n      dup4\n      dup2\n      add\n        /* \"#utility.yul\":7024:7044   */\n      dup6\n      add\n      swap2\n        /* \"#utility.yul\":7056:7075   */\n      dup9\n      dup4\n      gt\n        /* \"#utility.yul\":7053:7092   */\n      iszero\n      tag_460\n      jumpi\n        /* \"#utility.yul\":7088:7089   */\n      0x00\n        /* \"#utility.yul\":7085:7086   */\n      dup1\n        /* \"#utility.yul\":7078:7090   */\n      revert\n        /* \"#utility.yul\":7053:7092   */\n    tag_460:\n        /* \"#utility.yul\":7112:7123   */\n      swap4\n      dup6\n      add\n      swap4\n        /* \"#utility.yul\":7132:7267   */\n    tag_461:\n        /* \"#utility.yul\":7148:7154   */\n      dup3\n        /* \"#utility.yul\":7143:7146   */\n      dup6\n        /* \"#utility.yul\":7140:7155   */\n      lt\n        /* \"#utility.yul\":7132:7267   */\n      iszero\n      tag_463\n      jumpi\n        /* \"#utility.yul\":7214:7224   */\n      dup5\n      mload\n        /* \"#utility.yul\":7202:7225   */\n      dup5\n      mstore\n        /* \"#utility.yul\":7165:7177   */\n      swap4\n      dup6\n      add\n      swap4\n        /* \"#utility.yul\":7245:7257   */\n      swap3\n      dup6\n      add\n      swap3\n        /* \"#utility.yul\":7132:7267   */\n      jump(tag_461)\n    tag_463:\n        /* \"#utility.yul\":7286:7292   */\n      swap9\n        /* \"#utility.yul\":6193:7298   */\n      swap8\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7303:7805   */\n    tag_223:\n        /* \"#utility.yul\":7566:7572   */\n      dup5\n        /* \"#utility.yul\":7555:7564   */\n      dup2\n        /* \"#utility.yul\":7548:7573   */\n      mstore\n        /* \"#utility.yul\":7609:7612   */\n      0x80\n        /* \"#utility.yul\":7604:7606   */\n      0x20\n        /* \"#utility.yul\":7593:7602   */\n      dup3\n        /* \"#utility.yul\":7589:7607   */\n      add\n        /* \"#utility.yul\":7582:7613   */\n      mstore\n        /* \"#utility.yul\":7529:7533   */\n      0x00\n        /* \"#utility.yul\":7630:7687   */\n      tag_465\n        /* \"#utility.yul\":7682:7685   */\n      0x80\n        /* \"#utility.yul\":7671:7680   */\n      dup4\n        /* \"#utility.yul\":7667:7686   */\n      add\n        /* \"#utility.yul\":7659:7665   */\n      dup7\n        /* \"#utility.yul\":7630:7687   */\n      tag_397\n      jump\t// in\n    tag_465:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":7723:7755   */\n      swap5\n      swap1\n      swap5\n      and\n        /* \"#utility.yul\":7718:7720   */\n      0x40\n        /* \"#utility.yul\":7703:7721   */\n      dup4\n      add\n        /* \"#utility.yul\":7696:7756   */\n      mstore\n      pop\n        /* \"#utility.yul\":7787:7789   */\n      0x60\n        /* \"#utility.yul\":7772:7790   */\n      add\n        /* \"#utility.yul\":7765:7799   */\n      mstore\n        /* \"#utility.yul\":7622:7687   */\n      swap3\n        /* \"#utility.yul\":7303:7805   */\n      swap2\n      pop\n      pop\n      jump\t// out\n\n    auxdata: 0xa264697066735822122099f52f70626d33c76cd5e9c0c8515a1b004e3b9f039b27ed0abd8ecbd8c6ae8264736f6c63430008140033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_1977": {
									"entryPoint": null,
									"id": 1977,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_50": {
									"entryPoint": null,
									"id": 50,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_transferOwnership_146": {
									"entryPoint": 972,
									"id": 146,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"abi_decode_tuple_t_bool_fromMemory": {
									"entryPoint": 1051,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:780:13",
										"statements": [
											{
												"nodeType": "YulBlock",
												"src": "6:3:13",
												"statements": []
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "115:102:13",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "125:26:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "137:9:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "148:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "133:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "133:18:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "125:4:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "167:9:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "182:6:13"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "198:3:13",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "203:1:13",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nodeType": "YulIdentifier",
																							"src": "194:3:13"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "194:11:13"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "207:1:13",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nodeType": "YulIdentifier",
																					"src": "190:3:13"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "190:19:13"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "178:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "178:32:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "160:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "160:51:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "160:51:13"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "84:9:13",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "95:6:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "106:4:13",
														"type": ""
													}
												],
												"src": "14:203:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "351:145:13",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "361:26:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "373:9:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "384:2:13",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "369:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "369:18:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "361:4:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "403:9:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "418:6:13"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "434:3:13",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "439:1:13",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nodeType": "YulIdentifier",
																							"src": "430:3:13"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "430:11:13"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "443:1:13",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nodeType": "YulIdentifier",
																					"src": "426:3:13"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "426:19:13"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "414:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "414:32:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "396:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "396:51:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "396:51:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "467:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "478:2:13",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "463:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "463:18:13"
																	},
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "483:6:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "456:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "456:34:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "456:34:13"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "312:9:13",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "323:6:13",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "331:6:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "342:4:13",
														"type": ""
													}
												],
												"src": "222:274:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "579:199:13",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "625:16:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "634:1:13",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "637:1:13",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "627:6:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "627:12:13"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "627:12:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "600:7:13"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "609:9:13"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "596:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "596:23:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "621:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "592:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "592:32:13"
															},
															"nodeType": "YulIf",
															"src": "589:52:13"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "650:29:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "669:9:13"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "663:5:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "663:16:13"
															},
															"variables": [
																{
																	"name": "value",
																	"nodeType": "YulTypedName",
																	"src": "654:5:13",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "732:16:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "741:1:13",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "744:1:13",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "734:6:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "734:12:13"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "734:12:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "701:5:13"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "value",
																								"nodeType": "YulIdentifier",
																								"src": "722:5:13"
																							}
																						],
																						"functionName": {
																							"name": "iszero",
																							"nodeType": "YulIdentifier",
																							"src": "715:6:13"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "715:13:13"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nodeType": "YulIdentifier",
																					"src": "708:6:13"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "708:21:13"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "698:2:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "698:32:13"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "691:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "691:40:13"
															},
															"nodeType": "YulIf",
															"src": "688:60:13"
														},
														{
															"nodeType": "YulAssignment",
															"src": "757:15:13",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "767:5:13"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "757:6:13"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bool_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "545:9:13",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "556:7:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "568:6:13",
														"type": ""
													}
												],
												"src": "501:277:13"
											}
										]
									},
									"contents": "{\n    { }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 32), value1)\n    }\n    function abi_decode_tuple_t_bool_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := mload(headStart)\n        if iszero(eq(value, iszero(iszero(value)))) { revert(0, 0) }\n        value0 := value\n    }\n}",
									"id": 13,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "60806040526003805460ff191690553480156200001a575f80fd5b5033806200004157604051631e4fbdf760e01b81525f600482015260240160405180910390fd5b6200004c81620003cc565b50600780546001600160a01b0319908116733b44b2a187a7b3824131f8db5a74194d0a42fc15179091556008805482165f8051602062001dbc83398151915290811790915560098054831673c21223249ca28397b4b6541dffaecc539bff0c59908117909155600a805484167366e428c3f67a68878562e79a0234c1f83c208770179055600b805484167341bc026dabe978bc2fafea1850456511ca4b01bc179055600c80548416733b41b27e74dd366ce27cb389dc7877d4e1516d4d179055600d80548416735c7f8a570d578ed84e63fdfa7b1ee72deae1ae23179055600180549093163317909255600360025560405163095ea7b360e01b815263095ea7b39162000172915f19906004016001600160a01b03929092168252602082015260400190565b6020604051808303815f875af11580156200018f573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190620001b591906200041b565b50600a5460405163095ea7b360e01b81525f8051602062001dbc83398151915260048201525f1960248201526001600160a01b039091169063095ea7b3906044016020604051808303815f875af115801562000213573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906200023991906200041b565b50600b5460405163095ea7b360e01b81525f8051602062001dbc83398151915260048201525f1960248201526001600160a01b039091169063095ea7b3906044016020604051808303815f875af115801562000297573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190620002bd91906200041b565b50600d5460405163095ea7b360e01b81525f8051602062001dbc83398151915260048201525f1960248201526001600160a01b039091169063095ea7b3906044016020604051808303815f875af11580156200031b573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906200034191906200041b565b50600c5460405163095ea7b360e01b81525f8051602062001dbc83398151915260048201525f1960248201526001600160a01b039091169063095ea7b3906044016020604051808303815f875af11580156200039f573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190620003c591906200041b565b5062000443565b5f80546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b5f602082840312156200042c575f80fd5b815180151581146200043c575f80fd5b9392505050565b61196b80620004515f395ff3fe608060405260043610610164575f3560e01c8063a37b9e7f116100cd578063b3f0067411610087578063d3e66a9e11610062578063d3e66a9e1461041e578063d7b7d3f314610432578063edf26d9b14610459578063f2fde38b14610478575f80fd5b8063b3f00674146103d8578063d0e30db0146103f7578063d16a4010146103ff575f80fd5b8063a37b9e7f146102ee578063a6769ef814610315578063ac65334f14610340578063ae38a07014610369578063afe43b941461038a578063b0befe63146103b1575f80fd5b80635f0018cd1161011e5780635f0018cd146102395780636504fbad1461024d578063715018a6146102745780637c6f8fae146102885780637fd6f15c146102af5780638da5cb5b146102d2575f80fd5b8063162141201461016f5780631d470cb1146101905780632e1a7d4d146101d45780633977d68d146101f357806339bda01c1461021257806353ac861e14610226575f80fd5b3661016b57005b5f80fd5b34801561017a575f80fd5b5061018e6101893660046115b1565b610497565b005b34801561019b575f80fd5b506101b7735c7f8a570d578ed84e63fdfa7b1ee72deae1ae2381565b6040516001600160a01b0390911681526020015b60405180910390f35b3480156101df575f80fd5b5061018e6101ee3660046115e1565b610678565b3480156101fe575f80fd5b5061018e61020d3660046115f8565b610778565b34801561021d575f80fd5b5061018e6107a6565b61018e6102343660046115f8565b610820565b348015610244575f80fd5b5061018e610a57565b348015610258575f80fd5b506101b77366e428c3f67a68878562e79a0234c1f83c20877081565b34801561027f575f80fd5b5061018e610a6b565b348015610293575f80fd5b506101b7733b44b2a187a7b3824131f8db5a74194d0a42fc1581565b3480156102ba575f80fd5b506102c460025481565b6040519081526020016101cb565b3480156102dd575f80fd5b505f546001600160a01b03166101b7565b3480156102f9575f80fd5b506101b773c21223249ca28397b4b6541dffaecc539bff0c5981565b348015610320575f80fd5b506102c461032f366004611620565b60046020525f908152604090205481565b34801561034b575f80fd5b506003546103599060ff1681565b60405190151581526020016101cb565b348015610374575f80fd5b5061037d610a7e565b6040516101cb9190611640565b348015610395575f80fd5b506101b77341bc026dabe978bc2fafea1850456511ca4b01bc81565b3480156103bc575f80fd5b506101b7733b41b27e74dd366ce27cb389dc7877d4e1516d4d81565b3480156103e3575f80fd5b506001546101b7906001600160a01b031681565b61018e610bab565b34801561040a575f80fd5b5061018e610419366004611697565b610c7b565b348015610429575f80fd5b5061018e6111df565b34801561043d575f80fd5b506101b773145863eb42cf62847a6ca784e6416c1682b1b2ae81565b348015610464575f80fd5b506101b76104733660046115e1565b6111f6565b348015610483575f80fd5b5061018e610492366004611620565b61121e565b6001600160a01b0383167341bc026dabe978bc2fafea1850456511ca4b01bc1480156104c5575060035460ff165b156104d4576104d43383611260565b6040516323b872dd60e01b8152336004820152306024820152604481018390526001600160a01b038416906323b872dd906064016020604051808303815f875af1158015610524573d5f803e3d5ffd5b505050506040513d601f19601f8201168201806040525081019061054891906116d6565b505f6103e86002548461055b9190611709565b6105659190611726565b90506105718482611312565b6040805160028082526060820183525f9260208301908036833701905050905084815f815181106105a4576105a4611759565b60200260200101906001600160a01b031690816001600160a01b031681525050735c7f8a570d578ed84e63fdfa7b1ee72deae1ae23816001815181106105ec576105ec611759565b6001600160a01b0392831660209182029290920101526008541663791ac947610615848761176d565b85843361062442610e10611780565b6040518663ffffffff1660e01b81526004016106449594939291906117d5565b5f604051808303815f87803b15801561065b575f80fd5b505af115801561066d573d5f803e3d5ffd5b505050505050505050565b600d546040516323b872dd60e01b8152336004820152306024820152604481018390526001600160a01b03909116906323b872dd906064016020604051808303815f875af11580156106cc573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906106f091906116d6565b50600d54604051632e1a7d4d60e01b8152600481018390526001600160a01b0390911690632e1a7d4d906024015f604051808303815f87803b158015610734575f80fd5b505af1158015610746573d5f803e3d5ffd5b505060405133925083156108fc02915083905f818181858888f19350505050158015610774573d5f803e3d5ffd5b5050565b6107806114ed565b600180546001600160a01b0319166001600160a01b039390931692909217909155600255565b6107ae6114ed565b6006545f5b818110156108075760045f600683815481106107d1576107d1611759565b5f9182526020808320909101546001600160a01b03168352820192909252604001812055806107ff81611810565b9150506107b3565b5061081360065f611568565b506003805460ff19169055565b60025434905f906103e8906108359084611709565b61083f9190611726565b6001546040519192506001600160a01b03169082156108fc029083905f818181858888f19350505050158015610877573d5f803e3d5ffd5b506040805160028082526060820183525f92602083019080368337019050509050735c7f8a570d578ed84e63fdfa7b1ee72deae1ae23815f815181106108bf576108bf611759565b60200260200101906001600160a01b031690816001600160a01b03168152505084816001815181106108f3576108f3611759565b6001600160a01b0392831660209182029290920101526008545f911663d06ca61f61091e858761176d565b846040518363ffffffff1660e01b815260040161093c929190611828565b5f60405180830381865afa158015610956573d5f803e3d5ffd5b505050506040513d5f823e601f3d908101601f1916820160405261097d9190810190611848565b6008549091506001600160a01b031663b6f9de9561099b858761176d565b8785336109aa42610e10611780565b6040518663ffffffff1660e01b81526004016109c99493929190611901565b5f604051808303818588803b1580156109e0575f80fd5b505af11580156109f2573d5f803e3d5ffd5b505050506001600160a01b0387167341bc026dabe978bc2fafea1850456511ca4b01bc1490508015610a26575060035460ff165b15610a4f57610a4f3382600181518110610a4257610a42611759565b6020026020010151611260565b505050505050565b610a5f6114ed565b6003805460ff19169055565b610a736114ed565b610a7c5f611519565b565b6006546060905f8167ffffffffffffffff811115610a9e57610a9e611745565b604051908082528060200260200182016040528015610ae257816020015b604080518082019091525f8082526020820152815260200190600190039081610abc5790505b5090505f5b82811015610ba457604051806040016040528060068381548110610b0d57610b0d611759565b905f5260205f20015f9054906101000a90046001600160a01b03166001600160a01b0316815260200160045f60068581548110610b4c57610b4c611759565b5f9182526020808320909101546001600160a01b0316835282019290925260400190205490528251839083908110610b8657610b86611759565b60200260200101819052508080610b9c90611810565b915050610ae7565b5092915050565b600d5460408051630d0e30db60e41b8152905134926001600160a01b03169163d0e30db09184916004808201925f9290919082900301818588803b158015610bf1575f80fd5b505af1158015610c03573d5f803e3d5ffd5b5050600d5460405163a9059cbb60e01b8152336004820152602481018690526001600160a01b03909116935063a9059cbb925060440190506020604051808303815f875af1158015610c57573d5f803e3d5ffd5b505050506040513d601f19601f8201168201806040525081019061077491906116d6565b6040516323b872dd60e01b8152336004820152306024820152604481018390526001600160a01b038516906323b872dd906064016020604051808303815f875af1158015610ccb573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190610cef91906116d6565b506001600160a01b0384167341bc026dabe978bc2fafea1850456511ca4b01bc148015610d1e575060035460ff165b15610d2d57610d2d3383611260565b5f6103e860025484610d3f9190611709565b610d499190611726565b9050610d558582611312565b5f6001600160a01b038616735c7f8a570d578ed84e63fdfa7b1ee72deae1ae231480610d9d57506001600160a01b038516735c7f8a570d578ed84e63fdfa7b1ee72deae1ae23145b610da8576003610dab565b60025b60ff1690505f60606001600160a01b038816735c7f8a570d578ed84e63fdfa7b1ee72deae1ae231480610dfa57506001600160a01b038716735c7f8a570d578ed84e63fdfa7b1ee72deae1ae23145b15610f245760025b604051908082528060200260200182016040528015610e2b578160200160208202803683370190505b50905087815f81518110610e4157610e41611759565b60200260200101906001600160a01b031690816001600160a01b0316815250508681600181518110610e7557610e75611759565b6001600160a01b0392831660209182029290920101526008545f911663d06ca61f610ea0878a61176d565b846040518363ffffffff1660e01b8152600401610ebe929190611828565b5f60405180830381865afa158015610ed8573d5f803e3d5ffd5b505050506040513d5f823e601f3d908101601f19168201604052610eff9190810190611848565b905080600181518110610f1457610f14611759565b6020026020010151925050611121565b6001600160a01b0388167341bc026dabe978bc2fafea1850456511ca4b01bc148015610f6c57506001600160a01b038716733b41b27e74dd366ce27cb389dc7877d4e1516d4d145b80610fba57506001600160a01b038816733b41b27e74dd366ce27cb389dc7877d4e1516d4d148015610fba57506001600160a01b0387167341bc026dabe978bc2fafea1850456511ca4b01bc145b15610fc6576002610e02565b60408051600380825260808201909252906020820160608036833701905050905087815f81518110610ffa57610ffa611759565b60200260200101906001600160a01b031690816001600160a01b031681525050735c7f8a570d578ed84e63fdfa7b1ee72deae1ae238160018151811061104257611042611759565b60200260200101906001600160a01b031690816001600160a01b031681525050868160028151811061107657611076611759565b6001600160a01b0392831660209182029290920101526008545f911663d06ca61f6110a1878a61176d565b846040518363ffffffff1660e01b81526004016110bf929190611828565b5f60405180830381865afa1580156110d9573d5f803e3d5ffd5b505050506040513d5f823e601f3d908101601f191682016040526111009190810190611848565b90508060028151811061111557611115611759565b60200260200101519250505b6008546001600160a01b0316635c11d79561113c868961176d565b87843361114b42610e10611780565b6040518663ffffffff1660e01b815260040161116b9594939291906117d5565b5f604051808303815f87803b158015611182575f80fd5b505af1158015611194573d5f803e3d5ffd5b505050506001600160a01b0387167341bc026dabe978bc2fafea1850456511ca4b01bc1480156111c6575060035460ff165b156111d5576111d53383611260565b5050505050505050565b6111e76114ed565b6003805460ff19166001179055565b60068181548110611205575f80fd5b5f918252602090912001546001600160a01b0316905081565b6112266114ed565b6001600160a01b03811661125457604051631e4fbdf760e01b81525f60048201526024015b60405180910390fd5b61125d81611519565b50565b6001600160a01b0382165f9081526005602052604090205460ff166112e2576006805460018082019092557ff652222313e28459528d920b65115c16c04f3efc82aaedc97be59f3f377c0d3f0180546001600160a01b0319166001600160a01b0385169081179091555f908152600560205260409020805460ff191690911790555b6001600160a01b0382165f9081526004602052604081208054839290611309908490611780565b90915550505050565b5f6001600160a01b038316735c7f8a570d578ed84e63fdfa7b1ee72deae1ae231461133e576002611341565b60015b60ff169050806001036113ca57600d5460015460405163a9059cbb60e01b81526001600160a01b0391821660048201526024810185905291169063a9059cbb906044016020604051808303815f875af11580156113a0573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906113c491906116d6565b50505050565b5f8167ffffffffffffffff8111156113e4576113e4611745565b60405190808252806020026020018201604052801561140d578160200160208202803683370190505b50905083815f8151811061142357611423611759565b60200260200101906001600160a01b031690816001600160a01b031681525050735c7f8a570d578ed84e63fdfa7b1ee72deae1ae238160018151811061146b5761146b611759565b6001600160a01b03928316602091820292909201015260085460015490821691635c11d7959186915f918691166114a442610e10611780565b6040518663ffffffff1660e01b81526004016114c49594939291906117d5565b5f604051808303815f87803b1580156114db575f80fd5b505af11580156111d5573d5f803e3d5ffd5b5f546001600160a01b03163314610a7c5760405163118cdaa760e01b815233600482015260240161124b565b5f80546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b5080545f8255905f5260205f209081019061125d91905b80821115611592575f815560010161157f565b5090565b80356001600160a01b03811681146115ac575f80fd5b919050565b5f805f606084860312156115c3575f80fd5b6115cc84611596565b95602085013595506040909401359392505050565b5f602082840312156115f1575f80fd5b5035919050565b5f8060408385031215611609575f80fd5b61161283611596565b946020939093013593505050565b5f60208284031215611630575f80fd5b61163982611596565b9392505050565b602080825282518282018190525f919060409081850190868401855b8281101561168a57815180516001600160a01b0316855286015186850152928401929085019060010161165c565b5091979650505050505050565b5f805f80608085870312156116aa575f80fd5b6116b385611596565b93506116c160208601611596565b93969395505050506040820135916060013590565b5f602082840312156116e6575f80fd5b81518015158114611639575f80fd5b634e487b7160e01b5f52601160045260245ffd5b8082028115828204841417611720576117206116f5565b92915050565b5f8261174057634e487b7160e01b5f52601260045260245ffd5b500490565b634e487b7160e01b5f52604160045260245ffd5b634e487b7160e01b5f52603260045260245ffd5b81810381811115611720576117206116f5565b80820180821115611720576117206116f5565b5f8151808452602080850194508084015f5b838110156117ca5781516001600160a01b0316875295820195908201906001016117a5565b509495945050505050565b85815284602082015260a060408201525f6117f360a0830186611793565b6001600160a01b0394909416606083015250608001529392505050565b5f60018201611821576118216116f5565b5060010190565b828152604060208201525f6118406040830184611793565b949350505050565b5f6020808385031215611859575f80fd5b825167ffffffffffffffff80821115611870575f80fd5b818501915085601f830112611883575f80fd5b81518181111561189557611895611745565b8060051b604051601f19603f830116810181811085821117156118ba576118ba611745565b6040529182528482019250838101850191888311156118d7575f80fd5b938501935b828510156118f5578451845293850193928501926118dc565b98975050505050505050565b848152608060208201525f6119196080830186611793565b6001600160a01b0394909416604083015250606001529291505056fea264697066735822122099f52f70626d33c76cd5e9c0c8515a1b004e3b9f039b27ed0abd8ecbd8c6ae8264736f6c63430008140033000000000000000000000000145863eb42cf62847a6ca784e6416c1682b1b2ae",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x3 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE CALLVALUE DUP1 ISZERO PUSH3 0x1A JUMPI PUSH0 DUP1 REVERT JUMPDEST POP CALLER DUP1 PUSH3 0x41 JUMPI PUSH1 0x40 MLOAD PUSH4 0x1E4FBDF7 PUSH1 0xE0 SHL DUP2 MSTORE PUSH0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH3 0x4C DUP2 PUSH3 0x3CC JUMP JUMPDEST POP PUSH1 0x7 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT SWAP1 DUP2 AND PUSH20 0x3B44B2A187A7B3824131F8DB5A74194D0A42FC15 OR SWAP1 SWAP2 SSTORE PUSH1 0x8 DUP1 SLOAD DUP3 AND PUSH0 DUP1 MLOAD PUSH1 0x20 PUSH3 0x1DBC DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE PUSH1 0x9 DUP1 SLOAD DUP4 AND PUSH20 0xC21223249CA28397B4B6541DFFAECC539BFF0C59 SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE PUSH1 0xA DUP1 SLOAD DUP5 AND PUSH20 0x66E428C3F67A68878562E79A0234C1F83C208770 OR SWAP1 SSTORE PUSH1 0xB DUP1 SLOAD DUP5 AND PUSH20 0x41BC026DABE978BC2FAFEA1850456511CA4B01BC OR SWAP1 SSTORE PUSH1 0xC DUP1 SLOAD DUP5 AND PUSH20 0x3B41B27E74DD366CE27CB389DC7877D4E1516D4D OR SWAP1 SSTORE PUSH1 0xD DUP1 SLOAD DUP5 AND PUSH20 0x5C7F8A570D578ED84E63FDFA7B1EE72DEAE1AE23 OR SWAP1 SSTORE PUSH1 0x1 DUP1 SLOAD SWAP1 SWAP4 AND CALLER OR SWAP1 SWAP3 SSTORE PUSH1 0x3 PUSH1 0x2 SSTORE PUSH1 0x40 MLOAD PUSH4 0x95EA7B3 PUSH1 0xE0 SHL DUP2 MSTORE PUSH4 0x95EA7B3 SWAP2 PUSH3 0x172 SWAP2 PUSH0 NOT SWAP1 PUSH1 0x4 ADD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND DUP3 MSTORE PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH3 0x18F JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH3 0x1B5 SWAP2 SWAP1 PUSH3 0x41B JUMP JUMPDEST POP PUSH1 0xA SLOAD PUSH1 0x40 MLOAD PUSH4 0x95EA7B3 PUSH1 0xE0 SHL DUP2 MSTORE PUSH0 DUP1 MLOAD PUSH1 0x20 PUSH3 0x1DBC DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x4 DUP3 ADD MSTORE PUSH0 NOT PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH4 0x95EA7B3 SWAP1 PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH3 0x213 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH3 0x239 SWAP2 SWAP1 PUSH3 0x41B JUMP JUMPDEST POP PUSH1 0xB SLOAD PUSH1 0x40 MLOAD PUSH4 0x95EA7B3 PUSH1 0xE0 SHL DUP2 MSTORE PUSH0 DUP1 MLOAD PUSH1 0x20 PUSH3 0x1DBC DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x4 DUP3 ADD MSTORE PUSH0 NOT PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH4 0x95EA7B3 SWAP1 PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH3 0x297 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH3 0x2BD SWAP2 SWAP1 PUSH3 0x41B JUMP JUMPDEST POP PUSH1 0xD SLOAD PUSH1 0x40 MLOAD PUSH4 0x95EA7B3 PUSH1 0xE0 SHL DUP2 MSTORE PUSH0 DUP1 MLOAD PUSH1 0x20 PUSH3 0x1DBC DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x4 DUP3 ADD MSTORE PUSH0 NOT PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH4 0x95EA7B3 SWAP1 PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH3 0x31B JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH3 0x341 SWAP2 SWAP1 PUSH3 0x41B JUMP JUMPDEST POP PUSH1 0xC SLOAD PUSH1 0x40 MLOAD PUSH4 0x95EA7B3 PUSH1 0xE0 SHL DUP2 MSTORE PUSH0 DUP1 MLOAD PUSH1 0x20 PUSH3 0x1DBC DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x4 DUP3 ADD MSTORE PUSH0 NOT PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH4 0x95EA7B3 SWAP1 PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH3 0x39F JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH3 0x3C5 SWAP2 SWAP1 PUSH3 0x41B JUMP JUMPDEST POP PUSH3 0x443 JUMP JUMPDEST PUSH0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR DUP5 SSTORE PUSH1 0x40 MLOAD SWAP2 SWAP1 SWAP3 AND SWAP3 DUP4 SWAP2 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP2 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH3 0x42C JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP2 MLOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH3 0x43C JUMPI PUSH0 DUP1 REVERT JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH2 0x196B DUP1 PUSH3 0x451 PUSH0 CODECOPY PUSH0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x164 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0xA37B9E7F GT PUSH2 0xCD JUMPI DUP1 PUSH4 0xB3F00674 GT PUSH2 0x87 JUMPI DUP1 PUSH4 0xD3E66A9E GT PUSH2 0x62 JUMPI DUP1 PUSH4 0xD3E66A9E EQ PUSH2 0x41E JUMPI DUP1 PUSH4 0xD7B7D3F3 EQ PUSH2 0x432 JUMPI DUP1 PUSH4 0xEDF26D9B EQ PUSH2 0x459 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x478 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0xB3F00674 EQ PUSH2 0x3D8 JUMPI DUP1 PUSH4 0xD0E30DB0 EQ PUSH2 0x3F7 JUMPI DUP1 PUSH4 0xD16A4010 EQ PUSH2 0x3FF JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0xA37B9E7F EQ PUSH2 0x2EE JUMPI DUP1 PUSH4 0xA6769EF8 EQ PUSH2 0x315 JUMPI DUP1 PUSH4 0xAC65334F EQ PUSH2 0x340 JUMPI DUP1 PUSH4 0xAE38A070 EQ PUSH2 0x369 JUMPI DUP1 PUSH4 0xAFE43B94 EQ PUSH2 0x38A JUMPI DUP1 PUSH4 0xB0BEFE63 EQ PUSH2 0x3B1 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x5F0018CD GT PUSH2 0x11E JUMPI DUP1 PUSH4 0x5F0018CD EQ PUSH2 0x239 JUMPI DUP1 PUSH4 0x6504FBAD EQ PUSH2 0x24D JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x274 JUMPI DUP1 PUSH4 0x7C6F8FAE EQ PUSH2 0x288 JUMPI DUP1 PUSH4 0x7FD6F15C EQ PUSH2 0x2AF JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x2D2 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x16214120 EQ PUSH2 0x16F JUMPI DUP1 PUSH4 0x1D470CB1 EQ PUSH2 0x190 JUMPI DUP1 PUSH4 0x2E1A7D4D EQ PUSH2 0x1D4 JUMPI DUP1 PUSH4 0x3977D68D EQ PUSH2 0x1F3 JUMPI DUP1 PUSH4 0x39BDA01C EQ PUSH2 0x212 JUMPI DUP1 PUSH4 0x53AC861E EQ PUSH2 0x226 JUMPI PUSH0 DUP1 REVERT JUMPDEST CALLDATASIZE PUSH2 0x16B JUMPI STOP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x17A JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x18E PUSH2 0x189 CALLDATASIZE PUSH1 0x4 PUSH2 0x15B1 JUMP JUMPDEST PUSH2 0x497 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x19B JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x1B7 PUSH20 0x5C7F8A570D578ED84E63FDFA7B1EE72DEAE1AE23 DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1DF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x18E PUSH2 0x1EE CALLDATASIZE PUSH1 0x4 PUSH2 0x15E1 JUMP JUMPDEST PUSH2 0x678 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1FE JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x18E PUSH2 0x20D CALLDATASIZE PUSH1 0x4 PUSH2 0x15F8 JUMP JUMPDEST PUSH2 0x778 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x21D JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x18E PUSH2 0x7A6 JUMP JUMPDEST PUSH2 0x18E PUSH2 0x234 CALLDATASIZE PUSH1 0x4 PUSH2 0x15F8 JUMP JUMPDEST PUSH2 0x820 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x244 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x18E PUSH2 0xA57 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x258 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x1B7 PUSH20 0x66E428C3F67A68878562E79A0234C1F83C208770 DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x27F JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x18E PUSH2 0xA6B JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x293 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x1B7 PUSH20 0x3B44B2A187A7B3824131F8DB5A74194D0A42FC15 DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2BA JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x2C4 PUSH1 0x2 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x1CB JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2DD JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x1B7 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2F9 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x1B7 PUSH20 0xC21223249CA28397B4B6541DFFAECC539BFF0C59 DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x320 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x2C4 PUSH2 0x32F CALLDATASIZE PUSH1 0x4 PUSH2 0x1620 JUMP JUMPDEST PUSH1 0x4 PUSH1 0x20 MSTORE PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x34B JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x3 SLOAD PUSH2 0x359 SWAP1 PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x1CB JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x374 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x37D PUSH2 0xA7E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1CB SWAP2 SWAP1 PUSH2 0x1640 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x395 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x1B7 PUSH20 0x41BC026DABE978BC2FAFEA1850456511CA4B01BC DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3BC JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x1B7 PUSH20 0x3B41B27E74DD366CE27CB389DC7877D4E1516D4D DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3E3 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 SLOAD PUSH2 0x1B7 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH2 0x18E PUSH2 0xBAB JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x40A JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x18E PUSH2 0x419 CALLDATASIZE PUSH1 0x4 PUSH2 0x1697 JUMP JUMPDEST PUSH2 0xC7B JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x429 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x18E PUSH2 0x11DF JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x43D JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x1B7 PUSH20 0x145863EB42CF62847A6CA784E6416C1682B1B2AE DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x464 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x1B7 PUSH2 0x473 CALLDATASIZE PUSH1 0x4 PUSH2 0x15E1 JUMP JUMPDEST PUSH2 0x11F6 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x483 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x18E PUSH2 0x492 CALLDATASIZE PUSH1 0x4 PUSH2 0x1620 JUMP JUMPDEST PUSH2 0x121E JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH20 0x41BC026DABE978BC2FAFEA1850456511CA4B01BC EQ DUP1 ISZERO PUSH2 0x4C5 JUMPI POP PUSH1 0x3 SLOAD PUSH1 0xFF AND JUMPDEST ISZERO PUSH2 0x4D4 JUMPI PUSH2 0x4D4 CALLER DUP4 PUSH2 0x1260 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x23B872DD PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE ADDRESS PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND SWAP1 PUSH4 0x23B872DD SWAP1 PUSH1 0x64 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x524 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x548 SWAP2 SWAP1 PUSH2 0x16D6 JUMP JUMPDEST POP PUSH0 PUSH2 0x3E8 PUSH1 0x2 SLOAD DUP5 PUSH2 0x55B SWAP2 SWAP1 PUSH2 0x1709 JUMP JUMPDEST PUSH2 0x565 SWAP2 SWAP1 PUSH2 0x1726 JUMP JUMPDEST SWAP1 POP PUSH2 0x571 DUP5 DUP3 PUSH2 0x1312 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x2 DUP1 DUP3 MSTORE PUSH1 0x60 DUP3 ADD DUP4 MSTORE PUSH0 SWAP3 PUSH1 0x20 DUP4 ADD SWAP1 DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP POP SWAP1 POP DUP5 DUP2 PUSH0 DUP2 MLOAD DUP2 LT PUSH2 0x5A4 JUMPI PUSH2 0x5A4 PUSH2 0x1759 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE POP POP PUSH20 0x5C7F8A570D578ED84E63FDFA7B1EE72DEAE1AE23 DUP2 PUSH1 0x1 DUP2 MLOAD DUP2 LT PUSH2 0x5EC JUMPI PUSH2 0x5EC PUSH2 0x1759 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 DUP4 AND PUSH1 0x20 SWAP2 DUP3 MUL SWAP3 SWAP1 SWAP3 ADD ADD MSTORE PUSH1 0x8 SLOAD AND PUSH4 0x791AC947 PUSH2 0x615 DUP5 DUP8 PUSH2 0x176D JUMP JUMPDEST DUP6 DUP5 CALLER PUSH2 0x624 TIMESTAMP PUSH2 0xE10 PUSH2 0x1780 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP7 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x644 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x17D5 JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x65B JUMPI PUSH0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x66D JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0xD SLOAD PUSH1 0x40 MLOAD PUSH4 0x23B872DD PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE ADDRESS PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH4 0x23B872DD SWAP1 PUSH1 0x64 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x6CC JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x6F0 SWAP2 SWAP1 PUSH2 0x16D6 JUMP JUMPDEST POP PUSH1 0xD SLOAD PUSH1 0x40 MLOAD PUSH4 0x2E1A7D4D PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH4 0x2E1A7D4D SWAP1 PUSH1 0x24 ADD PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x734 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x746 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP PUSH1 0x40 MLOAD CALLER SWAP3 POP DUP4 ISZERO PUSH2 0x8FC MUL SWAP2 POP DUP4 SWAP1 PUSH0 DUP2 DUP2 DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0x774 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP JUMP JUMPDEST PUSH2 0x780 PUSH2 0x14ED JUMP JUMPDEST PUSH1 0x1 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP4 SWAP1 SWAP4 AND SWAP3 SWAP1 SWAP3 OR SWAP1 SWAP2 SSTORE PUSH1 0x2 SSTORE JUMP JUMPDEST PUSH2 0x7AE PUSH2 0x14ED JUMP JUMPDEST PUSH1 0x6 SLOAD PUSH0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x807 JUMPI PUSH1 0x4 PUSH0 PUSH1 0x6 DUP4 DUP2 SLOAD DUP2 LT PUSH2 0x7D1 JUMPI PUSH2 0x7D1 PUSH2 0x1759 JUMP JUMPDEST PUSH0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 KECCAK256 SWAP1 SWAP2 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 MSTORE DUP3 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x40 ADD DUP2 KECCAK256 SSTORE DUP1 PUSH2 0x7FF DUP2 PUSH2 0x1810 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x7B3 JUMP JUMPDEST POP PUSH2 0x813 PUSH1 0x6 PUSH0 PUSH2 0x1568 JUMP JUMPDEST POP PUSH1 0x3 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x2 SLOAD CALLVALUE SWAP1 PUSH0 SWAP1 PUSH2 0x3E8 SWAP1 PUSH2 0x835 SWAP1 DUP5 PUSH2 0x1709 JUMP JUMPDEST PUSH2 0x83F SWAP2 SWAP1 PUSH2 0x1726 JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x40 MLOAD SWAP2 SWAP3 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 DUP3 ISZERO PUSH2 0x8FC MUL SWAP1 DUP4 SWAP1 PUSH0 DUP2 DUP2 DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0x877 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x2 DUP1 DUP3 MSTORE PUSH1 0x60 DUP3 ADD DUP4 MSTORE PUSH0 SWAP3 PUSH1 0x20 DUP4 ADD SWAP1 DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP POP SWAP1 POP PUSH20 0x5C7F8A570D578ED84E63FDFA7B1EE72DEAE1AE23 DUP2 PUSH0 DUP2 MLOAD DUP2 LT PUSH2 0x8BF JUMPI PUSH2 0x8BF PUSH2 0x1759 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE POP POP DUP5 DUP2 PUSH1 0x1 DUP2 MLOAD DUP2 LT PUSH2 0x8F3 JUMPI PUSH2 0x8F3 PUSH2 0x1759 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 DUP4 AND PUSH1 0x20 SWAP2 DUP3 MUL SWAP3 SWAP1 SWAP3 ADD ADD MSTORE PUSH1 0x8 SLOAD PUSH0 SWAP2 AND PUSH4 0xD06CA61F PUSH2 0x91E DUP6 DUP8 PUSH2 0x176D JUMP JUMPDEST DUP5 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x93C SWAP3 SWAP2 SWAP1 PUSH2 0x1828 JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x956 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH0 DUP3 RETURNDATACOPY PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH1 0x1F NOT AND DUP3 ADD PUSH1 0x40 MSTORE PUSH2 0x97D SWAP2 SWAP1 DUP2 ADD SWAP1 PUSH2 0x1848 JUMP JUMPDEST PUSH1 0x8 SLOAD SWAP1 SWAP2 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xB6F9DE95 PUSH2 0x99B DUP6 DUP8 PUSH2 0x176D JUMP JUMPDEST DUP8 DUP6 CALLER PUSH2 0x9AA TIMESTAMP PUSH2 0xE10 PUSH2 0x1780 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP7 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x9C9 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1901 JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x9E0 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x9F2 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND PUSH20 0x41BC026DABE978BC2FAFEA1850456511CA4B01BC EQ SWAP1 POP DUP1 ISZERO PUSH2 0xA26 JUMPI POP PUSH1 0x3 SLOAD PUSH1 0xFF AND JUMPDEST ISZERO PUSH2 0xA4F JUMPI PUSH2 0xA4F CALLER DUP3 PUSH1 0x1 DUP2 MLOAD DUP2 LT PUSH2 0xA42 JUMPI PUSH2 0xA42 PUSH2 0x1759 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH2 0x1260 JUMP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0xA5F PUSH2 0x14ED JUMP JUMPDEST PUSH1 0x3 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE JUMP JUMPDEST PUSH2 0xA73 PUSH2 0x14ED JUMP JUMPDEST PUSH2 0xA7C PUSH0 PUSH2 0x1519 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x6 SLOAD PUSH1 0x60 SWAP1 PUSH0 DUP2 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xA9E JUMPI PUSH2 0xA9E PUSH2 0x1745 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0xAE2 JUMPI DUP2 PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD SWAP1 SWAP2 MSTORE PUSH0 DUP1 DUP3 MSTORE PUSH1 0x20 DUP3 ADD MSTORE DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 SWAP1 SUB SWAP1 DUP2 PUSH2 0xABC JUMPI SWAP1 POP JUMPDEST POP SWAP1 POP PUSH0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0xBA4 JUMPI PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x6 DUP4 DUP2 SLOAD DUP2 LT PUSH2 0xB0D JUMPI PUSH2 0xB0D PUSH2 0x1759 JUMP JUMPDEST SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x4 PUSH0 PUSH1 0x6 DUP6 DUP2 SLOAD DUP2 LT PUSH2 0xB4C JUMPI PUSH2 0xB4C PUSH2 0x1759 JUMP JUMPDEST PUSH0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 KECCAK256 SWAP1 SWAP2 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 MSTORE DUP3 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x40 ADD SWAP1 KECCAK256 SLOAD SWAP1 MSTORE DUP3 MLOAD DUP4 SWAP1 DUP4 SWAP1 DUP2 LT PUSH2 0xB86 JUMPI PUSH2 0xB86 PUSH2 0x1759 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP2 SWAP1 MSTORE POP DUP1 DUP1 PUSH2 0xB9C SWAP1 PUSH2 0x1810 JUMP JUMPDEST SWAP2 POP POP PUSH2 0xAE7 JUMP JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0xD SLOAD PUSH1 0x40 DUP1 MLOAD PUSH4 0xD0E30DB PUSH1 0xE4 SHL DUP2 MSTORE SWAP1 MLOAD CALLVALUE SWAP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP2 PUSH4 0xD0E30DB0 SWAP2 DUP5 SWAP2 PUSH1 0x4 DUP1 DUP3 ADD SWAP3 PUSH0 SWAP3 SWAP1 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP6 DUP9 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xBF1 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0xC03 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP PUSH1 0xD SLOAD PUSH1 0x40 MLOAD PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP7 SWAP1 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP4 POP PUSH4 0xA9059CBB SWAP3 POP PUSH1 0x44 ADD SWAP1 POP PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0xC57 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x774 SWAP2 SWAP1 PUSH2 0x16D6 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x23B872DD PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE ADDRESS PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND SWAP1 PUSH4 0x23B872DD SWAP1 PUSH1 0x64 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0xCCB JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xCEF SWAP2 SWAP1 PUSH2 0x16D6 JUMP JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH20 0x41BC026DABE978BC2FAFEA1850456511CA4B01BC EQ DUP1 ISZERO PUSH2 0xD1E JUMPI POP PUSH1 0x3 SLOAD PUSH1 0xFF AND JUMPDEST ISZERO PUSH2 0xD2D JUMPI PUSH2 0xD2D CALLER DUP4 PUSH2 0x1260 JUMP JUMPDEST PUSH0 PUSH2 0x3E8 PUSH1 0x2 SLOAD DUP5 PUSH2 0xD3F SWAP2 SWAP1 PUSH2 0x1709 JUMP JUMPDEST PUSH2 0xD49 SWAP2 SWAP1 PUSH2 0x1726 JUMP JUMPDEST SWAP1 POP PUSH2 0xD55 DUP6 DUP3 PUSH2 0x1312 JUMP JUMPDEST PUSH0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND PUSH20 0x5C7F8A570D578ED84E63FDFA7B1EE72DEAE1AE23 EQ DUP1 PUSH2 0xD9D JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH20 0x5C7F8A570D578ED84E63FDFA7B1EE72DEAE1AE23 EQ JUMPDEST PUSH2 0xDA8 JUMPI PUSH1 0x3 PUSH2 0xDAB JUMP JUMPDEST PUSH1 0x2 JUMPDEST PUSH1 0xFF AND SWAP1 POP PUSH0 PUSH1 0x60 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP9 AND PUSH20 0x5C7F8A570D578ED84E63FDFA7B1EE72DEAE1AE23 EQ DUP1 PUSH2 0xDFA JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND PUSH20 0x5C7F8A570D578ED84E63FDFA7B1EE72DEAE1AE23 EQ JUMPDEST ISZERO PUSH2 0xF24 JUMPI PUSH1 0x2 JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0xE2B JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP SWAP1 POP DUP8 DUP2 PUSH0 DUP2 MLOAD DUP2 LT PUSH2 0xE41 JUMPI PUSH2 0xE41 PUSH2 0x1759 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE POP POP DUP7 DUP2 PUSH1 0x1 DUP2 MLOAD DUP2 LT PUSH2 0xE75 JUMPI PUSH2 0xE75 PUSH2 0x1759 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 DUP4 AND PUSH1 0x20 SWAP2 DUP3 MUL SWAP3 SWAP1 SWAP3 ADD ADD MSTORE PUSH1 0x8 SLOAD PUSH0 SWAP2 AND PUSH4 0xD06CA61F PUSH2 0xEA0 DUP8 DUP11 PUSH2 0x176D JUMP JUMPDEST DUP5 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xEBE SWAP3 SWAP2 SWAP1 PUSH2 0x1828 JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xED8 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH0 DUP3 RETURNDATACOPY PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH1 0x1F NOT AND DUP3 ADD PUSH1 0x40 MSTORE PUSH2 0xEFF SWAP2 SWAP1 DUP2 ADD SWAP1 PUSH2 0x1848 JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0x1 DUP2 MLOAD DUP2 LT PUSH2 0xF14 JUMPI PUSH2 0xF14 PUSH2 0x1759 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD SWAP3 POP POP PUSH2 0x1121 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP9 AND PUSH20 0x41BC026DABE978BC2FAFEA1850456511CA4B01BC EQ DUP1 ISZERO PUSH2 0xF6C JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND PUSH20 0x3B41B27E74DD366CE27CB389DC7877D4E1516D4D EQ JUMPDEST DUP1 PUSH2 0xFBA JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP9 AND PUSH20 0x3B41B27E74DD366CE27CB389DC7877D4E1516D4D EQ DUP1 ISZERO PUSH2 0xFBA JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND PUSH20 0x41BC026DABE978BC2FAFEA1850456511CA4B01BC EQ JUMPDEST ISZERO PUSH2 0xFC6 JUMPI PUSH1 0x2 PUSH2 0xE02 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x3 DUP1 DUP3 MSTORE PUSH1 0x80 DUP3 ADD SWAP1 SWAP3 MSTORE SWAP1 PUSH1 0x20 DUP3 ADD PUSH1 0x60 DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP POP SWAP1 POP DUP8 DUP2 PUSH0 DUP2 MLOAD DUP2 LT PUSH2 0xFFA JUMPI PUSH2 0xFFA PUSH2 0x1759 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE POP POP PUSH20 0x5C7F8A570D578ED84E63FDFA7B1EE72DEAE1AE23 DUP2 PUSH1 0x1 DUP2 MLOAD DUP2 LT PUSH2 0x1042 JUMPI PUSH2 0x1042 PUSH2 0x1759 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE POP POP DUP7 DUP2 PUSH1 0x2 DUP2 MLOAD DUP2 LT PUSH2 0x1076 JUMPI PUSH2 0x1076 PUSH2 0x1759 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 DUP4 AND PUSH1 0x20 SWAP2 DUP3 MUL SWAP3 SWAP1 SWAP3 ADD ADD MSTORE PUSH1 0x8 SLOAD PUSH0 SWAP2 AND PUSH4 0xD06CA61F PUSH2 0x10A1 DUP8 DUP11 PUSH2 0x176D JUMP JUMPDEST DUP5 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x10BF SWAP3 SWAP2 SWAP1 PUSH2 0x1828 JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x10D9 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH0 DUP3 RETURNDATACOPY PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH1 0x1F NOT AND DUP3 ADD PUSH1 0x40 MSTORE PUSH2 0x1100 SWAP2 SWAP1 DUP2 ADD SWAP1 PUSH2 0x1848 JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0x2 DUP2 MLOAD DUP2 LT PUSH2 0x1115 JUMPI PUSH2 0x1115 PUSH2 0x1759 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD SWAP3 POP POP JUMPDEST PUSH1 0x8 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x5C11D795 PUSH2 0x113C DUP7 DUP10 PUSH2 0x176D JUMP JUMPDEST DUP8 DUP5 CALLER PUSH2 0x114B TIMESTAMP PUSH2 0xE10 PUSH2 0x1780 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP7 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x116B SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x17D5 JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1182 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x1194 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND PUSH20 0x41BC026DABE978BC2FAFEA1850456511CA4B01BC EQ DUP1 ISZERO PUSH2 0x11C6 JUMPI POP PUSH1 0x3 SLOAD PUSH1 0xFF AND JUMPDEST ISZERO PUSH2 0x11D5 JUMPI PUSH2 0x11D5 CALLER DUP4 PUSH2 0x1260 JUMP JUMPDEST POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0x11E7 PUSH2 0x14ED JUMP JUMPDEST PUSH1 0x3 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x6 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x1205 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 POP DUP2 JUMP JUMPDEST PUSH2 0x1226 PUSH2 0x14ED JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x1254 JUMPI PUSH1 0x40 MLOAD PUSH4 0x1E4FBDF7 PUSH1 0xE0 SHL DUP2 MSTORE PUSH0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x125D DUP2 PUSH2 0x1519 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND PUSH2 0x12E2 JUMPI PUSH1 0x6 DUP1 SLOAD PUSH1 0x1 DUP1 DUP3 ADD SWAP1 SWAP3 SSTORE PUSH32 0xF652222313E28459528D920B65115C16C04F3EFC82AAEDC97BE59F3F377C0D3F ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SWAP2 OR SWAP1 SSTORE JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD DUP4 SWAP3 SWAP1 PUSH2 0x1309 SWAP1 DUP5 SWAP1 PUSH2 0x1780 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH20 0x5C7F8A570D578ED84E63FDFA7B1EE72DEAE1AE23 EQ PUSH2 0x133E JUMPI PUSH1 0x2 PUSH2 0x1341 JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH1 0xFF AND SWAP1 POP DUP1 PUSH1 0x1 SUB PUSH2 0x13CA JUMPI PUSH1 0xD SLOAD PUSH1 0x1 SLOAD PUSH1 0x40 MLOAD PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP6 SWAP1 MSTORE SWAP2 AND SWAP1 PUSH4 0xA9059CBB SWAP1 PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x13A0 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x13C4 SWAP2 SWAP1 PUSH2 0x16D6 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 DUP2 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x13E4 JUMPI PUSH2 0x13E4 PUSH2 0x1745 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x140D JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP SWAP1 POP DUP4 DUP2 PUSH0 DUP2 MLOAD DUP2 LT PUSH2 0x1423 JUMPI PUSH2 0x1423 PUSH2 0x1759 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE POP POP PUSH20 0x5C7F8A570D578ED84E63FDFA7B1EE72DEAE1AE23 DUP2 PUSH1 0x1 DUP2 MLOAD DUP2 LT PUSH2 0x146B JUMPI PUSH2 0x146B PUSH2 0x1759 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 DUP4 AND PUSH1 0x20 SWAP2 DUP3 MUL SWAP3 SWAP1 SWAP3 ADD ADD MSTORE PUSH1 0x8 SLOAD PUSH1 0x1 SLOAD SWAP1 DUP3 AND SWAP2 PUSH4 0x5C11D795 SWAP2 DUP7 SWAP2 PUSH0 SWAP2 DUP7 SWAP2 AND PUSH2 0x14A4 TIMESTAMP PUSH2 0xE10 PUSH2 0x1780 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP7 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x14C4 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x17D5 JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x14DB JUMPI PUSH0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x11D5 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST PUSH0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0xA7C JUMPI PUSH1 0x40 MLOAD PUSH4 0x118CDAA7 PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x124B JUMP JUMPDEST PUSH0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR DUP5 SSTORE PUSH1 0x40 MLOAD SWAP2 SWAP1 SWAP3 AND SWAP3 DUP4 SWAP2 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP2 SWAP1 LOG3 POP POP JUMP JUMPDEST POP DUP1 SLOAD PUSH0 DUP3 SSTORE SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 DUP2 ADD SWAP1 PUSH2 0x125D SWAP2 SWAP1 JUMPDEST DUP1 DUP3 GT ISZERO PUSH2 0x1592 JUMPI PUSH0 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0x157F JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x15AC JUMPI PUSH0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x15C3 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x15CC DUP5 PUSH2 0x1596 JUMP JUMPDEST SWAP6 PUSH1 0x20 DUP6 ADD CALLDATALOAD SWAP6 POP PUSH1 0x40 SWAP1 SWAP5 ADD CALLDATALOAD SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x15F1 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1609 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x1612 DUP4 PUSH2 0x1596 JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1630 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x1639 DUP3 PUSH2 0x1596 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE DUP3 MLOAD DUP3 DUP3 ADD DUP2 SWAP1 MSTORE PUSH0 SWAP2 SWAP1 PUSH1 0x40 SWAP1 DUP2 DUP6 ADD SWAP1 DUP7 DUP5 ADD DUP6 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x168A JUMPI DUP2 MLOAD DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP6 MSTORE DUP7 ADD MLOAD DUP7 DUP6 ADD MSTORE SWAP3 DUP5 ADD SWAP3 SWAP1 DUP6 ADD SWAP1 PUSH1 0x1 ADD PUSH2 0x165C JUMP JUMPDEST POP SWAP2 SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x16AA JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x16B3 DUP6 PUSH2 0x1596 JUMP JUMPDEST SWAP4 POP PUSH2 0x16C1 PUSH1 0x20 DUP7 ADD PUSH2 0x1596 JUMP JUMPDEST SWAP4 SWAP7 SWAP4 SWAP6 POP POP POP POP PUSH1 0x40 DUP3 ADD CALLDATALOAD SWAP2 PUSH1 0x60 ADD CALLDATALOAD SWAP1 JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x16E6 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP2 MLOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0x1639 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST DUP1 DUP3 MUL DUP2 ISZERO DUP3 DUP3 DIV DUP5 EQ OR PUSH2 0x1720 JUMPI PUSH2 0x1720 PUSH2 0x16F5 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP3 PUSH2 0x1740 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST POP DIV SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST DUP2 DUP2 SUB DUP2 DUP2 GT ISZERO PUSH2 0x1720 JUMPI PUSH2 0x1720 PUSH2 0x16F5 JUMP JUMPDEST DUP1 DUP3 ADD DUP1 DUP3 GT ISZERO PUSH2 0x1720 JUMPI PUSH2 0x1720 PUSH2 0x16F5 JUMP JUMPDEST PUSH0 DUP2 MLOAD DUP1 DUP5 MSTORE PUSH1 0x20 DUP1 DUP6 ADD SWAP5 POP DUP1 DUP5 ADD PUSH0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x17CA JUMPI DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP8 MSTORE SWAP6 DUP3 ADD SWAP6 SWAP1 DUP3 ADD SWAP1 PUSH1 0x1 ADD PUSH2 0x17A5 JUMP JUMPDEST POP SWAP5 SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST DUP6 DUP2 MSTORE DUP5 PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0xA0 PUSH1 0x40 DUP3 ADD MSTORE PUSH0 PUSH2 0x17F3 PUSH1 0xA0 DUP4 ADD DUP7 PUSH2 0x1793 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP5 SWAP1 SWAP5 AND PUSH1 0x60 DUP4 ADD MSTORE POP PUSH1 0x80 ADD MSTORE SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x1 DUP3 ADD PUSH2 0x1821 JUMPI PUSH2 0x1821 PUSH2 0x16F5 JUMP JUMPDEST POP PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST DUP3 DUP2 MSTORE PUSH1 0x40 PUSH1 0x20 DUP3 ADD MSTORE PUSH0 PUSH2 0x1840 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x1793 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP1 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1859 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP3 MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x1870 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP2 DUP6 ADD SWAP2 POP DUP6 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x1883 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP2 MLOAD DUP2 DUP2 GT ISZERO PUSH2 0x1895 JUMPI PUSH2 0x1895 PUSH2 0x1745 JUMP JUMPDEST DUP1 PUSH1 0x5 SHL PUSH1 0x40 MLOAD PUSH1 0x1F NOT PUSH1 0x3F DUP4 ADD AND DUP2 ADD DUP2 DUP2 LT DUP6 DUP3 GT OR ISZERO PUSH2 0x18BA JUMPI PUSH2 0x18BA PUSH2 0x1745 JUMP JUMPDEST PUSH1 0x40 MSTORE SWAP2 DUP3 MSTORE DUP5 DUP3 ADD SWAP3 POP DUP4 DUP2 ADD DUP6 ADD SWAP2 DUP9 DUP4 GT ISZERO PUSH2 0x18D7 JUMPI PUSH0 DUP1 REVERT JUMPDEST SWAP4 DUP6 ADD SWAP4 JUMPDEST DUP3 DUP6 LT ISZERO PUSH2 0x18F5 JUMPI DUP5 MLOAD DUP5 MSTORE SWAP4 DUP6 ADD SWAP4 SWAP3 DUP6 ADD SWAP3 PUSH2 0x18DC JUMP JUMPDEST SWAP9 SWAP8 POP POP POP POP POP POP POP POP JUMP JUMPDEST DUP5 DUP2 MSTORE PUSH1 0x80 PUSH1 0x20 DUP3 ADD MSTORE PUSH0 PUSH2 0x1919 PUSH1 0x80 DUP4 ADD DUP7 PUSH2 0x1793 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP5 SWAP1 SWAP5 AND PUSH1 0x40 DUP4 ADD MSTORE POP PUSH1 0x60 ADD MSTORE SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP10 CREATE2 0x2F PUSH17 0x626D33C76CD5E9C0C8515A1B004E3B9F03 SWAP12 0x27 0xED EXP 0xBD DUP15 0xCB 0xD8 0xC6 0xAE DUP3 PUSH5 0x736F6C6343 STOP ADDMOD EQ STOP CALLER STOP STOP STOP STOP STOP STOP STOP STOP STOP STOP STOP STOP EQ PC PUSH4 0xEB42CF62 DUP5 PUSH27 0x6CA784E6416C1682B1B2AE00000000000000000000000000000000 ",
							"sourceMap": "2107:7987:12:-:0;;;2797:39;;;-1:-1:-1;;2797:39:12;;;3118:642;;;;;;;;;-1:-1:-1;3140:10:12;;1269:95:0;;1322:31;;-1:-1:-1;;;1322:31:0;;1350:1;1322:31;;;160:51:13;133:18;;1322:31:0;;;;;;;1269:95;1373:32;1392:12;1373:18;:32::i;:::-;-1:-1:-1;3163:7:12::1;:33:::0;;-1:-1:-1;;;;;;3163:33:12;;::::1;2683:42;3163:33;::::0;;;3207:6:::1;:30:::0;;;::::1;-1:-1:-1::0;;;;;;;;;;;3207:30:12;;::::1;::::0;;;3248:5:::1;:21:::0;;;::::1;2174:42;3248:21:::0;;::::1;::::0;;;3280:5:::1;:21:::0;;;::::1;2255:42;3280:21;::::0;;3312:3:::1;:17:::0;;;::::1;2414:42;3312:17;::::0;;3340:4:::1;:19:::0;;;::::1;2494:42;3340:19;::::0;;3370:4:::1;:18:::0;;;::::1;2335:42;3370:18;::::0;;3163:33;3399:24;;;;::::1;3413:10;3399:24;::::0;;;3447:1:::1;3434:10;:14:::0;3497:43:::1;::::0;-1:-1:-1;;;3497:43:12;;:13:::1;::::0;:43:::1;::::0;-1:-1:-1;;;3497:43:12::1;;-1:-1:-1::0;;;;;414:32:13;;;;396:51;;478:2;463:18;;456:34;384:2;369:18;;222:274;3497:43:12::1;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1::0;3551:5:12::1;::::0;:43:::1;::::0;-1:-1:-1;;;3551:43:12;;-1:-1:-1;;;;;;;;;;;3551:43:12::1;::::0;::::1;396:51:13::0;-1:-1:-1;;463:18:13;;;456:34;-1:-1:-1;;;;;3551:5:12;;::::1;::::0;:13:::1;::::0;369:18:13;;3551:43:12::1;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1::0;3605:3:12::1;::::0;:41:::1;::::0;-1:-1:-1;;;3605:41:12;;-1:-1:-1;;;;;;;;;;;3605:41:12::1;::::0;::::1;396:51:13::0;-1:-1:-1;;463:18:13;;;456:34;-1:-1:-1;;;;;3605:3:12;;::::1;::::0;:11:::1;::::0;369:18:13;;3605:41:12::1;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1::0;3657:4:12::1;::::0;:42:::1;::::0;-1:-1:-1;;;3657:42:12;;-1:-1:-1;;;;;;;;;;;3657:42:12::1;::::0;::::1;396:51:13::0;-1:-1:-1;;463:18:13;;;456:34;-1:-1:-1;;;;;3657:4:12;;::::1;::::0;:12:::1;::::0;369:18:13;;3657:42:12::1;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1::0;3710:4:12::1;::::0;:42:::1;::::0;-1:-1:-1;;;3710:42:12;;-1:-1:-1;;;;;;;;;;;3710:42:12::1;::::0;::::1;396:51:13::0;-1:-1:-1;;463:18:13;;;456:34;-1:-1:-1;;;;;3710:4:12;;::::1;::::0;:12:::1;::::0;369:18:13;;3710:42:12::1;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;2107:7987:::0;;2912:187:0;2985:16;3004:6;;-1:-1:-1;;;;;3020:17:0;;;-1:-1:-1;;;;;;3020:17:0;;;;;;3052:40;;3004:6;;;;;;;3052:40;;2985:16;3052:40;2975:124;2912:187;:::o;501:277:13:-;568:6;621:2;609:9;600:7;596:23;592:32;589:52;;;637:1;634;627:12;589:52;669:9;663:16;722:5;715:13;708:21;701:5;698:32;688:60;;744:1;741;734:12;688:60;767:5;501:277;-1:-1:-1;;;501:277:13:o;:::-;2107:7987:12;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@ARY_1815": {
									"entryPoint": null,
									"id": 1815,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@CUSDC_1806": {
									"entryPoint": null,
									"id": 1806,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@CUSDT_1809": {
									"entryPoint": null,
									"id": 1809,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@DEXFACTORY_1824": {
									"entryPoint": null,
									"id": 1824,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@DEXROUTER_1821": {
									"entryPoint": null,
									"id": 1821,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@MERY_1818": {
									"entryPoint": null,
									"id": 1818,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@WCRO_1812": {
									"entryPoint": null,
									"id": 1812,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_2710": {
									"entryPoint": null,
									"id": 2710,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_checkOwner_84": {
									"entryPoint": 5357,
									"id": 84,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_msgSender_1062": {
									"entryPoint": null,
									"id": 1062,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_transferOwnership_146": {
									"entryPoint": 5401,
									"id": 146,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@addVolume_2204": {
									"entryPoint": 4704,
									"id": 2204,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@addresses_1842": {
									"entryPoint": 4598,
									"id": 1842,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@clearVolume_2068": {
									"entryPoint": 1958,
									"id": 2068,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@competition_started_1831": {
									"entryPoint": null,
									"id": 1831,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@deposit_2673": {
									"entryPoint": 2987,
									"id": 2673,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@feePercent_1828": {
									"entryPoint": null,
									"id": 1828,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@feeReceiver_1826": {
									"entryPoint": null,
									"id": 1826,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@getFee_2172": {
									"entryPoint": 4882,
									"id": 2172,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@getUserVolumes_2031": {
									"entryPoint": 2686,
									"id": 2031,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@owner_67": {
									"entryPoint": null,
									"id": 67,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@renounceOwnership_98": {
									"entryPoint": 2667,
									"id": 98,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@setFeeData_2106": {
									"entryPoint": 1912,
									"id": 2106,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@startCompetition_2088": {
									"entryPoint": 4575,
									"id": 2088,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@stopCompetition_2078": {
									"entryPoint": 2647,
									"id": 2078,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@swapCROForToken_2562": {
									"entryPoint": 2080,
									"id": 2562,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@swapTokenForCRO_2649": {
									"entryPoint": 1175,
									"id": 2649,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@swapTokenForToken_2465": {
									"entryPoint": 3195,
									"id": 2465,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@transferOwnership_126": {
									"entryPoint": 4638,
									"id": 126,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@userVolume_1835": {
									"entryPoint": null,
									"id": 1835,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@withdraw_2706": {
									"entryPoint": 1656,
									"id": 2706,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"abi_decode_address": {
									"entryPoint": 5526,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 5664,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_addresst_uint256t_uint256": {
									"entryPoint": 5783,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 4
								},
								"abi_decode_tuple_t_addresst_uint256": {
									"entryPoint": 5624,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_addresst_uint256t_uint256": {
									"entryPoint": 5553,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"abi_decode_tuple_t_array$_t_uint256_$dyn_memory_ptr_fromMemory": {
									"entryPoint": 6216,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_bool_fromMemory": {
									"entryPoint": 5846,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256": {
									"entryPoint": 5601,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_array_address_dyn": {
									"entryPoint": 6035,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_array$_t_struct$_Volume_$1801_memory_ptr_$dyn_memory_ptr__to_t_array$_t_struct$_Volume_$1801_memory_ptr_$dyn_memory_ptr__fromStack_reversed": {
									"entryPoint": 5696,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256_t_array$_t_address_$dyn_memory_ptr__to_t_uint256_t_array$_t_address_$dyn_memory_ptr__fromStack_reversed": {
									"entryPoint": 6184,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256_t_array$_t_address_$dyn_memory_ptr_t_address_t_uint256__to_t_uint256_t_array$_t_address_$dyn_memory_ptr_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": 6401,
									"id": null,
									"parameterSlots": 5,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256_t_rational_0_by_1_t_array$_t_address_$dyn_memory_ptr_t_address_t_uint256__to_t_uint256_t_uint256_t_array$_t_address_$dyn_memory_ptr_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 6,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256_t_uint256_t_array$_t_address_$dyn_memory_ptr_t_address_t_uint256__to_t_uint256_t_uint256_t_array$_t_address_$dyn_memory_ptr_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": 6101,
									"id": null,
									"parameterSlots": 6,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 6016,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_div_t_uint256": {
									"entryPoint": 5926,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_mul_t_uint256": {
									"entryPoint": 5897,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_sub_t_uint256": {
									"entryPoint": 5997,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"increment_t_uint256": {
									"entryPoint": 6160,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 5877,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x32": {
									"entryPoint": 5977,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x41": {
									"entryPoint": 5957,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:8673:13",
										"statements": [
											{
												"nodeType": "YulBlock",
												"src": "6:3:13",
												"statements": []
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "63:124:13",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "73:29:13",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "95:6:13"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "82:12:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "82:20:13"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "73:5:13"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "165:16:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "174:1:13",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "177:1:13",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "167:6:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "167:12:13"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "167:12:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "124:5:13"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "135:5:13"
																					},
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "150:3:13",
																										"type": "",
																										"value": "160"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "155:1:13",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "shl",
																									"nodeType": "YulIdentifier",
																									"src": "146:3:13"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "146:11:13"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "159:1:13",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nodeType": "YulIdentifier",
																							"src": "142:3:13"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "142:19:13"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "131:3:13"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "131:31:13"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "121:2:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "121:42:13"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "114:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "114:50:13"
															},
															"nodeType": "YulIf",
															"src": "111:70:13"
														}
													]
												},
												"name": "abi_decode_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "42:6:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "53:5:13",
														"type": ""
													}
												],
												"src": "14:173:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "296:218:13",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "342:16:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "351:1:13",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "354:1:13",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "344:6:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "344:12:13"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "344:12:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "317:7:13"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "326:9:13"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "313:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "313:23:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "338:2:13",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "309:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "309:32:13"
															},
															"nodeType": "YulIf",
															"src": "306:52:13"
														},
														{
															"nodeType": "YulAssignment",
															"src": "367:39:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "396:9:13"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "377:18:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "377:29:13"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "367:6:13"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "415:42:13",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "442:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "453:2:13",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "438:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "438:18:13"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "425:12:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "425:32:13"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "415:6:13"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "466:42:13",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "493:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "504:2:13",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "489:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "489:18:13"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "476:12:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "476:32:13"
															},
															"variableNames": [
																{
																	"name": "value2",
																	"nodeType": "YulIdentifier",
																	"src": "466:6:13"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint256t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "246:9:13",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "257:7:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "269:6:13",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "277:6:13",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "285:6:13",
														"type": ""
													}
												],
												"src": "192:322:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "620:102:13",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "630:26:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "642:9:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "653:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "638:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "638:18:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "630:4:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "672:9:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "687:6:13"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "703:3:13",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "708:1:13",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nodeType": "YulIdentifier",
																							"src": "699:3:13"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "699:11:13"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "712:1:13",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nodeType": "YulIdentifier",
																					"src": "695:3:13"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "695:19:13"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "683:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "683:32:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "665:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "665:51:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "665:51:13"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "589:9:13",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "600:6:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "611:4:13",
														"type": ""
													}
												],
												"src": "519:203:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "797:110:13",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "843:16:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "852:1:13",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "855:1:13",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "845:6:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "845:12:13"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "845:12:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "818:7:13"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "827:9:13"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "814:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "814:23:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "839:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "810:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "810:32:13"
															},
															"nodeType": "YulIf",
															"src": "807:52:13"
														},
														{
															"nodeType": "YulAssignment",
															"src": "868:33:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "891:9:13"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "878:12:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "878:23:13"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "868:6:13"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "763:9:13",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "774:7:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "786:6:13",
														"type": ""
													}
												],
												"src": "727:180:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "999:167:13",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1045:16:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1054:1:13",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1057:1:13",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1047:6:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1047:12:13"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1047:12:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1020:7:13"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1029:9:13"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1016:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1016:23:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1041:2:13",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "1012:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "1012:32:13"
															},
															"nodeType": "YulIf",
															"src": "1009:52:13"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1070:39:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1099:9:13"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "1080:18:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "1080:29:13"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "1070:6:13"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "1118:42:13",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1145:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1156:2:13",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1141:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1141:18:13"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "1128:12:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "1128:32:13"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "1118:6:13"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "957:9:13",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "968:7:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "980:6:13",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "988:6:13",
														"type": ""
													}
												],
												"src": "912:254:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1272:76:13",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1282:26:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1294:9:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1305:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1290:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "1290:18:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1282:4:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1324:9:13"
																	},
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "1335:6:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1317:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "1317:25:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1317:25:13"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1241:9:13",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1252:6:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1263:4:13",
														"type": ""
													}
												],
												"src": "1171:177:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1423:116:13",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1469:16:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1478:1:13",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1481:1:13",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1471:6:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1471:12:13"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1471:12:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1444:7:13"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1453:9:13"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1440:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1440:23:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1465:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "1436:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "1436:32:13"
															},
															"nodeType": "YulIf",
															"src": "1433:52:13"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1494:39:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1523:9:13"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "1504:18:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "1504:29:13"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "1494:6:13"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1389:9:13",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "1400:7:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1412:6:13",
														"type": ""
													}
												],
												"src": "1353:186:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1639:92:13",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1649:26:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1661:9:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1672:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1657:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "1657:18:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1649:4:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1691:9:13"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value0",
																						"nodeType": "YulIdentifier",
																						"src": "1716:6:13"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nodeType": "YulIdentifier",
																					"src": "1709:6:13"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1709:14:13"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "1702:6:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1702:22:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1684:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "1684:41:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1684:41:13"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1608:9:13",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1619:6:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1630:4:13",
														"type": ""
													}
												],
												"src": "1544:187:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1935:613:13",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1945:12:13",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "1955:2:13",
																"type": "",
																"value": "32"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "1949:2:13",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1966:32:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1984:9:13"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "1995:2:13"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1980:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "1980:18:13"
															},
															"variables": [
																{
																	"name": "tail_1",
																	"nodeType": "YulTypedName",
																	"src": "1970:6:13",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2014:9:13"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "2025:2:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2007:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "2007:21:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2007:21:13"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2037:17:13",
															"value": {
																"name": "tail_1",
																"nodeType": "YulIdentifier",
																"src": "2048:6:13"
															},
															"variables": [
																{
																	"name": "pos",
																	"nodeType": "YulTypedName",
																	"src": "2041:3:13",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2063:27:13",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "2083:6:13"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "2077:5:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "2077:13:13"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "2067:6:13",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "tail_1",
																		"nodeType": "YulIdentifier",
																		"src": "2106:6:13"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "2114:6:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2099:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "2099:22:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2099:22:13"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2130:12:13",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "2140:2:13",
																"type": "",
																"value": "64"
															},
															"variables": [
																{
																	"name": "_2",
																	"nodeType": "YulTypedName",
																	"src": "2134:2:13",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "2151:25:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2162:9:13"
																	},
																	{
																		"name": "_2",
																		"nodeType": "YulIdentifier",
																		"src": "2173:2:13"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2158:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "2158:18:13"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "2151:3:13"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2185:29:13",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "2203:6:13"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "2211:2:13"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2199:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "2199:15:13"
															},
															"variables": [
																{
																	"name": "srcPtr",
																	"nodeType": "YulTypedName",
																	"src": "2189:6:13",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2223:10:13",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "2232:1:13",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nodeType": "YulTypedName",
																	"src": "2227:1:13",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2291:231:13",
																"statements": [
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "2305:23:13",
																		"value": {
																			"arguments": [
																				{
																					"name": "srcPtr",
																					"nodeType": "YulIdentifier",
																					"src": "2321:6:13"
																				}
																			],
																			"functionName": {
																				"name": "mload",
																				"nodeType": "YulIdentifier",
																				"src": "2315:5:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2315:13:13"
																		},
																		"variables": [
																			{
																				"name": "_3",
																				"nodeType": "YulTypedName",
																				"src": "2309:2:13",
																				"type": ""
																			}
																		]
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "pos",
																					"nodeType": "YulIdentifier",
																					"src": "2348:3:13"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "_3",
																									"nodeType": "YulIdentifier",
																									"src": "2363:2:13"
																								}
																							],
																							"functionName": {
																								"name": "mload",
																								"nodeType": "YulIdentifier",
																								"src": "2357:5:13"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "2357:9:13"
																						},
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"kind": "number",
																											"nodeType": "YulLiteral",
																											"src": "2376:3:13",
																											"type": "",
																											"value": "160"
																										},
																										{
																											"kind": "number",
																											"nodeType": "YulLiteral",
																											"src": "2381:1:13",
																											"type": "",
																											"value": "1"
																										}
																									],
																									"functionName": {
																										"name": "shl",
																										"nodeType": "YulIdentifier",
																										"src": "2372:3:13"
																									},
																									"nodeType": "YulFunctionCall",
																									"src": "2372:11:13"
																								},
																								{
																									"kind": "number",
																									"nodeType": "YulLiteral",
																									"src": "2385:1:13",
																									"type": "",
																									"value": "1"
																								}
																							],
																							"functionName": {
																								"name": "sub",
																								"nodeType": "YulIdentifier",
																								"src": "2368:3:13"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "2368:19:13"
																						}
																					],
																					"functionName": {
																						"name": "and",
																						"nodeType": "YulIdentifier",
																						"src": "2353:3:13"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "2353:35:13"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "2341:6:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2341:48:13"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2341:48:13"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "pos",
																							"nodeType": "YulIdentifier",
																							"src": "2413:3:13"
																						},
																						{
																							"name": "_1",
																							"nodeType": "YulIdentifier",
																							"src": "2418:2:13"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "2409:3:13"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "2409:12:13"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "_3",
																									"nodeType": "YulIdentifier",
																									"src": "2433:2:13"
																								},
																								{
																									"name": "_1",
																									"nodeType": "YulIdentifier",
																									"src": "2437:2:13"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "2429:3:13"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "2429:11:13"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nodeType": "YulIdentifier",
																						"src": "2423:5:13"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "2423:18:13"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "2402:6:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2402:40:13"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2402:40:13"
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "2455:19:13",
																		"value": {
																			"arguments": [
																				{
																					"name": "pos",
																					"nodeType": "YulIdentifier",
																					"src": "2466:3:13"
																				},
																				{
																					"name": "_2",
																					"nodeType": "YulIdentifier",
																					"src": "2471:2:13"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "2462:3:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2462:12:13"
																		},
																		"variableNames": [
																			{
																				"name": "pos",
																				"nodeType": "YulIdentifier",
																				"src": "2455:3:13"
																			}
																		]
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "2487:25:13",
																		"value": {
																			"arguments": [
																				{
																					"name": "srcPtr",
																					"nodeType": "YulIdentifier",
																					"src": "2501:6:13"
																				},
																				{
																					"name": "_1",
																					"nodeType": "YulIdentifier",
																					"src": "2509:2:13"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "2497:3:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2497:15:13"
																		},
																		"variableNames": [
																			{
																				"name": "srcPtr",
																				"nodeType": "YulIdentifier",
																				"src": "2487:6:13"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "2253:1:13"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "2256:6:13"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "2250:2:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "2250:13:13"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "2264:18:13",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "2266:14:13",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nodeType": "YulIdentifier",
																					"src": "2275:1:13"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2278:1:13",
																					"type": "",
																					"value": "1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "2271:3:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2271:9:13"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nodeType": "YulIdentifier",
																				"src": "2266:1:13"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "2246:3:13",
																"statements": []
															},
															"src": "2242:280:13"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2531:11:13",
															"value": {
																"name": "pos",
																"nodeType": "YulIdentifier",
																"src": "2539:3:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "2531:4:13"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_array$_t_struct$_Volume_$1801_memory_ptr_$dyn_memory_ptr__to_t_array$_t_struct$_Volume_$1801_memory_ptr_$dyn_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1904:9:13",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1915:6:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1926:4:13",
														"type": ""
													}
												],
												"src": "1736:812:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2674:276:13",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2721:16:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2730:1:13",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2733:1:13",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2723:6:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2723:12:13"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2723:12:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2695:7:13"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2704:9:13"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "2691:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2691:23:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2716:3:13",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "2687:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "2687:33:13"
															},
															"nodeType": "YulIf",
															"src": "2684:53:13"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2746:39:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2775:9:13"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "2756:18:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "2756:29:13"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "2746:6:13"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "2794:48:13",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2827:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2838:2:13",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2823:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2823:18:13"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "2804:18:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "2804:38:13"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "2794:6:13"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "2851:42:13",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2878:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2889:2:13",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2874:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2874:18:13"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "2861:12:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "2861:32:13"
															},
															"variableNames": [
																{
																	"name": "value2",
																	"nodeType": "YulIdentifier",
																	"src": "2851:6:13"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "2902:42:13",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2929:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2940:2:13",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2925:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2925:18:13"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "2912:12:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "2912:32:13"
															},
															"variableNames": [
																{
																	"name": "value3",
																	"nodeType": "YulIdentifier",
																	"src": "2902:6:13"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_uint256t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2616:9:13",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "2627:7:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2639:6:13",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "2647:6:13",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "2655:6:13",
														"type": ""
													},
													{
														"name": "value3",
														"nodeType": "YulTypedName",
														"src": "2663:6:13",
														"type": ""
													}
												],
												"src": "2553:397:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3112:218:13",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3122:26:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3134:9:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3145:2:13",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3130:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "3130:18:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "3122:4:13"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3157:29:13",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3175:3:13",
																				"type": "",
																				"value": "160"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3180:1:13",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "3171:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3171:11:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3184:1:13",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "3167:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "3167:19:13"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "3161:2:13",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3202:9:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "3217:6:13"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "3225:2:13"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "3213:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3213:15:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3195:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "3195:34:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3195:34:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3249:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3260:2:13",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3245:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3245:18:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value1",
																				"nodeType": "YulIdentifier",
																				"src": "3269:6:13"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "3277:2:13"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "3265:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3265:15:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3238:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "3238:43:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3238:43:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3301:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3312:2:13",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3297:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3297:18:13"
																	},
																	{
																		"name": "value2",
																		"nodeType": "YulIdentifier",
																		"src": "3317:6:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3290:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "3290:34:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3290:34:13"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3065:9:13",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "3076:6:13",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "3084:6:13",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "3092:6:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "3103:4:13",
														"type": ""
													}
												],
												"src": "2955:375:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3413:199:13",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3459:16:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3468:1:13",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3471:1:13",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "3461:6:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3461:12:13"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3461:12:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "3434:7:13"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3443:9:13"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "3430:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3430:23:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3455:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "3426:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "3426:32:13"
															},
															"nodeType": "YulIf",
															"src": "3423:52:13"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3484:29:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3503:9:13"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "3497:5:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "3497:16:13"
															},
															"variables": [
																{
																	"name": "value",
																	"nodeType": "YulTypedName",
																	"src": "3488:5:13",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3566:16:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3575:1:13",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3578:1:13",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "3568:6:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3568:12:13"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3568:12:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "3535:5:13"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "value",
																								"nodeType": "YulIdentifier",
																								"src": "3556:5:13"
																							}
																						],
																						"functionName": {
																							"name": "iszero",
																							"nodeType": "YulIdentifier",
																							"src": "3549:6:13"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "3549:13:13"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nodeType": "YulIdentifier",
																					"src": "3542:6:13"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3542:21:13"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "3532:2:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3532:32:13"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "3525:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "3525:40:13"
															},
															"nodeType": "YulIf",
															"src": "3522:60:13"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3591:15:13",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "3601:5:13"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "3591:6:13"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bool_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3379:9:13",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "3390:7:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "3402:6:13",
														"type": ""
													}
												],
												"src": "3335:277:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3649:95:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3666:1:13",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3673:3:13",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3678:10:13",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "3669:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3669:20:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3659:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "3659:31:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3659:31:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3706:1:13",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3709:4:13",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3699:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "3699:15:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3699:15:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3730:1:13",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3733:4:13",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "3723:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "3723:15:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3723:15:13"
														}
													]
												},
												"name": "panic_error_0x11",
												"nodeType": "YulFunctionDefinition",
												"src": "3617:127:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3801:116:13",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3811:20:13",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "3826:1:13"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "3829:1:13"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nodeType": "YulIdentifier",
																	"src": "3822:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "3822:9:13"
															},
															"variableNames": [
																{
																	"name": "product",
																	"nodeType": "YulIdentifier",
																	"src": "3811:7:13"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3889:22:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "3891:16:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3891:18:13"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3891:18:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "x",
																						"nodeType": "YulIdentifier",
																						"src": "3860:1:13"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nodeType": "YulIdentifier",
																					"src": "3853:6:13"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3853:9:13"
																			},
																			{
																				"arguments": [
																					{
																						"name": "y",
																						"nodeType": "YulIdentifier",
																						"src": "3867:1:13"
																					},
																					{
																						"arguments": [
																							{
																								"name": "product",
																								"nodeType": "YulIdentifier",
																								"src": "3874:7:13"
																							},
																							{
																								"name": "x",
																								"nodeType": "YulIdentifier",
																								"src": "3883:1:13"
																							}
																						],
																						"functionName": {
																							"name": "div",
																							"nodeType": "YulIdentifier",
																							"src": "3870:3:13"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "3870:15:13"
																					}
																				],
																				"functionName": {
																					"name": "eq",
																					"nodeType": "YulIdentifier",
																					"src": "3864:2:13"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3864:22:13"
																			}
																		],
																		"functionName": {
																			"name": "or",
																			"nodeType": "YulIdentifier",
																			"src": "3850:2:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3850:37:13"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "3843:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "3843:45:13"
															},
															"nodeType": "YulIf",
															"src": "3840:71:13"
														}
													]
												},
												"name": "checked_mul_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "3780:1:13",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "3783:1:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "product",
														"nodeType": "YulTypedName",
														"src": "3789:7:13",
														"type": ""
													}
												],
												"src": "3749:168:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3968:171:13",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3999:111:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4020:1:13",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "4027:3:13",
																							"type": "",
																							"value": "224"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "4032:10:13",
																							"type": "",
																							"value": "0x4e487b71"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nodeType": "YulIdentifier",
																						"src": "4023:3:13"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "4023:20:13"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "4013:6:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4013:31:13"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4013:31:13"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4064:1:13",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4067:4:13",
																					"type": "",
																					"value": "0x12"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "4057:6:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4057:15:13"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4057:15:13"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4092:1:13",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4095:4:13",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "4085:6:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4085:15:13"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4085:15:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "3988:1:13"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "3981:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "3981:9:13"
															},
															"nodeType": "YulIf",
															"src": "3978:132:13"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4119:14:13",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "4128:1:13"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "4131:1:13"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nodeType": "YulIdentifier",
																	"src": "4124:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "4124:9:13"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nodeType": "YulIdentifier",
																	"src": "4119:1:13"
																}
															]
														}
													]
												},
												"name": "checked_div_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "3953:1:13",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "3956:1:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "r",
														"nodeType": "YulTypedName",
														"src": "3962:1:13",
														"type": ""
													}
												],
												"src": "3922:217:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4176:95:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4193:1:13",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4200:3:13",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4205:10:13",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "4196:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4196:20:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4186:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "4186:31:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4186:31:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4233:1:13",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4236:4:13",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4226:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "4226:15:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4226:15:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4257:1:13",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4260:4:13",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "4250:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "4250:15:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4250:15:13"
														}
													]
												},
												"name": "panic_error_0x41",
												"nodeType": "YulFunctionDefinition",
												"src": "4144:127:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4308:95:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4325:1:13",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4332:3:13",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4337:10:13",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "4328:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4328:20:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4318:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "4318:31:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4318:31:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4365:1:13",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4368:4:13",
																		"type": "",
																		"value": "0x32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4358:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "4358:15:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4358:15:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4389:1:13",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4392:4:13",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "4382:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "4382:15:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4382:15:13"
														}
													]
												},
												"name": "panic_error_0x32",
												"nodeType": "YulFunctionDefinition",
												"src": "4276:127:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4457:79:13",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4467:17:13",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "4479:1:13"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "4482:1:13"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "4475:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "4475:9:13"
															},
															"variableNames": [
																{
																	"name": "diff",
																	"nodeType": "YulIdentifier",
																	"src": "4467:4:13"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4508:22:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "4510:16:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4510:18:13"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4510:18:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "diff",
																		"nodeType": "YulIdentifier",
																		"src": "4499:4:13"
																	},
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "4505:1:13"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "4496:2:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "4496:11:13"
															},
															"nodeType": "YulIf",
															"src": "4493:37:13"
														}
													]
												},
												"name": "checked_sub_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "4439:1:13",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "4442:1:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "diff",
														"nodeType": "YulTypedName",
														"src": "4448:4:13",
														"type": ""
													}
												],
												"src": "4408:128:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4589:77:13",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4599:16:13",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "4610:1:13"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "4613:1:13"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4606:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "4606:9:13"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nodeType": "YulIdentifier",
																	"src": "4599:3:13"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4638:22:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "4640:16:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4640:18:13"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4640:18:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "4630:1:13"
																	},
																	{
																		"name": "sum",
																		"nodeType": "YulIdentifier",
																		"src": "4633:3:13"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "4627:2:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "4627:10:13"
															},
															"nodeType": "YulIf",
															"src": "4624:36:13"
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "4572:1:13",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "4575:1:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nodeType": "YulTypedName",
														"src": "4581:3:13",
														"type": ""
													}
												],
												"src": "4541:125:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4732:400:13",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "4742:26:13",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "4762:5:13"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "4756:5:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "4756:12:13"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "4746:6:13",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "4784:3:13"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "4789:6:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4777:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "4777:19:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4777:19:13"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "4805:14:13",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "4815:4:13",
																"type": "",
																"value": "0x20"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "4809:2:13",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "4828:19:13",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "4839:3:13"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "4844:2:13"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4835:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "4835:12:13"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "4828:3:13"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "4856:28:13",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "4874:5:13"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "4881:2:13"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4870:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "4870:14:13"
															},
															"variables": [
																{
																	"name": "srcPtr",
																	"nodeType": "YulTypedName",
																	"src": "4860:6:13",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "4893:10:13",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "4902:1:13",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nodeType": "YulTypedName",
																	"src": "4897:1:13",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4961:146:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "pos",
																					"nodeType": "YulIdentifier",
																					"src": "4982:3:13"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "srcPtr",
																									"nodeType": "YulIdentifier",
																									"src": "4997:6:13"
																								}
																							],
																							"functionName": {
																								"name": "mload",
																								"nodeType": "YulIdentifier",
																								"src": "4991:5:13"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "4991:13:13"
																						},
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"kind": "number",
																											"nodeType": "YulLiteral",
																											"src": "5014:3:13",
																											"type": "",
																											"value": "160"
																										},
																										{
																											"kind": "number",
																											"nodeType": "YulLiteral",
																											"src": "5019:1:13",
																											"type": "",
																											"value": "1"
																										}
																									],
																									"functionName": {
																										"name": "shl",
																										"nodeType": "YulIdentifier",
																										"src": "5010:3:13"
																									},
																									"nodeType": "YulFunctionCall",
																									"src": "5010:11:13"
																								},
																								{
																									"kind": "number",
																									"nodeType": "YulLiteral",
																									"src": "5023:1:13",
																									"type": "",
																									"value": "1"
																								}
																							],
																							"functionName": {
																								"name": "sub",
																								"nodeType": "YulIdentifier",
																								"src": "5006:3:13"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "5006:19:13"
																						}
																					],
																					"functionName": {
																						"name": "and",
																						"nodeType": "YulIdentifier",
																						"src": "4987:3:13"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "4987:39:13"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "4975:6:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4975:52:13"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4975:52:13"
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "5040:19:13",
																		"value": {
																			"arguments": [
																				{
																					"name": "pos",
																					"nodeType": "YulIdentifier",
																					"src": "5051:3:13"
																				},
																				{
																					"name": "_1",
																					"nodeType": "YulIdentifier",
																					"src": "5056:2:13"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "5047:3:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5047:12:13"
																		},
																		"variableNames": [
																			{
																				"name": "pos",
																				"nodeType": "YulIdentifier",
																				"src": "5040:3:13"
																			}
																		]
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "5072:25:13",
																		"value": {
																			"arguments": [
																				{
																					"name": "srcPtr",
																					"nodeType": "YulIdentifier",
																					"src": "5086:6:13"
																				},
																				{
																					"name": "_1",
																					"nodeType": "YulIdentifier",
																					"src": "5094:2:13"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "5082:3:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5082:15:13"
																		},
																		"variableNames": [
																			{
																				"name": "srcPtr",
																				"nodeType": "YulIdentifier",
																				"src": "5072:6:13"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "4923:1:13"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "4926:6:13"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "4920:2:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "4920:13:13"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "4934:18:13",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "4936:14:13",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nodeType": "YulIdentifier",
																					"src": "4945:1:13"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4948:1:13",
																					"type": "",
																					"value": "1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "4941:3:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4941:9:13"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nodeType": "YulIdentifier",
																				"src": "4936:1:13"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "4916:3:13",
																"statements": []
															},
															"src": "4912:195:13"
														},
														{
															"nodeType": "YulAssignment",
															"src": "5116:10:13",
															"value": {
																"name": "pos",
																"nodeType": "YulIdentifier",
																"src": "5123:3:13"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "5116:3:13"
																}
															]
														}
													]
												},
												"name": "abi_encode_array_address_dyn",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "4709:5:13",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "4716:3:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "4724:3:13",
														"type": ""
													}
												],
												"src": "4671:461:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5400:311:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5417:9:13"
																	},
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "5428:6:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5410:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "5410:25:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5410:25:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5455:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5466:2:13",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5451:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5451:18:13"
																	},
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "5471:6:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5444:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "5444:34:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5444:34:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5498:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5509:2:13",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5494:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5494:18:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5514:3:13",
																		"type": "",
																		"value": "160"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5487:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "5487:31:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5487:31:13"
														},
														{
															"nodeType": "YulAssignment",
															"src": "5527:65:13",
															"value": {
																"arguments": [
																	{
																		"name": "value2",
																		"nodeType": "YulIdentifier",
																		"src": "5564:6:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5576:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5587:3:13",
																				"type": "",
																				"value": "160"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5572:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5572:19:13"
																	}
																],
																"functionName": {
																	"name": "abi_encode_array_address_dyn",
																	"nodeType": "YulIdentifier",
																	"src": "5535:28:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "5535:57:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "5527:4:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5612:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5623:2:13",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5608:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5608:18:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value3",
																				"nodeType": "YulIdentifier",
																				"src": "5632:6:13"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "5648:3:13",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "5653:1:13",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nodeType": "YulIdentifier",
																							"src": "5644:3:13"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "5644:11:13"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "5657:1:13",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nodeType": "YulIdentifier",
																					"src": "5640:3:13"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "5640:19:13"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "5628:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5628:32:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5601:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "5601:60:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5601:60:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5681:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5692:3:13",
																				"type": "",
																				"value": "128"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5677:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5677:19:13"
																	},
																	{
																		"name": "value4",
																		"nodeType": "YulIdentifier",
																		"src": "5698:6:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5670:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "5670:35:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5670:35:13"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256_t_uint256_t_array$_t_address_$dyn_memory_ptr_t_address_t_uint256__to_t_uint256_t_uint256_t_array$_t_address_$dyn_memory_ptr_t_address_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5337:9:13",
														"type": ""
													},
													{
														"name": "value4",
														"nodeType": "YulTypedName",
														"src": "5348:6:13",
														"type": ""
													},
													{
														"name": "value3",
														"nodeType": "YulTypedName",
														"src": "5356:6:13",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "5364:6:13",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "5372:6:13",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "5380:6:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "5391:4:13",
														"type": ""
													}
												],
												"src": "5137:574:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5763:88:13",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "5794:22:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "5796:16:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5796:18:13"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5796:18:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "5779:5:13"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5790:1:13",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nodeType": "YulIdentifier",
																			"src": "5786:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5786:6:13"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nodeType": "YulIdentifier",
																	"src": "5776:2:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "5776:17:13"
															},
															"nodeType": "YulIf",
															"src": "5773:43:13"
														},
														{
															"nodeType": "YulAssignment",
															"src": "5825:20:13",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "5836:5:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5843:1:13",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5832:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "5832:13:13"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nodeType": "YulIdentifier",
																	"src": "5825:3:13"
																}
															]
														}
													]
												},
												"name": "increment_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "5745:5:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nodeType": "YulTypedName",
														"src": "5755:3:13",
														"type": ""
													}
												],
												"src": "5716:135:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6035:153:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6052:9:13"
																	},
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "6063:6:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6045:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "6045:25:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6045:25:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6090:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6101:2:13",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6086:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6086:18:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6106:2:13",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6079:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "6079:30:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6079:30:13"
														},
														{
															"nodeType": "YulAssignment",
															"src": "6118:64:13",
															"value": {
																"arguments": [
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "6155:6:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6167:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6178:2:13",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6163:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6163:18:13"
																	}
																],
																"functionName": {
																	"name": "abi_encode_array_address_dyn",
																	"nodeType": "YulIdentifier",
																	"src": "6126:28:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "6126:56:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "6118:4:13"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256_t_array$_t_address_$dyn_memory_ptr__to_t_uint256_t_array$_t_address_$dyn_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5996:9:13",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "6007:6:13",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "6015:6:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "6026:4:13",
														"type": ""
													}
												],
												"src": "5856:332:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6299:999:13",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "6309:12:13",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "6319:2:13",
																"type": "",
																"value": "32"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "6313:2:13",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "6366:16:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "6375:1:13",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "6378:1:13",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "6368:6:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6368:12:13"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "6368:12:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "6341:7:13"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6350:9:13"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "6337:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6337:23:13"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "6362:2:13"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "6333:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "6333:32:13"
															},
															"nodeType": "YulIf",
															"src": "6330:52:13"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "6391:30:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6411:9:13"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "6405:5:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "6405:16:13"
															},
															"variables": [
																{
																	"name": "offset",
																	"nodeType": "YulTypedName",
																	"src": "6395:6:13",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "6430:28:13",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "6440:18:13",
																"type": "",
																"value": "0xffffffffffffffff"
															},
															"variables": [
																{
																	"name": "_2",
																	"nodeType": "YulTypedName",
																	"src": "6434:2:13",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "6485:16:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "6494:1:13",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "6497:1:13",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "6487:6:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6487:12:13"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "6487:12:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "6473:6:13"
																	},
																	{
																		"name": "_2",
																		"nodeType": "YulIdentifier",
																		"src": "6481:2:13"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "6470:2:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "6470:14:13"
															},
															"nodeType": "YulIf",
															"src": "6467:34:13"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "6510:32:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6524:9:13"
																	},
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "6535:6:13"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6520:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "6520:22:13"
															},
															"variables": [
																{
																	"name": "_3",
																	"nodeType": "YulTypedName",
																	"src": "6514:2:13",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "6590:16:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "6599:1:13",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "6602:1:13",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "6592:6:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6592:12:13"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "6592:12:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "_3",
																						"nodeType": "YulIdentifier",
																						"src": "6569:2:13"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "6573:4:13",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "6565:3:13"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "6565:13:13"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "6580:7:13"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nodeType": "YulIdentifier",
																			"src": "6561:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6561:27:13"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "6554:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "6554:35:13"
															},
															"nodeType": "YulIf",
															"src": "6551:55:13"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "6615:19:13",
															"value": {
																"arguments": [
																	{
																		"name": "_3",
																		"nodeType": "YulIdentifier",
																		"src": "6631:2:13"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "6625:5:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "6625:9:13"
															},
															"variables": [
																{
																	"name": "_4",
																	"nodeType": "YulTypedName",
																	"src": "6619:2:13",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "6657:22:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "6659:16:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6659:18:13"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "6659:18:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "_4",
																		"nodeType": "YulIdentifier",
																		"src": "6649:2:13"
																	},
																	{
																		"name": "_2",
																		"nodeType": "YulIdentifier",
																		"src": "6653:2:13"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "6646:2:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "6646:10:13"
															},
															"nodeType": "YulIf",
															"src": "6643:36:13"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "6688:20:13",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6702:1:13",
																		"type": "",
																		"value": "5"
																	},
																	{
																		"name": "_4",
																		"nodeType": "YulIdentifier",
																		"src": "6705:2:13"
																	}
																],
																"functionName": {
																	"name": "shl",
																	"nodeType": "YulIdentifier",
																	"src": "6698:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "6698:10:13"
															},
															"variables": [
																{
																	"name": "_5",
																	"nodeType": "YulTypedName",
																	"src": "6692:2:13",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "6717:23:13",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6737:2:13",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "6731:5:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "6731:9:13"
															},
															"variables": [
																{
																	"name": "memPtr",
																	"nodeType": "YulTypedName",
																	"src": "6721:6:13",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "6749:56:13",
															"value": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "6771:6:13"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "_5",
																						"nodeType": "YulIdentifier",
																						"src": "6787:2:13"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "6791:2:13",
																						"type": "",
																						"value": "63"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "6783:3:13"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "6783:11:13"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "6800:2:13",
																						"type": "",
																						"value": "31"
																					}
																				],
																				"functionName": {
																					"name": "not",
																					"nodeType": "YulIdentifier",
																					"src": "6796:3:13"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "6796:7:13"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "6779:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6779:25:13"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6767:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "6767:38:13"
															},
															"variables": [
																{
																	"name": "newFreePtr",
																	"nodeType": "YulTypedName",
																	"src": "6753:10:13",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "6864:22:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "6866:16:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6866:18:13"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "6866:18:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "6823:10:13"
																			},
																			{
																				"name": "_2",
																				"nodeType": "YulIdentifier",
																				"src": "6835:2:13"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "6820:2:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6820:18:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "6843:10:13"
																			},
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "6855:6:13"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "6840:2:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6840:22:13"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "6817:2:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "6817:46:13"
															},
															"nodeType": "YulIf",
															"src": "6814:72:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6902:2:13",
																		"type": "",
																		"value": "64"
																	},
																	{
																		"name": "newFreePtr",
																		"nodeType": "YulIdentifier",
																		"src": "6906:10:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6895:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "6895:22:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6895:22:13"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "6926:17:13",
															"value": {
																"name": "memPtr",
																"nodeType": "YulIdentifier",
																"src": "6937:6:13"
															},
															"variables": [
																{
																	"name": "dst",
																	"nodeType": "YulTypedName",
																	"src": "6930:3:13",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "6959:6:13"
																	},
																	{
																		"name": "_4",
																		"nodeType": "YulIdentifier",
																		"src": "6967:2:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6952:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "6952:18:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6952:18:13"
														},
														{
															"nodeType": "YulAssignment",
															"src": "6979:22:13",
															"value": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "6990:6:13"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "6998:2:13"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6986:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "6986:15:13"
															},
															"variableNames": [
																{
																	"name": "dst",
																	"nodeType": "YulIdentifier",
																	"src": "6979:3:13"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "7010:34:13",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "_3",
																				"nodeType": "YulIdentifier",
																				"src": "7032:2:13"
																			},
																			{
																				"name": "_5",
																				"nodeType": "YulIdentifier",
																				"src": "7036:2:13"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7028:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7028:11:13"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "7041:2:13"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "7024:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "7024:20:13"
															},
															"variables": [
																{
																	"name": "srcEnd",
																	"nodeType": "YulTypedName",
																	"src": "7014:6:13",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "7076:16:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "7085:1:13",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "7088:1:13",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "7078:6:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "7078:12:13"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "7078:12:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "srcEnd",
																		"nodeType": "YulIdentifier",
																		"src": "7059:6:13"
																	},
																	{
																		"name": "dataEnd",
																		"nodeType": "YulIdentifier",
																		"src": "7067:7:13"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "7056:2:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "7056:19:13"
															},
															"nodeType": "YulIf",
															"src": "7053:39:13"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "7101:22:13",
															"value": {
																"arguments": [
																	{
																		"name": "_3",
																		"nodeType": "YulIdentifier",
																		"src": "7116:2:13"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "7120:2:13"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "7112:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "7112:11:13"
															},
															"variables": [
																{
																	"name": "src",
																	"nodeType": "YulTypedName",
																	"src": "7105:3:13",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "7188:79:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "dst",
																					"nodeType": "YulIdentifier",
																					"src": "7209:3:13"
																				},
																				{
																					"arguments": [
																						{
																							"name": "src",
																							"nodeType": "YulIdentifier",
																							"src": "7220:3:13"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nodeType": "YulIdentifier",
																						"src": "7214:5:13"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "7214:10:13"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "7202:6:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "7202:23:13"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "7202:23:13"
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "7238:19:13",
																		"value": {
																			"arguments": [
																				{
																					"name": "dst",
																					"nodeType": "YulIdentifier",
																					"src": "7249:3:13"
																				},
																				{
																					"name": "_1",
																					"nodeType": "YulIdentifier",
																					"src": "7254:2:13"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "7245:3:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "7245:12:13"
																		},
																		"variableNames": [
																			{
																				"name": "dst",
																				"nodeType": "YulIdentifier",
																				"src": "7238:3:13"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "src",
																		"nodeType": "YulIdentifier",
																		"src": "7143:3:13"
																	},
																	{
																		"name": "srcEnd",
																		"nodeType": "YulIdentifier",
																		"src": "7148:6:13"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "7140:2:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "7140:15:13"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "7156:23:13",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "7158:19:13",
																		"value": {
																			"arguments": [
																				{
																					"name": "src",
																					"nodeType": "YulIdentifier",
																					"src": "7169:3:13"
																				},
																				{
																					"name": "_1",
																					"nodeType": "YulIdentifier",
																					"src": "7174:2:13"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "7165:3:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "7165:12:13"
																		},
																		"variableNames": [
																			{
																				"name": "src",
																				"nodeType": "YulIdentifier",
																				"src": "7158:3:13"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "7136:3:13",
																"statements": []
															},
															"src": "7132:135:13"
														},
														{
															"nodeType": "YulAssignment",
															"src": "7276:16:13",
															"value": {
																"name": "memPtr",
																"nodeType": "YulIdentifier",
																"src": "7286:6:13"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "7276:6:13"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_array$_t_uint256_$dyn_memory_ptr_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "6265:9:13",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "6276:7:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "6288:6:13",
														"type": ""
													}
												],
												"src": "6193:1105:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7538:267:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "7555:9:13"
																	},
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "7566:6:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7548:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "7548:25:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7548:25:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7593:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7604:2:13",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7589:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7589:18:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7609:3:13",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7582:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "7582:31:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7582:31:13"
														},
														{
															"nodeType": "YulAssignment",
															"src": "7622:65:13",
															"value": {
																"arguments": [
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "7659:6:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7671:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7682:3:13",
																				"type": "",
																				"value": "128"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7667:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7667:19:13"
																	}
																],
																"functionName": {
																	"name": "abi_encode_array_address_dyn",
																	"nodeType": "YulIdentifier",
																	"src": "7630:28:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "7630:57:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "7622:4:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7707:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7718:2:13",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7703:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7703:18:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value2",
																				"nodeType": "YulIdentifier",
																				"src": "7727:6:13"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "7743:3:13",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "7748:1:13",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nodeType": "YulIdentifier",
																							"src": "7739:3:13"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "7739:11:13"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "7752:1:13",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nodeType": "YulIdentifier",
																					"src": "7735:3:13"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "7735:19:13"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "7723:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7723:32:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7696:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "7696:60:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7696:60:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7776:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7787:2:13",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7772:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7772:18:13"
																	},
																	{
																		"name": "value3",
																		"nodeType": "YulIdentifier",
																		"src": "7792:6:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7765:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "7765:34:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7765:34:13"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256_t_array$_t_address_$dyn_memory_ptr_t_address_t_uint256__to_t_uint256_t_array$_t_address_$dyn_memory_ptr_t_address_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "7483:9:13",
														"type": ""
													},
													{
														"name": "value3",
														"nodeType": "YulTypedName",
														"src": "7494:6:13",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "7502:6:13",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "7510:6:13",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "7518:6:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "7529:4:13",
														"type": ""
													}
												],
												"src": "7303:502:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7939:145:13",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "7949:26:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "7961:9:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7972:2:13",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "7957:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "7957:18:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "7949:4:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "7991:9:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "8006:6:13"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "8022:3:13",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "8027:1:13",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nodeType": "YulIdentifier",
																							"src": "8018:3:13"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "8018:11:13"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "8031:1:13",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nodeType": "YulIdentifier",
																					"src": "8014:3:13"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "8014:19:13"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "8002:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8002:32:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7984:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "7984:51:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7984:51:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8055:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8066:2:13",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8051:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8051:18:13"
																	},
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "8071:6:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8044:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "8044:34:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8044:34:13"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "7900:9:13",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "7911:6:13",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "7919:6:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "7930:4:13",
														"type": ""
													}
												],
												"src": "7810:274:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8360:311:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "8377:9:13"
																	},
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "8388:6:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8370:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "8370:25:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8370:25:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8415:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8426:2:13",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8411:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8411:18:13"
																	},
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "8431:6:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8404:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "8404:34:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8404:34:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8458:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8469:2:13",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8454:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8454:18:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8474:3:13",
																		"type": "",
																		"value": "160"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8447:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "8447:31:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8447:31:13"
														},
														{
															"nodeType": "YulAssignment",
															"src": "8487:65:13",
															"value": {
																"arguments": [
																	{
																		"name": "value2",
																		"nodeType": "YulIdentifier",
																		"src": "8524:6:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8536:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8547:3:13",
																				"type": "",
																				"value": "160"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8532:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8532:19:13"
																	}
																],
																"functionName": {
																	"name": "abi_encode_array_address_dyn",
																	"nodeType": "YulIdentifier",
																	"src": "8495:28:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "8495:57:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "8487:4:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8572:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8583:2:13",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8568:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8568:18:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value3",
																				"nodeType": "YulIdentifier",
																				"src": "8592:6:13"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "8608:3:13",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "8613:1:13",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nodeType": "YulIdentifier",
																							"src": "8604:3:13"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "8604:11:13"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "8617:1:13",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nodeType": "YulIdentifier",
																					"src": "8600:3:13"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "8600:19:13"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "8588:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8588:32:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8561:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "8561:60:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8561:60:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8641:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8652:3:13",
																				"type": "",
																				"value": "128"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8637:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8637:19:13"
																	},
																	{
																		"name": "value4",
																		"nodeType": "YulIdentifier",
																		"src": "8658:6:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8630:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "8630:35:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8630:35:13"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256_t_rational_0_by_1_t_array$_t_address_$dyn_memory_ptr_t_address_t_uint256__to_t_uint256_t_uint256_t_array$_t_address_$dyn_memory_ptr_t_address_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "8297:9:13",
														"type": ""
													},
													{
														"name": "value4",
														"nodeType": "YulTypedName",
														"src": "8308:6:13",
														"type": ""
													},
													{
														"name": "value3",
														"nodeType": "YulTypedName",
														"src": "8316:6:13",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "8324:6:13",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "8332:6:13",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "8340:6:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "8351:4:13",
														"type": ""
													}
												],
												"src": "8089:582:13"
											}
										]
									},
									"contents": "{\n    { }\n    function abi_decode_address(offset) -> value\n    {\n        value := calldataload(offset)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_addresst_uint256t_uint256(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := calldataload(add(headStart, 32))\n        value2 := calldataload(add(headStart, 64))\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := calldataload(headStart)\n    }\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := calldataload(add(headStart, 32))\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n    }\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, iszero(iszero(value0)))\n    }\n    function abi_encode_tuple_t_array$_t_struct$_Volume_$1801_memory_ptr_$dyn_memory_ptr__to_t_array$_t_struct$_Volume_$1801_memory_ptr_$dyn_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        let _1 := 32\n        let tail_1 := add(headStart, _1)\n        mstore(headStart, _1)\n        let pos := tail_1\n        let length := mload(value0)\n        mstore(tail_1, length)\n        let _2 := 64\n        pos := add(headStart, _2)\n        let srcPtr := add(value0, _1)\n        let i := 0\n        for { } lt(i, length) { i := add(i, 1) }\n        {\n            let _3 := mload(srcPtr)\n            mstore(pos, and(mload(_3), sub(shl(160, 1), 1)))\n            mstore(add(pos, _1), mload(add(_3, _1)))\n            pos := add(pos, _2)\n            srcPtr := add(srcPtr, _1)\n        }\n        tail := pos\n    }\n    function abi_decode_tuple_t_addresst_addresst_uint256t_uint256(headStart, dataEnd) -> value0, value1, value2, value3\n    {\n        if slt(sub(dataEnd, headStart), 128) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n        value2 := calldataload(add(headStart, 64))\n        value3 := calldataload(add(headStart, 96))\n    }\n    function abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed(headStart, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 96)\n        let _1 := sub(shl(160, 1), 1)\n        mstore(headStart, and(value0, _1))\n        mstore(add(headStart, 32), and(value1, _1))\n        mstore(add(headStart, 64), value2)\n    }\n    function abi_decode_tuple_t_bool_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := mload(headStart)\n        if iszero(eq(value, iszero(iszero(value)))) { revert(0, 0) }\n        value0 := value\n    }\n    function panic_error_0x11()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n    function checked_mul_t_uint256(x, y) -> product\n    {\n        product := mul(x, y)\n        if iszero(or(iszero(x), eq(y, div(product, x)))) { panic_error_0x11() }\n    }\n    function checked_div_t_uint256(x, y) -> r\n    {\n        if iszero(y)\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x12)\n            revert(0, 0x24)\n        }\n        r := div(x, y)\n    }\n    function panic_error_0x41()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n    function panic_error_0x32()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x32)\n        revert(0, 0x24)\n    }\n    function checked_sub_t_uint256(x, y) -> diff\n    {\n        diff := sub(x, y)\n        if gt(diff, x) { panic_error_0x11() }\n    }\n    function checked_add_t_uint256(x, y) -> sum\n    {\n        sum := add(x, y)\n        if gt(x, sum) { panic_error_0x11() }\n    }\n    function abi_encode_array_address_dyn(value, pos) -> end\n    {\n        let length := mload(value)\n        mstore(pos, length)\n        let _1 := 0x20\n        pos := add(pos, _1)\n        let srcPtr := add(value, _1)\n        let i := 0\n        for { } lt(i, length) { i := add(i, 1) }\n        {\n            mstore(pos, and(mload(srcPtr), sub(shl(160, 1), 1)))\n            pos := add(pos, _1)\n            srcPtr := add(srcPtr, _1)\n        }\n        end := pos\n    }\n    function abi_encode_tuple_t_uint256_t_uint256_t_array$_t_address_$dyn_memory_ptr_t_address_t_uint256__to_t_uint256_t_uint256_t_array$_t_address_$dyn_memory_ptr_t_address_t_uint256__fromStack_reversed(headStart, value4, value3, value2, value1, value0) -> tail\n    {\n        mstore(headStart, value0)\n        mstore(add(headStart, 32), value1)\n        mstore(add(headStart, 64), 160)\n        tail := abi_encode_array_address_dyn(value2, add(headStart, 160))\n        mstore(add(headStart, 96), and(value3, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 128), value4)\n    }\n    function increment_t_uint256(value) -> ret\n    {\n        if eq(value, not(0)) { panic_error_0x11() }\n        ret := add(value, 1)\n    }\n    function abi_encode_tuple_t_uint256_t_array$_t_address_$dyn_memory_ptr__to_t_uint256_t_array$_t_address_$dyn_memory_ptr__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        mstore(headStart, value0)\n        mstore(add(headStart, 32), 64)\n        tail := abi_encode_array_address_dyn(value1, add(headStart, 64))\n    }\n    function abi_decode_tuple_t_array$_t_uint256_$dyn_memory_ptr_fromMemory(headStart, dataEnd) -> value0\n    {\n        let _1 := 32\n        if slt(sub(dataEnd, headStart), _1) { revert(0, 0) }\n        let offset := mload(headStart)\n        let _2 := 0xffffffffffffffff\n        if gt(offset, _2) { revert(0, 0) }\n        let _3 := add(headStart, offset)\n        if iszero(slt(add(_3, 0x1f), dataEnd)) { revert(0, 0) }\n        let _4 := mload(_3)\n        if gt(_4, _2) { panic_error_0x41() }\n        let _5 := shl(5, _4)\n        let memPtr := mload(64)\n        let newFreePtr := add(memPtr, and(add(_5, 63), not(31)))\n        if or(gt(newFreePtr, _2), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n        let dst := memPtr\n        mstore(memPtr, _4)\n        dst := add(memPtr, _1)\n        let srcEnd := add(add(_3, _5), _1)\n        if gt(srcEnd, dataEnd) { revert(0, 0) }\n        let src := add(_3, _1)\n        for { } lt(src, srcEnd) { src := add(src, _1) }\n        {\n            mstore(dst, mload(src))\n            dst := add(dst, _1)\n        }\n        value0 := memPtr\n    }\n    function abi_encode_tuple_t_uint256_t_array$_t_address_$dyn_memory_ptr_t_address_t_uint256__to_t_uint256_t_array$_t_address_$dyn_memory_ptr_t_address_t_uint256__fromStack_reversed(headStart, value3, value2, value1, value0) -> tail\n    {\n        mstore(headStart, value0)\n        mstore(add(headStart, 32), 128)\n        tail := abi_encode_array_address_dyn(value1, add(headStart, 128))\n        mstore(add(headStart, 64), and(value2, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 96), value3)\n    }\n    function abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 32), value1)\n    }\n    function abi_encode_tuple_t_uint256_t_rational_0_by_1_t_array$_t_address_$dyn_memory_ptr_t_address_t_uint256__to_t_uint256_t_uint256_t_array$_t_address_$dyn_memory_ptr_t_address_t_uint256__fromStack_reversed(headStart, value4, value3, value2, value1, value0) -> tail\n    {\n        mstore(headStart, value0)\n        mstore(add(headStart, 32), value1)\n        mstore(add(headStart, 64), 160)\n        tail := abi_encode_array_address_dyn(value2, add(headStart, 160))\n        mstore(add(headStart, 96), and(value3, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 128), value4)\n    }\n}",
									"id": 13,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405260043610610164575f3560e01c8063a37b9e7f116100cd578063b3f0067411610087578063d3e66a9e11610062578063d3e66a9e1461041e578063d7b7d3f314610432578063edf26d9b14610459578063f2fde38b14610478575f80fd5b8063b3f00674146103d8578063d0e30db0146103f7578063d16a4010146103ff575f80fd5b8063a37b9e7f146102ee578063a6769ef814610315578063ac65334f14610340578063ae38a07014610369578063afe43b941461038a578063b0befe63146103b1575f80fd5b80635f0018cd1161011e5780635f0018cd146102395780636504fbad1461024d578063715018a6146102745780637c6f8fae146102885780637fd6f15c146102af5780638da5cb5b146102d2575f80fd5b8063162141201461016f5780631d470cb1146101905780632e1a7d4d146101d45780633977d68d146101f357806339bda01c1461021257806353ac861e14610226575f80fd5b3661016b57005b5f80fd5b34801561017a575f80fd5b5061018e6101893660046115b1565b610497565b005b34801561019b575f80fd5b506101b7735c7f8a570d578ed84e63fdfa7b1ee72deae1ae2381565b6040516001600160a01b0390911681526020015b60405180910390f35b3480156101df575f80fd5b5061018e6101ee3660046115e1565b610678565b3480156101fe575f80fd5b5061018e61020d3660046115f8565b610778565b34801561021d575f80fd5b5061018e6107a6565b61018e6102343660046115f8565b610820565b348015610244575f80fd5b5061018e610a57565b348015610258575f80fd5b506101b77366e428c3f67a68878562e79a0234c1f83c20877081565b34801561027f575f80fd5b5061018e610a6b565b348015610293575f80fd5b506101b7733b44b2a187a7b3824131f8db5a74194d0a42fc1581565b3480156102ba575f80fd5b506102c460025481565b6040519081526020016101cb565b3480156102dd575f80fd5b505f546001600160a01b03166101b7565b3480156102f9575f80fd5b506101b773c21223249ca28397b4b6541dffaecc539bff0c5981565b348015610320575f80fd5b506102c461032f366004611620565b60046020525f908152604090205481565b34801561034b575f80fd5b506003546103599060ff1681565b60405190151581526020016101cb565b348015610374575f80fd5b5061037d610a7e565b6040516101cb9190611640565b348015610395575f80fd5b506101b77341bc026dabe978bc2fafea1850456511ca4b01bc81565b3480156103bc575f80fd5b506101b7733b41b27e74dd366ce27cb389dc7877d4e1516d4d81565b3480156103e3575f80fd5b506001546101b7906001600160a01b031681565b61018e610bab565b34801561040a575f80fd5b5061018e610419366004611697565b610c7b565b348015610429575f80fd5b5061018e6111df565b34801561043d575f80fd5b506101b773145863eb42cf62847a6ca784e6416c1682b1b2ae81565b348015610464575f80fd5b506101b76104733660046115e1565b6111f6565b348015610483575f80fd5b5061018e610492366004611620565b61121e565b6001600160a01b0383167341bc026dabe978bc2fafea1850456511ca4b01bc1480156104c5575060035460ff165b156104d4576104d43383611260565b6040516323b872dd60e01b8152336004820152306024820152604481018390526001600160a01b038416906323b872dd906064016020604051808303815f875af1158015610524573d5f803e3d5ffd5b505050506040513d601f19601f8201168201806040525081019061054891906116d6565b505f6103e86002548461055b9190611709565b6105659190611726565b90506105718482611312565b6040805160028082526060820183525f9260208301908036833701905050905084815f815181106105a4576105a4611759565b60200260200101906001600160a01b031690816001600160a01b031681525050735c7f8a570d578ed84e63fdfa7b1ee72deae1ae23816001815181106105ec576105ec611759565b6001600160a01b0392831660209182029290920101526008541663791ac947610615848761176d565b85843361062442610e10611780565b6040518663ffffffff1660e01b81526004016106449594939291906117d5565b5f604051808303815f87803b15801561065b575f80fd5b505af115801561066d573d5f803e3d5ffd5b505050505050505050565b600d546040516323b872dd60e01b8152336004820152306024820152604481018390526001600160a01b03909116906323b872dd906064016020604051808303815f875af11580156106cc573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906106f091906116d6565b50600d54604051632e1a7d4d60e01b8152600481018390526001600160a01b0390911690632e1a7d4d906024015f604051808303815f87803b158015610734575f80fd5b505af1158015610746573d5f803e3d5ffd5b505060405133925083156108fc02915083905f818181858888f19350505050158015610774573d5f803e3d5ffd5b5050565b6107806114ed565b600180546001600160a01b0319166001600160a01b039390931692909217909155600255565b6107ae6114ed565b6006545f5b818110156108075760045f600683815481106107d1576107d1611759565b5f9182526020808320909101546001600160a01b03168352820192909252604001812055806107ff81611810565b9150506107b3565b5061081360065f611568565b506003805460ff19169055565b60025434905f906103e8906108359084611709565b61083f9190611726565b6001546040519192506001600160a01b03169082156108fc029083905f818181858888f19350505050158015610877573d5f803e3d5ffd5b506040805160028082526060820183525f92602083019080368337019050509050735c7f8a570d578ed84e63fdfa7b1ee72deae1ae23815f815181106108bf576108bf611759565b60200260200101906001600160a01b031690816001600160a01b03168152505084816001815181106108f3576108f3611759565b6001600160a01b0392831660209182029290920101526008545f911663d06ca61f61091e858761176d565b846040518363ffffffff1660e01b815260040161093c929190611828565b5f60405180830381865afa158015610956573d5f803e3d5ffd5b505050506040513d5f823e601f3d908101601f1916820160405261097d9190810190611848565b6008549091506001600160a01b031663b6f9de9561099b858761176d565b8785336109aa42610e10611780565b6040518663ffffffff1660e01b81526004016109c99493929190611901565b5f604051808303818588803b1580156109e0575f80fd5b505af11580156109f2573d5f803e3d5ffd5b505050506001600160a01b0387167341bc026dabe978bc2fafea1850456511ca4b01bc1490508015610a26575060035460ff165b15610a4f57610a4f3382600181518110610a4257610a42611759565b6020026020010151611260565b505050505050565b610a5f6114ed565b6003805460ff19169055565b610a736114ed565b610a7c5f611519565b565b6006546060905f8167ffffffffffffffff811115610a9e57610a9e611745565b604051908082528060200260200182016040528015610ae257816020015b604080518082019091525f8082526020820152815260200190600190039081610abc5790505b5090505f5b82811015610ba457604051806040016040528060068381548110610b0d57610b0d611759565b905f5260205f20015f9054906101000a90046001600160a01b03166001600160a01b0316815260200160045f60068581548110610b4c57610b4c611759565b5f9182526020808320909101546001600160a01b0316835282019290925260400190205490528251839083908110610b8657610b86611759565b60200260200101819052508080610b9c90611810565b915050610ae7565b5092915050565b600d5460408051630d0e30db60e41b8152905134926001600160a01b03169163d0e30db09184916004808201925f9290919082900301818588803b158015610bf1575f80fd5b505af1158015610c03573d5f803e3d5ffd5b5050600d5460405163a9059cbb60e01b8152336004820152602481018690526001600160a01b03909116935063a9059cbb925060440190506020604051808303815f875af1158015610c57573d5f803e3d5ffd5b505050506040513d601f19601f8201168201806040525081019061077491906116d6565b6040516323b872dd60e01b8152336004820152306024820152604481018390526001600160a01b038516906323b872dd906064016020604051808303815f875af1158015610ccb573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190610cef91906116d6565b506001600160a01b0384167341bc026dabe978bc2fafea1850456511ca4b01bc148015610d1e575060035460ff165b15610d2d57610d2d3383611260565b5f6103e860025484610d3f9190611709565b610d499190611726565b9050610d558582611312565b5f6001600160a01b038616735c7f8a570d578ed84e63fdfa7b1ee72deae1ae231480610d9d57506001600160a01b038516735c7f8a570d578ed84e63fdfa7b1ee72deae1ae23145b610da8576003610dab565b60025b60ff1690505f60606001600160a01b038816735c7f8a570d578ed84e63fdfa7b1ee72deae1ae231480610dfa57506001600160a01b038716735c7f8a570d578ed84e63fdfa7b1ee72deae1ae23145b15610f245760025b604051908082528060200260200182016040528015610e2b578160200160208202803683370190505b50905087815f81518110610e4157610e41611759565b60200260200101906001600160a01b031690816001600160a01b0316815250508681600181518110610e7557610e75611759565b6001600160a01b0392831660209182029290920101526008545f911663d06ca61f610ea0878a61176d565b846040518363ffffffff1660e01b8152600401610ebe929190611828565b5f60405180830381865afa158015610ed8573d5f803e3d5ffd5b505050506040513d5f823e601f3d908101601f19168201604052610eff9190810190611848565b905080600181518110610f1457610f14611759565b6020026020010151925050611121565b6001600160a01b0388167341bc026dabe978bc2fafea1850456511ca4b01bc148015610f6c57506001600160a01b038716733b41b27e74dd366ce27cb389dc7877d4e1516d4d145b80610fba57506001600160a01b038816733b41b27e74dd366ce27cb389dc7877d4e1516d4d148015610fba57506001600160a01b0387167341bc026dabe978bc2fafea1850456511ca4b01bc145b15610fc6576002610e02565b60408051600380825260808201909252906020820160608036833701905050905087815f81518110610ffa57610ffa611759565b60200260200101906001600160a01b031690816001600160a01b031681525050735c7f8a570d578ed84e63fdfa7b1ee72deae1ae238160018151811061104257611042611759565b60200260200101906001600160a01b031690816001600160a01b031681525050868160028151811061107657611076611759565b6001600160a01b0392831660209182029290920101526008545f911663d06ca61f6110a1878a61176d565b846040518363ffffffff1660e01b81526004016110bf929190611828565b5f60405180830381865afa1580156110d9573d5f803e3d5ffd5b505050506040513d5f823e601f3d908101601f191682016040526111009190810190611848565b90508060028151811061111557611115611759565b60200260200101519250505b6008546001600160a01b0316635c11d79561113c868961176d565b87843361114b42610e10611780565b6040518663ffffffff1660e01b815260040161116b9594939291906117d5565b5f604051808303815f87803b158015611182575f80fd5b505af1158015611194573d5f803e3d5ffd5b505050506001600160a01b0387167341bc026dabe978bc2fafea1850456511ca4b01bc1480156111c6575060035460ff165b156111d5576111d53383611260565b5050505050505050565b6111e76114ed565b6003805460ff19166001179055565b60068181548110611205575f80fd5b5f918252602090912001546001600160a01b0316905081565b6112266114ed565b6001600160a01b03811661125457604051631e4fbdf760e01b81525f60048201526024015b60405180910390fd5b61125d81611519565b50565b6001600160a01b0382165f9081526005602052604090205460ff166112e2576006805460018082019092557ff652222313e28459528d920b65115c16c04f3efc82aaedc97be59f3f377c0d3f0180546001600160a01b0319166001600160a01b0385169081179091555f908152600560205260409020805460ff191690911790555b6001600160a01b0382165f9081526004602052604081208054839290611309908490611780565b90915550505050565b5f6001600160a01b038316735c7f8a570d578ed84e63fdfa7b1ee72deae1ae231461133e576002611341565b60015b60ff169050806001036113ca57600d5460015460405163a9059cbb60e01b81526001600160a01b0391821660048201526024810185905291169063a9059cbb906044016020604051808303815f875af11580156113a0573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906113c491906116d6565b50505050565b5f8167ffffffffffffffff8111156113e4576113e4611745565b60405190808252806020026020018201604052801561140d578160200160208202803683370190505b50905083815f8151811061142357611423611759565b60200260200101906001600160a01b031690816001600160a01b031681525050735c7f8a570d578ed84e63fdfa7b1ee72deae1ae238160018151811061146b5761146b611759565b6001600160a01b03928316602091820292909201015260085460015490821691635c11d7959186915f918691166114a442610e10611780565b6040518663ffffffff1660e01b81526004016114c49594939291906117d5565b5f604051808303815f87803b1580156114db575f80fd5b505af11580156111d5573d5f803e3d5ffd5b5f546001600160a01b03163314610a7c5760405163118cdaa760e01b815233600482015260240161124b565b5f80546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b5080545f8255905f5260205f209081019061125d91905b80821115611592575f815560010161157f565b5090565b80356001600160a01b03811681146115ac575f80fd5b919050565b5f805f606084860312156115c3575f80fd5b6115cc84611596565b95602085013595506040909401359392505050565b5f602082840312156115f1575f80fd5b5035919050565b5f8060408385031215611609575f80fd5b61161283611596565b946020939093013593505050565b5f60208284031215611630575f80fd5b61163982611596565b9392505050565b602080825282518282018190525f919060409081850190868401855b8281101561168a57815180516001600160a01b0316855286015186850152928401929085019060010161165c565b5091979650505050505050565b5f805f80608085870312156116aa575f80fd5b6116b385611596565b93506116c160208601611596565b93969395505050506040820135916060013590565b5f602082840312156116e6575f80fd5b81518015158114611639575f80fd5b634e487b7160e01b5f52601160045260245ffd5b8082028115828204841417611720576117206116f5565b92915050565b5f8261174057634e487b7160e01b5f52601260045260245ffd5b500490565b634e487b7160e01b5f52604160045260245ffd5b634e487b7160e01b5f52603260045260245ffd5b81810381811115611720576117206116f5565b80820180821115611720576117206116f5565b5f8151808452602080850194508084015f5b838110156117ca5781516001600160a01b0316875295820195908201906001016117a5565b509495945050505050565b85815284602082015260a060408201525f6117f360a0830186611793565b6001600160a01b0394909416606083015250608001529392505050565b5f60018201611821576118216116f5565b5060010190565b828152604060208201525f6118406040830184611793565b949350505050565b5f6020808385031215611859575f80fd5b825167ffffffffffffffff80821115611870575f80fd5b818501915085601f830112611883575f80fd5b81518181111561189557611895611745565b8060051b604051601f19603f830116810181811085821117156118ba576118ba611745565b6040529182528482019250838101850191888311156118d7575f80fd5b938501935b828510156118f5578451845293850193928501926118dc565b98975050505050505050565b848152608060208201525f6119196080830186611793565b6001600160a01b0394909416604083015250606001529291505056fea264697066735822122099f52f70626d33c76cd5e9c0c8515a1b004e3b9f039b27ed0abd8ecbd8c6ae8264736f6c63430008140033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x164 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0xA37B9E7F GT PUSH2 0xCD JUMPI DUP1 PUSH4 0xB3F00674 GT PUSH2 0x87 JUMPI DUP1 PUSH4 0xD3E66A9E GT PUSH2 0x62 JUMPI DUP1 PUSH4 0xD3E66A9E EQ PUSH2 0x41E JUMPI DUP1 PUSH4 0xD7B7D3F3 EQ PUSH2 0x432 JUMPI DUP1 PUSH4 0xEDF26D9B EQ PUSH2 0x459 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x478 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0xB3F00674 EQ PUSH2 0x3D8 JUMPI DUP1 PUSH4 0xD0E30DB0 EQ PUSH2 0x3F7 JUMPI DUP1 PUSH4 0xD16A4010 EQ PUSH2 0x3FF JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0xA37B9E7F EQ PUSH2 0x2EE JUMPI DUP1 PUSH4 0xA6769EF8 EQ PUSH2 0x315 JUMPI DUP1 PUSH4 0xAC65334F EQ PUSH2 0x340 JUMPI DUP1 PUSH4 0xAE38A070 EQ PUSH2 0x369 JUMPI DUP1 PUSH4 0xAFE43B94 EQ PUSH2 0x38A JUMPI DUP1 PUSH4 0xB0BEFE63 EQ PUSH2 0x3B1 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x5F0018CD GT PUSH2 0x11E JUMPI DUP1 PUSH4 0x5F0018CD EQ PUSH2 0x239 JUMPI DUP1 PUSH4 0x6504FBAD EQ PUSH2 0x24D JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x274 JUMPI DUP1 PUSH4 0x7C6F8FAE EQ PUSH2 0x288 JUMPI DUP1 PUSH4 0x7FD6F15C EQ PUSH2 0x2AF JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x2D2 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x16214120 EQ PUSH2 0x16F JUMPI DUP1 PUSH4 0x1D470CB1 EQ PUSH2 0x190 JUMPI DUP1 PUSH4 0x2E1A7D4D EQ PUSH2 0x1D4 JUMPI DUP1 PUSH4 0x3977D68D EQ PUSH2 0x1F3 JUMPI DUP1 PUSH4 0x39BDA01C EQ PUSH2 0x212 JUMPI DUP1 PUSH4 0x53AC861E EQ PUSH2 0x226 JUMPI PUSH0 DUP1 REVERT JUMPDEST CALLDATASIZE PUSH2 0x16B JUMPI STOP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x17A JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x18E PUSH2 0x189 CALLDATASIZE PUSH1 0x4 PUSH2 0x15B1 JUMP JUMPDEST PUSH2 0x497 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x19B JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x1B7 PUSH20 0x5C7F8A570D578ED84E63FDFA7B1EE72DEAE1AE23 DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1DF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x18E PUSH2 0x1EE CALLDATASIZE PUSH1 0x4 PUSH2 0x15E1 JUMP JUMPDEST PUSH2 0x678 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1FE JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x18E PUSH2 0x20D CALLDATASIZE PUSH1 0x4 PUSH2 0x15F8 JUMP JUMPDEST PUSH2 0x778 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x21D JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x18E PUSH2 0x7A6 JUMP JUMPDEST PUSH2 0x18E PUSH2 0x234 CALLDATASIZE PUSH1 0x4 PUSH2 0x15F8 JUMP JUMPDEST PUSH2 0x820 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x244 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x18E PUSH2 0xA57 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x258 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x1B7 PUSH20 0x66E428C3F67A68878562E79A0234C1F83C208770 DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x27F JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x18E PUSH2 0xA6B JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x293 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x1B7 PUSH20 0x3B44B2A187A7B3824131F8DB5A74194D0A42FC15 DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2BA JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x2C4 PUSH1 0x2 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x1CB JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2DD JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x1B7 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2F9 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x1B7 PUSH20 0xC21223249CA28397B4B6541DFFAECC539BFF0C59 DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x320 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x2C4 PUSH2 0x32F CALLDATASIZE PUSH1 0x4 PUSH2 0x1620 JUMP JUMPDEST PUSH1 0x4 PUSH1 0x20 MSTORE PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x34B JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x3 SLOAD PUSH2 0x359 SWAP1 PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x1CB JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x374 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x37D PUSH2 0xA7E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1CB SWAP2 SWAP1 PUSH2 0x1640 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x395 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x1B7 PUSH20 0x41BC026DABE978BC2FAFEA1850456511CA4B01BC DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3BC JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x1B7 PUSH20 0x3B41B27E74DD366CE27CB389DC7877D4E1516D4D DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3E3 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 SLOAD PUSH2 0x1B7 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH2 0x18E PUSH2 0xBAB JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x40A JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x18E PUSH2 0x419 CALLDATASIZE PUSH1 0x4 PUSH2 0x1697 JUMP JUMPDEST PUSH2 0xC7B JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x429 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x18E PUSH2 0x11DF JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x43D JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x1B7 PUSH20 0x145863EB42CF62847A6CA784E6416C1682B1B2AE DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x464 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x1B7 PUSH2 0x473 CALLDATASIZE PUSH1 0x4 PUSH2 0x15E1 JUMP JUMPDEST PUSH2 0x11F6 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x483 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x18E PUSH2 0x492 CALLDATASIZE PUSH1 0x4 PUSH2 0x1620 JUMP JUMPDEST PUSH2 0x121E JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH20 0x41BC026DABE978BC2FAFEA1850456511CA4B01BC EQ DUP1 ISZERO PUSH2 0x4C5 JUMPI POP PUSH1 0x3 SLOAD PUSH1 0xFF AND JUMPDEST ISZERO PUSH2 0x4D4 JUMPI PUSH2 0x4D4 CALLER DUP4 PUSH2 0x1260 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x23B872DD PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE ADDRESS PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND SWAP1 PUSH4 0x23B872DD SWAP1 PUSH1 0x64 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x524 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x548 SWAP2 SWAP1 PUSH2 0x16D6 JUMP JUMPDEST POP PUSH0 PUSH2 0x3E8 PUSH1 0x2 SLOAD DUP5 PUSH2 0x55B SWAP2 SWAP1 PUSH2 0x1709 JUMP JUMPDEST PUSH2 0x565 SWAP2 SWAP1 PUSH2 0x1726 JUMP JUMPDEST SWAP1 POP PUSH2 0x571 DUP5 DUP3 PUSH2 0x1312 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x2 DUP1 DUP3 MSTORE PUSH1 0x60 DUP3 ADD DUP4 MSTORE PUSH0 SWAP3 PUSH1 0x20 DUP4 ADD SWAP1 DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP POP SWAP1 POP DUP5 DUP2 PUSH0 DUP2 MLOAD DUP2 LT PUSH2 0x5A4 JUMPI PUSH2 0x5A4 PUSH2 0x1759 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE POP POP PUSH20 0x5C7F8A570D578ED84E63FDFA7B1EE72DEAE1AE23 DUP2 PUSH1 0x1 DUP2 MLOAD DUP2 LT PUSH2 0x5EC JUMPI PUSH2 0x5EC PUSH2 0x1759 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 DUP4 AND PUSH1 0x20 SWAP2 DUP3 MUL SWAP3 SWAP1 SWAP3 ADD ADD MSTORE PUSH1 0x8 SLOAD AND PUSH4 0x791AC947 PUSH2 0x615 DUP5 DUP8 PUSH2 0x176D JUMP JUMPDEST DUP6 DUP5 CALLER PUSH2 0x624 TIMESTAMP PUSH2 0xE10 PUSH2 0x1780 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP7 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x644 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x17D5 JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x65B JUMPI PUSH0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x66D JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0xD SLOAD PUSH1 0x40 MLOAD PUSH4 0x23B872DD PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE ADDRESS PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH4 0x23B872DD SWAP1 PUSH1 0x64 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x6CC JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x6F0 SWAP2 SWAP1 PUSH2 0x16D6 JUMP JUMPDEST POP PUSH1 0xD SLOAD PUSH1 0x40 MLOAD PUSH4 0x2E1A7D4D PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH4 0x2E1A7D4D SWAP1 PUSH1 0x24 ADD PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x734 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x746 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP PUSH1 0x40 MLOAD CALLER SWAP3 POP DUP4 ISZERO PUSH2 0x8FC MUL SWAP2 POP DUP4 SWAP1 PUSH0 DUP2 DUP2 DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0x774 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP JUMP JUMPDEST PUSH2 0x780 PUSH2 0x14ED JUMP JUMPDEST PUSH1 0x1 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP4 SWAP1 SWAP4 AND SWAP3 SWAP1 SWAP3 OR SWAP1 SWAP2 SSTORE PUSH1 0x2 SSTORE JUMP JUMPDEST PUSH2 0x7AE PUSH2 0x14ED JUMP JUMPDEST PUSH1 0x6 SLOAD PUSH0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x807 JUMPI PUSH1 0x4 PUSH0 PUSH1 0x6 DUP4 DUP2 SLOAD DUP2 LT PUSH2 0x7D1 JUMPI PUSH2 0x7D1 PUSH2 0x1759 JUMP JUMPDEST PUSH0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 KECCAK256 SWAP1 SWAP2 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 MSTORE DUP3 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x40 ADD DUP2 KECCAK256 SSTORE DUP1 PUSH2 0x7FF DUP2 PUSH2 0x1810 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x7B3 JUMP JUMPDEST POP PUSH2 0x813 PUSH1 0x6 PUSH0 PUSH2 0x1568 JUMP JUMPDEST POP PUSH1 0x3 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x2 SLOAD CALLVALUE SWAP1 PUSH0 SWAP1 PUSH2 0x3E8 SWAP1 PUSH2 0x835 SWAP1 DUP5 PUSH2 0x1709 JUMP JUMPDEST PUSH2 0x83F SWAP2 SWAP1 PUSH2 0x1726 JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x40 MLOAD SWAP2 SWAP3 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 DUP3 ISZERO PUSH2 0x8FC MUL SWAP1 DUP4 SWAP1 PUSH0 DUP2 DUP2 DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0x877 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x2 DUP1 DUP3 MSTORE PUSH1 0x60 DUP3 ADD DUP4 MSTORE PUSH0 SWAP3 PUSH1 0x20 DUP4 ADD SWAP1 DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP POP SWAP1 POP PUSH20 0x5C7F8A570D578ED84E63FDFA7B1EE72DEAE1AE23 DUP2 PUSH0 DUP2 MLOAD DUP2 LT PUSH2 0x8BF JUMPI PUSH2 0x8BF PUSH2 0x1759 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE POP POP DUP5 DUP2 PUSH1 0x1 DUP2 MLOAD DUP2 LT PUSH2 0x8F3 JUMPI PUSH2 0x8F3 PUSH2 0x1759 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 DUP4 AND PUSH1 0x20 SWAP2 DUP3 MUL SWAP3 SWAP1 SWAP3 ADD ADD MSTORE PUSH1 0x8 SLOAD PUSH0 SWAP2 AND PUSH4 0xD06CA61F PUSH2 0x91E DUP6 DUP8 PUSH2 0x176D JUMP JUMPDEST DUP5 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x93C SWAP3 SWAP2 SWAP1 PUSH2 0x1828 JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x956 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH0 DUP3 RETURNDATACOPY PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH1 0x1F NOT AND DUP3 ADD PUSH1 0x40 MSTORE PUSH2 0x97D SWAP2 SWAP1 DUP2 ADD SWAP1 PUSH2 0x1848 JUMP JUMPDEST PUSH1 0x8 SLOAD SWAP1 SWAP2 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xB6F9DE95 PUSH2 0x99B DUP6 DUP8 PUSH2 0x176D JUMP JUMPDEST DUP8 DUP6 CALLER PUSH2 0x9AA TIMESTAMP PUSH2 0xE10 PUSH2 0x1780 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP7 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x9C9 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1901 JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x9E0 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x9F2 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND PUSH20 0x41BC026DABE978BC2FAFEA1850456511CA4B01BC EQ SWAP1 POP DUP1 ISZERO PUSH2 0xA26 JUMPI POP PUSH1 0x3 SLOAD PUSH1 0xFF AND JUMPDEST ISZERO PUSH2 0xA4F JUMPI PUSH2 0xA4F CALLER DUP3 PUSH1 0x1 DUP2 MLOAD DUP2 LT PUSH2 0xA42 JUMPI PUSH2 0xA42 PUSH2 0x1759 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH2 0x1260 JUMP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0xA5F PUSH2 0x14ED JUMP JUMPDEST PUSH1 0x3 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE JUMP JUMPDEST PUSH2 0xA73 PUSH2 0x14ED JUMP JUMPDEST PUSH2 0xA7C PUSH0 PUSH2 0x1519 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x6 SLOAD PUSH1 0x60 SWAP1 PUSH0 DUP2 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xA9E JUMPI PUSH2 0xA9E PUSH2 0x1745 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0xAE2 JUMPI DUP2 PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD SWAP1 SWAP2 MSTORE PUSH0 DUP1 DUP3 MSTORE PUSH1 0x20 DUP3 ADD MSTORE DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 SWAP1 SUB SWAP1 DUP2 PUSH2 0xABC JUMPI SWAP1 POP JUMPDEST POP SWAP1 POP PUSH0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0xBA4 JUMPI PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x6 DUP4 DUP2 SLOAD DUP2 LT PUSH2 0xB0D JUMPI PUSH2 0xB0D PUSH2 0x1759 JUMP JUMPDEST SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x4 PUSH0 PUSH1 0x6 DUP6 DUP2 SLOAD DUP2 LT PUSH2 0xB4C JUMPI PUSH2 0xB4C PUSH2 0x1759 JUMP JUMPDEST PUSH0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 KECCAK256 SWAP1 SWAP2 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 MSTORE DUP3 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x40 ADD SWAP1 KECCAK256 SLOAD SWAP1 MSTORE DUP3 MLOAD DUP4 SWAP1 DUP4 SWAP1 DUP2 LT PUSH2 0xB86 JUMPI PUSH2 0xB86 PUSH2 0x1759 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP2 SWAP1 MSTORE POP DUP1 DUP1 PUSH2 0xB9C SWAP1 PUSH2 0x1810 JUMP JUMPDEST SWAP2 POP POP PUSH2 0xAE7 JUMP JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0xD SLOAD PUSH1 0x40 DUP1 MLOAD PUSH4 0xD0E30DB PUSH1 0xE4 SHL DUP2 MSTORE SWAP1 MLOAD CALLVALUE SWAP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP2 PUSH4 0xD0E30DB0 SWAP2 DUP5 SWAP2 PUSH1 0x4 DUP1 DUP3 ADD SWAP3 PUSH0 SWAP3 SWAP1 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP6 DUP9 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xBF1 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0xC03 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP PUSH1 0xD SLOAD PUSH1 0x40 MLOAD PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP7 SWAP1 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP4 POP PUSH4 0xA9059CBB SWAP3 POP PUSH1 0x44 ADD SWAP1 POP PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0xC57 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x774 SWAP2 SWAP1 PUSH2 0x16D6 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x23B872DD PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE ADDRESS PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND SWAP1 PUSH4 0x23B872DD SWAP1 PUSH1 0x64 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0xCCB JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xCEF SWAP2 SWAP1 PUSH2 0x16D6 JUMP JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH20 0x41BC026DABE978BC2FAFEA1850456511CA4B01BC EQ DUP1 ISZERO PUSH2 0xD1E JUMPI POP PUSH1 0x3 SLOAD PUSH1 0xFF AND JUMPDEST ISZERO PUSH2 0xD2D JUMPI PUSH2 0xD2D CALLER DUP4 PUSH2 0x1260 JUMP JUMPDEST PUSH0 PUSH2 0x3E8 PUSH1 0x2 SLOAD DUP5 PUSH2 0xD3F SWAP2 SWAP1 PUSH2 0x1709 JUMP JUMPDEST PUSH2 0xD49 SWAP2 SWAP1 PUSH2 0x1726 JUMP JUMPDEST SWAP1 POP PUSH2 0xD55 DUP6 DUP3 PUSH2 0x1312 JUMP JUMPDEST PUSH0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND PUSH20 0x5C7F8A570D578ED84E63FDFA7B1EE72DEAE1AE23 EQ DUP1 PUSH2 0xD9D JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH20 0x5C7F8A570D578ED84E63FDFA7B1EE72DEAE1AE23 EQ JUMPDEST PUSH2 0xDA8 JUMPI PUSH1 0x3 PUSH2 0xDAB JUMP JUMPDEST PUSH1 0x2 JUMPDEST PUSH1 0xFF AND SWAP1 POP PUSH0 PUSH1 0x60 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP9 AND PUSH20 0x5C7F8A570D578ED84E63FDFA7B1EE72DEAE1AE23 EQ DUP1 PUSH2 0xDFA JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND PUSH20 0x5C7F8A570D578ED84E63FDFA7B1EE72DEAE1AE23 EQ JUMPDEST ISZERO PUSH2 0xF24 JUMPI PUSH1 0x2 JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0xE2B JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP SWAP1 POP DUP8 DUP2 PUSH0 DUP2 MLOAD DUP2 LT PUSH2 0xE41 JUMPI PUSH2 0xE41 PUSH2 0x1759 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE POP POP DUP7 DUP2 PUSH1 0x1 DUP2 MLOAD DUP2 LT PUSH2 0xE75 JUMPI PUSH2 0xE75 PUSH2 0x1759 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 DUP4 AND PUSH1 0x20 SWAP2 DUP3 MUL SWAP3 SWAP1 SWAP3 ADD ADD MSTORE PUSH1 0x8 SLOAD PUSH0 SWAP2 AND PUSH4 0xD06CA61F PUSH2 0xEA0 DUP8 DUP11 PUSH2 0x176D JUMP JUMPDEST DUP5 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xEBE SWAP3 SWAP2 SWAP1 PUSH2 0x1828 JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xED8 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH0 DUP3 RETURNDATACOPY PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH1 0x1F NOT AND DUP3 ADD PUSH1 0x40 MSTORE PUSH2 0xEFF SWAP2 SWAP1 DUP2 ADD SWAP1 PUSH2 0x1848 JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0x1 DUP2 MLOAD DUP2 LT PUSH2 0xF14 JUMPI PUSH2 0xF14 PUSH2 0x1759 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD SWAP3 POP POP PUSH2 0x1121 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP9 AND PUSH20 0x41BC026DABE978BC2FAFEA1850456511CA4B01BC EQ DUP1 ISZERO PUSH2 0xF6C JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND PUSH20 0x3B41B27E74DD366CE27CB389DC7877D4E1516D4D EQ JUMPDEST DUP1 PUSH2 0xFBA JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP9 AND PUSH20 0x3B41B27E74DD366CE27CB389DC7877D4E1516D4D EQ DUP1 ISZERO PUSH2 0xFBA JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND PUSH20 0x41BC026DABE978BC2FAFEA1850456511CA4B01BC EQ JUMPDEST ISZERO PUSH2 0xFC6 JUMPI PUSH1 0x2 PUSH2 0xE02 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x3 DUP1 DUP3 MSTORE PUSH1 0x80 DUP3 ADD SWAP1 SWAP3 MSTORE SWAP1 PUSH1 0x20 DUP3 ADD PUSH1 0x60 DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP POP SWAP1 POP DUP8 DUP2 PUSH0 DUP2 MLOAD DUP2 LT PUSH2 0xFFA JUMPI PUSH2 0xFFA PUSH2 0x1759 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE POP POP PUSH20 0x5C7F8A570D578ED84E63FDFA7B1EE72DEAE1AE23 DUP2 PUSH1 0x1 DUP2 MLOAD DUP2 LT PUSH2 0x1042 JUMPI PUSH2 0x1042 PUSH2 0x1759 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE POP POP DUP7 DUP2 PUSH1 0x2 DUP2 MLOAD DUP2 LT PUSH2 0x1076 JUMPI PUSH2 0x1076 PUSH2 0x1759 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 DUP4 AND PUSH1 0x20 SWAP2 DUP3 MUL SWAP3 SWAP1 SWAP3 ADD ADD MSTORE PUSH1 0x8 SLOAD PUSH0 SWAP2 AND PUSH4 0xD06CA61F PUSH2 0x10A1 DUP8 DUP11 PUSH2 0x176D JUMP JUMPDEST DUP5 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x10BF SWAP3 SWAP2 SWAP1 PUSH2 0x1828 JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x10D9 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH0 DUP3 RETURNDATACOPY PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH1 0x1F NOT AND DUP3 ADD PUSH1 0x40 MSTORE PUSH2 0x1100 SWAP2 SWAP1 DUP2 ADD SWAP1 PUSH2 0x1848 JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0x2 DUP2 MLOAD DUP2 LT PUSH2 0x1115 JUMPI PUSH2 0x1115 PUSH2 0x1759 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD SWAP3 POP POP JUMPDEST PUSH1 0x8 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x5C11D795 PUSH2 0x113C DUP7 DUP10 PUSH2 0x176D JUMP JUMPDEST DUP8 DUP5 CALLER PUSH2 0x114B TIMESTAMP PUSH2 0xE10 PUSH2 0x1780 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP7 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x116B SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x17D5 JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1182 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x1194 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND PUSH20 0x41BC026DABE978BC2FAFEA1850456511CA4B01BC EQ DUP1 ISZERO PUSH2 0x11C6 JUMPI POP PUSH1 0x3 SLOAD PUSH1 0xFF AND JUMPDEST ISZERO PUSH2 0x11D5 JUMPI PUSH2 0x11D5 CALLER DUP4 PUSH2 0x1260 JUMP JUMPDEST POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0x11E7 PUSH2 0x14ED JUMP JUMPDEST PUSH1 0x3 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x6 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x1205 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 POP DUP2 JUMP JUMPDEST PUSH2 0x1226 PUSH2 0x14ED JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x1254 JUMPI PUSH1 0x40 MLOAD PUSH4 0x1E4FBDF7 PUSH1 0xE0 SHL DUP2 MSTORE PUSH0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x125D DUP2 PUSH2 0x1519 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND PUSH2 0x12E2 JUMPI PUSH1 0x6 DUP1 SLOAD PUSH1 0x1 DUP1 DUP3 ADD SWAP1 SWAP3 SSTORE PUSH32 0xF652222313E28459528D920B65115C16C04F3EFC82AAEDC97BE59F3F377C0D3F ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SWAP2 OR SWAP1 SSTORE JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD DUP4 SWAP3 SWAP1 PUSH2 0x1309 SWAP1 DUP5 SWAP1 PUSH2 0x1780 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH20 0x5C7F8A570D578ED84E63FDFA7B1EE72DEAE1AE23 EQ PUSH2 0x133E JUMPI PUSH1 0x2 PUSH2 0x1341 JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH1 0xFF AND SWAP1 POP DUP1 PUSH1 0x1 SUB PUSH2 0x13CA JUMPI PUSH1 0xD SLOAD PUSH1 0x1 SLOAD PUSH1 0x40 MLOAD PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP6 SWAP1 MSTORE SWAP2 AND SWAP1 PUSH4 0xA9059CBB SWAP1 PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x13A0 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x13C4 SWAP2 SWAP1 PUSH2 0x16D6 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 DUP2 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x13E4 JUMPI PUSH2 0x13E4 PUSH2 0x1745 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x140D JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP SWAP1 POP DUP4 DUP2 PUSH0 DUP2 MLOAD DUP2 LT PUSH2 0x1423 JUMPI PUSH2 0x1423 PUSH2 0x1759 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE POP POP PUSH20 0x5C7F8A570D578ED84E63FDFA7B1EE72DEAE1AE23 DUP2 PUSH1 0x1 DUP2 MLOAD DUP2 LT PUSH2 0x146B JUMPI PUSH2 0x146B PUSH2 0x1759 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 DUP4 AND PUSH1 0x20 SWAP2 DUP3 MUL SWAP3 SWAP1 SWAP3 ADD ADD MSTORE PUSH1 0x8 SLOAD PUSH1 0x1 SLOAD SWAP1 DUP3 AND SWAP2 PUSH4 0x5C11D795 SWAP2 DUP7 SWAP2 PUSH0 SWAP2 DUP7 SWAP2 AND PUSH2 0x14A4 TIMESTAMP PUSH2 0xE10 PUSH2 0x1780 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP7 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x14C4 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x17D5 JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x14DB JUMPI PUSH0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x11D5 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST PUSH0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0xA7C JUMPI PUSH1 0x40 MLOAD PUSH4 0x118CDAA7 PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x124B JUMP JUMPDEST PUSH0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR DUP5 SSTORE PUSH1 0x40 MLOAD SWAP2 SWAP1 SWAP3 AND SWAP3 DUP4 SWAP2 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP2 SWAP1 LOG3 POP POP JUMP JUMPDEST POP DUP1 SLOAD PUSH0 DUP3 SSTORE SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 DUP2 ADD SWAP1 PUSH2 0x125D SWAP2 SWAP1 JUMPDEST DUP1 DUP3 GT ISZERO PUSH2 0x1592 JUMPI PUSH0 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0x157F JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x15AC JUMPI PUSH0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x15C3 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x15CC DUP5 PUSH2 0x1596 JUMP JUMPDEST SWAP6 PUSH1 0x20 DUP6 ADD CALLDATALOAD SWAP6 POP PUSH1 0x40 SWAP1 SWAP5 ADD CALLDATALOAD SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x15F1 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1609 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x1612 DUP4 PUSH2 0x1596 JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1630 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x1639 DUP3 PUSH2 0x1596 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE DUP3 MLOAD DUP3 DUP3 ADD DUP2 SWAP1 MSTORE PUSH0 SWAP2 SWAP1 PUSH1 0x40 SWAP1 DUP2 DUP6 ADD SWAP1 DUP7 DUP5 ADD DUP6 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x168A JUMPI DUP2 MLOAD DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP6 MSTORE DUP7 ADD MLOAD DUP7 DUP6 ADD MSTORE SWAP3 DUP5 ADD SWAP3 SWAP1 DUP6 ADD SWAP1 PUSH1 0x1 ADD PUSH2 0x165C JUMP JUMPDEST POP SWAP2 SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x16AA JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x16B3 DUP6 PUSH2 0x1596 JUMP JUMPDEST SWAP4 POP PUSH2 0x16C1 PUSH1 0x20 DUP7 ADD PUSH2 0x1596 JUMP JUMPDEST SWAP4 SWAP7 SWAP4 SWAP6 POP POP POP POP PUSH1 0x40 DUP3 ADD CALLDATALOAD SWAP2 PUSH1 0x60 ADD CALLDATALOAD SWAP1 JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x16E6 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP2 MLOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0x1639 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST DUP1 DUP3 MUL DUP2 ISZERO DUP3 DUP3 DIV DUP5 EQ OR PUSH2 0x1720 JUMPI PUSH2 0x1720 PUSH2 0x16F5 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP3 PUSH2 0x1740 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST POP DIV SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST DUP2 DUP2 SUB DUP2 DUP2 GT ISZERO PUSH2 0x1720 JUMPI PUSH2 0x1720 PUSH2 0x16F5 JUMP JUMPDEST DUP1 DUP3 ADD DUP1 DUP3 GT ISZERO PUSH2 0x1720 JUMPI PUSH2 0x1720 PUSH2 0x16F5 JUMP JUMPDEST PUSH0 DUP2 MLOAD DUP1 DUP5 MSTORE PUSH1 0x20 DUP1 DUP6 ADD SWAP5 POP DUP1 DUP5 ADD PUSH0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x17CA JUMPI DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP8 MSTORE SWAP6 DUP3 ADD SWAP6 SWAP1 DUP3 ADD SWAP1 PUSH1 0x1 ADD PUSH2 0x17A5 JUMP JUMPDEST POP SWAP5 SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST DUP6 DUP2 MSTORE DUP5 PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0xA0 PUSH1 0x40 DUP3 ADD MSTORE PUSH0 PUSH2 0x17F3 PUSH1 0xA0 DUP4 ADD DUP7 PUSH2 0x1793 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP5 SWAP1 SWAP5 AND PUSH1 0x60 DUP4 ADD MSTORE POP PUSH1 0x80 ADD MSTORE SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x1 DUP3 ADD PUSH2 0x1821 JUMPI PUSH2 0x1821 PUSH2 0x16F5 JUMP JUMPDEST POP PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST DUP3 DUP2 MSTORE PUSH1 0x40 PUSH1 0x20 DUP3 ADD MSTORE PUSH0 PUSH2 0x1840 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x1793 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP1 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1859 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP3 MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x1870 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP2 DUP6 ADD SWAP2 POP DUP6 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x1883 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP2 MLOAD DUP2 DUP2 GT ISZERO PUSH2 0x1895 JUMPI PUSH2 0x1895 PUSH2 0x1745 JUMP JUMPDEST DUP1 PUSH1 0x5 SHL PUSH1 0x40 MLOAD PUSH1 0x1F NOT PUSH1 0x3F DUP4 ADD AND DUP2 ADD DUP2 DUP2 LT DUP6 DUP3 GT OR ISZERO PUSH2 0x18BA JUMPI PUSH2 0x18BA PUSH2 0x1745 JUMP JUMPDEST PUSH1 0x40 MSTORE SWAP2 DUP3 MSTORE DUP5 DUP3 ADD SWAP3 POP DUP4 DUP2 ADD DUP6 ADD SWAP2 DUP9 DUP4 GT ISZERO PUSH2 0x18D7 JUMPI PUSH0 DUP1 REVERT JUMPDEST SWAP4 DUP6 ADD SWAP4 JUMPDEST DUP3 DUP6 LT ISZERO PUSH2 0x18F5 JUMPI DUP5 MLOAD DUP5 MSTORE SWAP4 DUP6 ADD SWAP4 SWAP3 DUP6 ADD SWAP3 PUSH2 0x18DC JUMP JUMPDEST SWAP9 SWAP8 POP POP POP POP POP POP POP POP JUMP JUMPDEST DUP5 DUP2 MSTORE PUSH1 0x80 PUSH1 0x20 DUP3 ADD MSTORE PUSH0 PUSH2 0x1919 PUSH1 0x80 DUP4 ADD DUP7 PUSH2 0x1793 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP5 SWAP1 SWAP5 AND PUSH1 0x40 DUP4 ADD MSTORE POP PUSH1 0x60 ADD MSTORE SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP10 CREATE2 0x2F PUSH17 0x626D33C76CD5E9C0C8515A1B004E3B9F03 SWAP12 0x27 0xED EXP 0xBD DUP15 0xCB 0xD8 0xC6 0xAE DUP3 PUSH5 0x736F6C6343 STOP ADDMOD EQ STOP CALLER ",
							"sourceMap": "2107:7987:12:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8894:742;;;;;;;;;;-1:-1:-1;8894:742:12;;;;;:::i;:::-;;:::i;:::-;;2304:73;;;;;;;;;;;;2335:42;2304:73;;;;;-1:-1:-1;;;;;683:32:13;;;665:51;;653:2;638:18;2304:73:12;;;;;;;;9851:203;;;;;;;;;;-1:-1:-1;9851:203:12;;;;;:::i;:::-;;:::i;4731:160::-;;;;;;;;;;-1:-1:-1;4731:160:12;;;;;:::i;:::-;;:::i;4222:250::-;;;;;;;;;;;;;:::i;8047:795::-;;;;;;:::i;:::-;;:::i;4480:90::-;;;;;;;;;;;;;:::i;2223:74::-;;;;;;;;;;;;2255:42;2223:74;;2293:101:0;;;;;;;;;;;;;:::i;2637:88:12:-;;;;;;;;;;;;2683:42;2637:88;;2765:25;;;;;;;;;;;;;;;;;;;1317::13;;;1305:2;1290:18;2765:25:12;1171:177:13;1638:85:0;;;;;;;;;;-1:-1:-1;1684:7:0;1710:6;-1:-1:-1;;;;;1710:6:0;1638:85;;2142:74:12;;;;;;;;;;;;2174:42;2142:74;;2843:45;;;;;;;;;;-1:-1:-1;2843:45:12;;;;;:::i;:::-;;;;;;;;;;;;;;2797:39;;;;;;;;;;-1:-1:-1;2797:39:12;;;;;;;;;;;1709:14:13;;1702:22;1684:41;;1672:2;1657:18;2797:39:12;1544:187:13;3809:365:12;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;2384:72::-;;;;;;;;;;;;2414:42;2384:72;;2463:73;;;;;;;;;;;;2494:42;2463:73;;2732:26;;;;;;;;;;-1:-1:-1;2732:26:12;;;;-1:-1:-1;;;;;2732:26:12;;;9672:171;;;:::i;5854:2145::-;;;;;;;;;;-1:-1:-1;5854:2145:12;;;;;:::i;:::-;;:::i;4576:90::-;;;;;;;;;;;;;:::i;2543:87::-;;;;;;;;;;;;2588:42;2543:87;;2941:26;;;;;;;;;;-1:-1:-1;2941:26:12;;;;;:::i;:::-;;:::i;2543:215:0:-;;;;;;;;;;-1:-1:-1;2543:215:0;;;;;:::i;:::-;;:::i;8894:742:12:-;-1:-1:-1;;;;;9035:16:12;;2414:42;9035:16;:39;;;;-1:-1:-1;9055:19:12;;;;9035:39;9032:75;;;9076:31;9086:10;9098:8;9076:9;:31::i;:::-;9118:67;;-1:-1:-1;;;9118:67:12;;9149:10;9118:67;;;3195:34:13;9169:4:12;3245:18:13;;;3238:43;3297:18;;;3290:34;;;-1:-1:-1;;;;;9118:30:12;;;;;3130:18:13;;9118:67:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;9206:17;9250:4;9237:10;;9226:8;:21;;;;:::i;:::-;:28;;;;:::i;:::-;9206:48;;9267:28;9274:9;9285;9267:6;:28::i;:::-;9332:16;;;9346:1;9332:16;;;;;;;;9308:21;;9332:16;;;;;;;;;;-1:-1:-1;9332:16:12;9308:40;;9369:9;9359:4;9364:1;9359:7;;;;;;;;:::i;:::-;;;;;;:19;-1:-1:-1;;;;;9359:19:12;;;-1:-1:-1;;;;;9359:19:12;;;;;2335:42;9389:4;9394:1;9389:7;;;;;;;;:::i;:::-;-1:-1:-1;;;;;9389:14:12;;;:7;;;;;;;;;:14;9414:6;;;:57;9486:20;9497:9;9486:8;:20;:::i;:::-;9521:12;9548:4;9567:10;9592:25;:15;9610:7;9592:25;:::i;:::-;9414:214;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;9019:617;;8894:742;;;:::o;9851:203::-;9917:4;;:49;;-1:-1:-1;;;9917:49:12;;9935:10;9917:49;;;3195:34:13;9955:4:12;3245:18:13;;;3238:43;3297:18;;;3290:34;;;-1:-1:-1;;;;;9917:4:12;;;;:17;;3130:18:13;;9917:49:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;9977:4:12;;:18;;-1:-1:-1;;;9977:18:12;;;;;1317:25:13;;;-1:-1:-1;;;;;9977:4:12;;;;:13;;1290:18:13;;9977::12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;10013:33:12;;10021:10;;-1:-1:-1;10013:33:12;;;;;-1:-1:-1;10042:3:12;;10013:33;;;;10042:3;10021:10;10013:33;;;;;;;;;;;;;;;;;;;;;9851:203;:::o;4731:160::-;1531:13:0;:11;:13::i;:::-;4822:11:12::1;:26:::0;;-1:-1:-1;;;;;;4822:26:12::1;-1:-1:-1::0;;;;;4822:26:12;;;::::1;::::0;;;::::1;::::0;;;4859:10:::1;:24:::0;4731:160::o;4222:250::-;1531:13:0;:11;:13::i;:::-;4284:9:12::1;:16:::0;4272:9:::1;4311:89;4334:1;4330;:5;4311:89;;;4364:10;:24;4375:9;4385:1;4375:12;;;;;;;;:::i;:::-;;::::0;;;::::1;::::0;;;;;::::1;::::0;-1:-1:-1;;;;;4375:12:12::1;4364:24:::0;;;::::1;::::0;;;;;;;;4357:31;4337:3;::::1;::::0;::::1;:::i;:::-;;;;4311:89;;;-1:-1:-1::0;4410:16:12::1;4417:9;;4410:16;:::i;:::-;-1:-1:-1::0;4437:19:12::1;:27:::0;;-1:-1:-1;;4437:27:12::1;::::0;;4222:250::o;8047:795::-;8233:10;;8182:9;;8163:16;;8246:4;;8222:21;;8182:9;8222:21;:::i;:::-;:28;;;;:::i;:::-;8269:11;;8261:40;;8202:48;;-1:-1:-1;;;;;;8269:11:12;;8261:40;;;;;8202:48;;8269:11;8261:40;8269:11;8261:40;8202:48;8269:11;8261:40;;;;;;;;;;;;;;;;;;;;-1:-1:-1;8338:16:12;;;8352:1;8338:16;;;;;;;;8314:21;;8338:16;;;;;;;;;;-1:-1:-1;8338:16:12;8314:40;;2335:42;8365:4;8370:1;8365:7;;;;;;;;:::i;:::-;;;;;;:14;-1:-1:-1;;;;;8365:14:12;;;-1:-1:-1;;;;;8365:14:12;;;;;8400:7;8390:4;8395:1;8390:7;;;;;;;;:::i;:::-;-1:-1:-1;;;;;8390:17:12;;;:7;;;;;;;;;:17;8450:6;;8420:27;;8450:6;:20;8471;8482:9;8471:8;:20;:::i;:::-;8493:4;8450:48;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;8450:48:12;;;;;;;;;;;;:::i;:::-;8509:6;;8420:78;;-1:-1:-1;;;;;;8509:6:12;:57;8574:20;8585:9;8574:8;:20;:::i;:::-;8610:12;8637:4;8656:10;8681:25;:15;8699:7;8681:25;:::i;:::-;8509:208;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;8733:14:12;;2414:42;8733:14;;-1:-1:-1;8733:37:12;;;;-1:-1:-1;8751:19:12;;;;8733:37;8730:105;;;8787:36;8797:10;8809;8820:1;8809:13;;;;;;;;:::i;:::-;;;;;;;8787:9;:36::i;:::-;8152:690;;;;8047:795;;:::o;4480:90::-;1531:13:0;:11;:13::i;:::-;4535:19:12::1;:27:::0;;-1:-1:-1;;4535:27:12::1;::::0;;4480:90::o;2293:101:0:-;1531:13;:11;:13::i;:::-;2357:30:::1;2384:1;2357:18;:30::i;:::-;2293:101::o:0;3809:365:12:-;3898:9;:16;3858:15;;3886:9;3898:16;3951:15;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;;;;;;;3951:15:12;;;;;;;;;;;;;;;;3925:41;;4027:9;4022:118;4046:1;4042;:5;4022:118;;;4082:46;;;;;;;;4089:9;4099:1;4089:12;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;-1:-1:-1;;;;;4089:12:12;-1:-1:-1;;;;;4082:46:12;;;;;4103:10;:24;4114:9;4124:1;4114:12;;;;;;;;:::i;:::-;;;;;;;;;;;;;-1:-1:-1;;;;;4114:12:12;4103:24;;;;;;;;;;;;;4082:46;;4069:10;;:7;;4077:1;;4069:10;;;;;;:::i;:::-;;;;;;:59;;;;4049:3;;;;;:::i;:::-;;;;4022:118;;;-1:-1:-1;4159:7:12;3809:365;-1:-1:-1;;3809:365:12:o;9672:171::-;9757:4;;:30;;;-1:-1:-1;;;9757:30:12;;;;9737:9;;-1:-1:-1;;;;;9757:4:12;;:12;;9737:9;;9757:30;;;;;9718:16;;9757:30;;;;;;;;9737:9;9757:4;:30;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;9798:4:12;;:37;;-1:-1:-1;;;9798:37:12;;9813:10;9798:37;;;7984:51:13;8051:18;;;8044:34;;;-1:-1:-1;;;;;9798:4:12;;;;-1:-1:-1;9798:13:12;;-1:-1:-1;7957:18:13;;;-1:-1:-1;9798:37:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;5854:2145::-;6018:67;;-1:-1:-1;;;6018:67:12;;6049:10;6018:67;;;3195:34:13;6069:4:12;3245:18:13;;;3238:43;3297:18;;;3290:34;;;-1:-1:-1;;;;;6018:30:12;;;;;3130:18:13;;6018:67:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;;6117:16:12;;2414:42;6117:16;:39;;;;-1:-1:-1;6137:19:12;;;;6117:39;6098:129;;;6184:31;6194:10;6206:8;6184:9;:31::i;:::-;6239:17;6285:4;6271:10;;6260:8;:21;;;;:::i;:::-;6259:30;;;;:::i;:::-;6239:50;;6300:28;6307:9;6318;6300:6;:28::i;:::-;6341:15;-1:-1:-1;;;;;6378:17:12;;2335:42;6378:17;;:36;;-1:-1:-1;;;;;;6399:15:12;;2335:42;6399:15;6378:36;6377:46;;6422:1;6377:46;;;6418:1;6377:46;6367:56;;;-1:-1:-1;6436:17:12;6464:21;-1:-1:-1;;;;;6500:17:12;;2335:42;6500:17;;:36;;-1:-1:-1;;;;;;6521:15:12;;2335:42;6521:15;6500:36;6496:1098;;;6574:1;6560:16;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;6560:16:12;;6553:23;;6601:9;6591:4;6596:1;6591:7;;;;;;;;:::i;:::-;;;;;;:19;-1:-1:-1;;;;;6591:19:12;;;-1:-1:-1;;;;;6591:19:12;;;;;6635:7;6625:4;6630:1;6625:7;;;;;;;;:::i;:::-;-1:-1:-1;;;;;6625:17:12;;;:7;;;;;;;;;:17;6687:6;;6657:27;;6687:6;:20;6726;6737:9;6726:8;:20;:::i;:::-;6765:4;6687:97;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;6687:97:12;;;;;;;;;;;;:::i;:::-;6657:127;;6811:10;6822:1;6811:13;;;;;;;;:::i;:::-;;;;;;;6799:25;;6538:298;6496:1098;;;-1:-1:-1;;;;;6861:16:12;;2414:42;6861:16;:35;;;;-1:-1:-1;;;;;;6881:15:12;;2494:42;6881:15;6861:35;6860:91;;;-1:-1:-1;;;;;;6915:17:12;;2494:42;6915:17;:35;;;;-1:-1:-1;;;;;;6936:14:12;;2414:42;6936:14;6915:35;6842:752;;;6999:1;6985:16;;6842:752;7289:16;;;7303:1;7289:16;;;;;;;;;;;;;;;;;;;;-1:-1:-1;7289:16:12;7282:23;;7330:9;7320:4;7325:1;7320:7;;;;;;;;:::i;:::-;;;;;;:19;-1:-1:-1;;;;;7320:19:12;;;-1:-1:-1;;;;;7320:19:12;;;;;2335:42;7354:4;7359:1;7354:7;;;;;;;;:::i;:::-;;;;;;:14;-1:-1:-1;;;;;7354:14:12;;;-1:-1:-1;;;;;7354:14:12;;;;;7393:7;7383:4;7388:1;7383:7;;;;;;;;:::i;:::-;-1:-1:-1;;;;;7383:17:12;;;:7;;;;;;;;;:17;7445:6;;7415:27;;7445:6;:20;7484;7495:9;7484:8;:20;:::i;:::-;7523:4;7445:97;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;7445:97:12;;;;;;;;;;;;:::i;:::-;7415:127;;7569:10;7580:1;7569:13;;;;;;;;:::i;:::-;;;;;;;7557:25;;7267:327;6842:752;7610:6;;-1:-1:-1;;;;;7610:6:12;:60;7689:20;7700:9;7689:8;:20;:::i;:::-;7728:12;7759:4;7782:10;7811:25;:15;7829:7;7811:25;:::i;:::-;7610:241;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;7883:14:12;;2414:42;7883:14;:37;;;;-1:-1:-1;7901:19:12;;;;7883:37;7864:128;;;7948:32;7958:10;7970:9;7948;:32::i;:::-;6007:1992;;;;5854:2145;;;;:::o;4576:90::-;1531:13:0;:11;:13::i;:::-;4632:19:12::1;:26:::0;;-1:-1:-1;;4632:26:12::1;4654:4;4632:26;::::0;;4576:90::o;2941:26::-;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;2941:26:12;;-1:-1:-1;2941:26:12;:::o;2543:215:0:-;1531:13;:11;:13::i;:::-;-1:-1:-1;;;;;2627:22:0;::::1;2623:91;;2672:31;::::0;-1:-1:-1;;;2672:31:0;;2700:1:::1;2672:31;::::0;::::1;665:51:13::0;638:18;;2672:31:0::1;;;;;;;;2623:91;2723:28;2742:8;2723:18;:28::i;:::-;2543:215:::0;:::o;5541:264:12:-;-1:-1:-1;;;;;5639:20:12;;;;;;:14;:20;;;;;;;;5635:115;;5676:9;:20;;;;;;;;;;;;;-1:-1:-1;;;;;;5676:20:12;-1:-1:-1;;;;;5676:20:12;;;;;;;;-1:-1:-1;5711:20:12;;;:14;5676:20;5711;;;;:27;;-1:-1:-1;;5711:27:12;;;;;;5635:115;-1:-1:-1;;;;;5771:16:12;;;;;;:10;:16;;;;;:26;;5791:6;;5771:16;:26;;5791:6;;5771:26;:::i;:::-;;;;-1:-1:-1;;;;5541:264:12:o;4940:593::-;5013:15;-1:-1:-1;;;;;5031:17:12;;2335:42;5031:17;:25;;5055:1;5031:25;;;5051:1;5031:25;5013:43;;;;5070:7;5081:1;5070:12;5067:459;;5098:4;;;5112:11;5098:37;;-1:-1:-1;;;5098:37:12;;-1:-1:-1;;;;;5112:11:12;;;5098:37;;;7984:51:13;8051:18;;;8044:34;;;5098:4:12;;;:13;;7957:18:13;;5098:37:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;5002:531;4940:593;;:::o;5067:459::-;5168:21;5206:7;5192:22;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;5192:22:12;;5168:46;;5239:9;5229:4;5234:1;5229:7;;;;;;;;:::i;:::-;;;;;;:19;-1:-1:-1;;;;;5229:19:12;;;-1:-1:-1;;;;;5229:19:12;;;;;2335:42;5263:4;5268:1;5263:7;;;;;;;;:::i;:::-;-1:-1:-1;;;;;5263:14:12;;;:7;;;;;;;;;:14;5294:6;;;5444:11;5294:6;;;;:60;;5373:9;;5294:6;;5421:4;;5444:11;5474:25;:15;5492:7;5474:25;:::i;:::-;5294:220;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1796:162:0;1684:7;1710:6;-1:-1:-1;;;;;1710:6:0;735:10:8;1855:23:0;1851:101;;1901:40;;-1:-1:-1;;;1901:40:0;;735:10:8;1901:40:0;;;665:51:13;638:18;;1901:40:0;519:203:13;2912:187:0;2985:16;3004:6;;-1:-1:-1;;;;;3020:17:0;;;-1:-1:-1;;;;;;3020:17:0;;;;;;3052:40;;3004:6;;;;;;;3052:40;;2985:16;3052:40;2975:124;2912:187;:::o;-1:-1:-1:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;14:173:13:-;82:20;;-1:-1:-1;;;;;131:31:13;;121:42;;111:70;;177:1;174;167:12;111:70;14:173;;;:::o;192:322::-;269:6;277;285;338:2;326:9;317:7;313:23;309:32;306:52;;;354:1;351;344:12;306:52;377:29;396:9;377:29;:::i;:::-;367:39;453:2;438:18;;425:32;;-1:-1:-1;504:2:13;489:18;;;476:32;;192:322;-1:-1:-1;;;192:322:13:o;727:180::-;786:6;839:2;827:9;818:7;814:23;810:32;807:52;;;855:1;852;845:12;807:52;-1:-1:-1;878:23:13;;727:180;-1:-1:-1;727:180:13:o;912:254::-;980:6;988;1041:2;1029:9;1020:7;1016:23;1012:32;1009:52;;;1057:1;1054;1047:12;1009:52;1080:29;1099:9;1080:29;:::i;:::-;1070:39;1156:2;1141:18;;;;1128:32;;-1:-1:-1;;;912:254:13:o;1353:186::-;1412:6;1465:2;1453:9;1444:7;1440:23;1436:32;1433:52;;;1481:1;1478;1471:12;1433:52;1504:29;1523:9;1504:29;:::i;:::-;1494:39;1353:186;-1:-1:-1;;;1353:186:13:o;1736:812::-;1955:2;2007:21;;;2077:13;;1980:18;;;2099:22;;;1926:4;;1955:2;2140;;2158:18;;;;2199:15;;;1926:4;2242:280;2256:6;2253:1;2250:13;2242:280;;;2315:13;;2357:9;;-1:-1:-1;;;;;2353:35:13;2341:48;;2429:11;;2423:18;2409:12;;;2402:40;2462:12;;;;2497:15;;;;2385:1;2271:9;2242:280;;;-1:-1:-1;2539:3:13;;1736:812;-1:-1:-1;;;;;;;1736:812:13:o;2553:397::-;2639:6;2647;2655;2663;2716:3;2704:9;2695:7;2691:23;2687:33;2684:53;;;2733:1;2730;2723:12;2684:53;2756:29;2775:9;2756:29;:::i;:::-;2746:39;;2804:38;2838:2;2827:9;2823:18;2804:38;:::i;:::-;2553:397;;2794:48;;-1:-1:-1;;;;2889:2:13;2874:18;;2861:32;;2940:2;2925:18;2912:32;;2553:397::o;3335:277::-;3402:6;3455:2;3443:9;3434:7;3430:23;3426:32;3423:52;;;3471:1;3468;3461:12;3423:52;3503:9;3497:16;3556:5;3549:13;3542:21;3535:5;3532:32;3522:60;;3578:1;3575;3568:12;3617:127;3678:10;3673:3;3669:20;3666:1;3659:31;3709:4;3706:1;3699:15;3733:4;3730:1;3723:15;3749:168;3822:9;;;3853;;3870:15;;;3864:22;;3850:37;3840:71;;3891:18;;:::i;:::-;3749:168;;;;:::o;3922:217::-;3962:1;3988;3978:132;;4032:10;4027:3;4023:20;4020:1;4013:31;4067:4;4064:1;4057:15;4095:4;4092:1;4085:15;3978:132;-1:-1:-1;4124:9:13;;3922:217::o;4144:127::-;4205:10;4200:3;4196:20;4193:1;4186:31;4236:4;4233:1;4226:15;4260:4;4257:1;4250:15;4276:127;4337:10;4332:3;4328:20;4325:1;4318:31;4368:4;4365:1;4358:15;4392:4;4389:1;4382:15;4408:128;4475:9;;;4496:11;;;4493:37;;;4510:18;;:::i;4541:125::-;4606:9;;;4627:10;;;4624:36;;;4640:18;;:::i;4671:461::-;4724:3;4762:5;4756:12;4789:6;4784:3;4777:19;4815:4;4844:2;4839:3;4835:12;4828:19;;4881:2;4874:5;4870:14;4902:1;4912:195;4926:6;4923:1;4920:13;4912:195;;;4991:13;;-1:-1:-1;;;;;4987:39:13;4975:52;;5047:12;;;;5082:15;;;;5023:1;4941:9;4912:195;;;-1:-1:-1;5123:3:13;;4671:461;-1:-1:-1;;;;;4671:461:13:o;5137:574::-;5428:6;5417:9;5410:25;5471:6;5466:2;5455:9;5451:18;5444:34;5514:3;5509:2;5498:9;5494:18;5487:31;5391:4;5535:57;5587:3;5576:9;5572:19;5564:6;5535:57;:::i;:::-;-1:-1:-1;;;;;5628:32:13;;;;5623:2;5608:18;;5601:60;-1:-1:-1;5692:3:13;5677:19;5670:35;5527:65;5137:574;-1:-1:-1;;;5137:574:13:o;5716:135::-;5755:3;5776:17;;;5773:43;;5796:18;;:::i;:::-;-1:-1:-1;5843:1:13;5832:13;;5716:135::o;5856:332::-;6063:6;6052:9;6045:25;6106:2;6101;6090:9;6086:18;6079:30;6026:4;6126:56;6178:2;6167:9;6163:18;6155:6;6126:56;:::i;:::-;6118:64;5856:332;-1:-1:-1;;;;5856:332:13:o;6193:1105::-;6288:6;6319:2;6362;6350:9;6341:7;6337:23;6333:32;6330:52;;;6378:1;6375;6368:12;6330:52;6411:9;6405:16;6440:18;6481:2;6473:6;6470:14;6467:34;;;6497:1;6494;6487:12;6467:34;6535:6;6524:9;6520:22;6510:32;;6580:7;6573:4;6569:2;6565:13;6561:27;6551:55;;6602:1;6599;6592:12;6551:55;6631:2;6625:9;6653:2;6649;6646:10;6643:36;;;6659:18;;:::i;:::-;6705:2;6702:1;6698:10;6737:2;6731:9;6800:2;6796:7;6791:2;6787;6783:11;6779:25;6771:6;6767:38;6855:6;6843:10;6840:22;6835:2;6823:10;6820:18;6817:46;6814:72;;;6866:18;;:::i;:::-;6902:2;6895:22;6952:18;;;6986:15;;;;-1:-1:-1;7028:11:13;;;7024:20;;;7056:19;;;7053:39;;;7088:1;7085;7078:12;7053:39;7112:11;;;;7132:135;7148:6;7143:3;7140:15;7132:135;;;7214:10;;7202:23;;7165:12;;;;7245;;;;7132:135;;;7286:6;6193:1105;-1:-1:-1;;;;;;;;6193:1105:13:o;7303:502::-;7566:6;7555:9;7548:25;7609:3;7604:2;7593:9;7589:18;7582:31;7529:4;7630:57;7682:3;7671:9;7667:19;7659:6;7630:57;:::i;:::-;-1:-1:-1;;;;;7723:32:13;;;;7718:2;7703:18;;7696:60;-1:-1:-1;7787:2:13;7772:18;7765:34;7622:65;7303:502;-1:-1:-1;;7303:502:13:o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "1301400",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"ARY()": "315",
								"CUSDC()": "227",
								"CUSDT()": "249",
								"DEXFACTORY()": "293",
								"DEXROUTER()": "270",
								"MERY()": "337",
								"WCRO()": "250",
								"addresses(uint256)": "4688",
								"clearVolume()": "infinite",
								"competition_started()": "2376",
								"deposit()": "infinite",
								"feePercent()": "2405",
								"feeReceiver()": "2370",
								"getUserVolumes()": "infinite",
								"owner()": "2451",
								"renounceOwnership()": "infinite",
								"setFeeData(address,uint256)": "48949",
								"startCompetition()": "26574",
								"stopCompetition()": "26547",
								"swapCROForToken(address,uint256)": "infinite",
								"swapTokenForCRO(address,uint256,uint256)": "infinite",
								"swapTokenForToken(address,address,uint256,uint256)": "infinite",
								"transferOwnership(address)": "28439",
								"userVolume(address)": "2561",
								"withdraw(uint256)": "infinite"
							},
							"internal": {
								"addVolume(address,uint256)": "99399",
								"getFee(address,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 2107,
									"end": 10094,
									"name": "PUSH",
									"source": 12,
									"value": "80"
								},
								{
									"begin": 2107,
									"end": 10094,
									"name": "PUSH",
									"source": 12,
									"value": "40"
								},
								{
									"begin": 2107,
									"end": 10094,
									"name": "MSTORE",
									"source": 12
								},
								{
									"begin": 2797,
									"end": 2836,
									"name": "PUSH",
									"source": 12,
									"value": "3"
								},
								{
									"begin": 2797,
									"end": 2836,
									"name": "DUP1",
									"source": 12
								},
								{
									"begin": 2797,
									"end": 2836,
									"name": "SLOAD",
									"source": 12
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "FF"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 2797,
									"end": 2836,
									"name": "AND",
									"source": 12
								},
								{
									"begin": 2797,
									"end": 2836,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 2797,
									"end": 2836,
									"name": "SSTORE",
									"source": 12
								},
								{
									"begin": 3118,
									"end": 3760,
									"name": "CALLVALUE",
									"source": 12
								},
								{
									"begin": 3118,
									"end": 3760,
									"name": "DUP1",
									"source": 12
								},
								{
									"begin": 3118,
									"end": 3760,
									"name": "ISZERO",
									"source": 12
								},
								{
									"begin": 3118,
									"end": 3760,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "1"
								},
								{
									"begin": 3118,
									"end": 3760,
									"name": "JUMPI",
									"source": 12
								},
								{
									"begin": 3118,
									"end": 3760,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 3118,
									"end": 3760,
									"name": "DUP1",
									"source": 12
								},
								{
									"begin": 3118,
									"end": 3760,
									"name": "REVERT",
									"source": 12
								},
								{
									"begin": 3118,
									"end": 3760,
									"name": "tag",
									"source": 12,
									"value": "1"
								},
								{
									"begin": 3118,
									"end": 3760,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 3140,
									"end": 3150,
									"name": "CALLER",
									"source": 12
								},
								{
									"begin": 3140,
									"end": 3150,
									"name": "DUP1",
									"source": 12
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "5"
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1E4FBDF7"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 1350,
									"end": 1351,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 160,
									"end": 211,
									"name": "MSTORE",
									"source": 13
								},
								{
									"begin": 133,
									"end": 151,
									"name": "PUSH",
									"source": 13,
									"value": "24"
								},
								{
									"begin": 133,
									"end": 151,
									"name": "ADD",
									"source": 13
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "tag",
									"source": 0,
									"value": "5"
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "8"
								},
								{
									"begin": 1392,
									"end": 1404,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1391,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "9"
								},
								{
									"begin": 1373,
									"end": 1405,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "tag",
									"source": 0,
									"value": "8"
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 3163,
									"end": 3170,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 12,
									"value": "7"
								},
								{
									"begin": 3163,
									"end": 3196,
									"name": "DUP1",
									"source": 12
								},
								{
									"begin": 3163,
									"end": 3196,
									"name": "SLOAD",
									"source": 12
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 3163,
									"end": 3196,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 3163,
									"end": 3196,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 3163,
									"end": 3196,
									"modifierDepth": 1,
									"name": "AND",
									"source": 12
								},
								{
									"begin": 2683,
									"end": 2725,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 12,
									"value": "3B44B2A187A7B3824131F8DB5A74194D0A42FC15"
								},
								{
									"begin": 3163,
									"end": 3196,
									"modifierDepth": 1,
									"name": "OR",
									"source": 12
								},
								{
									"begin": 3163,
									"end": 3196,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 3163,
									"end": 3196,
									"name": "SWAP2",
									"source": 12
								},
								{
									"begin": 3163,
									"end": 3196,
									"name": "SSTORE",
									"source": 12
								},
								{
									"begin": 3207,
									"end": 3213,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 12,
									"value": "8"
								},
								{
									"begin": 3207,
									"end": 3237,
									"name": "DUP1",
									"source": 12
								},
								{
									"begin": 3207,
									"end": 3237,
									"name": "SLOAD",
									"source": 12
								},
								{
									"begin": 3207,
									"end": 3237,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 3207,
									"end": 3237,
									"modifierDepth": 1,
									"name": "AND",
									"source": 12
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "DUP1",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "MLOAD",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "20"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH data",
									"source": -1,
									"value": "BB9835C734EA2EE08B9EB3F6004F5F118E5B999FBE41C94259AC9A08CB0AFF12"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "DUP4",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "CODECOPY",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "DUP2",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "MLOAD",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SWAP2",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "MSTORE",
									"source": -1
								},
								{
									"begin": 3207,
									"end": 3237,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 3207,
									"end": 3237,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 3207,
									"end": 3237,
									"modifierDepth": 1,
									"name": "OR",
									"source": 12
								},
								{
									"begin": 3207,
									"end": 3237,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 3207,
									"end": 3237,
									"name": "SWAP2",
									"source": 12
								},
								{
									"begin": 3207,
									"end": 3237,
									"name": "SSTORE",
									"source": 12
								},
								{
									"begin": 3248,
									"end": 3253,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 12,
									"value": "9"
								},
								{
									"begin": 3248,
									"end": 3269,
									"name": "DUP1",
									"source": 12
								},
								{
									"begin": 3248,
									"end": 3269,
									"name": "SLOAD",
									"source": 12
								},
								{
									"begin": 3248,
									"end": 3269,
									"name": "DUP4",
									"source": 12
								},
								{
									"begin": 3248,
									"end": 3269,
									"modifierDepth": 1,
									"name": "AND",
									"source": 12
								},
								{
									"begin": 2174,
									"end": 2216,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 12,
									"value": "C21223249CA28397B4B6541DFFAECC539BFF0C59"
								},
								{
									"begin": 3248,
									"end": 3269,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 3248,
									"end": 3269,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 3248,
									"end": 3269,
									"modifierDepth": 1,
									"name": "OR",
									"source": 12
								},
								{
									"begin": 3248,
									"end": 3269,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 3248,
									"end": 3269,
									"name": "SWAP2",
									"source": 12
								},
								{
									"begin": 3248,
									"end": 3269,
									"name": "SSTORE",
									"source": 12
								},
								{
									"begin": 3280,
									"end": 3285,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 12,
									"value": "A"
								},
								{
									"begin": 3280,
									"end": 3301,
									"name": "DUP1",
									"source": 12
								},
								{
									"begin": 3280,
									"end": 3301,
									"name": "SLOAD",
									"source": 12
								},
								{
									"begin": 3280,
									"end": 3301,
									"name": "DUP5",
									"source": 12
								},
								{
									"begin": 3280,
									"end": 3301,
									"modifierDepth": 1,
									"name": "AND",
									"source": 12
								},
								{
									"begin": 2255,
									"end": 2297,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 12,
									"value": "66E428C3F67A68878562E79A0234C1F83C208770"
								},
								{
									"begin": 3280,
									"end": 3301,
									"modifierDepth": 1,
									"name": "OR",
									"source": 12
								},
								{
									"begin": 3280,
									"end": 3301,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 3280,
									"end": 3301,
									"name": "SSTORE",
									"source": 12
								},
								{
									"begin": 3312,
									"end": 3315,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 12,
									"value": "B"
								},
								{
									"begin": 3312,
									"end": 3329,
									"name": "DUP1",
									"source": 12
								},
								{
									"begin": 3312,
									"end": 3329,
									"name": "SLOAD",
									"source": 12
								},
								{
									"begin": 3312,
									"end": 3329,
									"name": "DUP5",
									"source": 12
								},
								{
									"begin": 3312,
									"end": 3329,
									"modifierDepth": 1,
									"name": "AND",
									"source": 12
								},
								{
									"begin": 2414,
									"end": 2456,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 12,
									"value": "41BC026DABE978BC2FAFEA1850456511CA4B01BC"
								},
								{
									"begin": 3312,
									"end": 3329,
									"modifierDepth": 1,
									"name": "OR",
									"source": 12
								},
								{
									"begin": 3312,
									"end": 3329,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 3312,
									"end": 3329,
									"name": "SSTORE",
									"source": 12
								},
								{
									"begin": 3340,
									"end": 3344,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 12,
									"value": "C"
								},
								{
									"begin": 3340,
									"end": 3359,
									"name": "DUP1",
									"source": 12
								},
								{
									"begin": 3340,
									"end": 3359,
									"name": "SLOAD",
									"source": 12
								},
								{
									"begin": 3340,
									"end": 3359,
									"name": "DUP5",
									"source": 12
								},
								{
									"begin": 3340,
									"end": 3359,
									"modifierDepth": 1,
									"name": "AND",
									"source": 12
								},
								{
									"begin": 2494,
									"end": 2536,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 12,
									"value": "3B41B27E74DD366CE27CB389DC7877D4E1516D4D"
								},
								{
									"begin": 3340,
									"end": 3359,
									"modifierDepth": 1,
									"name": "OR",
									"source": 12
								},
								{
									"begin": 3340,
									"end": 3359,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 3340,
									"end": 3359,
									"name": "SSTORE",
									"source": 12
								},
								{
									"begin": 3370,
									"end": 3374,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 12,
									"value": "D"
								},
								{
									"begin": 3370,
									"end": 3388,
									"name": "DUP1",
									"source": 12
								},
								{
									"begin": 3370,
									"end": 3388,
									"name": "SLOAD",
									"source": 12
								},
								{
									"begin": 3370,
									"end": 3388,
									"name": "DUP5",
									"source": 12
								},
								{
									"begin": 3370,
									"end": 3388,
									"modifierDepth": 1,
									"name": "AND",
									"source": 12
								},
								{
									"begin": 2335,
									"end": 2377,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 12,
									"value": "5C7F8A570D578ED84E63FDFA7B1EE72DEAE1AE23"
								},
								{
									"begin": 3370,
									"end": 3388,
									"modifierDepth": 1,
									"name": "OR",
									"source": 12
								},
								{
									"begin": 3370,
									"end": 3388,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 3370,
									"end": 3388,
									"name": "SSTORE",
									"source": 12
								},
								{
									"begin": 3163,
									"end": 3196,
									"name": "PUSH",
									"source": 12,
									"value": "1"
								},
								{
									"begin": 3399,
									"end": 3423,
									"name": "DUP1",
									"source": 12
								},
								{
									"begin": 3399,
									"end": 3423,
									"name": "SLOAD",
									"source": 12
								},
								{
									"begin": 3399,
									"end": 3423,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 3399,
									"end": 3423,
									"name": "SWAP4",
									"source": 12
								},
								{
									"begin": 3399,
									"end": 3423,
									"modifierDepth": 1,
									"name": "AND",
									"source": 12
								},
								{
									"begin": 3413,
									"end": 3423,
									"modifierDepth": 1,
									"name": "CALLER",
									"source": 12
								},
								{
									"begin": 3399,
									"end": 3423,
									"modifierDepth": 1,
									"name": "OR",
									"source": 12
								},
								{
									"begin": 3399,
									"end": 3423,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 3399,
									"end": 3423,
									"name": "SWAP3",
									"source": 12
								},
								{
									"begin": 3399,
									"end": 3423,
									"name": "SSTORE",
									"source": 12
								},
								{
									"begin": 3447,
									"end": 3448,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 12,
									"value": "3"
								},
								{
									"begin": 3434,
									"end": 3444,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 12,
									"value": "2"
								},
								{
									"begin": 3434,
									"end": 3448,
									"name": "SSTORE",
									"source": 12
								},
								{
									"begin": 3497,
									"end": 3540,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 12,
									"value": "40"
								},
								{
									"begin": 3497,
									"end": 3540,
									"name": "MLOAD",
									"source": 12
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "95EA7B3"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 3497,
									"end": 3540,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 3497,
									"end": 3540,
									"name": "MSTORE",
									"source": 12
								},
								{
									"begin": 3497,
									"end": 3510,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 12,
									"value": "95EA7B3"
								},
								{
									"begin": 3497,
									"end": 3510,
									"name": "SWAP2",
									"source": 12
								},
								{
									"begin": 3497,
									"end": 3540,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "11"
								},
								{
									"begin": 3497,
									"end": 3540,
									"name": "SWAP2",
									"source": 12
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SWAP1",
									"source": -1
								},
								{
									"begin": 3497,
									"end": 3540,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 12,
									"value": "4"
								},
								{
									"begin": 3497,
									"end": 3540,
									"modifierDepth": 1,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 414,
									"end": 446,
									"name": "SWAP3",
									"source": 13
								},
								{
									"begin": 414,
									"end": 446,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 414,
									"end": 446,
									"name": "SWAP3",
									"source": 13
								},
								{
									"begin": 414,
									"end": 446,
									"name": "AND",
									"source": 13
								},
								{
									"begin": 396,
									"end": 447,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 396,
									"end": 447,
									"name": "MSTORE",
									"source": 13
								},
								{
									"begin": 478,
									"end": 480,
									"name": "PUSH",
									"source": 13,
									"value": "20"
								},
								{
									"begin": 463,
									"end": 481,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 463,
									"end": 481,
									"name": "ADD",
									"source": 13
								},
								{
									"begin": 456,
									"end": 490,
									"name": "MSTORE",
									"source": 13
								},
								{
									"begin": 384,
									"end": 386,
									"name": "PUSH",
									"source": 13,
									"value": "40"
								},
								{
									"begin": 369,
									"end": 387,
									"name": "ADD",
									"source": 13
								},
								{
									"begin": 369,
									"end": 387,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 222,
									"end": 496,
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 3497,
									"end": 3540,
									"modifierDepth": 1,
									"name": "tag",
									"source": 12,
									"value": "11"
								},
								{
									"begin": 3497,
									"end": 3540,
									"modifierDepth": 1,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 3497,
									"end": 3540,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 12,
									"value": "20"
								},
								{
									"begin": 3497,
									"end": 3540,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 12,
									"value": "40"
								},
								{
									"begin": 3497,
									"end": 3540,
									"modifierDepth": 1,
									"name": "MLOAD",
									"source": 12
								},
								{
									"begin": 3497,
									"end": 3540,
									"modifierDepth": 1,
									"name": "DUP1",
									"source": 12
								},
								{
									"begin": 3497,
									"end": 3540,
									"modifierDepth": 1,
									"name": "DUP4",
									"source": 12
								},
								{
									"begin": 3497,
									"end": 3540,
									"modifierDepth": 1,
									"name": "SUB",
									"source": 12
								},
								{
									"begin": 3497,
									"end": 3540,
									"modifierDepth": 1,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 3497,
									"end": 3540,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 3497,
									"end": 3540,
									"modifierDepth": 1,
									"name": "DUP8",
									"source": 12
								},
								{
									"begin": 3497,
									"end": 3540,
									"modifierDepth": 1,
									"name": "GAS",
									"source": 12
								},
								{
									"begin": 3497,
									"end": 3540,
									"modifierDepth": 1,
									"name": "CALL",
									"source": 12
								},
								{
									"begin": 3497,
									"end": 3540,
									"modifierDepth": 1,
									"name": "ISZERO",
									"source": 12
								},
								{
									"begin": 3497,
									"end": 3540,
									"modifierDepth": 1,
									"name": "DUP1",
									"source": 12
								},
								{
									"begin": 3497,
									"end": 3540,
									"modifierDepth": 1,
									"name": "ISZERO",
									"source": 12
								},
								{
									"begin": 3497,
									"end": 3540,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "14"
								},
								{
									"begin": 3497,
									"end": 3540,
									"modifierDepth": 1,
									"name": "JUMPI",
									"source": 12
								},
								{
									"begin": 3497,
									"end": 3540,
									"modifierDepth": 1,
									"name": "RETURNDATASIZE",
									"source": 12
								},
								{
									"begin": 3497,
									"end": 3540,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 3497,
									"end": 3540,
									"name": "DUP1",
									"source": 12
								},
								{
									"begin": 3497,
									"end": 3540,
									"modifierDepth": 1,
									"name": "RETURNDATACOPY",
									"source": 12
								},
								{
									"begin": 3497,
									"end": 3540,
									"modifierDepth": 1,
									"name": "RETURNDATASIZE",
									"source": 12
								},
								{
									"begin": 3497,
									"end": 3540,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 3497,
									"end": 3540,
									"modifierDepth": 1,
									"name": "REVERT",
									"source": 12
								},
								{
									"begin": 3497,
									"end": 3540,
									"modifierDepth": 1,
									"name": "tag",
									"source": 12,
									"value": "14"
								},
								{
									"begin": 3497,
									"end": 3540,
									"modifierDepth": 1,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 3497,
									"end": 3540,
									"modifierDepth": 1,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 3497,
									"end": 3540,
									"modifierDepth": 1,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 3497,
									"end": 3540,
									"modifierDepth": 1,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 3497,
									"end": 3540,
									"modifierDepth": 1,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 3497,
									"end": 3540,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 12,
									"value": "40"
								},
								{
									"begin": 3497,
									"end": 3540,
									"modifierDepth": 1,
									"name": "MLOAD",
									"source": 12
								},
								{
									"begin": 3497,
									"end": 3540,
									"modifierDepth": 1,
									"name": "RETURNDATASIZE",
									"source": 12
								},
								{
									"begin": 3497,
									"end": 3540,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 12,
									"value": "1F"
								},
								{
									"begin": 3497,
									"end": 3540,
									"modifierDepth": 1,
									"name": "NOT",
									"source": 12
								},
								{
									"begin": 3497,
									"end": 3540,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 12,
									"value": "1F"
								},
								{
									"begin": 3497,
									"end": 3540,
									"modifierDepth": 1,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 3497,
									"end": 3540,
									"modifierDepth": 1,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 3497,
									"end": 3540,
									"modifierDepth": 1,
									"name": "AND",
									"source": 12
								},
								{
									"begin": 3497,
									"end": 3540,
									"modifierDepth": 1,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 3497,
									"end": 3540,
									"modifierDepth": 1,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 3497,
									"end": 3540,
									"modifierDepth": 1,
									"name": "DUP1",
									"source": 12
								},
								{
									"begin": 3497,
									"end": 3540,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 12,
									"value": "40"
								},
								{
									"begin": 3497,
									"end": 3540,
									"modifierDepth": 1,
									"name": "MSTORE",
									"source": 12
								},
								{
									"begin": 3497,
									"end": 3540,
									"modifierDepth": 1,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 3497,
									"end": 3540,
									"modifierDepth": 1,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 3497,
									"end": 3540,
									"modifierDepth": 1,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 3497,
									"end": 3540,
									"modifierDepth": 1,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 3497,
									"end": 3540,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "15"
								},
								{
									"begin": 3497,
									"end": 3540,
									"modifierDepth": 1,
									"name": "SWAP2",
									"source": 12
								},
								{
									"begin": 3497,
									"end": 3540,
									"modifierDepth": 1,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 3497,
									"end": 3540,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "16"
								},
								{
									"begin": 3497,
									"end": 3540,
									"jumpType": "[in]",
									"modifierDepth": 1,
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 3497,
									"end": 3540,
									"modifierDepth": 1,
									"name": "tag",
									"source": 12,
									"value": "15"
								},
								{
									"begin": 3497,
									"end": 3540,
									"modifierDepth": 1,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 3551,
									"end": 3556,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 12,
									"value": "A"
								},
								{
									"begin": 3551,
									"end": 3556,
									"name": "SLOAD",
									"source": 12
								},
								{
									"begin": 3551,
									"end": 3594,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 12,
									"value": "40"
								},
								{
									"begin": 3551,
									"end": 3594,
									"name": "MLOAD",
									"source": 12
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "95EA7B3"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 3551,
									"end": 3594,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 3551,
									"end": 3594,
									"name": "MSTORE",
									"source": 12
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "DUP1",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "MLOAD",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "20"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH data",
									"source": -1,
									"value": "BB9835C734EA2EE08B9EB3F6004F5F118E5B999FBE41C94259AC9A08CB0AFF12"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "DUP4",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "CODECOPY",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "DUP2",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "MLOAD",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SWAP2",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "MSTORE",
									"source": -1
								},
								{
									"begin": 3551,
									"end": 3594,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 12,
									"value": "4"
								},
								{
									"begin": 3551,
									"end": 3594,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 3551,
									"end": 3594,
									"modifierDepth": 1,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 396,
									"end": 447,
									"name": "MSTORE",
									"source": 13
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 463,
									"end": 481,
									"name": "PUSH",
									"source": 13,
									"value": "24"
								},
								{
									"begin": 463,
									"end": 481,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 463,
									"end": 481,
									"name": "ADD",
									"source": 13
								},
								{
									"begin": 456,
									"end": 490,
									"name": "MSTORE",
									"source": 13
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 3551,
									"end": 3556,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 3551,
									"end": 3556,
									"name": "SWAP2",
									"source": 12
								},
								{
									"begin": 3551,
									"end": 3556,
									"modifierDepth": 1,
									"name": "AND",
									"source": 12
								},
								{
									"begin": 3551,
									"end": 3556,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 3551,
									"end": 3564,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 12,
									"value": "95EA7B3"
								},
								{
									"begin": 3551,
									"end": 3564,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 369,
									"end": 387,
									"name": "PUSH",
									"source": 13,
									"value": "44"
								},
								{
									"begin": 369,
									"end": 387,
									"name": "ADD",
									"source": 13
								},
								{
									"begin": 3551,
									"end": 3594,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 12,
									"value": "20"
								},
								{
									"begin": 3551,
									"end": 3594,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 12,
									"value": "40"
								},
								{
									"begin": 3551,
									"end": 3594,
									"modifierDepth": 1,
									"name": "MLOAD",
									"source": 12
								},
								{
									"begin": 3551,
									"end": 3594,
									"modifierDepth": 1,
									"name": "DUP1",
									"source": 12
								},
								{
									"begin": 3551,
									"end": 3594,
									"modifierDepth": 1,
									"name": "DUP4",
									"source": 12
								},
								{
									"begin": 3551,
									"end": 3594,
									"modifierDepth": 1,
									"name": "SUB",
									"source": 12
								},
								{
									"begin": 3551,
									"end": 3594,
									"modifierDepth": 1,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 3551,
									"end": 3594,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 3551,
									"end": 3594,
									"modifierDepth": 1,
									"name": "DUP8",
									"source": 12
								},
								{
									"begin": 3551,
									"end": 3594,
									"modifierDepth": 1,
									"name": "GAS",
									"source": 12
								},
								{
									"begin": 3551,
									"end": 3594,
									"modifierDepth": 1,
									"name": "CALL",
									"source": 12
								},
								{
									"begin": 3551,
									"end": 3594,
									"modifierDepth": 1,
									"name": "ISZERO",
									"source": 12
								},
								{
									"begin": 3551,
									"end": 3594,
									"modifierDepth": 1,
									"name": "DUP1",
									"source": 12
								},
								{
									"begin": 3551,
									"end": 3594,
									"modifierDepth": 1,
									"name": "ISZERO",
									"source": 12
								},
								{
									"begin": 3551,
									"end": 3594,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "19"
								},
								{
									"begin": 3551,
									"end": 3594,
									"modifierDepth": 1,
									"name": "JUMPI",
									"source": 12
								},
								{
									"begin": 3551,
									"end": 3594,
									"modifierDepth": 1,
									"name": "RETURNDATASIZE",
									"source": 12
								},
								{
									"begin": 3551,
									"end": 3594,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 3551,
									"end": 3594,
									"name": "DUP1",
									"source": 12
								},
								{
									"begin": 3551,
									"end": 3594,
									"modifierDepth": 1,
									"name": "RETURNDATACOPY",
									"source": 12
								},
								{
									"begin": 3551,
									"end": 3594,
									"modifierDepth": 1,
									"name": "RETURNDATASIZE",
									"source": 12
								},
								{
									"begin": 3551,
									"end": 3594,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 3551,
									"end": 3594,
									"modifierDepth": 1,
									"name": "REVERT",
									"source": 12
								},
								{
									"begin": 3551,
									"end": 3594,
									"modifierDepth": 1,
									"name": "tag",
									"source": 12,
									"value": "19"
								},
								{
									"begin": 3551,
									"end": 3594,
									"modifierDepth": 1,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 3551,
									"end": 3594,
									"modifierDepth": 1,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 3551,
									"end": 3594,
									"modifierDepth": 1,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 3551,
									"end": 3594,
									"modifierDepth": 1,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 3551,
									"end": 3594,
									"modifierDepth": 1,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 3551,
									"end": 3594,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 12,
									"value": "40"
								},
								{
									"begin": 3551,
									"end": 3594,
									"modifierDepth": 1,
									"name": "MLOAD",
									"source": 12
								},
								{
									"begin": 3551,
									"end": 3594,
									"modifierDepth": 1,
									"name": "RETURNDATASIZE",
									"source": 12
								},
								{
									"begin": 3551,
									"end": 3594,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 12,
									"value": "1F"
								},
								{
									"begin": 3551,
									"end": 3594,
									"modifierDepth": 1,
									"name": "NOT",
									"source": 12
								},
								{
									"begin": 3551,
									"end": 3594,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 12,
									"value": "1F"
								},
								{
									"begin": 3551,
									"end": 3594,
									"modifierDepth": 1,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 3551,
									"end": 3594,
									"modifierDepth": 1,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 3551,
									"end": 3594,
									"modifierDepth": 1,
									"name": "AND",
									"source": 12
								},
								{
									"begin": 3551,
									"end": 3594,
									"modifierDepth": 1,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 3551,
									"end": 3594,
									"modifierDepth": 1,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 3551,
									"end": 3594,
									"modifierDepth": 1,
									"name": "DUP1",
									"source": 12
								},
								{
									"begin": 3551,
									"end": 3594,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 12,
									"value": "40"
								},
								{
									"begin": 3551,
									"end": 3594,
									"modifierDepth": 1,
									"name": "MSTORE",
									"source": 12
								},
								{
									"begin": 3551,
									"end": 3594,
									"modifierDepth": 1,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 3551,
									"end": 3594,
									"modifierDepth": 1,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 3551,
									"end": 3594,
									"modifierDepth": 1,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 3551,
									"end": 3594,
									"modifierDepth": 1,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 3551,
									"end": 3594,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "20"
								},
								{
									"begin": 3551,
									"end": 3594,
									"modifierDepth": 1,
									"name": "SWAP2",
									"source": 12
								},
								{
									"begin": 3551,
									"end": 3594,
									"modifierDepth": 1,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 3551,
									"end": 3594,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "16"
								},
								{
									"begin": 3551,
									"end": 3594,
									"jumpType": "[in]",
									"modifierDepth": 1,
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 3551,
									"end": 3594,
									"modifierDepth": 1,
									"name": "tag",
									"source": 12,
									"value": "20"
								},
								{
									"begin": 3551,
									"end": 3594,
									"modifierDepth": 1,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 3605,
									"end": 3608,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 12,
									"value": "B"
								},
								{
									"begin": 3605,
									"end": 3608,
									"name": "SLOAD",
									"source": 12
								},
								{
									"begin": 3605,
									"end": 3646,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 12,
									"value": "40"
								},
								{
									"begin": 3605,
									"end": 3646,
									"name": "MLOAD",
									"source": 12
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "95EA7B3"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 3605,
									"end": 3646,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 3605,
									"end": 3646,
									"name": "MSTORE",
									"source": 12
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "DUP1",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "MLOAD",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "20"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH data",
									"source": -1,
									"value": "BB9835C734EA2EE08B9EB3F6004F5F118E5B999FBE41C94259AC9A08CB0AFF12"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "DUP4",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "CODECOPY",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "DUP2",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "MLOAD",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SWAP2",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "MSTORE",
									"source": -1
								},
								{
									"begin": 3605,
									"end": 3646,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 12,
									"value": "4"
								},
								{
									"begin": 3605,
									"end": 3646,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 3605,
									"end": 3646,
									"modifierDepth": 1,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 396,
									"end": 447,
									"name": "MSTORE",
									"source": 13
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 463,
									"end": 481,
									"name": "PUSH",
									"source": 13,
									"value": "24"
								},
								{
									"begin": 463,
									"end": 481,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 463,
									"end": 481,
									"name": "ADD",
									"source": 13
								},
								{
									"begin": 456,
									"end": 490,
									"name": "MSTORE",
									"source": 13
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 3605,
									"end": 3608,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 3605,
									"end": 3608,
									"name": "SWAP2",
									"source": 12
								},
								{
									"begin": 3605,
									"end": 3608,
									"modifierDepth": 1,
									"name": "AND",
									"source": 12
								},
								{
									"begin": 3605,
									"end": 3608,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 3605,
									"end": 3616,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 12,
									"value": "95EA7B3"
								},
								{
									"begin": 3605,
									"end": 3616,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 369,
									"end": 387,
									"name": "PUSH",
									"source": 13,
									"value": "44"
								},
								{
									"begin": 369,
									"end": 387,
									"name": "ADD",
									"source": 13
								},
								{
									"begin": 3605,
									"end": 3646,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 12,
									"value": "20"
								},
								{
									"begin": 3605,
									"end": 3646,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 12,
									"value": "40"
								},
								{
									"begin": 3605,
									"end": 3646,
									"modifierDepth": 1,
									"name": "MLOAD",
									"source": 12
								},
								{
									"begin": 3605,
									"end": 3646,
									"modifierDepth": 1,
									"name": "DUP1",
									"source": 12
								},
								{
									"begin": 3605,
									"end": 3646,
									"modifierDepth": 1,
									"name": "DUP4",
									"source": 12
								},
								{
									"begin": 3605,
									"end": 3646,
									"modifierDepth": 1,
									"name": "SUB",
									"source": 12
								},
								{
									"begin": 3605,
									"end": 3646,
									"modifierDepth": 1,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 3605,
									"end": 3646,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 3605,
									"end": 3646,
									"modifierDepth": 1,
									"name": "DUP8",
									"source": 12
								},
								{
									"begin": 3605,
									"end": 3646,
									"modifierDepth": 1,
									"name": "GAS",
									"source": 12
								},
								{
									"begin": 3605,
									"end": 3646,
									"modifierDepth": 1,
									"name": "CALL",
									"source": 12
								},
								{
									"begin": 3605,
									"end": 3646,
									"modifierDepth": 1,
									"name": "ISZERO",
									"source": 12
								},
								{
									"begin": 3605,
									"end": 3646,
									"modifierDepth": 1,
									"name": "DUP1",
									"source": 12
								},
								{
									"begin": 3605,
									"end": 3646,
									"modifierDepth": 1,
									"name": "ISZERO",
									"source": 12
								},
								{
									"begin": 3605,
									"end": 3646,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "23"
								},
								{
									"begin": 3605,
									"end": 3646,
									"modifierDepth": 1,
									"name": "JUMPI",
									"source": 12
								},
								{
									"begin": 3605,
									"end": 3646,
									"modifierDepth": 1,
									"name": "RETURNDATASIZE",
									"source": 12
								},
								{
									"begin": 3605,
									"end": 3646,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 3605,
									"end": 3646,
									"name": "DUP1",
									"source": 12
								},
								{
									"begin": 3605,
									"end": 3646,
									"modifierDepth": 1,
									"name": "RETURNDATACOPY",
									"source": 12
								},
								{
									"begin": 3605,
									"end": 3646,
									"modifierDepth": 1,
									"name": "RETURNDATASIZE",
									"source": 12
								},
								{
									"begin": 3605,
									"end": 3646,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 3605,
									"end": 3646,
									"modifierDepth": 1,
									"name": "REVERT",
									"source": 12
								},
								{
									"begin": 3605,
									"end": 3646,
									"modifierDepth": 1,
									"name": "tag",
									"source": 12,
									"value": "23"
								},
								{
									"begin": 3605,
									"end": 3646,
									"modifierDepth": 1,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 3605,
									"end": 3646,
									"modifierDepth": 1,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 3605,
									"end": 3646,
									"modifierDepth": 1,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 3605,
									"end": 3646,
									"modifierDepth": 1,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 3605,
									"end": 3646,
									"modifierDepth": 1,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 3605,
									"end": 3646,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 12,
									"value": "40"
								},
								{
									"begin": 3605,
									"end": 3646,
									"modifierDepth": 1,
									"name": "MLOAD",
									"source": 12
								},
								{
									"begin": 3605,
									"end": 3646,
									"modifierDepth": 1,
									"name": "RETURNDATASIZE",
									"source": 12
								},
								{
									"begin": 3605,
									"end": 3646,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 12,
									"value": "1F"
								},
								{
									"begin": 3605,
									"end": 3646,
									"modifierDepth": 1,
									"name": "NOT",
									"source": 12
								},
								{
									"begin": 3605,
									"end": 3646,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 12,
									"value": "1F"
								},
								{
									"begin": 3605,
									"end": 3646,
									"modifierDepth": 1,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 3605,
									"end": 3646,
									"modifierDepth": 1,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 3605,
									"end": 3646,
									"modifierDepth": 1,
									"name": "AND",
									"source": 12
								},
								{
									"begin": 3605,
									"end": 3646,
									"modifierDepth": 1,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 3605,
									"end": 3646,
									"modifierDepth": 1,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 3605,
									"end": 3646,
									"modifierDepth": 1,
									"name": "DUP1",
									"source": 12
								},
								{
									"begin": 3605,
									"end": 3646,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 12,
									"value": "40"
								},
								{
									"begin": 3605,
									"end": 3646,
									"modifierDepth": 1,
									"name": "MSTORE",
									"source": 12
								},
								{
									"begin": 3605,
									"end": 3646,
									"modifierDepth": 1,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 3605,
									"end": 3646,
									"modifierDepth": 1,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 3605,
									"end": 3646,
									"modifierDepth": 1,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 3605,
									"end": 3646,
									"modifierDepth": 1,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 3605,
									"end": 3646,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "24"
								},
								{
									"begin": 3605,
									"end": 3646,
									"modifierDepth": 1,
									"name": "SWAP2",
									"source": 12
								},
								{
									"begin": 3605,
									"end": 3646,
									"modifierDepth": 1,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 3605,
									"end": 3646,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "16"
								},
								{
									"begin": 3605,
									"end": 3646,
									"jumpType": "[in]",
									"modifierDepth": 1,
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 3605,
									"end": 3646,
									"modifierDepth": 1,
									"name": "tag",
									"source": 12,
									"value": "24"
								},
								{
									"begin": 3605,
									"end": 3646,
									"modifierDepth": 1,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 3657,
									"end": 3661,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 12,
									"value": "D"
								},
								{
									"begin": 3657,
									"end": 3661,
									"name": "SLOAD",
									"source": 12
								},
								{
									"begin": 3657,
									"end": 3699,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 12,
									"value": "40"
								},
								{
									"begin": 3657,
									"end": 3699,
									"name": "MLOAD",
									"source": 12
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "95EA7B3"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 3657,
									"end": 3699,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 3657,
									"end": 3699,
									"name": "MSTORE",
									"source": 12
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "DUP1",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "MLOAD",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "20"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH data",
									"source": -1,
									"value": "BB9835C734EA2EE08B9EB3F6004F5F118E5B999FBE41C94259AC9A08CB0AFF12"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "DUP4",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "CODECOPY",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "DUP2",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "MLOAD",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SWAP2",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "MSTORE",
									"source": -1
								},
								{
									"begin": 3657,
									"end": 3699,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 12,
									"value": "4"
								},
								{
									"begin": 3657,
									"end": 3699,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 3657,
									"end": 3699,
									"modifierDepth": 1,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 396,
									"end": 447,
									"name": "MSTORE",
									"source": 13
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 463,
									"end": 481,
									"name": "PUSH",
									"source": 13,
									"value": "24"
								},
								{
									"begin": 463,
									"end": 481,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 463,
									"end": 481,
									"name": "ADD",
									"source": 13
								},
								{
									"begin": 456,
									"end": 490,
									"name": "MSTORE",
									"source": 13
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 3657,
									"end": 3661,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 3657,
									"end": 3661,
									"name": "SWAP2",
									"source": 12
								},
								{
									"begin": 3657,
									"end": 3661,
									"modifierDepth": 1,
									"name": "AND",
									"source": 12
								},
								{
									"begin": 3657,
									"end": 3661,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 3657,
									"end": 3669,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 12,
									"value": "95EA7B3"
								},
								{
									"begin": 3657,
									"end": 3669,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 369,
									"end": 387,
									"name": "PUSH",
									"source": 13,
									"value": "44"
								},
								{
									"begin": 369,
									"end": 387,
									"name": "ADD",
									"source": 13
								},
								{
									"begin": 3657,
									"end": 3699,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 12,
									"value": "20"
								},
								{
									"begin": 3657,
									"end": 3699,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 12,
									"value": "40"
								},
								{
									"begin": 3657,
									"end": 3699,
									"modifierDepth": 1,
									"name": "MLOAD",
									"source": 12
								},
								{
									"begin": 3657,
									"end": 3699,
									"modifierDepth": 1,
									"name": "DUP1",
									"source": 12
								},
								{
									"begin": 3657,
									"end": 3699,
									"modifierDepth": 1,
									"name": "DUP4",
									"source": 12
								},
								{
									"begin": 3657,
									"end": 3699,
									"modifierDepth": 1,
									"name": "SUB",
									"source": 12
								},
								{
									"begin": 3657,
									"end": 3699,
									"modifierDepth": 1,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 3657,
									"end": 3699,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 3657,
									"end": 3699,
									"modifierDepth": 1,
									"name": "DUP8",
									"source": 12
								},
								{
									"begin": 3657,
									"end": 3699,
									"modifierDepth": 1,
									"name": "GAS",
									"source": 12
								},
								{
									"begin": 3657,
									"end": 3699,
									"modifierDepth": 1,
									"name": "CALL",
									"source": 12
								},
								{
									"begin": 3657,
									"end": 3699,
									"modifierDepth": 1,
									"name": "ISZERO",
									"source": 12
								},
								{
									"begin": 3657,
									"end": 3699,
									"modifierDepth": 1,
									"name": "DUP1",
									"source": 12
								},
								{
									"begin": 3657,
									"end": 3699,
									"modifierDepth": 1,
									"name": "ISZERO",
									"source": 12
								},
								{
									"begin": 3657,
									"end": 3699,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "27"
								},
								{
									"begin": 3657,
									"end": 3699,
									"modifierDepth": 1,
									"name": "JUMPI",
									"source": 12
								},
								{
									"begin": 3657,
									"end": 3699,
									"modifierDepth": 1,
									"name": "RETURNDATASIZE",
									"source": 12
								},
								{
									"begin": 3657,
									"end": 3699,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 3657,
									"end": 3699,
									"name": "DUP1",
									"source": 12
								},
								{
									"begin": 3657,
									"end": 3699,
									"modifierDepth": 1,
									"name": "RETURNDATACOPY",
									"source": 12
								},
								{
									"begin": 3657,
									"end": 3699,
									"modifierDepth": 1,
									"name": "RETURNDATASIZE",
									"source": 12
								},
								{
									"begin": 3657,
									"end": 3699,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 3657,
									"end": 3699,
									"modifierDepth": 1,
									"name": "REVERT",
									"source": 12
								},
								{
									"begin": 3657,
									"end": 3699,
									"modifierDepth": 1,
									"name": "tag",
									"source": 12,
									"value": "27"
								},
								{
									"begin": 3657,
									"end": 3699,
									"modifierDepth": 1,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 3657,
									"end": 3699,
									"modifierDepth": 1,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 3657,
									"end": 3699,
									"modifierDepth": 1,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 3657,
									"end": 3699,
									"modifierDepth": 1,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 3657,
									"end": 3699,
									"modifierDepth": 1,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 3657,
									"end": 3699,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 12,
									"value": "40"
								},
								{
									"begin": 3657,
									"end": 3699,
									"modifierDepth": 1,
									"name": "MLOAD",
									"source": 12
								},
								{
									"begin": 3657,
									"end": 3699,
									"modifierDepth": 1,
									"name": "RETURNDATASIZE",
									"source": 12
								},
								{
									"begin": 3657,
									"end": 3699,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 12,
									"value": "1F"
								},
								{
									"begin": 3657,
									"end": 3699,
									"modifierDepth": 1,
									"name": "NOT",
									"source": 12
								},
								{
									"begin": 3657,
									"end": 3699,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 12,
									"value": "1F"
								},
								{
									"begin": 3657,
									"end": 3699,
									"modifierDepth": 1,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 3657,
									"end": 3699,
									"modifierDepth": 1,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 3657,
									"end": 3699,
									"modifierDepth": 1,
									"name": "AND",
									"source": 12
								},
								{
									"begin": 3657,
									"end": 3699,
									"modifierDepth": 1,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 3657,
									"end": 3699,
									"modifierDepth": 1,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 3657,
									"end": 3699,
									"modifierDepth": 1,
									"name": "DUP1",
									"source": 12
								},
								{
									"begin": 3657,
									"end": 3699,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 12,
									"value": "40"
								},
								{
									"begin": 3657,
									"end": 3699,
									"modifierDepth": 1,
									"name": "MSTORE",
									"source": 12
								},
								{
									"begin": 3657,
									"end": 3699,
									"modifierDepth": 1,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 3657,
									"end": 3699,
									"modifierDepth": 1,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 3657,
									"end": 3699,
									"modifierDepth": 1,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 3657,
									"end": 3699,
									"modifierDepth": 1,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 3657,
									"end": 3699,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "28"
								},
								{
									"begin": 3657,
									"end": 3699,
									"modifierDepth": 1,
									"name": "SWAP2",
									"source": 12
								},
								{
									"begin": 3657,
									"end": 3699,
									"modifierDepth": 1,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 3657,
									"end": 3699,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "16"
								},
								{
									"begin": 3657,
									"end": 3699,
									"jumpType": "[in]",
									"modifierDepth": 1,
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 3657,
									"end": 3699,
									"modifierDepth": 1,
									"name": "tag",
									"source": 12,
									"value": "28"
								},
								{
									"begin": 3657,
									"end": 3699,
									"modifierDepth": 1,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 3710,
									"end": 3714,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 12,
									"value": "C"
								},
								{
									"begin": 3710,
									"end": 3714,
									"name": "SLOAD",
									"source": 12
								},
								{
									"begin": 3710,
									"end": 3752,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 12,
									"value": "40"
								},
								{
									"begin": 3710,
									"end": 3752,
									"name": "MLOAD",
									"source": 12
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "95EA7B3"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 3710,
									"end": 3752,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 3710,
									"end": 3752,
									"name": "MSTORE",
									"source": 12
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "DUP1",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "MLOAD",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "20"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH data",
									"source": -1,
									"value": "BB9835C734EA2EE08B9EB3F6004F5F118E5B999FBE41C94259AC9A08CB0AFF12"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "DUP4",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "CODECOPY",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "DUP2",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "MLOAD",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SWAP2",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "MSTORE",
									"source": -1
								},
								{
									"begin": 3710,
									"end": 3752,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 12,
									"value": "4"
								},
								{
									"begin": 3710,
									"end": 3752,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 3710,
									"end": 3752,
									"modifierDepth": 1,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 396,
									"end": 447,
									"name": "MSTORE",
									"source": 13
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 463,
									"end": 481,
									"name": "PUSH",
									"source": 13,
									"value": "24"
								},
								{
									"begin": 463,
									"end": 481,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 463,
									"end": 481,
									"name": "ADD",
									"source": 13
								},
								{
									"begin": 456,
									"end": 490,
									"name": "MSTORE",
									"source": 13
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 3710,
									"end": 3714,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 3710,
									"end": 3714,
									"name": "SWAP2",
									"source": 12
								},
								{
									"begin": 3710,
									"end": 3714,
									"modifierDepth": 1,
									"name": "AND",
									"source": 12
								},
								{
									"begin": 3710,
									"end": 3714,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 3710,
									"end": 3722,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 12,
									"value": "95EA7B3"
								},
								{
									"begin": 3710,
									"end": 3722,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 369,
									"end": 387,
									"name": "PUSH",
									"source": 13,
									"value": "44"
								},
								{
									"begin": 369,
									"end": 387,
									"name": "ADD",
									"source": 13
								},
								{
									"begin": 3710,
									"end": 3752,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 12,
									"value": "20"
								},
								{
									"begin": 3710,
									"end": 3752,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 12,
									"value": "40"
								},
								{
									"begin": 3710,
									"end": 3752,
									"modifierDepth": 1,
									"name": "MLOAD",
									"source": 12
								},
								{
									"begin": 3710,
									"end": 3752,
									"modifierDepth": 1,
									"name": "DUP1",
									"source": 12
								},
								{
									"begin": 3710,
									"end": 3752,
									"modifierDepth": 1,
									"name": "DUP4",
									"source": 12
								},
								{
									"begin": 3710,
									"end": 3752,
									"modifierDepth": 1,
									"name": "SUB",
									"source": 12
								},
								{
									"begin": 3710,
									"end": 3752,
									"modifierDepth": 1,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 3710,
									"end": 3752,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 3710,
									"end": 3752,
									"modifierDepth": 1,
									"name": "DUP8",
									"source": 12
								},
								{
									"begin": 3710,
									"end": 3752,
									"modifierDepth": 1,
									"name": "GAS",
									"source": 12
								},
								{
									"begin": 3710,
									"end": 3752,
									"modifierDepth": 1,
									"name": "CALL",
									"source": 12
								},
								{
									"begin": 3710,
									"end": 3752,
									"modifierDepth": 1,
									"name": "ISZERO",
									"source": 12
								},
								{
									"begin": 3710,
									"end": 3752,
									"modifierDepth": 1,
									"name": "DUP1",
									"source": 12
								},
								{
									"begin": 3710,
									"end": 3752,
									"modifierDepth": 1,
									"name": "ISZERO",
									"source": 12
								},
								{
									"begin": 3710,
									"end": 3752,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "31"
								},
								{
									"begin": 3710,
									"end": 3752,
									"modifierDepth": 1,
									"name": "JUMPI",
									"source": 12
								},
								{
									"begin": 3710,
									"end": 3752,
									"modifierDepth": 1,
									"name": "RETURNDATASIZE",
									"source": 12
								},
								{
									"begin": 3710,
									"end": 3752,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 3710,
									"end": 3752,
									"name": "DUP1",
									"source": 12
								},
								{
									"begin": 3710,
									"end": 3752,
									"modifierDepth": 1,
									"name": "RETURNDATACOPY",
									"source": 12
								},
								{
									"begin": 3710,
									"end": 3752,
									"modifierDepth": 1,
									"name": "RETURNDATASIZE",
									"source": 12
								},
								{
									"begin": 3710,
									"end": 3752,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 3710,
									"end": 3752,
									"modifierDepth": 1,
									"name": "REVERT",
									"source": 12
								},
								{
									"begin": 3710,
									"end": 3752,
									"modifierDepth": 1,
									"name": "tag",
									"source": 12,
									"value": "31"
								},
								{
									"begin": 3710,
									"end": 3752,
									"modifierDepth": 1,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 3710,
									"end": 3752,
									"modifierDepth": 1,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 3710,
									"end": 3752,
									"modifierDepth": 1,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 3710,
									"end": 3752,
									"modifierDepth": 1,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 3710,
									"end": 3752,
									"modifierDepth": 1,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 3710,
									"end": 3752,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 12,
									"value": "40"
								},
								{
									"begin": 3710,
									"end": 3752,
									"modifierDepth": 1,
									"name": "MLOAD",
									"source": 12
								},
								{
									"begin": 3710,
									"end": 3752,
									"modifierDepth": 1,
									"name": "RETURNDATASIZE",
									"source": 12
								},
								{
									"begin": 3710,
									"end": 3752,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 12,
									"value": "1F"
								},
								{
									"begin": 3710,
									"end": 3752,
									"modifierDepth": 1,
									"name": "NOT",
									"source": 12
								},
								{
									"begin": 3710,
									"end": 3752,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 12,
									"value": "1F"
								},
								{
									"begin": 3710,
									"end": 3752,
									"modifierDepth": 1,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 3710,
									"end": 3752,
									"modifierDepth": 1,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 3710,
									"end": 3752,
									"modifierDepth": 1,
									"name": "AND",
									"source": 12
								},
								{
									"begin": 3710,
									"end": 3752,
									"modifierDepth": 1,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 3710,
									"end": 3752,
									"modifierDepth": 1,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 3710,
									"end": 3752,
									"modifierDepth": 1,
									"name": "DUP1",
									"source": 12
								},
								{
									"begin": 3710,
									"end": 3752,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 12,
									"value": "40"
								},
								{
									"begin": 3710,
									"end": 3752,
									"modifierDepth": 1,
									"name": "MSTORE",
									"source": 12
								},
								{
									"begin": 3710,
									"end": 3752,
									"modifierDepth": 1,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 3710,
									"end": 3752,
									"modifierDepth": 1,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 3710,
									"end": 3752,
									"modifierDepth": 1,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 3710,
									"end": 3752,
									"modifierDepth": 1,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 3710,
									"end": 3752,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "32"
								},
								{
									"begin": 3710,
									"end": 3752,
									"modifierDepth": 1,
									"name": "SWAP2",
									"source": 12
								},
								{
									"begin": 3710,
									"end": 3752,
									"modifierDepth": 1,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 3710,
									"end": 3752,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "16"
								},
								{
									"begin": 3710,
									"end": 3752,
									"jumpType": "[in]",
									"modifierDepth": 1,
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 3710,
									"end": 3752,
									"modifierDepth": 1,
									"name": "tag",
									"source": 12,
									"value": "32"
								},
								{
									"begin": 3710,
									"end": 3752,
									"modifierDepth": 1,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 3710,
									"end": 3752,
									"modifierDepth": 1,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 2107,
									"end": 10094,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "35"
								},
								{
									"begin": 2107,
									"end": 10094,
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 2912,
									"end": 3099,
									"name": "tag",
									"source": 0,
									"value": "9"
								},
								{
									"begin": 2912,
									"end": 3099,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 2985,
									"end": 3001,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "AND",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "DUP5",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SWAP3",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SWAP3",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 0,
									"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 2985,
									"end": 3001,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "LOG3",
									"source": 0
								},
								{
									"begin": 2975,
									"end": 3099,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2912,
									"end": 3099,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2912,
									"end": 3099,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 501,
									"end": 778,
									"name": "tag",
									"source": 13,
									"value": "16"
								},
								{
									"begin": 501,
									"end": 778,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 568,
									"end": 574,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 621,
									"end": 623,
									"name": "PUSH",
									"source": 13,
									"value": "20"
								},
								{
									"begin": 609,
									"end": 618,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 600,
									"end": 607,
									"name": "DUP5",
									"source": 13
								},
								{
									"begin": 596,
									"end": 619,
									"name": "SUB",
									"source": 13
								},
								{
									"begin": 592,
									"end": 624,
									"name": "SLT",
									"source": 13
								},
								{
									"begin": 589,
									"end": 641,
									"name": "ISZERO",
									"source": 13
								},
								{
									"begin": 589,
									"end": 641,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "39"
								},
								{
									"begin": 589,
									"end": 641,
									"name": "JUMPI",
									"source": 13
								},
								{
									"begin": 637,
									"end": 638,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 634,
									"end": 635,
									"name": "DUP1",
									"source": 13
								},
								{
									"begin": 627,
									"end": 639,
									"name": "REVERT",
									"source": 13
								},
								{
									"begin": 589,
									"end": 641,
									"name": "tag",
									"source": 13,
									"value": "39"
								},
								{
									"begin": 589,
									"end": 641,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 669,
									"end": 678,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 663,
									"end": 679,
									"name": "MLOAD",
									"source": 13
								},
								{
									"begin": 722,
									"end": 727,
									"name": "DUP1",
									"source": 13
								},
								{
									"begin": 715,
									"end": 728,
									"name": "ISZERO",
									"source": 13
								},
								{
									"begin": 708,
									"end": 729,
									"name": "ISZERO",
									"source": 13
								},
								{
									"begin": 701,
									"end": 706,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 698,
									"end": 730,
									"name": "EQ",
									"source": 13
								},
								{
									"begin": 688,
									"end": 748,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "40"
								},
								{
									"begin": 688,
									"end": 748,
									"name": "JUMPI",
									"source": 13
								},
								{
									"begin": 744,
									"end": 745,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 741,
									"end": 742,
									"name": "DUP1",
									"source": 13
								},
								{
									"begin": 734,
									"end": 746,
									"name": "REVERT",
									"source": 13
								},
								{
									"begin": 688,
									"end": 748,
									"name": "tag",
									"source": 13,
									"value": "40"
								},
								{
									"begin": 688,
									"end": 748,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 767,
									"end": 772,
									"name": "SWAP4",
									"source": 13
								},
								{
									"begin": 501,
									"end": 778,
									"name": "SWAP3",
									"source": 13
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 501,
									"end": 778,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 501,
									"end": 778,
									"name": "tag",
									"source": 13,
									"value": "35"
								},
								{
									"begin": 501,
									"end": 778,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 2107,
									"end": 10094,
									"name": "PUSH #[$]",
									"source": 12,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 2107,
									"end": 10094,
									"name": "DUP1",
									"source": 12
								},
								{
									"begin": 2107,
									"end": 10094,
									"name": "PUSH [$]",
									"source": 12,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 2107,
									"end": 10094,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 2107,
									"end": 10094,
									"name": "CODECOPY",
									"source": 12
								},
								{
									"begin": 2107,
									"end": 10094,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 2107,
									"end": 10094,
									"name": "RETURN",
									"source": 12
								}
							],
							".data": {
								"0": {
									".auxdata": "a264697066735822122099f52f70626d33c76cd5e9c0c8515a1b004e3b9f039b27ed0abd8ecbd8c6ae8264736f6c63430008140033",
									".code": [
										{
											"begin": 2107,
											"end": 10094,
											"name": "PUSH",
											"source": 12,
											"value": "80"
										},
										{
											"begin": 2107,
											"end": 10094,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 2107,
											"end": 10094,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 2107,
											"end": 10094,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 2107,
											"end": 10094,
											"name": "CALLDATASIZE",
											"source": 12
										},
										{
											"begin": 2107,
											"end": 10094,
											"name": "LT",
											"source": 12
										},
										{
											"begin": 2107,
											"end": 10094,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "1"
										},
										{
											"begin": 2107,
											"end": 10094,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 2107,
											"end": 10094,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 2107,
											"end": 10094,
											"name": "CALLDATALOAD",
											"source": 12
										},
										{
											"begin": 2107,
											"end": 10094,
											"name": "PUSH",
											"source": 12,
											"value": "E0"
										},
										{
											"begin": 2107,
											"end": 10094,
											"name": "SHR",
											"source": 12
										},
										{
											"begin": 2107,
											"end": 10094,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 2107,
											"end": 10094,
											"name": "PUSH",
											"source": 12,
											"value": "A37B9E7F"
										},
										{
											"begin": 2107,
											"end": 10094,
											"name": "GT",
											"source": 12
										},
										{
											"begin": 2107,
											"end": 10094,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "28"
										},
										{
											"begin": 2107,
											"end": 10094,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 2107,
											"end": 10094,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 2107,
											"end": 10094,
											"name": "PUSH",
											"source": 12,
											"value": "B3F00674"
										},
										{
											"begin": 2107,
											"end": 10094,
											"name": "GT",
											"source": 12
										},
										{
											"begin": 2107,
											"end": 10094,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "29"
										},
										{
											"begin": 2107,
											"end": 10094,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 2107,
											"end": 10094,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 2107,
											"end": 10094,
											"name": "PUSH",
											"source": 12,
											"value": "D3E66A9E"
										},
										{
											"begin": 2107,
											"end": 10094,
											"name": "GT",
											"source": 12
										},
										{
											"begin": 2107,
											"end": 10094,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "30"
										},
										{
											"begin": 2107,
											"end": 10094,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 2107,
											"end": 10094,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 2107,
											"end": 10094,
											"name": "PUSH",
											"source": 12,
											"value": "D3E66A9E"
										},
										{
											"begin": 2107,
											"end": 10094,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 2107,
											"end": 10094,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "24"
										},
										{
											"begin": 2107,
											"end": 10094,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 2107,
											"end": 10094,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 2107,
											"end": 10094,
											"name": "PUSH",
											"source": 12,
											"value": "D7B7D3F3"
										},
										{
											"begin": 2107,
											"end": 10094,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 2107,
											"end": 10094,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "25"
										},
										{
											"begin": 2107,
											"end": 10094,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 2107,
											"end": 10094,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 2107,
											"end": 10094,
											"name": "PUSH",
											"source": 12,
											"value": "EDF26D9B"
										},
										{
											"begin": 2107,
											"end": 10094,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 2107,
											"end": 10094,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "26"
										},
										{
											"begin": 2107,
											"end": 10094,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 2107,
											"end": 10094,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 2107,
											"end": 10094,
											"name": "PUSH",
											"source": 12,
											"value": "F2FDE38B"
										},
										{
											"begin": 2107,
											"end": 10094,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 2107,
											"end": 10094,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "27"
										},
										{
											"begin": 2107,
											"end": 10094,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 2107,
											"end": 10094,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 2107,
											"end": 10094,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 2107,
											"end": 10094,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 2107,
											"end": 10094,
											"name": "tag",
											"source": 12,
											"value": "30"
										},
										{
											"begin": 2107,
											"end": 10094,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2107,
											"end": 10094,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 2107,
											"end": 10094,
											"name": "PUSH",
											"source": 12,
											"value": "B3F00674"
										},
										{
											"begin": 2107,
											"end": 10094,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 2107,
											"end": 10094,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "21"
										},
										{
											"begin": 2107,
											"end": 10094,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 2107,
											"end": 10094,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 2107,
											"end": 10094,
											"name": "PUSH",
											"source": 12,
											"value": "D0E30DB0"
										},
										{
											"begin": 2107,
											"end": 10094,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 2107,
											"end": 10094,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "22"
										},
										{
											"begin": 2107,
											"end": 10094,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 2107,
											"end": 10094,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 2107,
											"end": 10094,
											"name": "PUSH",
											"source": 12,
											"value": "D16A4010"
										},
										{
											"begin": 2107,
											"end": 10094,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 2107,
											"end": 10094,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "23"
										},
										{
											"begin": 2107,
											"end": 10094,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 2107,
											"end": 10094,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 2107,
											"end": 10094,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 2107,
											"end": 10094,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 2107,
											"end": 10094,
											"name": "tag",
											"source": 12,
											"value": "29"
										},
										{
											"begin": 2107,
											"end": 10094,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2107,
											"end": 10094,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 2107,
											"end": 10094,
											"name": "PUSH",
											"source": 12,
											"value": "A37B9E7F"
										},
										{
											"begin": 2107,
											"end": 10094,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 2107,
											"end": 10094,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "15"
										},
										{
											"begin": 2107,
											"end": 10094,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 2107,
											"end": 10094,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 2107,
											"end": 10094,
											"name": "PUSH",
											"source": 12,
											"value": "A6769EF8"
										},
										{
											"begin": 2107,
											"end": 10094,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 2107,
											"end": 10094,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "16"
										},
										{
											"begin": 2107,
											"end": 10094,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 2107,
											"end": 10094,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 2107,
											"end": 10094,
											"name": "PUSH",
											"source": 12,
											"value": "AC65334F"
										},
										{
											"begin": 2107,
											"end": 10094,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 2107,
											"end": 10094,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "17"
										},
										{
											"begin": 2107,
											"end": 10094,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 2107,
											"end": 10094,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 2107,
											"end": 10094,
											"name": "PUSH",
											"source": 12,
											"value": "AE38A070"
										},
										{
											"begin": 2107,
											"end": 10094,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 2107,
											"end": 10094,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "18"
										},
										{
											"begin": 2107,
											"end": 10094,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 2107,
											"end": 10094,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 2107,
											"end": 10094,
											"name": "PUSH",
											"source": 12,
											"value": "AFE43B94"
										},
										{
											"begin": 2107,
											"end": 10094,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 2107,
											"end": 10094,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "19"
										},
										{
											"begin": 2107,
											"end": 10094,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 2107,
											"end": 10094,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 2107,
											"end": 10094,
											"name": "PUSH",
											"source": 12,
											"value": "B0BEFE63"
										},
										{
											"begin": 2107,
											"end": 10094,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 2107,
											"end": 10094,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 2107,
											"end": 10094,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 2107,
											"end": 10094,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 2107,
											"end": 10094,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 2107,
											"end": 10094,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 2107,
											"end": 10094,
											"name": "tag",
											"source": 12,
											"value": "28"
										},
										{
											"begin": 2107,
											"end": 10094,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2107,
											"end": 10094,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 2107,
											"end": 10094,
											"name": "PUSH",
											"source": 12,
											"value": "5F0018CD"
										},
										{
											"begin": 2107,
											"end": 10094,
											"name": "GT",
											"source": 12
										},
										{
											"begin": 2107,
											"end": 10094,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "31"
										},
										{
											"begin": 2107,
											"end": 10094,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 2107,
											"end": 10094,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 2107,
											"end": 10094,
											"name": "PUSH",
											"source": 12,
											"value": "5F0018CD"
										},
										{
											"begin": 2107,
											"end": 10094,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 2107,
											"end": 10094,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "9"
										},
										{
											"begin": 2107,
											"end": 10094,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 2107,
											"end": 10094,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 2107,
											"end": 10094,
											"name": "PUSH",
											"source": 12,
											"value": "6504FBAD"
										},
										{
											"begin": 2107,
											"end": 10094,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 2107,
											"end": 10094,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "10"
										},
										{
											"begin": 2107,
											"end": 10094,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 2107,
											"end": 10094,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 2107,
											"end": 10094,
											"name": "PUSH",
											"source": 12,
											"value": "715018A6"
										},
										{
											"begin": 2107,
											"end": 10094,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 2107,
											"end": 10094,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "11"
										},
										{
											"begin": 2107,
											"end": 10094,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 2107,
											"end": 10094,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 2107,
											"end": 10094,
											"name": "PUSH",
											"source": 12,
											"value": "7C6F8FAE"
										},
										{
											"begin": 2107,
											"end": 10094,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 2107,
											"end": 10094,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "12"
										},
										{
											"begin": 2107,
											"end": 10094,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 2107,
											"end": 10094,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 2107,
											"end": 10094,
											"name": "PUSH",
											"source": 12,
											"value": "7FD6F15C"
										},
										{
											"begin": 2107,
											"end": 10094,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 2107,
											"end": 10094,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "13"
										},
										{
											"begin": 2107,
											"end": 10094,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 2107,
											"end": 10094,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 2107,
											"end": 10094,
											"name": "PUSH",
											"source": 12,
											"value": "8DA5CB5B"
										},
										{
											"begin": 2107,
											"end": 10094,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 2107,
											"end": 10094,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "14"
										},
										{
											"begin": 2107,
											"end": 10094,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 2107,
											"end": 10094,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 2107,
											"end": 10094,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 2107,
											"end": 10094,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 2107,
											"end": 10094,
											"name": "tag",
											"source": 12,
											"value": "31"
										},
										{
											"begin": 2107,
											"end": 10094,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2107,
											"end": 10094,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 2107,
											"end": 10094,
											"name": "PUSH",
											"source": 12,
											"value": "16214120"
										},
										{
											"begin": 2107,
											"end": 10094,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 2107,
											"end": 10094,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "3"
										},
										{
											"begin": 2107,
											"end": 10094,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 2107,
											"end": 10094,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 2107,
											"end": 10094,
											"name": "PUSH",
											"source": 12,
											"value": "1D470CB1"
										},
										{
											"begin": 2107,
											"end": 10094,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 2107,
											"end": 10094,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 2107,
											"end": 10094,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 2107,
											"end": 10094,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 2107,
											"end": 10094,
											"name": "PUSH",
											"source": 12,
											"value": "2E1A7D4D"
										},
										{
											"begin": 2107,
											"end": 10094,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 2107,
											"end": 10094,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "5"
										},
										{
											"begin": 2107,
											"end": 10094,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 2107,
											"end": 10094,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 2107,
											"end": 10094,
											"name": "PUSH",
											"source": 12,
											"value": "3977D68D"
										},
										{
											"begin": 2107,
											"end": 10094,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 2107,
											"end": 10094,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "6"
										},
										{
											"begin": 2107,
											"end": 10094,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 2107,
											"end": 10094,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 2107,
											"end": 10094,
											"name": "PUSH",
											"source": 12,
											"value": "39BDA01C"
										},
										{
											"begin": 2107,
											"end": 10094,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 2107,
											"end": 10094,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "7"
										},
										{
											"begin": 2107,
											"end": 10094,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 2107,
											"end": 10094,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 2107,
											"end": 10094,
											"name": "PUSH",
											"source": 12,
											"value": "53AC861E"
										},
										{
											"begin": 2107,
											"end": 10094,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 2107,
											"end": 10094,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "8"
										},
										{
											"begin": 2107,
											"end": 10094,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 2107,
											"end": 10094,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 2107,
											"end": 10094,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 2107,
											"end": 10094,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 2107,
											"end": 10094,
											"name": "tag",
											"source": 12,
											"value": "1"
										},
										{
											"begin": 2107,
											"end": 10094,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2107,
											"end": 10094,
											"name": "CALLDATASIZE",
											"source": 12
										},
										{
											"begin": 2107,
											"end": 10094,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "2"
										},
										{
											"begin": 2107,
											"end": 10094,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 2107,
											"end": 10094,
											"name": "STOP",
											"source": 12
										},
										{
											"begin": 2107,
											"end": 10094,
											"name": "tag",
											"source": 12,
											"value": "2"
										},
										{
											"begin": 2107,
											"end": 10094,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2107,
											"end": 10094,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 2107,
											"end": 10094,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 2107,
											"end": 10094,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 8894,
											"end": 9636,
											"name": "tag",
											"source": 12,
											"value": "3"
										},
										{
											"begin": 8894,
											"end": 9636,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 8894,
											"end": 9636,
											"name": "CALLVALUE",
											"source": 12
										},
										{
											"begin": 8894,
											"end": 9636,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 8894,
											"end": 9636,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 8894,
											"end": 9636,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "34"
										},
										{
											"begin": 8894,
											"end": 9636,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 8894,
											"end": 9636,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 8894,
											"end": 9636,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 8894,
											"end": 9636,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 8894,
											"end": 9636,
											"name": "tag",
											"source": 12,
											"value": "34"
										},
										{
											"begin": 8894,
											"end": 9636,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 8894,
											"end": 9636,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "35"
										},
										{
											"begin": 8894,
											"end": 9636,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "36"
										},
										{
											"begin": 8894,
											"end": 9636,
											"name": "CALLDATASIZE",
											"source": 12
										},
										{
											"begin": 8894,
											"end": 9636,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 8894,
											"end": 9636,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "37"
										},
										{
											"begin": 8894,
											"end": 9636,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 8894,
											"end": 9636,
											"name": "tag",
											"source": 12,
											"value": "36"
										},
										{
											"begin": 8894,
											"end": 9636,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 8894,
											"end": 9636,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "38"
										},
										{
											"begin": 8894,
											"end": 9636,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 8894,
											"end": 9636,
											"name": "tag",
											"source": 12,
											"value": "35"
										},
										{
											"begin": 8894,
											"end": 9636,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 8894,
											"end": 9636,
											"name": "STOP",
											"source": 12
										},
										{
											"begin": 2304,
											"end": 2377,
											"name": "tag",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 2304,
											"end": 2377,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2304,
											"end": 2377,
											"name": "CALLVALUE",
											"source": 12
										},
										{
											"begin": 2304,
											"end": 2377,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 2304,
											"end": 2377,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 2304,
											"end": 2377,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "39"
										},
										{
											"begin": 2304,
											"end": 2377,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 2304,
											"end": 2377,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 2304,
											"end": 2377,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 2304,
											"end": 2377,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 2304,
											"end": 2377,
											"name": "tag",
											"source": 12,
											"value": "39"
										},
										{
											"begin": 2304,
											"end": 2377,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2304,
											"end": 2377,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2304,
											"end": 2377,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 2335,
											"end": 2377,
											"name": "PUSH",
											"source": 12,
											"value": "5C7F8A570D578ED84E63FDFA7B1EE72DEAE1AE23"
										},
										{
											"begin": 2304,
											"end": 2377,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 2304,
											"end": 2377,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 2304,
											"end": 2377,
											"name": "tag",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 2304,
											"end": 2377,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2304,
											"end": 2377,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 2304,
											"end": 2377,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 683,
											"end": 715,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 683,
											"end": 715,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 683,
											"end": 715,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 665,
											"end": 716,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 665,
											"end": 716,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 653,
											"end": 655,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 638,
											"end": 656,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 2304,
											"end": 2377,
											"name": "tag",
											"source": 12,
											"value": "42"
										},
										{
											"begin": 2304,
											"end": 2377,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2304,
											"end": 2377,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 2304,
											"end": 2377,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 2304,
											"end": 2377,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 2304,
											"end": 2377,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 2304,
											"end": 2377,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 2304,
											"end": 2377,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 2304,
											"end": 2377,
											"name": "RETURN",
											"source": 12
										},
										{
											"begin": 9851,
											"end": 10054,
											"name": "tag",
											"source": 12,
											"value": "5"
										},
										{
											"begin": 9851,
											"end": 10054,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 9851,
											"end": 10054,
											"name": "CALLVALUE",
											"source": 12
										},
										{
											"begin": 9851,
											"end": 10054,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 9851,
											"end": 10054,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 9851,
											"end": 10054,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "44"
										},
										{
											"begin": 9851,
											"end": 10054,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 9851,
											"end": 10054,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 9851,
											"end": 10054,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 9851,
											"end": 10054,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 9851,
											"end": 10054,
											"name": "tag",
											"source": 12,
											"value": "44"
										},
										{
											"begin": 9851,
											"end": 10054,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 9851,
											"end": 10054,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "35"
										},
										{
											"begin": 9851,
											"end": 10054,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "46"
										},
										{
											"begin": 9851,
											"end": 10054,
											"name": "CALLDATASIZE",
											"source": 12
										},
										{
											"begin": 9851,
											"end": 10054,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 9851,
											"end": 10054,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "47"
										},
										{
											"begin": 9851,
											"end": 10054,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 9851,
											"end": 10054,
											"name": "tag",
											"source": 12,
											"value": "46"
										},
										{
											"begin": 9851,
											"end": 10054,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 9851,
											"end": 10054,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "48"
										},
										{
											"begin": 9851,
											"end": 10054,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 4731,
											"end": 4891,
											"name": "tag",
											"source": 12,
											"value": "6"
										},
										{
											"begin": 4731,
											"end": 4891,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 4731,
											"end": 4891,
											"name": "CALLVALUE",
											"source": 12
										},
										{
											"begin": 4731,
											"end": 4891,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 4731,
											"end": 4891,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 4731,
											"end": 4891,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "49"
										},
										{
											"begin": 4731,
											"end": 4891,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 4731,
											"end": 4891,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 4731,
											"end": 4891,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 4731,
											"end": 4891,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 4731,
											"end": 4891,
											"name": "tag",
											"source": 12,
											"value": "49"
										},
										{
											"begin": 4731,
											"end": 4891,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4731,
											"end": 4891,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "35"
										},
										{
											"begin": 4731,
											"end": 4891,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "51"
										},
										{
											"begin": 4731,
											"end": 4891,
											"name": "CALLDATASIZE",
											"source": 12
										},
										{
											"begin": 4731,
											"end": 4891,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 4731,
											"end": 4891,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "52"
										},
										{
											"begin": 4731,
											"end": 4891,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 4731,
											"end": 4891,
											"name": "tag",
											"source": 12,
											"value": "51"
										},
										{
											"begin": 4731,
											"end": 4891,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 4731,
											"end": 4891,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "53"
										},
										{
											"begin": 4731,
											"end": 4891,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 4222,
											"end": 4472,
											"name": "tag",
											"source": 12,
											"value": "7"
										},
										{
											"begin": 4222,
											"end": 4472,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 4222,
											"end": 4472,
											"name": "CALLVALUE",
											"source": 12
										},
										{
											"begin": 4222,
											"end": 4472,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 4222,
											"end": 4472,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 4222,
											"end": 4472,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "54"
										},
										{
											"begin": 4222,
											"end": 4472,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 4222,
											"end": 4472,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 4222,
											"end": 4472,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 4222,
											"end": 4472,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 4222,
											"end": 4472,
											"name": "tag",
											"source": 12,
											"value": "54"
										},
										{
											"begin": 4222,
											"end": 4472,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 4222,
											"end": 4472,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 4222,
											"end": 4472,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "35"
										},
										{
											"begin": 4222,
											"end": 4472,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "56"
										},
										{
											"begin": 4222,
											"end": 4472,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 8047,
											"end": 8842,
											"name": "tag",
											"source": 12,
											"value": "8"
										},
										{
											"begin": 8047,
											"end": 8842,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 8047,
											"end": 8842,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "35"
										},
										{
											"begin": 8047,
											"end": 8842,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "58"
										},
										{
											"begin": 8047,
											"end": 8842,
											"name": "CALLDATASIZE",
											"source": 12
										},
										{
											"begin": 8047,
											"end": 8842,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 8047,
											"end": 8842,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "52"
										},
										{
											"begin": 8047,
											"end": 8842,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 8047,
											"end": 8842,
											"name": "tag",
											"source": 12,
											"value": "58"
										},
										{
											"begin": 8047,
											"end": 8842,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 8047,
											"end": 8842,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "59"
										},
										{
											"begin": 8047,
											"end": 8842,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 4480,
											"end": 4570,
											"name": "tag",
											"source": 12,
											"value": "9"
										},
										{
											"begin": 4480,
											"end": 4570,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 4480,
											"end": 4570,
											"name": "CALLVALUE",
											"source": 12
										},
										{
											"begin": 4480,
											"end": 4570,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 4480,
											"end": 4570,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 4480,
											"end": 4570,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "60"
										},
										{
											"begin": 4480,
											"end": 4570,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 4480,
											"end": 4570,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 4480,
											"end": 4570,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 4480,
											"end": 4570,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 4480,
											"end": 4570,
											"name": "tag",
											"source": 12,
											"value": "60"
										},
										{
											"begin": 4480,
											"end": 4570,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 4480,
											"end": 4570,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 4480,
											"end": 4570,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "35"
										},
										{
											"begin": 4480,
											"end": 4570,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "62"
										},
										{
											"begin": 4480,
											"end": 4570,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 2223,
											"end": 2297,
											"name": "tag",
											"source": 12,
											"value": "10"
										},
										{
											"begin": 2223,
											"end": 2297,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2223,
											"end": 2297,
											"name": "CALLVALUE",
											"source": 12
										},
										{
											"begin": 2223,
											"end": 2297,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 2223,
											"end": 2297,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 2223,
											"end": 2297,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "63"
										},
										{
											"begin": 2223,
											"end": 2297,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 2223,
											"end": 2297,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 2223,
											"end": 2297,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 2223,
											"end": 2297,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 2223,
											"end": 2297,
											"name": "tag",
											"source": 12,
											"value": "63"
										},
										{
											"begin": 2223,
											"end": 2297,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2223,
											"end": 2297,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2223,
											"end": 2297,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 2255,
											"end": 2297,
											"name": "PUSH",
											"source": 12,
											"value": "66E428C3F67A68878562E79A0234C1F83C208770"
										},
										{
											"begin": 2223,
											"end": 2297,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 2223,
											"end": 2297,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "tag",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "67"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "tag",
											"source": 0,
											"value": "67"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "35"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "69"
										},
										{
											"begin": 2293,
											"end": 2394,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2637,
											"end": 2725,
											"name": "tag",
											"source": 12,
											"value": "12"
										},
										{
											"begin": 2637,
											"end": 2725,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2637,
											"end": 2725,
											"name": "CALLVALUE",
											"source": 12
										},
										{
											"begin": 2637,
											"end": 2725,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 2637,
											"end": 2725,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 2637,
											"end": 2725,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "70"
										},
										{
											"begin": 2637,
											"end": 2725,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 2637,
											"end": 2725,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 2637,
											"end": 2725,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 2637,
											"end": 2725,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 2637,
											"end": 2725,
											"name": "tag",
											"source": 12,
											"value": "70"
										},
										{
											"begin": 2637,
											"end": 2725,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2637,
											"end": 2725,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2637,
											"end": 2725,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 2683,
											"end": 2725,
											"name": "PUSH",
											"source": 12,
											"value": "3B44B2A187A7B3824131F8DB5A74194D0A42FC15"
										},
										{
											"begin": 2637,
											"end": 2725,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 2637,
											"end": 2725,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 2765,
											"end": 2790,
											"name": "tag",
											"source": 12,
											"value": "13"
										},
										{
											"begin": 2765,
											"end": 2790,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2765,
											"end": 2790,
											"name": "CALLVALUE",
											"source": 12
										},
										{
											"begin": 2765,
											"end": 2790,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 2765,
											"end": 2790,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 2765,
											"end": 2790,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "74"
										},
										{
											"begin": 2765,
											"end": 2790,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 2765,
											"end": 2790,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 2765,
											"end": 2790,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 2765,
											"end": 2790,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 2765,
											"end": 2790,
											"name": "tag",
											"source": 12,
											"value": "74"
										},
										{
											"begin": 2765,
											"end": 2790,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2765,
											"end": 2790,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2765,
											"end": 2790,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "75"
										},
										{
											"begin": 2765,
											"end": 2790,
											"name": "PUSH",
											"source": 12,
											"value": "2"
										},
										{
											"begin": 2765,
											"end": 2790,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 2765,
											"end": 2790,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 2765,
											"end": 2790,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 2765,
											"end": 2790,
											"name": "tag",
											"source": 12,
											"value": "75"
										},
										{
											"begin": 2765,
											"end": 2790,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2765,
											"end": 2790,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 2765,
											"end": 2790,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 1317,
											"end": 1342,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 1317,
											"end": 1342,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 1317,
											"end": 1342,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 1305,
											"end": 1307,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 1290,
											"end": 1308,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 2765,
											"end": 2790,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "42"
										},
										{
											"begin": 1171,
											"end": 1348,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "tag",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "79"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "tag",
											"source": 0,
											"value": "79"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1684,
											"end": 1691,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2142,
											"end": 2216,
											"name": "tag",
											"source": 12,
											"value": "15"
										},
										{
											"begin": 2142,
											"end": 2216,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2142,
											"end": 2216,
											"name": "CALLVALUE",
											"source": 12
										},
										{
											"begin": 2142,
											"end": 2216,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 2142,
											"end": 2216,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 2142,
											"end": 2216,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "83"
										},
										{
											"begin": 2142,
											"end": 2216,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 2142,
											"end": 2216,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 2142,
											"end": 2216,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 2142,
											"end": 2216,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 2142,
											"end": 2216,
											"name": "tag",
											"source": 12,
											"value": "83"
										},
										{
											"begin": 2142,
											"end": 2216,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2142,
											"end": 2216,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2142,
											"end": 2216,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 2174,
											"end": 2216,
											"name": "PUSH",
											"source": 12,
											"value": "C21223249CA28397B4B6541DFFAECC539BFF0C59"
										},
										{
											"begin": 2142,
											"end": 2216,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 2142,
											"end": 2216,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 2843,
											"end": 2888,
											"name": "tag",
											"source": 12,
											"value": "16"
										},
										{
											"begin": 2843,
											"end": 2888,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2843,
											"end": 2888,
											"name": "CALLVALUE",
											"source": 12
										},
										{
											"begin": 2843,
											"end": 2888,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 2843,
											"end": 2888,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 2843,
											"end": 2888,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "87"
										},
										{
											"begin": 2843,
											"end": 2888,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 2843,
											"end": 2888,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 2843,
											"end": 2888,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 2843,
											"end": 2888,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 2843,
											"end": 2888,
											"name": "tag",
											"source": 12,
											"value": "87"
										},
										{
											"begin": 2843,
											"end": 2888,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2843,
											"end": 2888,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "75"
										},
										{
											"begin": 2843,
											"end": 2888,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "89"
										},
										{
											"begin": 2843,
											"end": 2888,
											"name": "CALLDATASIZE",
											"source": 12
										},
										{
											"begin": 2843,
											"end": 2888,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 2843,
											"end": 2888,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "90"
										},
										{
											"begin": 2843,
											"end": 2888,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 2843,
											"end": 2888,
											"name": "tag",
											"source": 12,
											"value": "89"
										},
										{
											"begin": 2843,
											"end": 2888,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2843,
											"end": 2888,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 2843,
											"end": 2888,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 2843,
											"end": 2888,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 2843,
											"end": 2888,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 2843,
											"end": 2888,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 2843,
											"end": 2888,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 2843,
											"end": 2888,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 2843,
											"end": 2888,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 2843,
											"end": 2888,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 2843,
											"end": 2888,
											"name": "KECCAK256",
											"source": 12
										},
										{
											"begin": 2843,
											"end": 2888,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 2843,
											"end": 2888,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 2843,
											"end": 2888,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 2797,
											"end": 2836,
											"name": "tag",
											"source": 12,
											"value": "17"
										},
										{
											"begin": 2797,
											"end": 2836,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2797,
											"end": 2836,
											"name": "CALLVALUE",
											"source": 12
										},
										{
											"begin": 2797,
											"end": 2836,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 2797,
											"end": 2836,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 2797,
											"end": 2836,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "93"
										},
										{
											"begin": 2797,
											"end": 2836,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 2797,
											"end": 2836,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 2797,
											"end": 2836,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 2797,
											"end": 2836,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 2797,
											"end": 2836,
											"name": "tag",
											"source": 12,
											"value": "93"
										},
										{
											"begin": 2797,
											"end": 2836,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2797,
											"end": 2836,
											"name": "PUSH",
											"source": 12,
											"value": "3"
										},
										{
											"begin": 2797,
											"end": 2836,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 2797,
											"end": 2836,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "94"
										},
										{
											"begin": 2797,
											"end": 2836,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 2797,
											"end": 2836,
											"name": "PUSH",
											"source": 12,
											"value": "FF"
										},
										{
											"begin": 2797,
											"end": 2836,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 2797,
											"end": 2836,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 2797,
											"end": 2836,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 2797,
											"end": 2836,
											"name": "tag",
											"source": 12,
											"value": "94"
										},
										{
											"begin": 2797,
											"end": 2836,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2797,
											"end": 2836,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 2797,
											"end": 2836,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 1709,
											"end": 1723,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 1709,
											"end": 1723,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 1702,
											"end": 1724,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 1684,
											"end": 1725,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 1684,
											"end": 1725,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 1672,
											"end": 1674,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 1657,
											"end": 1675,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 2797,
											"end": 2836,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "42"
										},
										{
											"begin": 1544,
											"end": 1731,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 3809,
											"end": 4174,
											"name": "tag",
											"source": 12,
											"value": "18"
										},
										{
											"begin": 3809,
											"end": 4174,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3809,
											"end": 4174,
											"name": "CALLVALUE",
											"source": 12
										},
										{
											"begin": 3809,
											"end": 4174,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 3809,
											"end": 4174,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 3809,
											"end": 4174,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "98"
										},
										{
											"begin": 3809,
											"end": 4174,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 3809,
											"end": 4174,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 3809,
											"end": 4174,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 3809,
											"end": 4174,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 3809,
											"end": 4174,
											"name": "tag",
											"source": 12,
											"value": "98"
										},
										{
											"begin": 3809,
											"end": 4174,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3809,
											"end": 4174,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 3809,
											"end": 4174,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "99"
										},
										{
											"begin": 3809,
											"end": 4174,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "100"
										},
										{
											"begin": 3809,
											"end": 4174,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 3809,
											"end": 4174,
											"name": "tag",
											"source": 12,
											"value": "99"
										},
										{
											"begin": 3809,
											"end": 4174,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3809,
											"end": 4174,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 3809,
											"end": 4174,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 3809,
											"end": 4174,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "42"
										},
										{
											"begin": 3809,
											"end": 4174,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 3809,
											"end": 4174,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 3809,
											"end": 4174,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "102"
										},
										{
											"begin": 3809,
											"end": 4174,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 2384,
											"end": 2456,
											"name": "tag",
											"source": 12,
											"value": "19"
										},
										{
											"begin": 2384,
											"end": 2456,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2384,
											"end": 2456,
											"name": "CALLVALUE",
											"source": 12
										},
										{
											"begin": 2384,
											"end": 2456,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 2384,
											"end": 2456,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 2384,
											"end": 2456,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "103"
										},
										{
											"begin": 2384,
											"end": 2456,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 2384,
											"end": 2456,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 2384,
											"end": 2456,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 2384,
											"end": 2456,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 2384,
											"end": 2456,
											"name": "tag",
											"source": 12,
											"value": "103"
										},
										{
											"begin": 2384,
											"end": 2456,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2384,
											"end": 2456,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2384,
											"end": 2456,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 2414,
											"end": 2456,
											"name": "PUSH",
											"source": 12,
											"value": "41BC026DABE978BC2FAFEA1850456511CA4B01BC"
										},
										{
											"begin": 2384,
											"end": 2456,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 2384,
											"end": 2456,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 2463,
											"end": 2536,
											"name": "tag",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 2463,
											"end": 2536,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2463,
											"end": 2536,
											"name": "CALLVALUE",
											"source": 12
										},
										{
											"begin": 2463,
											"end": 2536,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 2463,
											"end": 2536,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 2463,
											"end": 2536,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "107"
										},
										{
											"begin": 2463,
											"end": 2536,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 2463,
											"end": 2536,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 2463,
											"end": 2536,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 2463,
											"end": 2536,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 2463,
											"end": 2536,
											"name": "tag",
											"source": 12,
											"value": "107"
										},
										{
											"begin": 2463,
											"end": 2536,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2463,
											"end": 2536,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2463,
											"end": 2536,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 2494,
											"end": 2536,
											"name": "PUSH",
											"source": 12,
											"value": "3B41B27E74DD366CE27CB389DC7877D4E1516D4D"
										},
										{
											"begin": 2463,
											"end": 2536,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 2463,
											"end": 2536,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 2732,
											"end": 2758,
											"name": "tag",
											"source": 12,
											"value": "21"
										},
										{
											"begin": 2732,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2732,
											"end": 2758,
											"name": "CALLVALUE",
											"source": 12
										},
										{
											"begin": 2732,
											"end": 2758,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 2732,
											"end": 2758,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 2732,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "111"
										},
										{
											"begin": 2732,
											"end": 2758,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 2732,
											"end": 2758,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 2732,
											"end": 2758,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 2732,
											"end": 2758,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 2732,
											"end": 2758,
											"name": "tag",
											"source": 12,
											"value": "111"
										},
										{
											"begin": 2732,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2732,
											"end": 2758,
											"name": "PUSH",
											"source": 12,
											"value": "1"
										},
										{
											"begin": 2732,
											"end": 2758,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 2732,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 2732,
											"end": 2758,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2732,
											"end": 2758,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 2732,
											"end": 2758,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 2732,
											"end": 2758,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 9672,
											"end": 9843,
											"name": "tag",
											"source": 12,
											"value": "22"
										},
										{
											"begin": 9672,
											"end": 9843,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 9672,
											"end": 9843,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "35"
										},
										{
											"begin": 9672,
											"end": 9843,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "116"
										},
										{
											"begin": 9672,
											"end": 9843,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 5854,
											"end": 7999,
											"name": "tag",
											"source": 12,
											"value": "23"
										},
										{
											"begin": 5854,
											"end": 7999,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 5854,
											"end": 7999,
											"name": "CALLVALUE",
											"source": 12
										},
										{
											"begin": 5854,
											"end": 7999,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 5854,
											"end": 7999,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 5854,
											"end": 7999,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "117"
										},
										{
											"begin": 5854,
											"end": 7999,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 5854,
											"end": 7999,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 5854,
											"end": 7999,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 5854,
											"end": 7999,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 5854,
											"end": 7999,
											"name": "tag",
											"source": 12,
											"value": "117"
										},
										{
											"begin": 5854,
											"end": 7999,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5854,
											"end": 7999,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "35"
										},
										{
											"begin": 5854,
											"end": 7999,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "119"
										},
										{
											"begin": 5854,
											"end": 7999,
											"name": "CALLDATASIZE",
											"source": 12
										},
										{
											"begin": 5854,
											"end": 7999,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 5854,
											"end": 7999,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "120"
										},
										{
											"begin": 5854,
											"end": 7999,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 5854,
											"end": 7999,
											"name": "tag",
											"source": 12,
											"value": "119"
										},
										{
											"begin": 5854,
											"end": 7999,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 5854,
											"end": 7999,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "121"
										},
										{
											"begin": 5854,
											"end": 7999,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 4576,
											"end": 4666,
											"name": "tag",
											"source": 12,
											"value": "24"
										},
										{
											"begin": 4576,
											"end": 4666,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 4576,
											"end": 4666,
											"name": "CALLVALUE",
											"source": 12
										},
										{
											"begin": 4576,
											"end": 4666,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 4576,
											"end": 4666,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 4576,
											"end": 4666,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "122"
										},
										{
											"begin": 4576,
											"end": 4666,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 4576,
											"end": 4666,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 4576,
											"end": 4666,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 4576,
											"end": 4666,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 4576,
											"end": 4666,
											"name": "tag",
											"source": 12,
											"value": "122"
										},
										{
											"begin": 4576,
											"end": 4666,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 4576,
											"end": 4666,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 4576,
											"end": 4666,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "35"
										},
										{
											"begin": 4576,
											"end": 4666,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "124"
										},
										{
											"begin": 4576,
											"end": 4666,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 2543,
											"end": 2630,
											"name": "tag",
											"source": 12,
											"value": "25"
										},
										{
											"begin": 2543,
											"end": 2630,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2543,
											"end": 2630,
											"name": "CALLVALUE",
											"source": 12
										},
										{
											"begin": 2543,
											"end": 2630,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 2543,
											"end": 2630,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 2543,
											"end": 2630,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "125"
										},
										{
											"begin": 2543,
											"end": 2630,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 2543,
											"end": 2630,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 2543,
											"end": 2630,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 2543,
											"end": 2630,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 2543,
											"end": 2630,
											"name": "tag",
											"source": 12,
											"value": "125"
										},
										{
											"begin": 2543,
											"end": 2630,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2543,
											"end": 2630,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2543,
											"end": 2630,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 2588,
											"end": 2630,
											"name": "PUSH",
											"source": 12,
											"value": "145863EB42CF62847A6CA784E6416C1682B1B2AE"
										},
										{
											"begin": 2543,
											"end": 2630,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 2543,
											"end": 2630,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 2941,
											"end": 2967,
											"name": "tag",
											"source": 12,
											"value": "26"
										},
										{
											"begin": 2941,
											"end": 2967,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2941,
											"end": 2967,
											"name": "CALLVALUE",
											"source": 12
										},
										{
											"begin": 2941,
											"end": 2967,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 2941,
											"end": 2967,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 2941,
											"end": 2967,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "129"
										},
										{
											"begin": 2941,
											"end": 2967,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 2941,
											"end": 2967,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 2941,
											"end": 2967,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 2941,
											"end": 2967,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 2941,
											"end": 2967,
											"name": "tag",
											"source": 12,
											"value": "129"
										},
										{
											"begin": 2941,
											"end": 2967,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2941,
											"end": 2967,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 2941,
											"end": 2967,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "131"
										},
										{
											"begin": 2941,
											"end": 2967,
											"name": "CALLDATASIZE",
											"source": 12
										},
										{
											"begin": 2941,
											"end": 2967,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 2941,
											"end": 2967,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "47"
										},
										{
											"begin": 2941,
											"end": 2967,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 2941,
											"end": 2967,
											"name": "tag",
											"source": 12,
											"value": "131"
										},
										{
											"begin": 2941,
											"end": 2967,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2941,
											"end": 2967,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "132"
										},
										{
											"begin": 2941,
											"end": 2967,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "134"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 0,
											"value": "134"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "35"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "136"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "90"
										},
										{
											"begin": 2543,
											"end": 2758,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 0,
											"value": "136"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "137"
										},
										{
											"begin": 2543,
											"end": 2758,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 8894,
											"end": 9636,
											"name": "tag",
											"source": 12,
											"value": "38"
										},
										{
											"begin": 8894,
											"end": 9636,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 9035,
											"end": 9051,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 9035,
											"end": 9051,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 2414,
											"end": 2456,
											"name": "PUSH",
											"source": 12,
											"value": "41BC026DABE978BC2FAFEA1850456511CA4B01BC"
										},
										{
											"begin": 9035,
											"end": 9051,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 9035,
											"end": 9074,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 9035,
											"end": 9074,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 9035,
											"end": 9074,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "139"
										},
										{
											"begin": 9035,
											"end": 9074,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 9055,
											"end": 9074,
											"name": "PUSH",
											"source": 12,
											"value": "3"
										},
										{
											"begin": 9055,
											"end": 9074,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 9055,
											"end": 9074,
											"name": "PUSH",
											"source": 12,
											"value": "FF"
										},
										{
											"begin": 9055,
											"end": 9074,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 9035,
											"end": 9074,
											"name": "tag",
											"source": 12,
											"value": "139"
										},
										{
											"begin": 9035,
											"end": 9074,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 9032,
											"end": 9107,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 9032,
											"end": 9107,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "141"
										},
										{
											"begin": 9032,
											"end": 9107,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 9076,
											"end": 9107,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "141"
										},
										{
											"begin": 9086,
											"end": 9096,
											"name": "CALLER",
											"source": 12
										},
										{
											"begin": 9098,
											"end": 9106,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 9076,
											"end": 9085,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "142"
										},
										{
											"begin": 9076,
											"end": 9107,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 9076,
											"end": 9107,
											"name": "tag",
											"source": 12,
											"value": "141"
										},
										{
											"begin": 9076,
											"end": 9107,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 9118,
											"end": 9185,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 9118,
											"end": 9185,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "23B872DD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 9118,
											"end": 9185,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 9118,
											"end": 9185,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 9149,
											"end": 9159,
											"name": "CALLER",
											"source": 12
										},
										{
											"begin": 9118,
											"end": 9185,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 9118,
											"end": 9185,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 9118,
											"end": 9185,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 3195,
											"end": 3229,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 9169,
											"end": 9173,
											"name": "ADDRESS",
											"source": 12
										},
										{
											"begin": 3245,
											"end": 3263,
											"name": "PUSH",
											"source": 13,
											"value": "24"
										},
										{
											"begin": 3245,
											"end": 3263,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 3245,
											"end": 3263,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 3238,
											"end": 3281,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 3297,
											"end": 3315,
											"name": "PUSH",
											"source": 13,
											"value": "44"
										},
										{
											"begin": 3297,
											"end": 3315,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 3297,
											"end": 3315,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 3290,
											"end": 3324,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 3290,
											"end": 3324,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 3290,
											"end": 3324,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 9118,
											"end": 9148,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 9118,
											"end": 9148,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 9118,
											"end": 9148,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 9118,
											"end": 9148,
											"name": "PUSH",
											"source": 12,
											"value": "23B872DD"
										},
										{
											"begin": 9118,
											"end": 9148,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 3130,
											"end": 3148,
											"name": "PUSH",
											"source": 13,
											"value": "64"
										},
										{
											"begin": 3130,
											"end": 3148,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 9118,
											"end": 9185,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 9118,
											"end": 9185,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 9118,
											"end": 9185,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 9118,
											"end": 9185,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 9118,
											"end": 9185,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 9118,
											"end": 9185,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 9118,
											"end": 9185,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 9118,
											"end": 9185,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 9118,
											"end": 9185,
											"name": "DUP8",
											"source": 12
										},
										{
											"begin": 9118,
											"end": 9185,
											"name": "GAS",
											"source": 12
										},
										{
											"begin": 9118,
											"end": 9185,
											"name": "CALL",
											"source": 12
										},
										{
											"begin": 9118,
											"end": 9185,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 9118,
											"end": 9185,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 9118,
											"end": 9185,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 9118,
											"end": 9185,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "146"
										},
										{
											"begin": 9118,
											"end": 9185,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 9118,
											"end": 9185,
											"name": "RETURNDATASIZE",
											"source": 12
										},
										{
											"begin": 9118,
											"end": 9185,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 9118,
											"end": 9185,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 9118,
											"end": 9185,
											"name": "RETURNDATACOPY",
											"source": 12
										},
										{
											"begin": 9118,
											"end": 9185,
											"name": "RETURNDATASIZE",
											"source": 12
										},
										{
											"begin": 9118,
											"end": 9185,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 9118,
											"end": 9185,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 9118,
											"end": 9185,
											"name": "tag",
											"source": 12,
											"value": "146"
										},
										{
											"begin": 9118,
											"end": 9185,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 9118,
											"end": 9185,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 9118,
											"end": 9185,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 9118,
											"end": 9185,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 9118,
											"end": 9185,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 9118,
											"end": 9185,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 9118,
											"end": 9185,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 9118,
											"end": 9185,
											"name": "RETURNDATASIZE",
											"source": 12
										},
										{
											"begin": 9118,
											"end": 9185,
											"name": "PUSH",
											"source": 12,
											"value": "1F"
										},
										{
											"begin": 9118,
											"end": 9185,
											"name": "NOT",
											"source": 12
										},
										{
											"begin": 9118,
											"end": 9185,
											"name": "PUSH",
											"source": 12,
											"value": "1F"
										},
										{
											"begin": 9118,
											"end": 9185,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 9118,
											"end": 9185,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 9118,
											"end": 9185,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 9118,
											"end": 9185,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 9118,
											"end": 9185,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 9118,
											"end": 9185,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 9118,
											"end": 9185,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 9118,
											"end": 9185,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 9118,
											"end": 9185,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 9118,
											"end": 9185,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 9118,
											"end": 9185,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 9118,
											"end": 9185,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 9118,
											"end": 9185,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "147"
										},
										{
											"begin": 9118,
											"end": 9185,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 9118,
											"end": 9185,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 9118,
											"end": 9185,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "148"
										},
										{
											"begin": 9118,
											"end": 9185,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 9118,
											"end": 9185,
											"name": "tag",
											"source": 12,
											"value": "147"
										},
										{
											"begin": 9118,
											"end": 9185,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 9118,
											"end": 9185,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 9206,
											"end": 9223,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 9250,
											"end": 9254,
											"name": "PUSH",
											"source": 12,
											"value": "3E8"
										},
										{
											"begin": 9237,
											"end": 9247,
											"name": "PUSH",
											"source": 12,
											"value": "2"
										},
										{
											"begin": 9237,
											"end": 9247,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 9226,
											"end": 9234,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 9226,
											"end": 9247,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "149"
										},
										{
											"begin": 9226,
											"end": 9247,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 9226,
											"end": 9247,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 9226,
											"end": 9247,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "150"
										},
										{
											"begin": 9226,
											"end": 9247,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 9226,
											"end": 9247,
											"name": "tag",
											"source": 12,
											"value": "149"
										},
										{
											"begin": 9226,
											"end": 9247,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 9226,
											"end": 9254,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "151"
										},
										{
											"begin": 9226,
											"end": 9254,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 9226,
											"end": 9254,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 9226,
											"end": 9254,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "152"
										},
										{
											"begin": 9226,
											"end": 9254,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 9226,
											"end": 9254,
											"name": "tag",
											"source": 12,
											"value": "151"
										},
										{
											"begin": 9226,
											"end": 9254,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 9206,
											"end": 9254,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 9206,
											"end": 9254,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 9267,
											"end": 9295,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "153"
										},
										{
											"begin": 9274,
											"end": 9283,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 9285,
											"end": 9294,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 9267,
											"end": 9273,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "154"
										},
										{
											"begin": 9267,
											"end": 9295,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 9267,
											"end": 9295,
											"name": "tag",
											"source": 12,
											"value": "153"
										},
										{
											"begin": 9267,
											"end": 9295,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 9332,
											"end": 9348,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 9332,
											"end": 9348,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 9332,
											"end": 9348,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 9346,
											"end": 9347,
											"name": "PUSH",
											"source": 12,
											"value": "2"
										},
										{
											"begin": 9332,
											"end": 9348,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 9332,
											"end": 9348,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 9332,
											"end": 9348,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 9332,
											"end": 9348,
											"name": "PUSH",
											"source": 12,
											"value": "60"
										},
										{
											"begin": 9332,
											"end": 9348,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 9332,
											"end": 9348,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 9332,
											"end": 9348,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 9332,
											"end": 9348,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 9308,
											"end": 9329,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 9308,
											"end": 9329,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 9332,
											"end": 9348,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 9332,
											"end": 9348,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 9332,
											"end": 9348,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 9332,
											"end": 9348,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 9332,
											"end": 9348,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 9332,
											"end": 9348,
											"name": "CALLDATASIZE",
											"source": 12
										},
										{
											"begin": 9332,
											"end": 9348,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 9332,
											"end": 9348,
											"name": "CALLDATACOPY",
											"source": 12
										},
										{
											"begin": 9332,
											"end": 9348,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 9332,
											"end": 9348,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 9332,
											"end": 9348,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 9308,
											"end": 9348,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 9308,
											"end": 9348,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 9369,
											"end": 9378,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 9359,
											"end": 9363,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 9364,
											"end": 9365,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 9359,
											"end": 9366,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 9359,
											"end": 9366,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 9359,
											"end": 9366,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 9359,
											"end": 9366,
											"name": "LT",
											"source": 12
										},
										{
											"begin": 9359,
											"end": 9366,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "160"
										},
										{
											"begin": 9359,
											"end": 9366,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 9359,
											"end": 9366,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "160"
										},
										{
											"begin": 9359,
											"end": 9366,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "161"
										},
										{
											"begin": 9359,
											"end": 9366,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 9359,
											"end": 9366,
											"name": "tag",
											"source": 12,
											"value": "160"
										},
										{
											"begin": 9359,
											"end": 9366,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 9359,
											"end": 9366,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 9359,
											"end": 9366,
											"name": "MUL",
											"source": 12
										},
										{
											"begin": 9359,
											"end": 9366,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 9359,
											"end": 9366,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 9359,
											"end": 9366,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 9359,
											"end": 9378,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 9359,
											"end": 9378,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 9359,
											"end": 9378,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 9359,
											"end": 9378,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 9359,
											"end": 9378,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 9359,
											"end": 9378,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 9359,
											"end": 9378,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 9359,
											"end": 9378,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 9359,
											"end": 9378,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2335,
											"end": 2377,
											"name": "PUSH",
											"source": 12,
											"value": "5C7F8A570D578ED84E63FDFA7B1EE72DEAE1AE23"
										},
										{
											"begin": 9389,
											"end": 9393,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 9394,
											"end": 9395,
											"name": "PUSH",
											"source": 12,
											"value": "1"
										},
										{
											"begin": 9389,
											"end": 9396,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 9389,
											"end": 9396,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 9389,
											"end": 9396,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 9389,
											"end": 9396,
											"name": "LT",
											"source": 12
										},
										{
											"begin": 9389,
											"end": 9396,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "163"
										},
										{
											"begin": 9389,
											"end": 9396,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 9389,
											"end": 9396,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "163"
										},
										{
											"begin": 9389,
											"end": 9396,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "161"
										},
										{
											"begin": 9389,
											"end": 9396,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 9389,
											"end": 9396,
											"name": "tag",
											"source": 12,
											"value": "163"
										},
										{
											"begin": 9389,
											"end": 9396,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 9389,
											"end": 9403,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 9389,
											"end": 9403,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 9389,
											"end": 9403,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 9389,
											"end": 9396,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 9389,
											"end": 9396,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 9389,
											"end": 9396,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 9389,
											"end": 9396,
											"name": "MUL",
											"source": 12
										},
										{
											"begin": 9389,
											"end": 9396,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 9389,
											"end": 9396,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 9389,
											"end": 9396,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 9389,
											"end": 9396,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 9389,
											"end": 9396,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 9389,
											"end": 9403,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 9414,
											"end": 9420,
											"name": "PUSH",
											"source": 12,
											"value": "8"
										},
										{
											"begin": 9414,
											"end": 9420,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 9414,
											"end": 9420,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 9414,
											"end": 9471,
											"name": "PUSH",
											"source": 12,
											"value": "791AC947"
										},
										{
											"begin": 9486,
											"end": 9506,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "164"
										},
										{
											"begin": 9497,
											"end": 9506,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 9486,
											"end": 9494,
											"name": "DUP8",
											"source": 12
										},
										{
											"begin": 9486,
											"end": 9506,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "165"
										},
										{
											"begin": 9486,
											"end": 9506,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 9486,
											"end": 9506,
											"name": "tag",
											"source": 12,
											"value": "164"
										},
										{
											"begin": 9486,
											"end": 9506,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 9521,
											"end": 9533,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 9548,
											"end": 9552,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 9567,
											"end": 9577,
											"name": "CALLER",
											"source": 12
										},
										{
											"begin": 9592,
											"end": 9617,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "166"
										},
										{
											"begin": 9592,
											"end": 9607,
											"name": "TIMESTAMP",
											"source": 12
										},
										{
											"begin": 9610,
											"end": 9617,
											"name": "PUSH",
											"source": 12,
											"value": "E10"
										},
										{
											"begin": 9592,
											"end": 9617,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "167"
										},
										{
											"begin": 9592,
											"end": 9617,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 9592,
											"end": 9617,
											"name": "tag",
											"source": 12,
											"value": "166"
										},
										{
											"begin": 9592,
											"end": 9617,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 9414,
											"end": 9628,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 9414,
											"end": 9628,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 9414,
											"end": 9628,
											"name": "DUP7",
											"source": 12
										},
										{
											"begin": 9414,
											"end": 9628,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFF"
										},
										{
											"begin": 9414,
											"end": 9628,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 9414,
											"end": 9628,
											"name": "PUSH",
											"source": 12,
											"value": "E0"
										},
										{
											"begin": 9414,
											"end": 9628,
											"name": "SHL",
											"source": 12
										},
										{
											"begin": 9414,
											"end": 9628,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 9414,
											"end": 9628,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 9414,
											"end": 9628,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 9414,
											"end": 9628,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 9414,
											"end": 9628,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "168"
										},
										{
											"begin": 9414,
											"end": 9628,
											"name": "SWAP6",
											"source": 12
										},
										{
											"begin": 9414,
											"end": 9628,
											"name": "SWAP5",
											"source": 12
										},
										{
											"begin": 9414,
											"end": 9628,
											"name": "SWAP4",
											"source": 12
										},
										{
											"begin": 9414,
											"end": 9628,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 9414,
											"end": 9628,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 9414,
											"end": 9628,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 9414,
											"end": 9628,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "169"
										},
										{
											"begin": 9414,
											"end": 9628,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 9414,
											"end": 9628,
											"name": "tag",
											"source": 12,
											"value": "168"
										},
										{
											"begin": 9414,
											"end": 9628,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 9414,
											"end": 9628,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 9414,
											"end": 9628,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 9414,
											"end": 9628,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 9414,
											"end": 9628,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 9414,
											"end": 9628,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 9414,
											"end": 9628,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 9414,
											"end": 9628,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 9414,
											"end": 9628,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 9414,
											"end": 9628,
											"name": "DUP8",
											"source": 12
										},
										{
											"begin": 9414,
											"end": 9628,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 9414,
											"end": 9628,
											"name": "EXTCODESIZE",
											"source": 12
										},
										{
											"begin": 9414,
											"end": 9628,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 9414,
											"end": 9628,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 9414,
											"end": 9628,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 9414,
											"end": 9628,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "170"
										},
										{
											"begin": 9414,
											"end": 9628,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 9414,
											"end": 9628,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 9414,
											"end": 9628,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 9414,
											"end": 9628,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 9414,
											"end": 9628,
											"name": "tag",
											"source": 12,
											"value": "170"
										},
										{
											"begin": 9414,
											"end": 9628,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 9414,
											"end": 9628,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 9414,
											"end": 9628,
											"name": "GAS",
											"source": 12
										},
										{
											"begin": 9414,
											"end": 9628,
											"name": "CALL",
											"source": 12
										},
										{
											"begin": 9414,
											"end": 9628,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 9414,
											"end": 9628,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 9414,
											"end": 9628,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 9414,
											"end": 9628,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "172"
										},
										{
											"begin": 9414,
											"end": 9628,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 9414,
											"end": 9628,
											"name": "RETURNDATASIZE",
											"source": 12
										},
										{
											"begin": 9414,
											"end": 9628,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 9414,
											"end": 9628,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 9414,
											"end": 9628,
											"name": "RETURNDATACOPY",
											"source": 12
										},
										{
											"begin": 9414,
											"end": 9628,
											"name": "RETURNDATASIZE",
											"source": 12
										},
										{
											"begin": 9414,
											"end": 9628,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 9414,
											"end": 9628,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 9414,
											"end": 9628,
											"name": "tag",
											"source": 12,
											"value": "172"
										},
										{
											"begin": 9414,
											"end": 9628,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 9414,
											"end": 9628,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 9414,
											"end": 9628,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 9414,
											"end": 9628,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 9414,
											"end": 9628,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 9019,
											"end": 9636,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 9019,
											"end": 9636,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 8894,
											"end": 9636,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 8894,
											"end": 9636,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 8894,
											"end": 9636,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 8894,
											"end": 9636,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 9851,
											"end": 10054,
											"name": "tag",
											"source": 12,
											"value": "48"
										},
										{
											"begin": 9851,
											"end": 10054,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 9917,
											"end": 9921,
											"name": "PUSH",
											"source": 12,
											"value": "D"
										},
										{
											"begin": 9917,
											"end": 9921,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 9917,
											"end": 9966,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 9917,
											"end": 9966,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "23B872DD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 9917,
											"end": 9966,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 9917,
											"end": 9966,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 9935,
											"end": 9945,
											"name": "CALLER",
											"source": 12
										},
										{
											"begin": 9917,
											"end": 9966,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 9917,
											"end": 9966,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 9917,
											"end": 9966,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 3195,
											"end": 3229,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 9955,
											"end": 9959,
											"name": "ADDRESS",
											"source": 12
										},
										{
											"begin": 3245,
											"end": 3263,
											"name": "PUSH",
											"source": 13,
											"value": "24"
										},
										{
											"begin": 3245,
											"end": 3263,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 3245,
											"end": 3263,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 3238,
											"end": 3281,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 3297,
											"end": 3315,
											"name": "PUSH",
											"source": 13,
											"value": "44"
										},
										{
											"begin": 3297,
											"end": 3315,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 3297,
											"end": 3315,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 3290,
											"end": 3324,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 3290,
											"end": 3324,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 3290,
											"end": 3324,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 9917,
											"end": 9921,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 9917,
											"end": 9921,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 9917,
											"end": 9921,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 9917,
											"end": 9921,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 9917,
											"end": 9934,
											"name": "PUSH",
											"source": 12,
											"value": "23B872DD"
										},
										{
											"begin": 9917,
											"end": 9934,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 3130,
											"end": 3148,
											"name": "PUSH",
											"source": 13,
											"value": "64"
										},
										{
											"begin": 3130,
											"end": 3148,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 9917,
											"end": 9966,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 9917,
											"end": 9966,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 9917,
											"end": 9966,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 9917,
											"end": 9966,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 9917,
											"end": 9966,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 9917,
											"end": 9966,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 9917,
											"end": 9966,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 9917,
											"end": 9966,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 9917,
											"end": 9966,
											"name": "DUP8",
											"source": 12
										},
										{
											"begin": 9917,
											"end": 9966,
											"name": "GAS",
											"source": 12
										},
										{
											"begin": 9917,
											"end": 9966,
											"name": "CALL",
											"source": 12
										},
										{
											"begin": 9917,
											"end": 9966,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 9917,
											"end": 9966,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 9917,
											"end": 9966,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 9917,
											"end": 9966,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "176"
										},
										{
											"begin": 9917,
											"end": 9966,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 9917,
											"end": 9966,
											"name": "RETURNDATASIZE",
											"source": 12
										},
										{
											"begin": 9917,
											"end": 9966,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 9917,
											"end": 9966,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 9917,
											"end": 9966,
											"name": "RETURNDATACOPY",
											"source": 12
										},
										{
											"begin": 9917,
											"end": 9966,
											"name": "RETURNDATASIZE",
											"source": 12
										},
										{
											"begin": 9917,
											"end": 9966,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 9917,
											"end": 9966,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 9917,
											"end": 9966,
											"name": "tag",
											"source": 12,
											"value": "176"
										},
										{
											"begin": 9917,
											"end": 9966,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 9917,
											"end": 9966,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 9917,
											"end": 9966,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 9917,
											"end": 9966,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 9917,
											"end": 9966,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 9917,
											"end": 9966,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 9917,
											"end": 9966,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 9917,
											"end": 9966,
											"name": "RETURNDATASIZE",
											"source": 12
										},
										{
											"begin": 9917,
											"end": 9966,
											"name": "PUSH",
											"source": 12,
											"value": "1F"
										},
										{
											"begin": 9917,
											"end": 9966,
											"name": "NOT",
											"source": 12
										},
										{
											"begin": 9917,
											"end": 9966,
											"name": "PUSH",
											"source": 12,
											"value": "1F"
										},
										{
											"begin": 9917,
											"end": 9966,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 9917,
											"end": 9966,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 9917,
											"end": 9966,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 9917,
											"end": 9966,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 9917,
											"end": 9966,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 9917,
											"end": 9966,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 9917,
											"end": 9966,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 9917,
											"end": 9966,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 9917,
											"end": 9966,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 9917,
											"end": 9966,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 9917,
											"end": 9966,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 9917,
											"end": 9966,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 9917,
											"end": 9966,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "177"
										},
										{
											"begin": 9917,
											"end": 9966,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 9917,
											"end": 9966,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 9917,
											"end": 9966,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "148"
										},
										{
											"begin": 9917,
											"end": 9966,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 9917,
											"end": 9966,
											"name": "tag",
											"source": 12,
											"value": "177"
										},
										{
											"begin": 9917,
											"end": 9966,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 9977,
											"end": 9981,
											"name": "PUSH",
											"source": 12,
											"value": "D"
										},
										{
											"begin": 9977,
											"end": 9981,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 9977,
											"end": 9995,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 9977,
											"end": 9995,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "2E1A7D4D"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 9977,
											"end": 9995,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 9977,
											"end": 9995,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 9977,
											"end": 9995,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 9977,
											"end": 9995,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 9977,
											"end": 9995,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 1317,
											"end": 1342,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 1317,
											"end": 1342,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 1317,
											"end": 1342,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 9977,
											"end": 9981,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 9977,
											"end": 9981,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 9977,
											"end": 9981,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 9977,
											"end": 9981,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 9977,
											"end": 9990,
											"name": "PUSH",
											"source": 12,
											"value": "2E1A7D4D"
										},
										{
											"begin": 9977,
											"end": 9990,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1290,
											"end": 1308,
											"name": "PUSH",
											"source": 13,
											"value": "24"
										},
										{
											"begin": 1290,
											"end": 1308,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 9977,
											"end": 9995,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 9977,
											"end": 9995,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 9977,
											"end": 9995,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 9977,
											"end": 9995,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 9977,
											"end": 9995,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 9977,
											"end": 9995,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 9977,
											"end": 9995,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 9977,
											"end": 9995,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 9977,
											"end": 9995,
											"name": "DUP8",
											"source": 12
										},
										{
											"begin": 9977,
											"end": 9995,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 9977,
											"end": 9995,
											"name": "EXTCODESIZE",
											"source": 12
										},
										{
											"begin": 9977,
											"end": 9995,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 9977,
											"end": 9995,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 9977,
											"end": 9995,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 9977,
											"end": 9995,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "179"
										},
										{
											"begin": 9977,
											"end": 9995,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 9977,
											"end": 9995,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 9977,
											"end": 9995,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 9977,
											"end": 9995,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 9977,
											"end": 9995,
											"name": "tag",
											"source": 12,
											"value": "179"
										},
										{
											"begin": 9977,
											"end": 9995,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 9977,
											"end": 9995,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 9977,
											"end": 9995,
											"name": "GAS",
											"source": 12
										},
										{
											"begin": 9977,
											"end": 9995,
											"name": "CALL",
											"source": 12
										},
										{
											"begin": 9977,
											"end": 9995,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 9977,
											"end": 9995,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 9977,
											"end": 9995,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 9977,
											"end": 9995,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "181"
										},
										{
											"begin": 9977,
											"end": 9995,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 9977,
											"end": 9995,
											"name": "RETURNDATASIZE",
											"source": 12
										},
										{
											"begin": 9977,
											"end": 9995,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 9977,
											"end": 9995,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 9977,
											"end": 9995,
											"name": "RETURNDATACOPY",
											"source": 12
										},
										{
											"begin": 9977,
											"end": 9995,
											"name": "RETURNDATASIZE",
											"source": 12
										},
										{
											"begin": 9977,
											"end": 9995,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 9977,
											"end": 9995,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 9977,
											"end": 9995,
											"name": "tag",
											"source": 12,
											"value": "181"
										},
										{
											"begin": 9977,
											"end": 9995,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 10013,
											"end": 10046,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 10013,
											"end": 10046,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 10021,
											"end": 10031,
											"name": "CALLER",
											"source": 12
										},
										{
											"begin": 10021,
											"end": 10031,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 10013,
											"end": 10046,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 10013,
											"end": 10046,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 10013,
											"end": 10046,
											"name": "PUSH",
											"source": 12,
											"value": "8FC"
										},
										{
											"begin": 10013,
											"end": 10046,
											"name": "MUL",
											"source": 12
										},
										{
											"begin": 10013,
											"end": 10046,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 10042,
											"end": 10045,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 10042,
											"end": 10045,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 10013,
											"end": 10046,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 10013,
											"end": 10046,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 10013,
											"end": 10046,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 10013,
											"end": 10046,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 10042,
											"end": 10045,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 10021,
											"end": 10031,
											"name": "DUP9",
											"source": 12
										},
										{
											"begin": 10013,
											"end": 10046,
											"name": "DUP9",
											"source": 12
										},
										{
											"begin": 10013,
											"end": 10046,
											"name": "CALL",
											"source": 12
										},
										{
											"begin": 10013,
											"end": 10046,
											"name": "SWAP4",
											"source": 12
										},
										{
											"begin": 10013,
											"end": 10046,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 10013,
											"end": 10046,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 10013,
											"end": 10046,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 10013,
											"end": 10046,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 10013,
											"end": 10046,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 10013,
											"end": 10046,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 10013,
											"end": 10046,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 10013,
											"end": 10046,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "183"
										},
										{
											"begin": 10013,
											"end": 10046,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 10013,
											"end": 10046,
											"name": "RETURNDATASIZE",
											"source": 12
										},
										{
											"begin": 10013,
											"end": 10046,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 10013,
											"end": 10046,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 10013,
											"end": 10046,
											"name": "RETURNDATACOPY",
											"source": 12
										},
										{
											"begin": 10013,
											"end": 10046,
											"name": "RETURNDATASIZE",
											"source": 12
										},
										{
											"begin": 10013,
											"end": 10046,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 10013,
											"end": 10046,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 10013,
											"end": 10046,
											"name": "tag",
											"source": 12,
											"value": "183"
										},
										{
											"begin": 10013,
											"end": 10046,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 10013,
											"end": 10046,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 9851,
											"end": 10054,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 9851,
											"end": 10054,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 4731,
											"end": 4891,
											"name": "tag",
											"source": 12,
											"value": "53"
										},
										{
											"begin": 4731,
											"end": 4891,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "185"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "186"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "185"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4822,
											"end": 4833,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "1"
										},
										{
											"begin": 4822,
											"end": 4848,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 4822,
											"end": 4848,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 4822,
											"end": 4848,
											"modifierDepth": 1,
											"name": "AND",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4822,
											"end": 4848,
											"name": "SWAP4",
											"source": 12
										},
										{
											"begin": 4822,
											"end": 4848,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 4822,
											"end": 4848,
											"name": "SWAP4",
											"source": 12
										},
										{
											"begin": 4822,
											"end": 4848,
											"modifierDepth": 1,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 4822,
											"end": 4848,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 4822,
											"end": 4848,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 4822,
											"end": 4848,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 4822,
											"end": 4848,
											"modifierDepth": 1,
											"name": "OR",
											"source": 12
										},
										{
											"begin": 4822,
											"end": 4848,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 4822,
											"end": 4848,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 4822,
											"end": 4848,
											"name": "SSTORE",
											"source": 12
										},
										{
											"begin": 4859,
											"end": 4869,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "2"
										},
										{
											"begin": 4859,
											"end": 4883,
											"name": "SSTORE",
											"source": 12
										},
										{
											"begin": 4731,
											"end": 4891,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 4222,
											"end": 4472,
											"name": "tag",
											"source": 12,
											"value": "56"
										},
										{
											"begin": 4222,
											"end": 4472,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "189"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "186"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "189"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4284,
											"end": 4293,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "6"
										},
										{
											"begin": 4284,
											"end": 4300,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 4272,
											"end": 4281,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 4311,
											"end": 4400,
											"modifierDepth": 1,
											"name": "tag",
											"source": 12,
											"value": "191"
										},
										{
											"begin": 4311,
											"end": 4400,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 4334,
											"end": 4335,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 4330,
											"end": 4331,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 4330,
											"end": 4335,
											"modifierDepth": 1,
											"name": "LT",
											"source": 12
										},
										{
											"begin": 4311,
											"end": 4400,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 4311,
											"end": 4400,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "192"
										},
										{
											"begin": 4311,
											"end": 4400,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 4364,
											"end": 4374,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 4364,
											"end": 4388,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 4375,
											"end": 4384,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "6"
										},
										{
											"begin": 4385,
											"end": 4386,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 4375,
											"end": 4387,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 4375,
											"end": 4387,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 4375,
											"end": 4387,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 4375,
											"end": 4387,
											"modifierDepth": 1,
											"name": "LT",
											"source": 12
										},
										{
											"begin": 4375,
											"end": 4387,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "195"
										},
										{
											"begin": 4375,
											"end": 4387,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 4375,
											"end": 4387,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "195"
										},
										{
											"begin": 4375,
											"end": 4387,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "161"
										},
										{
											"begin": 4375,
											"end": 4387,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 4375,
											"end": 4387,
											"modifierDepth": 1,
											"name": "tag",
											"source": 12,
											"value": "195"
										},
										{
											"begin": 4375,
											"end": 4387,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 4375,
											"end": 4387,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 4375,
											"end": 4387,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 4375,
											"end": 4387,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 4375,
											"end": 4387,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 4375,
											"end": 4387,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 4375,
											"end": 4387,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 4375,
											"end": 4387,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 4375,
											"end": 4387,
											"name": "KECCAK256",
											"source": 12
										},
										{
											"begin": 4375,
											"end": 4387,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 4375,
											"end": 4387,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 4375,
											"end": 4387,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 4375,
											"end": 4387,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4375,
											"end": 4387,
											"modifierDepth": 1,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 4364,
											"end": 4388,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 4364,
											"end": 4388,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 4364,
											"end": 4388,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 4364,
											"end": 4388,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 4364,
											"end": 4388,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 4364,
											"end": 4388,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 4364,
											"end": 4388,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 4364,
											"end": 4388,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 4364,
											"end": 4388,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 4364,
											"end": 4388,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 4364,
											"end": 4388,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 4364,
											"end": 4388,
											"name": "KECCAK256",
											"source": 12
										},
										{
											"begin": 4357,
											"end": 4388,
											"name": "SSTORE",
											"source": 12
										},
										{
											"begin": 4337,
											"end": 4340,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 4337,
											"end": 4340,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "197"
										},
										{
											"begin": 4337,
											"end": 4340,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 4337,
											"end": 4340,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "198"
										},
										{
											"begin": 4337,
											"end": 4340,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 4337,
											"end": 4340,
											"modifierDepth": 1,
											"name": "tag",
											"source": 12,
											"value": "197"
										},
										{
											"begin": 4337,
											"end": 4340,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 4337,
											"end": 4340,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 4337,
											"end": 4340,
											"modifierDepth": 1,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 4337,
											"end": 4340,
											"modifierDepth": 1,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 4311,
											"end": 4400,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "191"
										},
										{
											"begin": 4311,
											"end": 4400,
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 4311,
											"end": 4400,
											"modifierDepth": 1,
											"name": "tag",
											"source": 12,
											"value": "192"
										},
										{
											"begin": 4311,
											"end": 4400,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4410,
											"end": 4426,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "199"
										},
										{
											"begin": 4417,
											"end": 4426,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "6"
										},
										{
											"begin": 4417,
											"end": 4426,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 4410,
											"end": 4426,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "200"
										},
										{
											"begin": 4410,
											"end": 4426,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 4410,
											"end": 4426,
											"modifierDepth": 1,
											"name": "tag",
											"source": 12,
											"value": "199"
										},
										{
											"begin": 4410,
											"end": 4426,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4437,
											"end": 4456,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "3"
										},
										{
											"begin": 4437,
											"end": 4464,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 4437,
											"end": 4464,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 4437,
											"end": 4464,
											"modifierDepth": 1,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 4437,
											"end": 4464,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 4437,
											"end": 4464,
											"name": "SSTORE",
											"source": 12
										},
										{
											"begin": 4222,
											"end": 4472,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 8047,
											"end": 8842,
											"name": "tag",
											"source": 12,
											"value": "59"
										},
										{
											"begin": 8047,
											"end": 8842,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 8233,
											"end": 8243,
											"name": "PUSH",
											"source": 12,
											"value": "2"
										},
										{
											"begin": 8233,
											"end": 8243,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 8182,
											"end": 8191,
											"name": "CALLVALUE",
											"source": 12
										},
										{
											"begin": 8182,
											"end": 8191,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 8163,
											"end": 8179,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 8163,
											"end": 8179,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 8246,
											"end": 8250,
											"name": "PUSH",
											"source": 12,
											"value": "3E8"
										},
										{
											"begin": 8246,
											"end": 8250,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 8222,
											"end": 8243,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "202"
										},
										{
											"begin": 8222,
											"end": 8243,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 8182,
											"end": 8191,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 8222,
											"end": 8243,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "150"
										},
										{
											"begin": 8222,
											"end": 8243,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 8222,
											"end": 8243,
											"name": "tag",
											"source": 12,
											"value": "202"
										},
										{
											"begin": 8222,
											"end": 8243,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 8222,
											"end": 8250,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "203"
										},
										{
											"begin": 8222,
											"end": 8250,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 8222,
											"end": 8250,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 8222,
											"end": 8250,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "152"
										},
										{
											"begin": 8222,
											"end": 8250,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 8222,
											"end": 8250,
											"name": "tag",
											"source": 12,
											"value": "203"
										},
										{
											"begin": 8222,
											"end": 8250,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 8269,
											"end": 8280,
											"name": "PUSH",
											"source": 12,
											"value": "1"
										},
										{
											"begin": 8269,
											"end": 8280,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 8261,
											"end": 8301,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 8261,
											"end": 8301,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 8202,
											"end": 8250,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 8202,
											"end": 8250,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 8269,
											"end": 8280,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 8269,
											"end": 8280,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 8261,
											"end": 8301,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 8261,
											"end": 8301,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 8261,
											"end": 8301,
											"name": "PUSH",
											"source": 12,
											"value": "8FC"
										},
										{
											"begin": 8261,
											"end": 8301,
											"name": "MUL",
											"source": 12
										},
										{
											"begin": 8261,
											"end": 8301,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 8202,
											"end": 8250,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 8202,
											"end": 8250,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 8269,
											"end": 8280,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 8261,
											"end": 8301,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 8269,
											"end": 8280,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 8261,
											"end": 8301,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 8202,
											"end": 8250,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 8269,
											"end": 8280,
											"name": "DUP9",
											"source": 12
										},
										{
											"begin": 8261,
											"end": 8301,
											"name": "DUP9",
											"source": 12
										},
										{
											"begin": 8261,
											"end": 8301,
											"name": "CALL",
											"source": 12
										},
										{
											"begin": 8261,
											"end": 8301,
											"name": "SWAP4",
											"source": 12
										},
										{
											"begin": 8261,
											"end": 8301,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 8261,
											"end": 8301,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 8261,
											"end": 8301,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 8261,
											"end": 8301,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 8261,
											"end": 8301,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 8261,
											"end": 8301,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 8261,
											"end": 8301,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 8261,
											"end": 8301,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "205"
										},
										{
											"begin": 8261,
											"end": 8301,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 8261,
											"end": 8301,
											"name": "RETURNDATASIZE",
											"source": 12
										},
										{
											"begin": 8261,
											"end": 8301,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 8261,
											"end": 8301,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 8261,
											"end": 8301,
											"name": "RETURNDATACOPY",
											"source": 12
										},
										{
											"begin": 8261,
											"end": 8301,
											"name": "RETURNDATASIZE",
											"source": 12
										},
										{
											"begin": 8261,
											"end": 8301,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 8261,
											"end": 8301,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 8261,
											"end": 8301,
											"name": "tag",
											"source": 12,
											"value": "205"
										},
										{
											"begin": 8261,
											"end": 8301,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 8338,
											"end": 8354,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 8338,
											"end": 8354,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 8338,
											"end": 8354,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 8352,
											"end": 8353,
											"name": "PUSH",
											"source": 12,
											"value": "2"
										},
										{
											"begin": 8338,
											"end": 8354,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 8338,
											"end": 8354,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 8338,
											"end": 8354,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 8338,
											"end": 8354,
											"name": "PUSH",
											"source": 12,
											"value": "60"
										},
										{
											"begin": 8338,
											"end": 8354,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 8338,
											"end": 8354,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 8338,
											"end": 8354,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 8338,
											"end": 8354,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 8314,
											"end": 8335,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 8314,
											"end": 8335,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 8338,
											"end": 8354,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 8338,
											"end": 8354,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 8338,
											"end": 8354,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 8338,
											"end": 8354,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 8338,
											"end": 8354,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 8338,
											"end": 8354,
											"name": "CALLDATASIZE",
											"source": 12
										},
										{
											"begin": 8338,
											"end": 8354,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 8338,
											"end": 8354,
											"name": "CALLDATACOPY",
											"source": 12
										},
										{
											"begin": 8338,
											"end": 8354,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 8338,
											"end": 8354,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 8338,
											"end": 8354,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 8314,
											"end": 8354,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 8314,
											"end": 8354,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2335,
											"end": 2377,
											"name": "PUSH",
											"source": 12,
											"value": "5C7F8A570D578ED84E63FDFA7B1EE72DEAE1AE23"
										},
										{
											"begin": 8365,
											"end": 8369,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 8370,
											"end": 8371,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 8365,
											"end": 8372,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 8365,
											"end": 8372,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 8365,
											"end": 8372,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 8365,
											"end": 8372,
											"name": "LT",
											"source": 12
										},
										{
											"begin": 8365,
											"end": 8372,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "210"
										},
										{
											"begin": 8365,
											"end": 8372,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 8365,
											"end": 8372,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "210"
										},
										{
											"begin": 8365,
											"end": 8372,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "161"
										},
										{
											"begin": 8365,
											"end": 8372,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 8365,
											"end": 8372,
											"name": "tag",
											"source": 12,
											"value": "210"
										},
										{
											"begin": 8365,
											"end": 8372,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 8365,
											"end": 8372,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 8365,
											"end": 8372,
											"name": "MUL",
											"source": 12
										},
										{
											"begin": 8365,
											"end": 8372,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 8365,
											"end": 8372,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 8365,
											"end": 8372,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 8365,
											"end": 8379,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 8365,
											"end": 8379,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 8365,
											"end": 8379,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 8365,
											"end": 8379,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 8365,
											"end": 8379,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 8365,
											"end": 8379,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 8365,
											"end": 8379,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 8365,
											"end": 8379,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 8365,
											"end": 8379,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 8400,
											"end": 8407,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 8390,
											"end": 8394,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 8395,
											"end": 8396,
											"name": "PUSH",
											"source": 12,
											"value": "1"
										},
										{
											"begin": 8390,
											"end": 8397,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 8390,
											"end": 8397,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 8390,
											"end": 8397,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 8390,
											"end": 8397,
											"name": "LT",
											"source": 12
										},
										{
											"begin": 8390,
											"end": 8397,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "212"
										},
										{
											"begin": 8390,
											"end": 8397,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 8390,
											"end": 8397,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "212"
										},
										{
											"begin": 8390,
											"end": 8397,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "161"
										},
										{
											"begin": 8390,
											"end": 8397,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 8390,
											"end": 8397,
											"name": "tag",
											"source": 12,
											"value": "212"
										},
										{
											"begin": 8390,
											"end": 8397,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 8390,
											"end": 8407,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 8390,
											"end": 8407,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 8390,
											"end": 8407,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 8390,
											"end": 8397,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 8390,
											"end": 8397,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 8390,
											"end": 8397,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 8390,
											"end": 8397,
											"name": "MUL",
											"source": 12
										},
										{
											"begin": 8390,
											"end": 8397,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 8390,
											"end": 8397,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 8390,
											"end": 8397,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 8390,
											"end": 8397,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 8390,
											"end": 8397,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 8390,
											"end": 8407,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 8450,
											"end": 8456,
											"name": "PUSH",
											"source": 12,
											"value": "8"
										},
										{
											"begin": 8450,
											"end": 8456,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 8420,
											"end": 8447,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 8420,
											"end": 8447,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 8450,
											"end": 8456,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 8450,
											"end": 8470,
											"name": "PUSH",
											"source": 12,
											"value": "D06CA61F"
										},
										{
											"begin": 8471,
											"end": 8491,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "213"
										},
										{
											"begin": 8482,
											"end": 8491,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 8471,
											"end": 8479,
											"name": "DUP8",
											"source": 12
										},
										{
											"begin": 8471,
											"end": 8491,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "165"
										},
										{
											"begin": 8471,
											"end": 8491,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 8471,
											"end": 8491,
											"name": "tag",
											"source": 12,
											"value": "213"
										},
										{
											"begin": 8471,
											"end": 8491,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 8493,
											"end": 8497,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 8450,
											"end": 8498,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 8450,
											"end": 8498,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 8450,
											"end": 8498,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 8450,
											"end": 8498,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFF"
										},
										{
											"begin": 8450,
											"end": 8498,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 8450,
											"end": 8498,
											"name": "PUSH",
											"source": 12,
											"value": "E0"
										},
										{
											"begin": 8450,
											"end": 8498,
											"name": "SHL",
											"source": 12
										},
										{
											"begin": 8450,
											"end": 8498,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 8450,
											"end": 8498,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 8450,
											"end": 8498,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 8450,
											"end": 8498,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 8450,
											"end": 8498,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "214"
										},
										{
											"begin": 8450,
											"end": 8498,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 8450,
											"end": 8498,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 8450,
											"end": 8498,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 8450,
											"end": 8498,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "215"
										},
										{
											"begin": 8450,
											"end": 8498,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 8450,
											"end": 8498,
											"name": "tag",
											"source": 12,
											"value": "214"
										},
										{
											"begin": 8450,
											"end": 8498,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 8450,
											"end": 8498,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 8450,
											"end": 8498,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 8450,
											"end": 8498,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 8450,
											"end": 8498,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 8450,
											"end": 8498,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 8450,
											"end": 8498,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 8450,
											"end": 8498,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 8450,
											"end": 8498,
											"name": "DUP7",
											"source": 12
										},
										{
											"begin": 8450,
											"end": 8498,
											"name": "GAS",
											"source": 12
										},
										{
											"begin": 8450,
											"end": 8498,
											"name": "STATICCALL",
											"source": 12
										},
										{
											"begin": 8450,
											"end": 8498,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 8450,
											"end": 8498,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 8450,
											"end": 8498,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 8450,
											"end": 8498,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "217"
										},
										{
											"begin": 8450,
											"end": 8498,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 8450,
											"end": 8498,
											"name": "RETURNDATASIZE",
											"source": 12
										},
										{
											"begin": 8450,
											"end": 8498,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 8450,
											"end": 8498,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 8450,
											"end": 8498,
											"name": "RETURNDATACOPY",
											"source": 12
										},
										{
											"begin": 8450,
											"end": 8498,
											"name": "RETURNDATASIZE",
											"source": 12
										},
										{
											"begin": 8450,
											"end": 8498,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 8450,
											"end": 8498,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 8450,
											"end": 8498,
											"name": "tag",
											"source": 12,
											"value": "217"
										},
										{
											"begin": 8450,
											"end": 8498,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 8450,
											"end": 8498,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 8450,
											"end": 8498,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 8450,
											"end": 8498,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 8450,
											"end": 8498,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 8450,
											"end": 8498,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 8450,
											"end": 8498,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 8450,
											"end": 8498,
											"name": "RETURNDATASIZE",
											"source": 12
										},
										{
											"begin": 8450,
											"end": 8498,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 8450,
											"end": 8498,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 8450,
											"end": 8498,
											"name": "RETURNDATACOPY",
											"source": 12
										},
										{
											"begin": 8450,
											"end": 8498,
											"name": "PUSH",
											"source": 12,
											"value": "1F"
										},
										{
											"begin": 8450,
											"end": 8498,
											"name": "RETURNDATASIZE",
											"source": 12
										},
										{
											"begin": 8450,
											"end": 8498,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 8450,
											"end": 8498,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 8450,
											"end": 8498,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 8450,
											"end": 8498,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 8450,
											"end": 8498,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 8450,
											"end": 8498,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 8450,
											"end": 8498,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 8450,
											"end": 8498,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 8450,
											"end": 8498,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "218"
										},
										{
											"begin": 8450,
											"end": 8498,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 8450,
											"end": 8498,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 8450,
											"end": 8498,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 8450,
											"end": 8498,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 8450,
											"end": 8498,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 8450,
											"end": 8498,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "219"
										},
										{
											"begin": 8450,
											"end": 8498,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 8450,
											"end": 8498,
											"name": "tag",
											"source": 12,
											"value": "218"
										},
										{
											"begin": 8450,
											"end": 8498,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 8509,
											"end": 8515,
											"name": "PUSH",
											"source": 12,
											"value": "8"
										},
										{
											"begin": 8509,
											"end": 8515,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 8420,
											"end": 8498,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 8420,
											"end": 8498,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 8509,
											"end": 8515,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 8509,
											"end": 8566,
											"name": "PUSH",
											"source": 12,
											"value": "B6F9DE95"
										},
										{
											"begin": 8574,
											"end": 8594,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "220"
										},
										{
											"begin": 8585,
											"end": 8594,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 8574,
											"end": 8582,
											"name": "DUP8",
											"source": 12
										},
										{
											"begin": 8574,
											"end": 8594,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "165"
										},
										{
											"begin": 8574,
											"end": 8594,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 8574,
											"end": 8594,
											"name": "tag",
											"source": 12,
											"value": "220"
										},
										{
											"begin": 8574,
											"end": 8594,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 8610,
											"end": 8622,
											"name": "DUP8",
											"source": 12
										},
										{
											"begin": 8637,
											"end": 8641,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 8656,
											"end": 8666,
											"name": "CALLER",
											"source": 12
										},
										{
											"begin": 8681,
											"end": 8706,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "221"
										},
										{
											"begin": 8681,
											"end": 8696,
											"name": "TIMESTAMP",
											"source": 12
										},
										{
											"begin": 8699,
											"end": 8706,
											"name": "PUSH",
											"source": 12,
											"value": "E10"
										},
										{
											"begin": 8681,
											"end": 8706,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "167"
										},
										{
											"begin": 8681,
											"end": 8706,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 8681,
											"end": 8706,
											"name": "tag",
											"source": 12,
											"value": "221"
										},
										{
											"begin": 8681,
											"end": 8706,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 8509,
											"end": 8717,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 8509,
											"end": 8717,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 8509,
											"end": 8717,
											"name": "DUP7",
											"source": 12
										},
										{
											"begin": 8509,
											"end": 8717,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFF"
										},
										{
											"begin": 8509,
											"end": 8717,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 8509,
											"end": 8717,
											"name": "PUSH",
											"source": 12,
											"value": "E0"
										},
										{
											"begin": 8509,
											"end": 8717,
											"name": "SHL",
											"source": 12
										},
										{
											"begin": 8509,
											"end": 8717,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 8509,
											"end": 8717,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 8509,
											"end": 8717,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 8509,
											"end": 8717,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 8509,
											"end": 8717,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "222"
										},
										{
											"begin": 8509,
											"end": 8717,
											"name": "SWAP5",
											"source": 12
										},
										{
											"begin": 8509,
											"end": 8717,
											"name": "SWAP4",
											"source": 12
										},
										{
											"begin": 8509,
											"end": 8717,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 8509,
											"end": 8717,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 8509,
											"end": 8717,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 8509,
											"end": 8717,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "223"
										},
										{
											"begin": 8509,
											"end": 8717,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 8509,
											"end": 8717,
											"name": "tag",
											"source": 12,
											"value": "222"
										},
										{
											"begin": 8509,
											"end": 8717,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 8509,
											"end": 8717,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 8509,
											"end": 8717,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 8509,
											"end": 8717,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 8509,
											"end": 8717,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 8509,
											"end": 8717,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 8509,
											"end": 8717,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 8509,
											"end": 8717,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 8509,
											"end": 8717,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 8509,
											"end": 8717,
											"name": "DUP9",
											"source": 12
										},
										{
											"begin": 8509,
											"end": 8717,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 8509,
											"end": 8717,
											"name": "EXTCODESIZE",
											"source": 12
										},
										{
											"begin": 8509,
											"end": 8717,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 8509,
											"end": 8717,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 8509,
											"end": 8717,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 8509,
											"end": 8717,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "224"
										},
										{
											"begin": 8509,
											"end": 8717,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 8509,
											"end": 8717,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 8509,
											"end": 8717,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 8509,
											"end": 8717,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 8509,
											"end": 8717,
											"name": "tag",
											"source": 12,
											"value": "224"
										},
										{
											"begin": 8509,
											"end": 8717,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 8509,
											"end": 8717,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 8509,
											"end": 8717,
											"name": "GAS",
											"source": 12
										},
										{
											"begin": 8509,
											"end": 8717,
											"name": "CALL",
											"source": 12
										},
										{
											"begin": 8509,
											"end": 8717,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 8509,
											"end": 8717,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 8509,
											"end": 8717,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 8509,
											"end": 8717,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "226"
										},
										{
											"begin": 8509,
											"end": 8717,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 8509,
											"end": 8717,
											"name": "RETURNDATASIZE",
											"source": 12
										},
										{
											"begin": 8509,
											"end": 8717,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 8509,
											"end": 8717,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 8509,
											"end": 8717,
											"name": "RETURNDATACOPY",
											"source": 12
										},
										{
											"begin": 8509,
											"end": 8717,
											"name": "RETURNDATASIZE",
											"source": 12
										},
										{
											"begin": 8509,
											"end": 8717,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 8509,
											"end": 8717,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 8509,
											"end": 8717,
											"name": "tag",
											"source": 12,
											"value": "226"
										},
										{
											"begin": 8509,
											"end": 8717,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 8733,
											"end": 8747,
											"name": "DUP8",
											"source": 12
										},
										{
											"begin": 8733,
											"end": 8747,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 2414,
											"end": 2456,
											"name": "PUSH",
											"source": 12,
											"value": "41BC026DABE978BC2FAFEA1850456511CA4B01BC"
										},
										{
											"begin": 8733,
											"end": 8747,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 8733,
											"end": 8747,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 8733,
											"end": 8770,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 8733,
											"end": 8770,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 8733,
											"end": 8770,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "227"
										},
										{
											"begin": 8733,
											"end": 8770,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 8751,
											"end": 8770,
											"name": "PUSH",
											"source": 12,
											"value": "3"
										},
										{
											"begin": 8751,
											"end": 8770,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 8751,
											"end": 8770,
											"name": "PUSH",
											"source": 12,
											"value": "FF"
										},
										{
											"begin": 8751,
											"end": 8770,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 8733,
											"end": 8770,
											"name": "tag",
											"source": 12,
											"value": "227"
										},
										{
											"begin": 8733,
											"end": 8770,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 8730,
											"end": 8835,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 8730,
											"end": 8835,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "229"
										},
										{
											"begin": 8730,
											"end": 8835,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 8787,
											"end": 8823,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "229"
										},
										{
											"begin": 8797,
											"end": 8807,
											"name": "CALLER",
											"source": 12
										},
										{
											"begin": 8809,
											"end": 8819,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 8820,
											"end": 8821,
											"name": "PUSH",
											"source": 12,
											"value": "1"
										},
										{
											"begin": 8809,
											"end": 8822,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 8809,
											"end": 8822,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 8809,
											"end": 8822,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 8809,
											"end": 8822,
											"name": "LT",
											"source": 12
										},
										{
											"begin": 8809,
											"end": 8822,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "231"
										},
										{
											"begin": 8809,
											"end": 8822,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 8809,
											"end": 8822,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "231"
										},
										{
											"begin": 8809,
											"end": 8822,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "161"
										},
										{
											"begin": 8809,
											"end": 8822,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 8809,
											"end": 8822,
											"name": "tag",
											"source": 12,
											"value": "231"
										},
										{
											"begin": 8809,
											"end": 8822,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 8809,
											"end": 8822,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 8809,
											"end": 8822,
											"name": "MUL",
											"source": 12
										},
										{
											"begin": 8809,
											"end": 8822,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 8809,
											"end": 8822,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 8809,
											"end": 8822,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 8809,
											"end": 8822,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 8787,
											"end": 8796,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "142"
										},
										{
											"begin": 8787,
											"end": 8823,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 8787,
											"end": 8823,
											"name": "tag",
											"source": 12,
											"value": "229"
										},
										{
											"begin": 8787,
											"end": 8823,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 8152,
											"end": 8842,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 8152,
											"end": 8842,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 8152,
											"end": 8842,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 8152,
											"end": 8842,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 8047,
											"end": 8842,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 8047,
											"end": 8842,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 8047,
											"end": 8842,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 4480,
											"end": 4570,
											"name": "tag",
											"source": 12,
											"value": "62"
										},
										{
											"begin": 4480,
											"end": 4570,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "233"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "186"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "233"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4535,
											"end": 4554,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "3"
										},
										{
											"begin": 4535,
											"end": 4562,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 4535,
											"end": 4562,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 4535,
											"end": 4562,
											"modifierDepth": 1,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 4535,
											"end": 4562,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 4535,
											"end": 4562,
											"name": "SSTORE",
											"source": 12
										},
										{
											"begin": 4480,
											"end": 4570,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "tag",
											"source": 0,
											"value": "69"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "236"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "186"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "236"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2357,
											"end": 2387,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "238"
										},
										{
											"begin": 2384,
											"end": 2385,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2357,
											"end": 2375,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "239"
										},
										{
											"begin": 2357,
											"end": 2387,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2357,
											"end": 2387,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "238"
										},
										{
											"begin": 2357,
											"end": 2387,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3809,
											"end": 4174,
											"name": "tag",
											"source": 12,
											"value": "100"
										},
										{
											"begin": 3809,
											"end": 4174,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3898,
											"end": 3907,
											"name": "PUSH",
											"source": 12,
											"value": "6"
										},
										{
											"begin": 3898,
											"end": 3914,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 3858,
											"end": 3873,
											"name": "PUSH",
											"source": 12,
											"value": "60"
										},
										{
											"begin": 3858,
											"end": 3873,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 3886,
											"end": 3895,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 3898,
											"end": 3914,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 3951,
											"end": 3966,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3951,
											"end": 3966,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 3951,
											"end": 3966,
											"name": "GT",
											"source": 12
										},
										{
											"begin": 3951,
											"end": 3966,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 3951,
											"end": 3966,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "243"
										},
										{
											"begin": 3951,
											"end": 3966,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 3951,
											"end": 3966,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "243"
										},
										{
											"begin": 3951,
											"end": 3966,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "157"
										},
										{
											"begin": 3951,
											"end": 3966,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 3951,
											"end": 3966,
											"name": "tag",
											"source": 12,
											"value": "243"
										},
										{
											"begin": 3951,
											"end": 3966,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3951,
											"end": 3966,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 3951,
											"end": 3966,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 3951,
											"end": 3966,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 3951,
											"end": 3966,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 3951,
											"end": 3966,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 3951,
											"end": 3966,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 3951,
											"end": 3966,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 3951,
											"end": 3966,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 3951,
											"end": 3966,
											"name": "MUL",
											"source": 12
										},
										{
											"begin": 3951,
											"end": 3966,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 3951,
											"end": 3966,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 3951,
											"end": 3966,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 3951,
											"end": 3966,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 3951,
											"end": 3966,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 3951,
											"end": 3966,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 3951,
											"end": 3966,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 3951,
											"end": 3966,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 3951,
											"end": 3966,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "244"
										},
										{
											"begin": 3951,
											"end": 3966,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 3951,
											"end": 3966,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 3951,
											"end": 3966,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 3951,
											"end": 3966,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 3951,
											"end": 3966,
											"name": "tag",
											"source": 12,
											"value": "245"
										},
										{
											"begin": 3951,
											"end": 3966,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 3951,
											"end": 3966,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 3951,
											"end": 3966,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 3951,
											"end": 3966,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 3951,
											"end": 3966,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 3951,
											"end": 3966,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 3951,
											"end": 3966,
											"name": "PUSH",
											"source": 12,
											"value": "1"
										},
										{
											"begin": 3951,
											"end": 3966,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 3951,
											"end": 3966,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 3951,
											"end": 3966,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 3951,
											"end": 3966,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 3951,
											"end": 3966,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "245"
										},
										{
											"begin": 3951,
											"end": 3966,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 3951,
											"end": 3966,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 3951,
											"end": 3966,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 3951,
											"end": 3966,
											"name": "tag",
											"source": 12,
											"value": "244"
										},
										{
											"begin": 3951,
											"end": 3966,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3951,
											"end": 3966,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 3925,
											"end": 3966,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 3925,
											"end": 3966,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 4027,
											"end": 4036,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 4022,
											"end": 4140,
											"name": "tag",
											"source": 12,
											"value": "248"
										},
										{
											"begin": 4022,
											"end": 4140,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 4046,
											"end": 4047,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 4042,
											"end": 4043,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 4042,
											"end": 4047,
											"name": "LT",
											"source": 12
										},
										{
											"begin": 4022,
											"end": 4140,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 4022,
											"end": 4140,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "249"
										},
										{
											"begin": 4022,
											"end": 4140,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 4082,
											"end": 4128,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 4082,
											"end": 4128,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 4082,
											"end": 4128,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 4082,
											"end": 4128,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 4082,
											"end": 4128,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 4082,
											"end": 4128,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 4082,
											"end": 4128,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 4082,
											"end": 4128,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 4089,
											"end": 4098,
											"name": "PUSH",
											"source": 12,
											"value": "6"
										},
										{
											"begin": 4099,
											"end": 4100,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 4089,
											"end": 4101,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 4089,
											"end": 4101,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 4089,
											"end": 4101,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 4089,
											"end": 4101,
											"name": "LT",
											"source": 12
										},
										{
											"begin": 4089,
											"end": 4101,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "252"
										},
										{
											"begin": 4089,
											"end": 4101,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 4089,
											"end": 4101,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "252"
										},
										{
											"begin": 4089,
											"end": 4101,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "161"
										},
										{
											"begin": 4089,
											"end": 4101,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 4089,
											"end": 4101,
											"name": "tag",
											"source": 12,
											"value": "252"
										},
										{
											"begin": 4089,
											"end": 4101,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 4089,
											"end": 4101,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 4089,
											"end": 4101,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 4089,
											"end": 4101,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 4089,
											"end": 4101,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 4089,
											"end": 4101,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 4089,
											"end": 4101,
											"name": "KECCAK256",
											"source": 12
										},
										{
											"begin": 4089,
											"end": 4101,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 4089,
											"end": 4101,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 4089,
											"end": 4101,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 4089,
											"end": 4101,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 4089,
											"end": 4101,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 4089,
											"end": 4101,
											"name": "PUSH",
											"source": 12,
											"value": "100"
										},
										{
											"begin": 4089,
											"end": 4101,
											"name": "EXP",
											"source": 12
										},
										{
											"begin": 4089,
											"end": 4101,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 4089,
											"end": 4101,
											"name": "DIV",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4089,
											"end": 4101,
											"name": "AND",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4082,
											"end": 4128,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 4082,
											"end": 4128,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 4082,
											"end": 4128,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 4082,
											"end": 4128,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 4082,
											"end": 4128,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 4103,
											"end": 4113,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 4103,
											"end": 4127,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 4114,
											"end": 4123,
											"name": "PUSH",
											"source": 12,
											"value": "6"
										},
										{
											"begin": 4124,
											"end": 4125,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 4114,
											"end": 4126,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 4114,
											"end": 4126,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 4114,
											"end": 4126,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 4114,
											"end": 4126,
											"name": "LT",
											"source": 12
										},
										{
											"begin": 4114,
											"end": 4126,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "255"
										},
										{
											"begin": 4114,
											"end": 4126,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 4114,
											"end": 4126,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "255"
										},
										{
											"begin": 4114,
											"end": 4126,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "161"
										},
										{
											"begin": 4114,
											"end": 4126,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 4114,
											"end": 4126,
											"name": "tag",
											"source": 12,
											"value": "255"
										},
										{
											"begin": 4114,
											"end": 4126,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 4114,
											"end": 4126,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 4114,
											"end": 4126,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 4114,
											"end": 4126,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 4114,
											"end": 4126,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 4114,
											"end": 4126,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 4114,
											"end": 4126,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 4114,
											"end": 4126,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 4114,
											"end": 4126,
											"name": "KECCAK256",
											"source": 12
										},
										{
											"begin": 4114,
											"end": 4126,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 4114,
											"end": 4126,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 4114,
											"end": 4126,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 4114,
											"end": 4126,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4114,
											"end": 4126,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 4103,
											"end": 4127,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 4103,
											"end": 4127,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 4103,
											"end": 4127,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 4103,
											"end": 4127,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 4103,
											"end": 4127,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 4103,
											"end": 4127,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 4103,
											"end": 4127,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 4103,
											"end": 4127,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 4103,
											"end": 4127,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 4103,
											"end": 4127,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 4103,
											"end": 4127,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 4103,
											"end": 4127,
											"name": "KECCAK256",
											"source": 12
										},
										{
											"begin": 4103,
											"end": 4127,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 4082,
											"end": 4128,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 4082,
											"end": 4128,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 4069,
											"end": 4079,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 4069,
											"end": 4079,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 4069,
											"end": 4076,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 4069,
											"end": 4076,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 4077,
											"end": 4078,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 4077,
											"end": 4078,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 4069,
											"end": 4079,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 4069,
											"end": 4079,
											"name": "LT",
											"source": 12
										},
										{
											"begin": 4069,
											"end": 4079,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "258"
										},
										{
											"begin": 4069,
											"end": 4079,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 4069,
											"end": 4079,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "258"
										},
										{
											"begin": 4069,
											"end": 4079,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "161"
										},
										{
											"begin": 4069,
											"end": 4079,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 4069,
											"end": 4079,
											"name": "tag",
											"source": 12,
											"value": "258"
										},
										{
											"begin": 4069,
											"end": 4079,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 4069,
											"end": 4079,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 4069,
											"end": 4079,
											"name": "MUL",
											"source": 12
										},
										{
											"begin": 4069,
											"end": 4079,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 4069,
											"end": 4079,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 4069,
											"end": 4079,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 4069,
											"end": 4128,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 4069,
											"end": 4128,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 4069,
											"end": 4128,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 4069,
											"end": 4128,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 4049,
											"end": 4052,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 4049,
											"end": 4052,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 4049,
											"end": 4052,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "259"
										},
										{
											"begin": 4049,
											"end": 4052,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 4049,
											"end": 4052,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "198"
										},
										{
											"begin": 4049,
											"end": 4052,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 4049,
											"end": 4052,
											"name": "tag",
											"source": 12,
											"value": "259"
										},
										{
											"begin": 4049,
											"end": 4052,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 4049,
											"end": 4052,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 4049,
											"end": 4052,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 4049,
											"end": 4052,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 4022,
											"end": 4140,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "248"
										},
										{
											"begin": 4022,
											"end": 4140,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 4022,
											"end": 4140,
											"name": "tag",
											"source": 12,
											"value": "249"
										},
										{
											"begin": 4022,
											"end": 4140,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4159,
											"end": 4166,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 3809,
											"end": 4174,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3809,
											"end": 4174,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 9672,
											"end": 9843,
											"name": "tag",
											"source": 12,
											"value": "116"
										},
										{
											"begin": 9672,
											"end": 9843,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 9757,
											"end": 9761,
											"name": "PUSH",
											"source": 12,
											"value": "D"
										},
										{
											"begin": 9757,
											"end": 9761,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 9757,
											"end": 9787,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 9757,
											"end": 9787,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 9757,
											"end": 9787,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "D0E30DB"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E4"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 9757,
											"end": 9787,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 9757,
											"end": 9787,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 9757,
											"end": 9787,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 9757,
											"end": 9787,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 9737,
											"end": 9746,
											"name": "CALLVALUE",
											"source": 12
										},
										{
											"begin": 9737,
											"end": 9746,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 9757,
											"end": 9761,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 9757,
											"end": 9761,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 9757,
											"end": 9769,
											"name": "PUSH",
											"source": 12,
											"value": "D0E30DB0"
										},
										{
											"begin": 9757,
											"end": 9769,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 9737,
											"end": 9746,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 9737,
											"end": 9746,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 9757,
											"end": 9787,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 9757,
											"end": 9787,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 9757,
											"end": 9787,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 9757,
											"end": 9787,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 9757,
											"end": 9787,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 9718,
											"end": 9734,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 9718,
											"end": 9734,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 9757,
											"end": 9787,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 9757,
											"end": 9787,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 9757,
											"end": 9787,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 9757,
											"end": 9787,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 9757,
											"end": 9787,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 9757,
											"end": 9787,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 9757,
											"end": 9787,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 9757,
											"end": 9787,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 9737,
											"end": 9746,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 9757,
											"end": 9761,
											"name": "DUP9",
											"source": 12
										},
										{
											"begin": 9757,
											"end": 9787,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 9757,
											"end": 9787,
											"name": "EXTCODESIZE",
											"source": 12
										},
										{
											"begin": 9757,
											"end": 9787,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 9757,
											"end": 9787,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 9757,
											"end": 9787,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 9757,
											"end": 9787,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "261"
										},
										{
											"begin": 9757,
											"end": 9787,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 9757,
											"end": 9787,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 9757,
											"end": 9787,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 9757,
											"end": 9787,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 9757,
											"end": 9787,
											"name": "tag",
											"source": 12,
											"value": "261"
										},
										{
											"begin": 9757,
											"end": 9787,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 9757,
											"end": 9787,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 9757,
											"end": 9787,
											"name": "GAS",
											"source": 12
										},
										{
											"begin": 9757,
											"end": 9787,
											"name": "CALL",
											"source": 12
										},
										{
											"begin": 9757,
											"end": 9787,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 9757,
											"end": 9787,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 9757,
											"end": 9787,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 9757,
											"end": 9787,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "263"
										},
										{
											"begin": 9757,
											"end": 9787,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 9757,
											"end": 9787,
											"name": "RETURNDATASIZE",
											"source": 12
										},
										{
											"begin": 9757,
											"end": 9787,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 9757,
											"end": 9787,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 9757,
											"end": 9787,
											"name": "RETURNDATACOPY",
											"source": 12
										},
										{
											"begin": 9757,
											"end": 9787,
											"name": "RETURNDATASIZE",
											"source": 12
										},
										{
											"begin": 9757,
											"end": 9787,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 9757,
											"end": 9787,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 9757,
											"end": 9787,
											"name": "tag",
											"source": 12,
											"value": "263"
										},
										{
											"begin": 9757,
											"end": 9787,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 9798,
											"end": 9802,
											"name": "PUSH",
											"source": 12,
											"value": "D"
										},
										{
											"begin": 9798,
											"end": 9802,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 9798,
											"end": 9835,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 9798,
											"end": 9835,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A9059CBB"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 9798,
											"end": 9835,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 9798,
											"end": 9835,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 9813,
											"end": 9823,
											"name": "CALLER",
											"source": 12
										},
										{
											"begin": 9798,
											"end": 9835,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 9798,
											"end": 9835,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 9798,
											"end": 9835,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 7984,
											"end": 8035,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 8051,
											"end": 8069,
											"name": "PUSH",
											"source": 13,
											"value": "24"
										},
										{
											"begin": 8051,
											"end": 8069,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 8051,
											"end": 8069,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 8044,
											"end": 8078,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 8044,
											"end": 8078,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 8044,
											"end": 8078,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 9798,
											"end": 9802,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 9798,
											"end": 9802,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 9798,
											"end": 9802,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 9798,
											"end": 9802,
											"name": "SWAP4",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 9798,
											"end": 9811,
											"name": "PUSH",
											"source": 12,
											"value": "A9059CBB"
										},
										{
											"begin": 9798,
											"end": 9811,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 7957,
											"end": 7975,
											"name": "PUSH",
											"source": 13,
											"value": "44"
										},
										{
											"begin": 7957,
											"end": 7975,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 7957,
											"end": 7975,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 9798,
											"end": 9835,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 9798,
											"end": 9835,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 9798,
											"end": 9835,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 9798,
											"end": 9835,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 9798,
											"end": 9835,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 9798,
											"end": 9835,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 9798,
											"end": 9835,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 9798,
											"end": 9835,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 9798,
											"end": 9835,
											"name": "DUP8",
											"source": 12
										},
										{
											"begin": 9798,
											"end": 9835,
											"name": "GAS",
											"source": 12
										},
										{
											"begin": 9798,
											"end": 9835,
											"name": "CALL",
											"source": 12
										},
										{
											"begin": 9798,
											"end": 9835,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 9798,
											"end": 9835,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 9798,
											"end": 9835,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 9798,
											"end": 9835,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "267"
										},
										{
											"begin": 9798,
											"end": 9835,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 9798,
											"end": 9835,
											"name": "RETURNDATASIZE",
											"source": 12
										},
										{
											"begin": 9798,
											"end": 9835,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 9798,
											"end": 9835,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 9798,
											"end": 9835,
											"name": "RETURNDATACOPY",
											"source": 12
										},
										{
											"begin": 9798,
											"end": 9835,
											"name": "RETURNDATASIZE",
											"source": 12
										},
										{
											"begin": 9798,
											"end": 9835,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 9798,
											"end": 9835,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 9798,
											"end": 9835,
											"name": "tag",
											"source": 12,
											"value": "267"
										},
										{
											"begin": 9798,
											"end": 9835,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 9798,
											"end": 9835,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 9798,
											"end": 9835,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 9798,
											"end": 9835,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 9798,
											"end": 9835,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 9798,
											"end": 9835,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 9798,
											"end": 9835,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 9798,
											"end": 9835,
											"name": "RETURNDATASIZE",
											"source": 12
										},
										{
											"begin": 9798,
											"end": 9835,
											"name": "PUSH",
											"source": 12,
											"value": "1F"
										},
										{
											"begin": 9798,
											"end": 9835,
											"name": "NOT",
											"source": 12
										},
										{
											"begin": 9798,
											"end": 9835,
											"name": "PUSH",
											"source": 12,
											"value": "1F"
										},
										{
											"begin": 9798,
											"end": 9835,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 9798,
											"end": 9835,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 9798,
											"end": 9835,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 9798,
											"end": 9835,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 9798,
											"end": 9835,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 9798,
											"end": 9835,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 9798,
											"end": 9835,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 9798,
											"end": 9835,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 9798,
											"end": 9835,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 9798,
											"end": 9835,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 9798,
											"end": 9835,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 9798,
											"end": 9835,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 9798,
											"end": 9835,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "183"
										},
										{
											"begin": 9798,
											"end": 9835,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 9798,
											"end": 9835,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 9798,
											"end": 9835,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "148"
										},
										{
											"begin": 9798,
											"end": 9835,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 5854,
											"end": 7999,
											"name": "tag",
											"source": 12,
											"value": "121"
										},
										{
											"begin": 5854,
											"end": 7999,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 6018,
											"end": 6085,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 6018,
											"end": 6085,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "23B872DD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 6018,
											"end": 6085,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 6018,
											"end": 6085,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 6049,
											"end": 6059,
											"name": "CALLER",
											"source": 12
										},
										{
											"begin": 6018,
											"end": 6085,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 6018,
											"end": 6085,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 6018,
											"end": 6085,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 3195,
											"end": 3229,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 6069,
											"end": 6073,
											"name": "ADDRESS",
											"source": 12
										},
										{
											"begin": 3245,
											"end": 3263,
											"name": "PUSH",
											"source": 13,
											"value": "24"
										},
										{
											"begin": 3245,
											"end": 3263,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 3245,
											"end": 3263,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 3238,
											"end": 3281,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 3297,
											"end": 3315,
											"name": "PUSH",
											"source": 13,
											"value": "44"
										},
										{
											"begin": 3297,
											"end": 3315,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 3297,
											"end": 3315,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 3290,
											"end": 3324,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 3290,
											"end": 3324,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 3290,
											"end": 3324,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6018,
											"end": 6048,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 6018,
											"end": 6048,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 6018,
											"end": 6048,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 6018,
											"end": 6048,
											"name": "PUSH",
											"source": 12,
											"value": "23B872DD"
										},
										{
											"begin": 6018,
											"end": 6048,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 3130,
											"end": 3148,
											"name": "PUSH",
											"source": 13,
											"value": "64"
										},
										{
											"begin": 3130,
											"end": 3148,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 6018,
											"end": 6085,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 6018,
											"end": 6085,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 6018,
											"end": 6085,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 6018,
											"end": 6085,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 6018,
											"end": 6085,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 6018,
											"end": 6085,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 6018,
											"end": 6085,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 6018,
											"end": 6085,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 6018,
											"end": 6085,
											"name": "DUP8",
											"source": 12
										},
										{
											"begin": 6018,
											"end": 6085,
											"name": "GAS",
											"source": 12
										},
										{
											"begin": 6018,
											"end": 6085,
											"name": "CALL",
											"source": 12
										},
										{
											"begin": 6018,
											"end": 6085,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 6018,
											"end": 6085,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 6018,
											"end": 6085,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 6018,
											"end": 6085,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "272"
										},
										{
											"begin": 6018,
											"end": 6085,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 6018,
											"end": 6085,
											"name": "RETURNDATASIZE",
											"source": 12
										},
										{
											"begin": 6018,
											"end": 6085,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 6018,
											"end": 6085,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 6018,
											"end": 6085,
											"name": "RETURNDATACOPY",
											"source": 12
										},
										{
											"begin": 6018,
											"end": 6085,
											"name": "RETURNDATASIZE",
											"source": 12
										},
										{
											"begin": 6018,
											"end": 6085,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 6018,
											"end": 6085,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 6018,
											"end": 6085,
											"name": "tag",
											"source": 12,
											"value": "272"
										},
										{
											"begin": 6018,
											"end": 6085,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 6018,
											"end": 6085,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 6018,
											"end": 6085,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 6018,
											"end": 6085,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 6018,
											"end": 6085,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 6018,
											"end": 6085,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 6018,
											"end": 6085,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 6018,
											"end": 6085,
											"name": "RETURNDATASIZE",
											"source": 12
										},
										{
											"begin": 6018,
											"end": 6085,
											"name": "PUSH",
											"source": 12,
											"value": "1F"
										},
										{
											"begin": 6018,
											"end": 6085,
											"name": "NOT",
											"source": 12
										},
										{
											"begin": 6018,
											"end": 6085,
											"name": "PUSH",
											"source": 12,
											"value": "1F"
										},
										{
											"begin": 6018,
											"end": 6085,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 6018,
											"end": 6085,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 6018,
											"end": 6085,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 6018,
											"end": 6085,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 6018,
											"end": 6085,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 6018,
											"end": 6085,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 6018,
											"end": 6085,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 6018,
											"end": 6085,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 6018,
											"end": 6085,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 6018,
											"end": 6085,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 6018,
											"end": 6085,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 6018,
											"end": 6085,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 6018,
											"end": 6085,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "273"
										},
										{
											"begin": 6018,
											"end": 6085,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 6018,
											"end": 6085,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 6018,
											"end": 6085,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "148"
										},
										{
											"begin": 6018,
											"end": 6085,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 6018,
											"end": 6085,
											"name": "tag",
											"source": 12,
											"value": "273"
										},
										{
											"begin": 6018,
											"end": 6085,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6117,
											"end": 6133,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 6117,
											"end": 6133,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 2414,
											"end": 2456,
											"name": "PUSH",
											"source": 12,
											"value": "41BC026DABE978BC2FAFEA1850456511CA4B01BC"
										},
										{
											"begin": 6117,
											"end": 6133,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 6117,
											"end": 6156,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 6117,
											"end": 6156,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 6117,
											"end": 6156,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "274"
										},
										{
											"begin": 6117,
											"end": 6156,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6137,
											"end": 6156,
											"name": "PUSH",
											"source": 12,
											"value": "3"
										},
										{
											"begin": 6137,
											"end": 6156,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 6137,
											"end": 6156,
											"name": "PUSH",
											"source": 12,
											"value": "FF"
										},
										{
											"begin": 6137,
											"end": 6156,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 6117,
											"end": 6156,
											"name": "tag",
											"source": 12,
											"value": "274"
										},
										{
											"begin": 6117,
											"end": 6156,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 6098,
											"end": 6227,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 6098,
											"end": 6227,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "276"
										},
										{
											"begin": 6098,
											"end": 6227,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 6184,
											"end": 6215,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "276"
										},
										{
											"begin": 6194,
											"end": 6204,
											"name": "CALLER",
											"source": 12
										},
										{
											"begin": 6206,
											"end": 6214,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 6184,
											"end": 6193,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "142"
										},
										{
											"begin": 6184,
											"end": 6215,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 6184,
											"end": 6215,
											"name": "tag",
											"source": 12,
											"value": "276"
										},
										{
											"begin": 6184,
											"end": 6215,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 6239,
											"end": 6256,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 6285,
											"end": 6289,
											"name": "PUSH",
											"source": 12,
											"value": "3E8"
										},
										{
											"begin": 6271,
											"end": 6281,
											"name": "PUSH",
											"source": 12,
											"value": "2"
										},
										{
											"begin": 6271,
											"end": 6281,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 6260,
											"end": 6268,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 6260,
											"end": 6281,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "277"
										},
										{
											"begin": 6260,
											"end": 6281,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 6260,
											"end": 6281,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 6260,
											"end": 6281,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "150"
										},
										{
											"begin": 6260,
											"end": 6281,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 6260,
											"end": 6281,
											"name": "tag",
											"source": 12,
											"value": "277"
										},
										{
											"begin": 6260,
											"end": 6281,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 6259,
											"end": 6289,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "278"
										},
										{
											"begin": 6259,
											"end": 6289,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 6259,
											"end": 6289,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 6259,
											"end": 6289,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "152"
										},
										{
											"begin": 6259,
											"end": 6289,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 6259,
											"end": 6289,
											"name": "tag",
											"source": 12,
											"value": "278"
										},
										{
											"begin": 6259,
											"end": 6289,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 6239,
											"end": 6289,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 6239,
											"end": 6289,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 6300,
											"end": 6328,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "279"
										},
										{
											"begin": 6307,
											"end": 6316,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 6318,
											"end": 6327,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 6300,
											"end": 6306,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "154"
										},
										{
											"begin": 6300,
											"end": 6328,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 6300,
											"end": 6328,
											"name": "tag",
											"source": 12,
											"value": "279"
										},
										{
											"begin": 6300,
											"end": 6328,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 6341,
											"end": 6356,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6378,
											"end": 6395,
											"name": "DUP7",
											"source": 12
										},
										{
											"begin": 6378,
											"end": 6395,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 2335,
											"end": 2377,
											"name": "PUSH",
											"source": 12,
											"value": "5C7F8A570D578ED84E63FDFA7B1EE72DEAE1AE23"
										},
										{
											"begin": 6378,
											"end": 6395,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 6378,
											"end": 6395,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 6378,
											"end": 6414,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "280"
										},
										{
											"begin": 6378,
											"end": 6414,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6399,
											"end": 6414,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 6399,
											"end": 6414,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 2335,
											"end": 2377,
											"name": "PUSH",
											"source": 12,
											"value": "5C7F8A570D578ED84E63FDFA7B1EE72DEAE1AE23"
										},
										{
											"begin": 6399,
											"end": 6414,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 6378,
											"end": 6414,
											"name": "tag",
											"source": 12,
											"value": "280"
										},
										{
											"begin": 6378,
											"end": 6414,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 6377,
											"end": 6423,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "281"
										},
										{
											"begin": 6377,
											"end": 6423,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 6422,
											"end": 6423,
											"name": "PUSH",
											"source": 12,
											"value": "3"
										},
										{
											"begin": 6377,
											"end": 6423,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "282"
										},
										{
											"begin": 6377,
											"end": 6423,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 6377,
											"end": 6423,
											"name": "tag",
											"source": 12,
											"value": "281"
										},
										{
											"begin": 6377,
											"end": 6423,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 6418,
											"end": 6419,
											"name": "PUSH",
											"source": 12,
											"value": "2"
										},
										{
											"begin": 6377,
											"end": 6423,
											"name": "tag",
											"source": 12,
											"value": "282"
										},
										{
											"begin": 6377,
											"end": 6423,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 6367,
											"end": 6423,
											"name": "PUSH",
											"source": 12,
											"value": "FF"
										},
										{
											"begin": 6367,
											"end": 6423,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 6367,
											"end": 6423,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6436,
											"end": 6453,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 6464,
											"end": 6485,
											"name": "PUSH",
											"source": 12,
											"value": "60"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6500,
											"end": 6517,
											"name": "DUP9",
											"source": 12
										},
										{
											"begin": 6500,
											"end": 6517,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 2335,
											"end": 2377,
											"name": "PUSH",
											"source": 12,
											"value": "5C7F8A570D578ED84E63FDFA7B1EE72DEAE1AE23"
										},
										{
											"begin": 6500,
											"end": 6517,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 6500,
											"end": 6517,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 6500,
											"end": 6536,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "283"
										},
										{
											"begin": 6500,
											"end": 6536,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6521,
											"end": 6536,
											"name": "DUP8",
											"source": 12
										},
										{
											"begin": 6521,
											"end": 6536,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 2335,
											"end": 2377,
											"name": "PUSH",
											"source": 12,
											"value": "5C7F8A570D578ED84E63FDFA7B1EE72DEAE1AE23"
										},
										{
											"begin": 6521,
											"end": 6536,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 6500,
											"end": 6536,
											"name": "tag",
											"source": 12,
											"value": "283"
										},
										{
											"begin": 6500,
											"end": 6536,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 6496,
											"end": 7594,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 6496,
											"end": 7594,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "284"
										},
										{
											"begin": 6496,
											"end": 7594,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 6574,
											"end": 6575,
											"name": "PUSH",
											"source": 12,
											"value": "2"
										},
										{
											"begin": 6560,
											"end": 6576,
											"name": "tag",
											"source": 12,
											"value": "286"
										},
										{
											"begin": 6560,
											"end": 6576,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 6560,
											"end": 6576,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 6560,
											"end": 6576,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 6560,
											"end": 6576,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 6560,
											"end": 6576,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 6560,
											"end": 6576,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 6560,
											"end": 6576,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 6560,
											"end": 6576,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 6560,
											"end": 6576,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 6560,
											"end": 6576,
											"name": "MUL",
											"source": 12
										},
										{
											"begin": 6560,
											"end": 6576,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 6560,
											"end": 6576,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 6560,
											"end": 6576,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 6560,
											"end": 6576,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 6560,
											"end": 6576,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 6560,
											"end": 6576,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 6560,
											"end": 6576,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 6560,
											"end": 6576,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 6560,
											"end": 6576,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "287"
										},
										{
											"begin": 6560,
											"end": 6576,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 6560,
											"end": 6576,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 6560,
											"end": 6576,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 6560,
											"end": 6576,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 6560,
											"end": 6576,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 6560,
											"end": 6576,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 6560,
											"end": 6576,
											"name": "MUL",
											"source": 12
										},
										{
											"begin": 6560,
											"end": 6576,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 6560,
											"end": 6576,
											"name": "CALLDATASIZE",
											"source": 12
										},
										{
											"begin": 6560,
											"end": 6576,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 6560,
											"end": 6576,
											"name": "CALLDATACOPY",
											"source": 12
										},
										{
											"begin": 6560,
											"end": 6576,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 6560,
											"end": 6576,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6560,
											"end": 6576,
											"name": "tag",
											"source": 12,
											"value": "287"
										},
										{
											"begin": 6560,
											"end": 6576,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 6560,
											"end": 6576,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 6553,
											"end": 6576,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 6553,
											"end": 6576,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 6601,
											"end": 6610,
											"name": "DUP8",
											"source": 12
										},
										{
											"begin": 6591,
											"end": 6595,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 6596,
											"end": 6597,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 6591,
											"end": 6598,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 6591,
											"end": 6598,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 6591,
											"end": 6598,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 6591,
											"end": 6598,
											"name": "LT",
											"source": 12
										},
										{
											"begin": 6591,
											"end": 6598,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "289"
										},
										{
											"begin": 6591,
											"end": 6598,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 6591,
											"end": 6598,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "289"
										},
										{
											"begin": 6591,
											"end": 6598,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "161"
										},
										{
											"begin": 6591,
											"end": 6598,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 6591,
											"end": 6598,
											"name": "tag",
											"source": 12,
											"value": "289"
										},
										{
											"begin": 6591,
											"end": 6598,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 6591,
											"end": 6598,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 6591,
											"end": 6598,
											"name": "MUL",
											"source": 12
										},
										{
											"begin": 6591,
											"end": 6598,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 6591,
											"end": 6598,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 6591,
											"end": 6598,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 6591,
											"end": 6610,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6591,
											"end": 6610,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 6591,
											"end": 6610,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 6591,
											"end": 6610,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6591,
											"end": 6610,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 6591,
											"end": 6610,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 6591,
											"end": 6610,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 6591,
											"end": 6610,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 6591,
											"end": 6610,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 6635,
											"end": 6642,
											"name": "DUP7",
											"source": 12
										},
										{
											"begin": 6625,
											"end": 6629,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 6630,
											"end": 6631,
											"name": "PUSH",
											"source": 12,
											"value": "1"
										},
										{
											"begin": 6625,
											"end": 6632,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 6625,
											"end": 6632,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 6625,
											"end": 6632,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 6625,
											"end": 6632,
											"name": "LT",
											"source": 12
										},
										{
											"begin": 6625,
											"end": 6632,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "291"
										},
										{
											"begin": 6625,
											"end": 6632,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 6625,
											"end": 6632,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "291"
										},
										{
											"begin": 6625,
											"end": 6632,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "161"
										},
										{
											"begin": 6625,
											"end": 6632,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 6625,
											"end": 6632,
											"name": "tag",
											"source": 12,
											"value": "291"
										},
										{
											"begin": 6625,
											"end": 6632,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6625,
											"end": 6642,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 6625,
											"end": 6642,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 6625,
											"end": 6642,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 6625,
											"end": 6632,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 6625,
											"end": 6632,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 6625,
											"end": 6632,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 6625,
											"end": 6632,
											"name": "MUL",
											"source": 12
										},
										{
											"begin": 6625,
											"end": 6632,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 6625,
											"end": 6632,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 6625,
											"end": 6632,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 6625,
											"end": 6632,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 6625,
											"end": 6632,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 6625,
											"end": 6642,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 6687,
											"end": 6693,
											"name": "PUSH",
											"source": 12,
											"value": "8"
										},
										{
											"begin": 6687,
											"end": 6693,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 6657,
											"end": 6684,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 6657,
											"end": 6684,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 6687,
											"end": 6693,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 6687,
											"end": 6707,
											"name": "PUSH",
											"source": 12,
											"value": "D06CA61F"
										},
										{
											"begin": 6726,
											"end": 6746,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "292"
										},
										{
											"begin": 6737,
											"end": 6746,
											"name": "DUP8",
											"source": 12
										},
										{
											"begin": 6726,
											"end": 6734,
											"name": "DUP11",
											"source": 12
										},
										{
											"begin": 6726,
											"end": 6746,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "165"
										},
										{
											"begin": 6726,
											"end": 6746,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 6726,
											"end": 6746,
											"name": "tag",
											"source": 12,
											"value": "292"
										},
										{
											"begin": 6726,
											"end": 6746,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 6765,
											"end": 6769,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 6687,
											"end": 6784,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 6687,
											"end": 6784,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 6687,
											"end": 6784,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 6687,
											"end": 6784,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFF"
										},
										{
											"begin": 6687,
											"end": 6784,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 6687,
											"end": 6784,
											"name": "PUSH",
											"source": 12,
											"value": "E0"
										},
										{
											"begin": 6687,
											"end": 6784,
											"name": "SHL",
											"source": 12
										},
										{
											"begin": 6687,
											"end": 6784,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 6687,
											"end": 6784,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 6687,
											"end": 6784,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 6687,
											"end": 6784,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 6687,
											"end": 6784,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "293"
										},
										{
											"begin": 6687,
											"end": 6784,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 6687,
											"end": 6784,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 6687,
											"end": 6784,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 6687,
											"end": 6784,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "215"
										},
										{
											"begin": 6687,
											"end": 6784,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 6687,
											"end": 6784,
											"name": "tag",
											"source": 12,
											"value": "293"
										},
										{
											"begin": 6687,
											"end": 6784,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 6687,
											"end": 6784,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 6687,
											"end": 6784,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 6687,
											"end": 6784,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 6687,
											"end": 6784,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 6687,
											"end": 6784,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 6687,
											"end": 6784,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 6687,
											"end": 6784,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 6687,
											"end": 6784,
											"name": "DUP7",
											"source": 12
										},
										{
											"begin": 6687,
											"end": 6784,
											"name": "GAS",
											"source": 12
										},
										{
											"begin": 6687,
											"end": 6784,
											"name": "STATICCALL",
											"source": 12
										},
										{
											"begin": 6687,
											"end": 6784,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 6687,
											"end": 6784,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 6687,
											"end": 6784,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 6687,
											"end": 6784,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "295"
										},
										{
											"begin": 6687,
											"end": 6784,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 6687,
											"end": 6784,
											"name": "RETURNDATASIZE",
											"source": 12
										},
										{
											"begin": 6687,
											"end": 6784,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 6687,
											"end": 6784,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 6687,
											"end": 6784,
											"name": "RETURNDATACOPY",
											"source": 12
										},
										{
											"begin": 6687,
											"end": 6784,
											"name": "RETURNDATASIZE",
											"source": 12
										},
										{
											"begin": 6687,
											"end": 6784,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 6687,
											"end": 6784,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 6687,
											"end": 6784,
											"name": "tag",
											"source": 12,
											"value": "295"
										},
										{
											"begin": 6687,
											"end": 6784,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 6687,
											"end": 6784,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 6687,
											"end": 6784,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 6687,
											"end": 6784,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 6687,
											"end": 6784,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 6687,
											"end": 6784,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 6687,
											"end": 6784,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 6687,
											"end": 6784,
											"name": "RETURNDATASIZE",
											"source": 12
										},
										{
											"begin": 6687,
											"end": 6784,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 6687,
											"end": 6784,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 6687,
											"end": 6784,
											"name": "RETURNDATACOPY",
											"source": 12
										},
										{
											"begin": 6687,
											"end": 6784,
											"name": "PUSH",
											"source": 12,
											"value": "1F"
										},
										{
											"begin": 6687,
											"end": 6784,
											"name": "RETURNDATASIZE",
											"source": 12
										},
										{
											"begin": 6687,
											"end": 6784,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 6687,
											"end": 6784,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 6687,
											"end": 6784,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 6687,
											"end": 6784,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 6687,
											"end": 6784,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 6687,
											"end": 6784,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 6687,
											"end": 6784,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 6687,
											"end": 6784,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 6687,
											"end": 6784,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "296"
										},
										{
											"begin": 6687,
											"end": 6784,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 6687,
											"end": 6784,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 6687,
											"end": 6784,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 6687,
											"end": 6784,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 6687,
											"end": 6784,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 6687,
											"end": 6784,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "219"
										},
										{
											"begin": 6687,
											"end": 6784,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 6687,
											"end": 6784,
											"name": "tag",
											"source": 12,
											"value": "296"
										},
										{
											"begin": 6687,
											"end": 6784,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 6657,
											"end": 6784,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 6657,
											"end": 6784,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 6811,
											"end": 6821,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 6822,
											"end": 6823,
											"name": "PUSH",
											"source": 12,
											"value": "1"
										},
										{
											"begin": 6811,
											"end": 6824,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 6811,
											"end": 6824,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 6811,
											"end": 6824,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 6811,
											"end": 6824,
											"name": "LT",
											"source": 12
										},
										{
											"begin": 6811,
											"end": 6824,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "298"
										},
										{
											"begin": 6811,
											"end": 6824,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 6811,
											"end": 6824,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "298"
										},
										{
											"begin": 6811,
											"end": 6824,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "161"
										},
										{
											"begin": 6811,
											"end": 6824,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 6811,
											"end": 6824,
											"name": "tag",
											"source": 12,
											"value": "298"
										},
										{
											"begin": 6811,
											"end": 6824,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 6811,
											"end": 6824,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 6811,
											"end": 6824,
											"name": "MUL",
											"source": 12
										},
										{
											"begin": 6811,
											"end": 6824,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 6811,
											"end": 6824,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 6811,
											"end": 6824,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 6811,
											"end": 6824,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 6799,
											"end": 6824,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 6799,
											"end": 6824,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 6538,
											"end": 6836,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 6496,
											"end": 7594,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "318"
										},
										{
											"begin": 6496,
											"end": 7594,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 6496,
											"end": 7594,
											"name": "tag",
											"source": 12,
											"value": "284"
										},
										{
											"begin": 6496,
											"end": 7594,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6861,
											"end": 6877,
											"name": "DUP9",
											"source": 12
										},
										{
											"begin": 6861,
											"end": 6877,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 2414,
											"end": 2456,
											"name": "PUSH",
											"source": 12,
											"value": "41BC026DABE978BC2FAFEA1850456511CA4B01BC"
										},
										{
											"begin": 6861,
											"end": 6877,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 6861,
											"end": 6896,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 6861,
											"end": 6896,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 6861,
											"end": 6896,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "300"
										},
										{
											"begin": 6861,
											"end": 6896,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6881,
											"end": 6896,
											"name": "DUP8",
											"source": 12
										},
										{
											"begin": 6881,
											"end": 6896,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 2494,
											"end": 2536,
											"name": "PUSH",
											"source": 12,
											"value": "3B41B27E74DD366CE27CB389DC7877D4E1516D4D"
										},
										{
											"begin": 6881,
											"end": 6896,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 6861,
											"end": 6896,
											"name": "tag",
											"source": 12,
											"value": "300"
										},
										{
											"begin": 6861,
											"end": 6896,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 6860,
											"end": 6951,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 6860,
											"end": 6951,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "302"
										},
										{
											"begin": 6860,
											"end": 6951,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6915,
											"end": 6932,
											"name": "DUP9",
											"source": 12
										},
										{
											"begin": 6915,
											"end": 6932,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 2494,
											"end": 2536,
											"name": "PUSH",
											"source": 12,
											"value": "3B41B27E74DD366CE27CB389DC7877D4E1516D4D"
										},
										{
											"begin": 6915,
											"end": 6932,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 6915,
											"end": 6950,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 6915,
											"end": 6950,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 6915,
											"end": 6950,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "302"
										},
										{
											"begin": 6915,
											"end": 6950,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6936,
											"end": 6950,
											"name": "DUP8",
											"source": 12
										},
										{
											"begin": 6936,
											"end": 6950,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 2414,
											"end": 2456,
											"name": "PUSH",
											"source": 12,
											"value": "41BC026DABE978BC2FAFEA1850456511CA4B01BC"
										},
										{
											"begin": 6936,
											"end": 6950,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 6915,
											"end": 6950,
											"name": "tag",
											"source": 12,
											"value": "302"
										},
										{
											"begin": 6915,
											"end": 6950,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 6842,
											"end": 7594,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 6842,
											"end": 7594,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "303"
										},
										{
											"begin": 6842,
											"end": 7594,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 6999,
											"end": 7000,
											"name": "PUSH",
											"source": 12,
											"value": "2"
										},
										{
											"begin": 6985,
											"end": 7001,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "286"
										},
										{
											"begin": 6985,
											"end": 7001,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 6842,
											"end": 7594,
											"name": "tag",
											"source": 12,
											"value": "303"
										},
										{
											"begin": 6842,
											"end": 7594,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 7289,
											"end": 7305,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 7289,
											"end": 7305,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 7289,
											"end": 7305,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 7303,
											"end": 7304,
											"name": "PUSH",
											"source": 12,
											"value": "3"
										},
										{
											"begin": 7289,
											"end": 7305,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 7289,
											"end": 7305,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 7289,
											"end": 7305,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 7289,
											"end": 7305,
											"name": "PUSH",
											"source": 12,
											"value": "80"
										},
										{
											"begin": 7289,
											"end": 7305,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 7289,
											"end": 7305,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 7289,
											"end": 7305,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 7289,
											"end": 7305,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 7289,
											"end": 7305,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 7289,
											"end": 7305,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 7289,
											"end": 7305,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 7289,
											"end": 7305,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 7289,
											"end": 7305,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 7289,
											"end": 7305,
											"name": "PUSH",
											"source": 12,
											"value": "60"
										},
										{
											"begin": 7289,
											"end": 7305,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 7289,
											"end": 7305,
											"name": "CALLDATASIZE",
											"source": 12
										},
										{
											"begin": 7289,
											"end": 7305,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 7289,
											"end": 7305,
											"name": "CALLDATACOPY",
											"source": 12
										},
										{
											"begin": 7289,
											"end": 7305,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 7289,
											"end": 7305,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 7289,
											"end": 7305,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 7282,
											"end": 7305,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 7282,
											"end": 7305,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 7330,
											"end": 7339,
											"name": "DUP8",
											"source": 12
										},
										{
											"begin": 7320,
											"end": 7324,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 7325,
											"end": 7326,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 7320,
											"end": 7327,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 7320,
											"end": 7327,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 7320,
											"end": 7327,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 7320,
											"end": 7327,
											"name": "LT",
											"source": 12
										},
										{
											"begin": 7320,
											"end": 7327,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "323"
										},
										{
											"begin": 7320,
											"end": 7327,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 7320,
											"end": 7327,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "323"
										},
										{
											"begin": 7320,
											"end": 7327,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "161"
										},
										{
											"begin": 7320,
											"end": 7327,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 7320,
											"end": 7327,
											"name": "tag",
											"source": 12,
											"value": "323"
										},
										{
											"begin": 7320,
											"end": 7327,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 7320,
											"end": 7327,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 7320,
											"end": 7327,
											"name": "MUL",
											"source": 12
										},
										{
											"begin": 7320,
											"end": 7327,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 7320,
											"end": 7327,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 7320,
											"end": 7327,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 7320,
											"end": 7339,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7320,
											"end": 7339,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 7320,
											"end": 7339,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 7320,
											"end": 7339,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7320,
											"end": 7339,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 7320,
											"end": 7339,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 7320,
											"end": 7339,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 7320,
											"end": 7339,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 7320,
											"end": 7339,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2335,
											"end": 2377,
											"name": "PUSH",
											"source": 12,
											"value": "5C7F8A570D578ED84E63FDFA7B1EE72DEAE1AE23"
										},
										{
											"begin": 7354,
											"end": 7358,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 7359,
											"end": 7360,
											"name": "PUSH",
											"source": 12,
											"value": "1"
										},
										{
											"begin": 7354,
											"end": 7361,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 7354,
											"end": 7361,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 7354,
											"end": 7361,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 7354,
											"end": 7361,
											"name": "LT",
											"source": 12
										},
										{
											"begin": 7354,
											"end": 7361,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "325"
										},
										{
											"begin": 7354,
											"end": 7361,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 7354,
											"end": 7361,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "325"
										},
										{
											"begin": 7354,
											"end": 7361,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "161"
										},
										{
											"begin": 7354,
											"end": 7361,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 7354,
											"end": 7361,
											"name": "tag",
											"source": 12,
											"value": "325"
										},
										{
											"begin": 7354,
											"end": 7361,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 7354,
											"end": 7361,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 7354,
											"end": 7361,
											"name": "MUL",
											"source": 12
										},
										{
											"begin": 7354,
											"end": 7361,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 7354,
											"end": 7361,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 7354,
											"end": 7361,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 7354,
											"end": 7368,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7354,
											"end": 7368,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 7354,
											"end": 7368,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 7354,
											"end": 7368,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7354,
											"end": 7368,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 7354,
											"end": 7368,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 7354,
											"end": 7368,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 7354,
											"end": 7368,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 7354,
											"end": 7368,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 7393,
											"end": 7400,
											"name": "DUP7",
											"source": 12
										},
										{
											"begin": 7383,
											"end": 7387,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 7388,
											"end": 7389,
											"name": "PUSH",
											"source": 12,
											"value": "2"
										},
										{
											"begin": 7383,
											"end": 7390,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 7383,
											"end": 7390,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 7383,
											"end": 7390,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 7383,
											"end": 7390,
											"name": "LT",
											"source": 12
										},
										{
											"begin": 7383,
											"end": 7390,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "327"
										},
										{
											"begin": 7383,
											"end": 7390,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 7383,
											"end": 7390,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "327"
										},
										{
											"begin": 7383,
											"end": 7390,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "161"
										},
										{
											"begin": 7383,
											"end": 7390,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 7383,
											"end": 7390,
											"name": "tag",
											"source": 12,
											"value": "327"
										},
										{
											"begin": 7383,
											"end": 7390,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7383,
											"end": 7400,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 7383,
											"end": 7400,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 7383,
											"end": 7400,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 7383,
											"end": 7390,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 7383,
											"end": 7390,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 7383,
											"end": 7390,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 7383,
											"end": 7390,
											"name": "MUL",
											"source": 12
										},
										{
											"begin": 7383,
											"end": 7390,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 7383,
											"end": 7390,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 7383,
											"end": 7390,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 7383,
											"end": 7390,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 7383,
											"end": 7390,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 7383,
											"end": 7400,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 7445,
											"end": 7451,
											"name": "PUSH",
											"source": 12,
											"value": "8"
										},
										{
											"begin": 7445,
											"end": 7451,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 7415,
											"end": 7442,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 7415,
											"end": 7442,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 7445,
											"end": 7451,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 7445,
											"end": 7465,
											"name": "PUSH",
											"source": 12,
											"value": "D06CA61F"
										},
										{
											"begin": 7484,
											"end": 7504,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "328"
										},
										{
											"begin": 7495,
											"end": 7504,
											"name": "DUP8",
											"source": 12
										},
										{
											"begin": 7484,
											"end": 7492,
											"name": "DUP11",
											"source": 12
										},
										{
											"begin": 7484,
											"end": 7504,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "165"
										},
										{
											"begin": 7484,
											"end": 7504,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 7484,
											"end": 7504,
											"name": "tag",
											"source": 12,
											"value": "328"
										},
										{
											"begin": 7484,
											"end": 7504,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 7523,
											"end": 7527,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 7445,
											"end": 7542,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 7445,
											"end": 7542,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 7445,
											"end": 7542,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 7445,
											"end": 7542,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFF"
										},
										{
											"begin": 7445,
											"end": 7542,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 7445,
											"end": 7542,
											"name": "PUSH",
											"source": 12,
											"value": "E0"
										},
										{
											"begin": 7445,
											"end": 7542,
											"name": "SHL",
											"source": 12
										},
										{
											"begin": 7445,
											"end": 7542,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 7445,
											"end": 7542,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 7445,
											"end": 7542,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 7445,
											"end": 7542,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 7445,
											"end": 7542,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "329"
										},
										{
											"begin": 7445,
											"end": 7542,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 7445,
											"end": 7542,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 7445,
											"end": 7542,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 7445,
											"end": 7542,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "215"
										},
										{
											"begin": 7445,
											"end": 7542,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 7445,
											"end": 7542,
											"name": "tag",
											"source": 12,
											"value": "329"
										},
										{
											"begin": 7445,
											"end": 7542,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 7445,
											"end": 7542,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 7445,
											"end": 7542,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 7445,
											"end": 7542,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 7445,
											"end": 7542,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 7445,
											"end": 7542,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 7445,
											"end": 7542,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 7445,
											"end": 7542,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 7445,
											"end": 7542,
											"name": "DUP7",
											"source": 12
										},
										{
											"begin": 7445,
											"end": 7542,
											"name": "GAS",
											"source": 12
										},
										{
											"begin": 7445,
											"end": 7542,
											"name": "STATICCALL",
											"source": 12
										},
										{
											"begin": 7445,
											"end": 7542,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 7445,
											"end": 7542,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 7445,
											"end": 7542,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 7445,
											"end": 7542,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "331"
										},
										{
											"begin": 7445,
											"end": 7542,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 7445,
											"end": 7542,
											"name": "RETURNDATASIZE",
											"source": 12
										},
										{
											"begin": 7445,
											"end": 7542,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 7445,
											"end": 7542,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 7445,
											"end": 7542,
											"name": "RETURNDATACOPY",
											"source": 12
										},
										{
											"begin": 7445,
											"end": 7542,
											"name": "RETURNDATASIZE",
											"source": 12
										},
										{
											"begin": 7445,
											"end": 7542,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 7445,
											"end": 7542,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 7445,
											"end": 7542,
											"name": "tag",
											"source": 12,
											"value": "331"
										},
										{
											"begin": 7445,
											"end": 7542,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 7445,
											"end": 7542,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 7445,
											"end": 7542,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 7445,
											"end": 7542,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 7445,
											"end": 7542,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 7445,
											"end": 7542,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 7445,
											"end": 7542,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 7445,
											"end": 7542,
											"name": "RETURNDATASIZE",
											"source": 12
										},
										{
											"begin": 7445,
											"end": 7542,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 7445,
											"end": 7542,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 7445,
											"end": 7542,
											"name": "RETURNDATACOPY",
											"source": 12
										},
										{
											"begin": 7445,
											"end": 7542,
											"name": "PUSH",
											"source": 12,
											"value": "1F"
										},
										{
											"begin": 7445,
											"end": 7542,
											"name": "RETURNDATASIZE",
											"source": 12
										},
										{
											"begin": 7445,
											"end": 7542,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 7445,
											"end": 7542,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 7445,
											"end": 7542,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 7445,
											"end": 7542,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 7445,
											"end": 7542,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 7445,
											"end": 7542,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 7445,
											"end": 7542,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 7445,
											"end": 7542,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 7445,
											"end": 7542,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "332"
										},
										{
											"begin": 7445,
											"end": 7542,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 7445,
											"end": 7542,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 7445,
											"end": 7542,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 7445,
											"end": 7542,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 7445,
											"end": 7542,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 7445,
											"end": 7542,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "219"
										},
										{
											"begin": 7445,
											"end": 7542,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 7445,
											"end": 7542,
											"name": "tag",
											"source": 12,
											"value": "332"
										},
										{
											"begin": 7445,
											"end": 7542,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 7415,
											"end": 7542,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 7415,
											"end": 7542,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 7569,
											"end": 7579,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 7580,
											"end": 7581,
											"name": "PUSH",
											"source": 12,
											"value": "2"
										},
										{
											"begin": 7569,
											"end": 7582,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 7569,
											"end": 7582,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 7569,
											"end": 7582,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 7569,
											"end": 7582,
											"name": "LT",
											"source": 12
										},
										{
											"begin": 7569,
											"end": 7582,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "334"
										},
										{
											"begin": 7569,
											"end": 7582,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 7569,
											"end": 7582,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "334"
										},
										{
											"begin": 7569,
											"end": 7582,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "161"
										},
										{
											"begin": 7569,
											"end": 7582,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 7569,
											"end": 7582,
											"name": "tag",
											"source": 12,
											"value": "334"
										},
										{
											"begin": 7569,
											"end": 7582,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 7569,
											"end": 7582,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 7569,
											"end": 7582,
											"name": "MUL",
											"source": 12
										},
										{
											"begin": 7569,
											"end": 7582,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 7569,
											"end": 7582,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 7569,
											"end": 7582,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 7569,
											"end": 7582,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 7557,
											"end": 7582,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 7557,
											"end": 7582,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 7267,
											"end": 7594,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 6842,
											"end": 7594,
											"name": "tag",
											"source": 12,
											"value": "318"
										},
										{
											"begin": 6842,
											"end": 7594,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 7610,
											"end": 7616,
											"name": "PUSH",
											"source": 12,
											"value": "8"
										},
										{
											"begin": 7610,
											"end": 7616,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7610,
											"end": 7616,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 7610,
											"end": 7670,
											"name": "PUSH",
											"source": 12,
											"value": "5C11D795"
										},
										{
											"begin": 7689,
											"end": 7709,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "335"
										},
										{
											"begin": 7700,
											"end": 7709,
											"name": "DUP7",
											"source": 12
										},
										{
											"begin": 7689,
											"end": 7697,
											"name": "DUP10",
											"source": 12
										},
										{
											"begin": 7689,
											"end": 7709,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "165"
										},
										{
											"begin": 7689,
											"end": 7709,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 7689,
											"end": 7709,
											"name": "tag",
											"source": 12,
											"value": "335"
										},
										{
											"begin": 7689,
											"end": 7709,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 7728,
											"end": 7740,
											"name": "DUP8",
											"source": 12
										},
										{
											"begin": 7759,
											"end": 7763,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 7782,
											"end": 7792,
											"name": "CALLER",
											"source": 12
										},
										{
											"begin": 7811,
											"end": 7836,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "336"
										},
										{
											"begin": 7811,
											"end": 7826,
											"name": "TIMESTAMP",
											"source": 12
										},
										{
											"begin": 7829,
											"end": 7836,
											"name": "PUSH",
											"source": 12,
											"value": "E10"
										},
										{
											"begin": 7811,
											"end": 7836,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "167"
										},
										{
											"begin": 7811,
											"end": 7836,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 7811,
											"end": 7836,
											"name": "tag",
											"source": 12,
											"value": "336"
										},
										{
											"begin": 7811,
											"end": 7836,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 7610,
											"end": 7851,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 7610,
											"end": 7851,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 7610,
											"end": 7851,
											"name": "DUP7",
											"source": 12
										},
										{
											"begin": 7610,
											"end": 7851,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFF"
										},
										{
											"begin": 7610,
											"end": 7851,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 7610,
											"end": 7851,
											"name": "PUSH",
											"source": 12,
											"value": "E0"
										},
										{
											"begin": 7610,
											"end": 7851,
											"name": "SHL",
											"source": 12
										},
										{
											"begin": 7610,
											"end": 7851,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 7610,
											"end": 7851,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 7610,
											"end": 7851,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 7610,
											"end": 7851,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 7610,
											"end": 7851,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "337"
										},
										{
											"begin": 7610,
											"end": 7851,
											"name": "SWAP6",
											"source": 12
										},
										{
											"begin": 7610,
											"end": 7851,
											"name": "SWAP5",
											"source": 12
										},
										{
											"begin": 7610,
											"end": 7851,
											"name": "SWAP4",
											"source": 12
										},
										{
											"begin": 7610,
											"end": 7851,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 7610,
											"end": 7851,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 7610,
											"end": 7851,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 7610,
											"end": 7851,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "169"
										},
										{
											"begin": 7610,
											"end": 7851,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 7610,
											"end": 7851,
											"name": "tag",
											"source": 12,
											"value": "337"
										},
										{
											"begin": 7610,
											"end": 7851,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 7610,
											"end": 7851,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 7610,
											"end": 7851,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 7610,
											"end": 7851,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 7610,
											"end": 7851,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 7610,
											"end": 7851,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 7610,
											"end": 7851,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 7610,
											"end": 7851,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 7610,
											"end": 7851,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 7610,
											"end": 7851,
											"name": "DUP8",
											"source": 12
										},
										{
											"begin": 7610,
											"end": 7851,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 7610,
											"end": 7851,
											"name": "EXTCODESIZE",
											"source": 12
										},
										{
											"begin": 7610,
											"end": 7851,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 7610,
											"end": 7851,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 7610,
											"end": 7851,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 7610,
											"end": 7851,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "338"
										},
										{
											"begin": 7610,
											"end": 7851,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 7610,
											"end": 7851,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 7610,
											"end": 7851,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 7610,
											"end": 7851,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 7610,
											"end": 7851,
											"name": "tag",
											"source": 12,
											"value": "338"
										},
										{
											"begin": 7610,
											"end": 7851,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 7610,
											"end": 7851,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 7610,
											"end": 7851,
											"name": "GAS",
											"source": 12
										},
										{
											"begin": 7610,
											"end": 7851,
											"name": "CALL",
											"source": 12
										},
										{
											"begin": 7610,
											"end": 7851,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 7610,
											"end": 7851,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 7610,
											"end": 7851,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 7610,
											"end": 7851,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "340"
										},
										{
											"begin": 7610,
											"end": 7851,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 7610,
											"end": 7851,
											"name": "RETURNDATASIZE",
											"source": 12
										},
										{
											"begin": 7610,
											"end": 7851,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 7610,
											"end": 7851,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 7610,
											"end": 7851,
											"name": "RETURNDATACOPY",
											"source": 12
										},
										{
											"begin": 7610,
											"end": 7851,
											"name": "RETURNDATASIZE",
											"source": 12
										},
										{
											"begin": 7610,
											"end": 7851,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 7610,
											"end": 7851,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 7610,
											"end": 7851,
											"name": "tag",
											"source": 12,
											"value": "340"
										},
										{
											"begin": 7610,
											"end": 7851,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7883,
											"end": 7897,
											"name": "DUP8",
											"source": 12
										},
										{
											"begin": 7883,
											"end": 7897,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 2414,
											"end": 2456,
											"name": "PUSH",
											"source": 12,
											"value": "41BC026DABE978BC2FAFEA1850456511CA4B01BC"
										},
										{
											"begin": 7883,
											"end": 7897,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 7883,
											"end": 7920,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 7883,
											"end": 7920,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 7883,
											"end": 7920,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "341"
										},
										{
											"begin": 7883,
											"end": 7920,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 7901,
											"end": 7920,
											"name": "PUSH",
											"source": 12,
											"value": "3"
										},
										{
											"begin": 7901,
											"end": 7920,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 7901,
											"end": 7920,
											"name": "PUSH",
											"source": 12,
											"value": "FF"
										},
										{
											"begin": 7901,
											"end": 7920,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 7883,
											"end": 7920,
											"name": "tag",
											"source": 12,
											"value": "341"
										},
										{
											"begin": 7883,
											"end": 7920,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 7864,
											"end": 7992,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 7864,
											"end": 7992,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "343"
										},
										{
											"begin": 7864,
											"end": 7992,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 7948,
											"end": 7980,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "343"
										},
										{
											"begin": 7958,
											"end": 7968,
											"name": "CALLER",
											"source": 12
										},
										{
											"begin": 7970,
											"end": 7979,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 7948,
											"end": 7957,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "142"
										},
										{
											"begin": 7948,
											"end": 7980,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 7948,
											"end": 7980,
											"name": "tag",
											"source": 12,
											"value": "343"
										},
										{
											"begin": 7948,
											"end": 7980,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 6007,
											"end": 7999,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 6007,
											"end": 7999,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 6007,
											"end": 7999,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 6007,
											"end": 7999,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 5854,
											"end": 7999,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 5854,
											"end": 7999,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 5854,
											"end": 7999,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 5854,
											"end": 7999,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 5854,
											"end": 7999,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 4576,
											"end": 4666,
											"name": "tag",
											"source": 12,
											"value": "124"
										},
										{
											"begin": 4576,
											"end": 4666,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "345"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "186"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "345"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4632,
											"end": 4651,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "3"
										},
										{
											"begin": 4632,
											"end": 4658,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 4632,
											"end": 4658,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 4632,
											"end": 4658,
											"modifierDepth": 1,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 4654,
											"end": 4658,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "1"
										},
										{
											"begin": 4632,
											"end": 4658,
											"modifierDepth": 1,
											"name": "OR",
											"source": 12
										},
										{
											"begin": 4632,
											"end": 4658,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 4632,
											"end": 4658,
											"name": "SSTORE",
											"source": 12
										},
										{
											"begin": 4576,
											"end": 4666,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 2941,
											"end": 2967,
											"name": "tag",
											"source": 12,
											"value": "132"
										},
										{
											"begin": 2941,
											"end": 2967,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2941,
											"end": 2967,
											"name": "PUSH",
											"source": 12,
											"value": "6"
										},
										{
											"begin": 2941,
											"end": 2967,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 2941,
											"end": 2967,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 2941,
											"end": 2967,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 2941,
											"end": 2967,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 2941,
											"end": 2967,
											"name": "LT",
											"source": 12
										},
										{
											"begin": 2941,
											"end": 2967,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "347"
										},
										{
											"begin": 2941,
											"end": 2967,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 2941,
											"end": 2967,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 2941,
											"end": 2967,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 2941,
											"end": 2967,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 2941,
											"end": 2967,
											"name": "tag",
											"source": 12,
											"value": "347"
										},
										{
											"begin": 2941,
											"end": 2967,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2941,
											"end": 2967,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 2941,
											"end": 2967,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 2941,
											"end": 2967,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 2941,
											"end": 2967,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 2941,
											"end": 2967,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 2941,
											"end": 2967,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 2941,
											"end": 2967,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 2941,
											"end": 2967,
											"name": "KECCAK256",
											"source": 12
										},
										{
											"begin": 2941,
											"end": 2967,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 2941,
											"end": 2967,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2941,
											"end": 2967,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 2941,
											"end": 2967,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2941,
											"end": 2967,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 2941,
											"end": 2967,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 0,
											"value": "137"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "350"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "186"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "350"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2627,
											"end": 2649,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2627,
											"end": 2649,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "352"
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2672,
											"end": 2703,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1E4FBDF7"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2672,
											"end": 2703,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2700,
											"end": 2701,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2672,
											"end": 2703,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 665,
											"end": 716,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 638,
											"end": 656,
											"name": "PUSH",
											"source": 13,
											"value": "24"
										},
										{
											"begin": 638,
											"end": 656,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "353"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "352"
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2723,
											"end": 2751,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "354"
										},
										{
											"begin": 2742,
											"end": 2750,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2723,
											"end": 2741,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "239"
										},
										{
											"begin": 2723,
											"end": 2751,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2723,
											"end": 2751,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "354"
										},
										{
											"begin": 2723,
											"end": 2751,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5541,
											"end": 5805,
											"name": "tag",
											"source": 12,
											"value": "142"
										},
										{
											"begin": 5541,
											"end": 5805,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5639,
											"end": 5659,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 5639,
											"end": 5659,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 5639,
											"end": 5659,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 5639,
											"end": 5659,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 5639,
											"end": 5659,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 5639,
											"end": 5659,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 5639,
											"end": 5653,
											"name": "PUSH",
											"source": 12,
											"value": "5"
										},
										{
											"begin": 5639,
											"end": 5659,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 5639,
											"end": 5659,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 5639,
											"end": 5659,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 5639,
											"end": 5659,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 5639,
											"end": 5659,
											"name": "KECCAK256",
											"source": 12
										},
										{
											"begin": 5639,
											"end": 5659,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 5639,
											"end": 5659,
											"name": "PUSH",
											"source": 12,
											"value": "FF"
										},
										{
											"begin": 5639,
											"end": 5659,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 5635,
											"end": 5750,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "356"
										},
										{
											"begin": 5635,
											"end": 5750,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 5676,
											"end": 5685,
											"name": "PUSH",
											"source": 12,
											"value": "6"
										},
										{
											"begin": 5676,
											"end": 5696,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 5676,
											"end": 5696,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 5676,
											"end": 5696,
											"name": "PUSH",
											"source": 12,
											"value": "1"
										},
										{
											"begin": 5676,
											"end": 5696,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 5676,
											"end": 5696,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 5676,
											"end": 5696,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 5676,
											"end": 5696,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 5676,
											"end": 5696,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 5676,
											"end": 5696,
											"name": "SSTORE",
											"source": 12
										},
										{
											"begin": 5676,
											"end": 5696,
											"name": "PUSH",
											"source": 12,
											"value": "F652222313E28459528D920B65115C16C04F3EFC82AAEDC97BE59F3F377C0D3F"
										},
										{
											"begin": 5676,
											"end": 5696,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 5676,
											"end": 5696,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 5676,
											"end": 5696,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 5676,
											"end": 5696,
											"name": "AND",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5676,
											"end": 5696,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 5676,
											"end": 5696,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 5676,
											"end": 5696,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 5676,
											"end": 5696,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 5676,
											"end": 5696,
											"name": "OR",
											"source": 12
										},
										{
											"begin": 5676,
											"end": 5696,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 5676,
											"end": 5696,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 5676,
											"end": 5696,
											"name": "SSTORE",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 5711,
											"end": 5731,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 5711,
											"end": 5731,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 5711,
											"end": 5731,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 5711,
											"end": 5725,
											"name": "PUSH",
											"source": 12,
											"value": "5"
										},
										{
											"begin": 5676,
											"end": 5696,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 5711,
											"end": 5731,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 5711,
											"end": 5731,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 5711,
											"end": 5731,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 5711,
											"end": 5731,
											"name": "KECCAK256",
											"source": 12
										},
										{
											"begin": 5711,
											"end": 5738,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 5711,
											"end": 5738,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 5711,
											"end": 5738,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 5711,
											"end": 5738,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 5711,
											"end": 5738,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 5711,
											"end": 5738,
											"name": "OR",
											"source": 12
										},
										{
											"begin": 5711,
											"end": 5738,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 5711,
											"end": 5738,
											"name": "SSTORE",
											"source": 12
										},
										{
											"begin": 5635,
											"end": 5750,
											"name": "tag",
											"source": 12,
											"value": "356"
										},
										{
											"begin": 5635,
											"end": 5750,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5771,
											"end": 5787,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 5771,
											"end": 5787,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 5771,
											"end": 5787,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 5771,
											"end": 5787,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 5771,
											"end": 5787,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 5771,
											"end": 5787,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 5771,
											"end": 5781,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 5771,
											"end": 5787,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 5771,
											"end": 5787,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 5771,
											"end": 5787,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 5771,
											"end": 5787,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 5771,
											"end": 5787,
											"name": "KECCAK256",
											"source": 12
										},
										{
											"begin": 5771,
											"end": 5797,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 5771,
											"end": 5797,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 5791,
											"end": 5797,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 5791,
											"end": 5797,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 5771,
											"end": 5787,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 5771,
											"end": 5797,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "358"
										},
										{
											"begin": 5771,
											"end": 5797,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 5791,
											"end": 5797,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 5791,
											"end": 5797,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 5771,
											"end": 5797,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "167"
										},
										{
											"begin": 5771,
											"end": 5797,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 5771,
											"end": 5797,
											"name": "tag",
											"source": 12,
											"value": "358"
										},
										{
											"begin": 5771,
											"end": 5797,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 5771,
											"end": 5797,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 5771,
											"end": 5797,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 5771,
											"end": 5797,
											"name": "SSTORE",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5541,
											"end": 5805,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 4940,
											"end": 5533,
											"name": "tag",
											"source": 12,
											"value": "154"
										},
										{
											"begin": 4940,
											"end": 5533,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 5013,
											"end": 5028,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5031,
											"end": 5048,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 5031,
											"end": 5048,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 2335,
											"end": 2377,
											"name": "PUSH",
											"source": 12,
											"value": "5C7F8A570D578ED84E63FDFA7B1EE72DEAE1AE23"
										},
										{
											"begin": 5031,
											"end": 5048,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 5031,
											"end": 5056,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "360"
										},
										{
											"begin": 5031,
											"end": 5056,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 5055,
											"end": 5056,
											"name": "PUSH",
											"source": 12,
											"value": "2"
										},
										{
											"begin": 5031,
											"end": 5056,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "361"
										},
										{
											"begin": 5031,
											"end": 5056,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 5031,
											"end": 5056,
											"name": "tag",
											"source": 12,
											"value": "360"
										},
										{
											"begin": 5031,
											"end": 5056,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 5051,
											"end": 5052,
											"name": "PUSH",
											"source": 12,
											"value": "1"
										},
										{
											"begin": 5031,
											"end": 5056,
											"name": "tag",
											"source": 12,
											"value": "361"
										},
										{
											"begin": 5031,
											"end": 5056,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 5013,
											"end": 5056,
											"name": "PUSH",
											"source": 12,
											"value": "FF"
										},
										{
											"begin": 5013,
											"end": 5056,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 5013,
											"end": 5056,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 5013,
											"end": 5056,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 5070,
											"end": 5077,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 5081,
											"end": 5082,
											"name": "PUSH",
											"source": 12,
											"value": "1"
										},
										{
											"begin": 5070,
											"end": 5082,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 5067,
											"end": 5526,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "362"
										},
										{
											"begin": 5067,
											"end": 5526,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 5098,
											"end": 5102,
											"name": "PUSH",
											"source": 12,
											"value": "D"
										},
										{
											"begin": 5098,
											"end": 5102,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 5098,
											"end": 5102,
											"name": "PUSH",
											"source": 12,
											"value": "1"
										},
										{
											"begin": 5112,
											"end": 5123,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 5098,
											"end": 5135,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 5098,
											"end": 5135,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A9059CBB"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5098,
											"end": 5135,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 5098,
											"end": 5135,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5112,
											"end": 5123,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 5112,
											"end": 5123,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 5112,
											"end": 5123,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 5098,
											"end": 5135,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 5098,
											"end": 5135,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 5098,
											"end": 5135,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 7984,
											"end": 8035,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 8051,
											"end": 8069,
											"name": "PUSH",
											"source": 13,
											"value": "24"
										},
										{
											"begin": 8051,
											"end": 8069,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 8051,
											"end": 8069,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 8044,
											"end": 8078,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 8044,
											"end": 8078,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 8044,
											"end": 8078,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 5098,
											"end": 5102,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 5098,
											"end": 5102,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 5098,
											"end": 5102,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 5098,
											"end": 5111,
											"name": "PUSH",
											"source": 12,
											"value": "A9059CBB"
										},
										{
											"begin": 5098,
											"end": 5111,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 7957,
											"end": 7975,
											"name": "PUSH",
											"source": 13,
											"value": "44"
										},
										{
											"begin": 7957,
											"end": 7975,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 5098,
											"end": 5135,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 5098,
											"end": 5135,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 5098,
											"end": 5135,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 5098,
											"end": 5135,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 5098,
											"end": 5135,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 5098,
											"end": 5135,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 5098,
											"end": 5135,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 5098,
											"end": 5135,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 5098,
											"end": 5135,
											"name": "DUP8",
											"source": 12
										},
										{
											"begin": 5098,
											"end": 5135,
											"name": "GAS",
											"source": 12
										},
										{
											"begin": 5098,
											"end": 5135,
											"name": "CALL",
											"source": 12
										},
										{
											"begin": 5098,
											"end": 5135,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 5098,
											"end": 5135,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 5098,
											"end": 5135,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 5098,
											"end": 5135,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "365"
										},
										{
											"begin": 5098,
											"end": 5135,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 5098,
											"end": 5135,
											"name": "RETURNDATASIZE",
											"source": 12
										},
										{
											"begin": 5098,
											"end": 5135,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 5098,
											"end": 5135,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 5098,
											"end": 5135,
											"name": "RETURNDATACOPY",
											"source": 12
										},
										{
											"begin": 5098,
											"end": 5135,
											"name": "RETURNDATASIZE",
											"source": 12
										},
										{
											"begin": 5098,
											"end": 5135,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 5098,
											"end": 5135,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 5098,
											"end": 5135,
											"name": "tag",
											"source": 12,
											"value": "365"
										},
										{
											"begin": 5098,
											"end": 5135,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 5098,
											"end": 5135,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 5098,
											"end": 5135,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 5098,
											"end": 5135,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 5098,
											"end": 5135,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 5098,
											"end": 5135,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 5098,
											"end": 5135,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 5098,
											"end": 5135,
											"name": "RETURNDATASIZE",
											"source": 12
										},
										{
											"begin": 5098,
											"end": 5135,
											"name": "PUSH",
											"source": 12,
											"value": "1F"
										},
										{
											"begin": 5098,
											"end": 5135,
											"name": "NOT",
											"source": 12
										},
										{
											"begin": 5098,
											"end": 5135,
											"name": "PUSH",
											"source": 12,
											"value": "1F"
										},
										{
											"begin": 5098,
											"end": 5135,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 5098,
											"end": 5135,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 5098,
											"end": 5135,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 5098,
											"end": 5135,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 5098,
											"end": 5135,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 5098,
											"end": 5135,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 5098,
											"end": 5135,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 5098,
											"end": 5135,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 5098,
											"end": 5135,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 5098,
											"end": 5135,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 5098,
											"end": 5135,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 5098,
											"end": 5135,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 5098,
											"end": 5135,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "366"
										},
										{
											"begin": 5098,
											"end": 5135,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 5098,
											"end": 5135,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 5098,
											"end": 5135,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "148"
										},
										{
											"begin": 5098,
											"end": 5135,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 5098,
											"end": 5135,
											"name": "tag",
											"source": 12,
											"value": "366"
										},
										{
											"begin": 5098,
											"end": 5135,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 5098,
											"end": 5135,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 5002,
											"end": 5533,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 4940,
											"end": 5533,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 4940,
											"end": 5533,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 4940,
											"end": 5533,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 5067,
											"end": 5526,
											"name": "tag",
											"source": 12,
											"value": "362"
										},
										{
											"begin": 5067,
											"end": 5526,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 5168,
											"end": 5189,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 5206,
											"end": 5213,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 5192,
											"end": 5214,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5192,
											"end": 5214,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 5192,
											"end": 5214,
											"name": "GT",
											"source": 12
										},
										{
											"begin": 5192,
											"end": 5214,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 5192,
											"end": 5214,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "369"
										},
										{
											"begin": 5192,
											"end": 5214,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 5192,
											"end": 5214,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "369"
										},
										{
											"begin": 5192,
											"end": 5214,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "157"
										},
										{
											"begin": 5192,
											"end": 5214,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 5192,
											"end": 5214,
											"name": "tag",
											"source": 12,
											"value": "369"
										},
										{
											"begin": 5192,
											"end": 5214,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 5192,
											"end": 5214,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 5192,
											"end": 5214,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 5192,
											"end": 5214,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 5192,
											"end": 5214,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 5192,
											"end": 5214,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 5192,
											"end": 5214,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 5192,
											"end": 5214,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 5192,
											"end": 5214,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 5192,
											"end": 5214,
											"name": "MUL",
											"source": 12
										},
										{
											"begin": 5192,
											"end": 5214,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 5192,
											"end": 5214,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 5192,
											"end": 5214,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 5192,
											"end": 5214,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 5192,
											"end": 5214,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 5192,
											"end": 5214,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 5192,
											"end": 5214,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 5192,
											"end": 5214,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 5192,
											"end": 5214,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "370"
										},
										{
											"begin": 5192,
											"end": 5214,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 5192,
											"end": 5214,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 5192,
											"end": 5214,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 5192,
											"end": 5214,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 5192,
											"end": 5214,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 5192,
											"end": 5214,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 5192,
											"end": 5214,
											"name": "MUL",
											"source": 12
										},
										{
											"begin": 5192,
											"end": 5214,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 5192,
											"end": 5214,
											"name": "CALLDATASIZE",
											"source": 12
										},
										{
											"begin": 5192,
											"end": 5214,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 5192,
											"end": 5214,
											"name": "CALLDATACOPY",
											"source": 12
										},
										{
											"begin": 5192,
											"end": 5214,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 5192,
											"end": 5214,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5192,
											"end": 5214,
											"name": "tag",
											"source": 12,
											"value": "370"
										},
										{
											"begin": 5192,
											"end": 5214,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 5192,
											"end": 5214,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 5168,
											"end": 5214,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 5168,
											"end": 5214,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 5239,
											"end": 5248,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 5229,
											"end": 5233,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 5234,
											"end": 5235,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 5229,
											"end": 5236,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 5229,
											"end": 5236,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 5229,
											"end": 5236,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 5229,
											"end": 5236,
											"name": "LT",
											"source": 12
										},
										{
											"begin": 5229,
											"end": 5236,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "372"
										},
										{
											"begin": 5229,
											"end": 5236,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 5229,
											"end": 5236,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "372"
										},
										{
											"begin": 5229,
											"end": 5236,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "161"
										},
										{
											"begin": 5229,
											"end": 5236,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 5229,
											"end": 5236,
											"name": "tag",
											"source": 12,
											"value": "372"
										},
										{
											"begin": 5229,
											"end": 5236,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 5229,
											"end": 5236,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 5229,
											"end": 5236,
											"name": "MUL",
											"source": 12
										},
										{
											"begin": 5229,
											"end": 5236,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 5229,
											"end": 5236,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 5229,
											"end": 5236,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 5229,
											"end": 5248,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5229,
											"end": 5248,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 5229,
											"end": 5248,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 5229,
											"end": 5248,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5229,
											"end": 5248,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 5229,
											"end": 5248,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 5229,
											"end": 5248,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 5229,
											"end": 5248,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 5229,
											"end": 5248,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2335,
											"end": 2377,
											"name": "PUSH",
											"source": 12,
											"value": "5C7F8A570D578ED84E63FDFA7B1EE72DEAE1AE23"
										},
										{
											"begin": 5263,
											"end": 5267,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 5268,
											"end": 5269,
											"name": "PUSH",
											"source": 12,
											"value": "1"
										},
										{
											"begin": 5263,
											"end": 5270,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 5263,
											"end": 5270,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 5263,
											"end": 5270,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 5263,
											"end": 5270,
											"name": "LT",
											"source": 12
										},
										{
											"begin": 5263,
											"end": 5270,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "374"
										},
										{
											"begin": 5263,
											"end": 5270,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 5263,
											"end": 5270,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "374"
										},
										{
											"begin": 5263,
											"end": 5270,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "161"
										},
										{
											"begin": 5263,
											"end": 5270,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 5263,
											"end": 5270,
											"name": "tag",
											"source": 12,
											"value": "374"
										},
										{
											"begin": 5263,
											"end": 5270,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5263,
											"end": 5277,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 5263,
											"end": 5277,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 5263,
											"end": 5277,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 5263,
											"end": 5270,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 5263,
											"end": 5270,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 5263,
											"end": 5270,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 5263,
											"end": 5270,
											"name": "MUL",
											"source": 12
										},
										{
											"begin": 5263,
											"end": 5270,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 5263,
											"end": 5270,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 5263,
											"end": 5270,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 5263,
											"end": 5270,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 5263,
											"end": 5270,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 5263,
											"end": 5277,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 5294,
											"end": 5300,
											"name": "PUSH",
											"source": 12,
											"value": "8"
										},
										{
											"begin": 5294,
											"end": 5300,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 5294,
											"end": 5300,
											"name": "PUSH",
											"source": 12,
											"value": "1"
										},
										{
											"begin": 5444,
											"end": 5455,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 5294,
											"end": 5300,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 5294,
											"end": 5300,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 5294,
											"end": 5300,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 5294,
											"end": 5300,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 5294,
											"end": 5354,
											"name": "PUSH",
											"source": 12,
											"value": "5C11D795"
										},
										{
											"begin": 5294,
											"end": 5354,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 5373,
											"end": 5382,
											"name": "DUP7",
											"source": 12
										},
										{
											"begin": 5373,
											"end": 5382,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 5294,
											"end": 5300,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 5294,
											"end": 5300,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 5421,
											"end": 5425,
											"name": "DUP7",
											"source": 12
										},
										{
											"begin": 5421,
											"end": 5425,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 5444,
											"end": 5455,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 5474,
											"end": 5499,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "375"
										},
										{
											"begin": 5474,
											"end": 5489,
											"name": "TIMESTAMP",
											"source": 12
										},
										{
											"begin": 5492,
											"end": 5499,
											"name": "PUSH",
											"source": 12,
											"value": "E10"
										},
										{
											"begin": 5474,
											"end": 5499,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "167"
										},
										{
											"begin": 5474,
											"end": 5499,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 5474,
											"end": 5499,
											"name": "tag",
											"source": 12,
											"value": "375"
										},
										{
											"begin": 5474,
											"end": 5499,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 5294,
											"end": 5514,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 5294,
											"end": 5514,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 5294,
											"end": 5514,
											"name": "DUP7",
											"source": 12
										},
										{
											"begin": 5294,
											"end": 5514,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFF"
										},
										{
											"begin": 5294,
											"end": 5514,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 5294,
											"end": 5514,
											"name": "PUSH",
											"source": 12,
											"value": "E0"
										},
										{
											"begin": 5294,
											"end": 5514,
											"name": "SHL",
											"source": 12
										},
										{
											"begin": 5294,
											"end": 5514,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 5294,
											"end": 5514,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 5294,
											"end": 5514,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 5294,
											"end": 5514,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 5294,
											"end": 5514,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "376"
										},
										{
											"begin": 5294,
											"end": 5514,
											"name": "SWAP6",
											"source": 12
										},
										{
											"begin": 5294,
											"end": 5514,
											"name": "SWAP5",
											"source": 12
										},
										{
											"begin": 5294,
											"end": 5514,
											"name": "SWAP4",
											"source": 12
										},
										{
											"begin": 5294,
											"end": 5514,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 5294,
											"end": 5514,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 5294,
											"end": 5514,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 5294,
											"end": 5514,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "169"
										},
										{
											"begin": 5294,
											"end": 5514,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 5294,
											"end": 5514,
											"name": "tag",
											"source": 12,
											"value": "376"
										},
										{
											"begin": 5294,
											"end": 5514,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 5294,
											"end": 5514,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 5294,
											"end": 5514,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 5294,
											"end": 5514,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 5294,
											"end": 5514,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 5294,
											"end": 5514,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 5294,
											"end": 5514,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 5294,
											"end": 5514,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 5294,
											"end": 5514,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 5294,
											"end": 5514,
											"name": "DUP8",
											"source": 12
										},
										{
											"begin": 5294,
											"end": 5514,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 5294,
											"end": 5514,
											"name": "EXTCODESIZE",
											"source": 12
										},
										{
											"begin": 5294,
											"end": 5514,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 5294,
											"end": 5514,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 5294,
											"end": 5514,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 5294,
											"end": 5514,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "378"
										},
										{
											"begin": 5294,
											"end": 5514,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 5294,
											"end": 5514,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 5294,
											"end": 5514,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 5294,
											"end": 5514,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 5294,
											"end": 5514,
											"name": "tag",
											"source": 12,
											"value": "378"
										},
										{
											"begin": 5294,
											"end": 5514,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 5294,
											"end": 5514,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 5294,
											"end": 5514,
											"name": "GAS",
											"source": 12
										},
										{
											"begin": 5294,
											"end": 5514,
											"name": "CALL",
											"source": 12
										},
										{
											"begin": 5294,
											"end": 5514,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 5294,
											"end": 5514,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 5294,
											"end": 5514,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 5294,
											"end": 5514,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "343"
										},
										{
											"begin": 5294,
											"end": 5514,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 5294,
											"end": 5514,
											"name": "RETURNDATASIZE",
											"source": 12
										},
										{
											"begin": 5294,
											"end": 5514,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 5294,
											"end": 5514,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 5294,
											"end": 5514,
											"name": "RETURNDATACOPY",
											"source": 12
										},
										{
											"begin": 5294,
											"end": 5514,
											"name": "RETURNDATASIZE",
											"source": 12
										},
										{
											"begin": 5294,
											"end": 5514,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 5294,
											"end": 5514,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 1796,
											"end": 1958,
											"name": "tag",
											"source": 0,
											"value": "186"
										},
										{
											"begin": 1796,
											"end": 1958,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1684,
											"end": 1691,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 735,
											"end": 745,
											"name": "CALLER",
											"source": 8
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1851,
											"end": 1952,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "238"
										},
										{
											"begin": 1851,
											"end": 1952,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "118CDAA7"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 735,
											"end": 745,
											"name": "CALLER",
											"source": 8
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 665,
											"end": 716,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 638,
											"end": 656,
											"name": "PUSH",
											"source": 13,
											"value": "24"
										},
										{
											"begin": 638,
											"end": 656,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "353"
										},
										{
											"begin": 519,
											"end": 722,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 2912,
											"end": 3099,
											"name": "tag",
											"source": 0,
											"value": "239"
										},
										{
											"begin": 2912,
											"end": 3099,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2985,
											"end": 3001,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "AND",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 0,
											"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2985,
											"end": 3001,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 2975,
											"end": 3099,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2912,
											"end": 3099,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2912,
											"end": 3099,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "tag",
											"source": -1,
											"value": "200"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "KECCAK256",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "354"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "tag",
											"source": -1,
											"value": "393"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "GT",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ISZERO",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "394"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPI",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "393"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "tag",
											"source": -1,
											"value": "394"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": -1
										},
										{
											"begin": 14,
											"end": 187,
											"name": "tag",
											"source": 13,
											"value": "395"
										},
										{
											"begin": 14,
											"end": 187,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 82,
											"end": 102,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 82,
											"end": 102,
											"name": "CALLDATALOAD",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 131,
											"end": 162,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 131,
											"end": 162,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 121,
											"end": 163,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 121,
											"end": 163,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 111,
											"end": 181,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "400"
										},
										{
											"begin": 111,
											"end": 181,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 177,
											"end": 178,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 174,
											"end": 175,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 167,
											"end": 179,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 111,
											"end": 181,
											"name": "tag",
											"source": 13,
											"value": "400"
										},
										{
											"begin": 111,
											"end": 181,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 14,
											"end": 187,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 14,
											"end": 187,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 14,
											"end": 187,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 14,
											"end": 187,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 192,
											"end": 514,
											"name": "tag",
											"source": 13,
											"value": "37"
										},
										{
											"begin": 192,
											"end": 514,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 269,
											"end": 275,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 277,
											"end": 283,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 285,
											"end": 291,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 338,
											"end": 340,
											"name": "PUSH",
											"source": 13,
											"value": "60"
										},
										{
											"begin": 326,
											"end": 335,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 317,
											"end": 324,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 313,
											"end": 336,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 309,
											"end": 341,
											"name": "SLT",
											"source": 13
										},
										{
											"begin": 306,
											"end": 358,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 306,
											"end": 358,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "402"
										},
										{
											"begin": 306,
											"end": 358,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 354,
											"end": 355,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 351,
											"end": 352,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 344,
											"end": 356,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 306,
											"end": 358,
											"name": "tag",
											"source": 13,
											"value": "402"
										},
										{
											"begin": 306,
											"end": 358,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 377,
											"end": 406,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "403"
										},
										{
											"begin": 396,
											"end": 405,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 377,
											"end": 406,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "395"
										},
										{
											"begin": 377,
											"end": 406,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 377,
											"end": 406,
											"name": "tag",
											"source": 13,
											"value": "403"
										},
										{
											"begin": 377,
											"end": 406,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 367,
											"end": 406,
											"name": "SWAP6",
											"source": 13
										},
										{
											"begin": 453,
											"end": 455,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 438,
											"end": 456,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 438,
											"end": 456,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 425,
											"end": 457,
											"name": "CALLDATALOAD",
											"source": 13
										},
										{
											"begin": 425,
											"end": 457,
											"name": "SWAP6",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 504,
											"end": 506,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 489,
											"end": 507,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 489,
											"end": 507,
											"name": "SWAP5",
											"source": 13
										},
										{
											"begin": 489,
											"end": 507,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 476,
											"end": 508,
											"name": "CALLDATALOAD",
											"source": 13
										},
										{
											"begin": 476,
											"end": 508,
											"name": "SWAP4",
											"source": 13
										},
										{
											"begin": 192,
											"end": 514,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 192,
											"end": 514,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 727,
											"end": 907,
											"name": "tag",
											"source": 13,
											"value": "47"
										},
										{
											"begin": 727,
											"end": 907,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 786,
											"end": 792,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 839,
											"end": 841,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 827,
											"end": 836,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 818,
											"end": 825,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 814,
											"end": 837,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 810,
											"end": 842,
											"name": "SLT",
											"source": 13
										},
										{
											"begin": 807,
											"end": 859,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 807,
											"end": 859,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "406"
										},
										{
											"begin": 807,
											"end": 859,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 855,
											"end": 856,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 852,
											"end": 853,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 845,
											"end": 857,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 807,
											"end": 859,
											"name": "tag",
											"source": 13,
											"value": "406"
										},
										{
											"begin": 807,
											"end": 859,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 878,
											"end": 901,
											"name": "CALLDATALOAD",
											"source": 13
										},
										{
											"begin": 878,
											"end": 901,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 727,
											"end": 907,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 727,
											"end": 907,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 912,
											"end": 1166,
											"name": "tag",
											"source": 13,
											"value": "52"
										},
										{
											"begin": 912,
											"end": 1166,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 980,
											"end": 986,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 988,
											"end": 994,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 1041,
											"end": 1043,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 1029,
											"end": 1038,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 1020,
											"end": 1027,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 1016,
											"end": 1039,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 1012,
											"end": 1044,
											"name": "SLT",
											"source": 13
										},
										{
											"begin": 1009,
											"end": 1061,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 1009,
											"end": 1061,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "408"
										},
										{
											"begin": 1009,
											"end": 1061,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 1057,
											"end": 1058,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 1054,
											"end": 1055,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 1047,
											"end": 1059,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 1009,
											"end": 1061,
											"name": "tag",
											"source": 13,
											"value": "408"
										},
										{
											"begin": 1009,
											"end": 1061,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1080,
											"end": 1109,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "409"
										},
										{
											"begin": 1099,
											"end": 1108,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 1080,
											"end": 1109,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "395"
										},
										{
											"begin": 1080,
											"end": 1109,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 1080,
											"end": 1109,
											"name": "tag",
											"source": 13,
											"value": "409"
										},
										{
											"begin": 1080,
											"end": 1109,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1070,
											"end": 1109,
											"name": "SWAP5",
											"source": 13
										},
										{
											"begin": 1156,
											"end": 1158,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 1141,
											"end": 1159,
											"name": "SWAP4",
											"source": 13
										},
										{
											"begin": 1141,
											"end": 1159,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 1141,
											"end": 1159,
											"name": "SWAP4",
											"source": 13
										},
										{
											"begin": 1141,
											"end": 1159,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 1128,
											"end": 1160,
											"name": "CALLDATALOAD",
											"source": 13
										},
										{
											"begin": 1128,
											"end": 1160,
											"name": "SWAP4",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 912,
											"end": 1166,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 1353,
											"end": 1539,
											"name": "tag",
											"source": 13,
											"value": "90"
										},
										{
											"begin": 1353,
											"end": 1539,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1412,
											"end": 1418,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 1465,
											"end": 1467,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 1453,
											"end": 1462,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 1444,
											"end": 1451,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 1440,
											"end": 1463,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 1436,
											"end": 1468,
											"name": "SLT",
											"source": 13
										},
										{
											"begin": 1433,
											"end": 1485,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 1433,
											"end": 1485,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "412"
										},
										{
											"begin": 1433,
											"end": 1485,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 1481,
											"end": 1482,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 1478,
											"end": 1479,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 1471,
											"end": 1483,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 1433,
											"end": 1485,
											"name": "tag",
											"source": 13,
											"value": "412"
										},
										{
											"begin": 1433,
											"end": 1485,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1504,
											"end": 1533,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "413"
										},
										{
											"begin": 1523,
											"end": 1532,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 1504,
											"end": 1533,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "395"
										},
										{
											"begin": 1504,
											"end": 1533,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 1504,
											"end": 1533,
											"name": "tag",
											"source": 13,
											"value": "413"
										},
										{
											"begin": 1504,
											"end": 1533,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1494,
											"end": 1533,
											"name": "SWAP4",
											"source": 13
										},
										{
											"begin": 1353,
											"end": 1539,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1353,
											"end": 1539,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 1736,
											"end": 2548,
											"name": "tag",
											"source": 13,
											"value": "102"
										},
										{
											"begin": 1736,
											"end": 2548,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1955,
											"end": 1957,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 2007,
											"end": 2028,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 2007,
											"end": 2028,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 2007,
											"end": 2028,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 2077,
											"end": 2090,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 2077,
											"end": 2090,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 1980,
											"end": 1998,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 1980,
											"end": 1998,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 1980,
											"end": 1998,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 2099,
											"end": 2121,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 2099,
											"end": 2121,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 2099,
											"end": 2121,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 1926,
											"end": 1930,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 1926,
											"end": 1930,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 1955,
											"end": 1957,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 2140,
											"end": 2142,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 2140,
											"end": 2142,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 2158,
											"end": 2176,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 2158,
											"end": 2176,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 2158,
											"end": 2176,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 2158,
											"end": 2176,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 2199,
											"end": 2214,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 2199,
											"end": 2214,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 2199,
											"end": 2214,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 1926,
											"end": 1930,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 2242,
											"end": 2522,
											"name": "tag",
											"source": 13,
											"value": "416"
										},
										{
											"begin": 2242,
											"end": 2522,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2256,
											"end": 2262,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 2253,
											"end": 2254,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 2250,
											"end": 2263,
											"name": "LT",
											"source": 13
										},
										{
											"begin": 2242,
											"end": 2522,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 2242,
											"end": 2522,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "418"
										},
										{
											"begin": 2242,
											"end": 2522,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 2315,
											"end": 2328,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 2315,
											"end": 2328,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 2357,
											"end": 2366,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 2357,
											"end": 2366,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2353,
											"end": 2388,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 2341,
											"end": 2389,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 2341,
											"end": 2389,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 2429,
											"end": 2440,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 2429,
											"end": 2440,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 2423,
											"end": 2441,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 2409,
											"end": 2421,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 2409,
											"end": 2421,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 2409,
											"end": 2421,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 2402,
											"end": 2442,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 2462,
											"end": 2474,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 2462,
											"end": 2474,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 2462,
											"end": 2474,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 2462,
											"end": 2474,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 2497,
											"end": 2512,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 2497,
											"end": 2512,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 2497,
											"end": 2512,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 2497,
											"end": 2512,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 2385,
											"end": 2386,
											"name": "PUSH",
											"source": 13,
											"value": "1"
										},
										{
											"begin": 2271,
											"end": 2280,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 2242,
											"end": 2522,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "416"
										},
										{
											"begin": 2242,
											"end": 2522,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 2242,
											"end": 2522,
											"name": "tag",
											"source": 13,
											"value": "418"
										},
										{
											"begin": 2242,
											"end": 2522,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2539,
											"end": 2542,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 2539,
											"end": 2542,
											"name": "SWAP8",
											"source": 13
										},
										{
											"begin": 1736,
											"end": 2548,
											"name": "SWAP7",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1736,
											"end": 2548,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 2553,
											"end": 2950,
											"name": "tag",
											"source": 13,
											"value": "120"
										},
										{
											"begin": 2553,
											"end": 2950,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2639,
											"end": 2645,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 2647,
											"end": 2653,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 2655,
											"end": 2661,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 2663,
											"end": 2669,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 2716,
											"end": 2719,
											"name": "PUSH",
											"source": 13,
											"value": "80"
										},
										{
											"begin": 2704,
											"end": 2713,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 2695,
											"end": 2702,
											"name": "DUP8",
											"source": 13
										},
										{
											"begin": 2691,
											"end": 2714,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 2687,
											"end": 2720,
											"name": "SLT",
											"source": 13
										},
										{
											"begin": 2684,
											"end": 2737,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 2684,
											"end": 2737,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "420"
										},
										{
											"begin": 2684,
											"end": 2737,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 2733,
											"end": 2734,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 2730,
											"end": 2731,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 2723,
											"end": 2735,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 2684,
											"end": 2737,
											"name": "tag",
											"source": 13,
											"value": "420"
										},
										{
											"begin": 2684,
											"end": 2737,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2756,
											"end": 2785,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "421"
										},
										{
											"begin": 2775,
											"end": 2784,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 2756,
											"end": 2785,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "395"
										},
										{
											"begin": 2756,
											"end": 2785,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 2756,
											"end": 2785,
											"name": "tag",
											"source": 13,
											"value": "421"
										},
										{
											"begin": 2756,
											"end": 2785,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2746,
											"end": 2785,
											"name": "SWAP4",
											"source": 13
										},
										{
											"begin": 2746,
											"end": 2785,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 2804,
											"end": 2842,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "422"
										},
										{
											"begin": 2838,
											"end": 2840,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 2827,
											"end": 2836,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 2823,
											"end": 2841,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 2804,
											"end": 2842,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "395"
										},
										{
											"begin": 2804,
											"end": 2842,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 2804,
											"end": 2842,
											"name": "tag",
											"source": 13,
											"value": "422"
										},
										{
											"begin": 2804,
											"end": 2842,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2553,
											"end": 2950,
											"name": "SWAP4",
											"source": 13
										},
										{
											"begin": 2553,
											"end": 2950,
											"name": "SWAP7",
											"source": 13
										},
										{
											"begin": 2794,
											"end": 2842,
											"name": "SWAP4",
											"source": 13
										},
										{
											"begin": 2794,
											"end": 2842,
											"name": "SWAP6",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2889,
											"end": 2891,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 2874,
											"end": 2892,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 2874,
											"end": 2892,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 2861,
											"end": 2893,
											"name": "CALLDATALOAD",
											"source": 13
										},
										{
											"begin": 2861,
											"end": 2893,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 2940,
											"end": 2942,
											"name": "PUSH",
											"source": 13,
											"value": "60"
										},
										{
											"begin": 2925,
											"end": 2943,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 2912,
											"end": 2944,
											"name": "CALLDATALOAD",
											"source": 13
										},
										{
											"begin": 2912,
											"end": 2944,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 2553,
											"end": 2950,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 3335,
											"end": 3612,
											"name": "tag",
											"source": 13,
											"value": "148"
										},
										{
											"begin": 3335,
											"end": 3612,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3402,
											"end": 3408,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 3455,
											"end": 3457,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 3443,
											"end": 3452,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 3434,
											"end": 3441,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 3430,
											"end": 3453,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 3426,
											"end": 3458,
											"name": "SLT",
											"source": 13
										},
										{
											"begin": 3423,
											"end": 3475,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 3423,
											"end": 3475,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "425"
										},
										{
											"begin": 3423,
											"end": 3475,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 3471,
											"end": 3472,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 3468,
											"end": 3469,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 3461,
											"end": 3473,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 3423,
											"end": 3475,
											"name": "tag",
											"source": 13,
											"value": "425"
										},
										{
											"begin": 3423,
											"end": 3475,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3503,
											"end": 3512,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 3497,
											"end": 3513,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 3556,
											"end": 3561,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 3549,
											"end": 3562,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 3542,
											"end": 3563,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 3535,
											"end": 3540,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 3532,
											"end": 3564,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 3522,
											"end": 3582,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "413"
										},
										{
											"begin": 3522,
											"end": 3582,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 3578,
											"end": 3579,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 3575,
											"end": 3576,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 3568,
											"end": 3580,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 3617,
											"end": 3744,
											"name": "tag",
											"source": 13,
											"value": "396"
										},
										{
											"begin": 3617,
											"end": 3744,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3678,
											"end": 3688,
											"name": "PUSH",
											"source": 13,
											"value": "4E487B71"
										},
										{
											"begin": 3673,
											"end": 3676,
											"name": "PUSH",
											"source": 13,
											"value": "E0"
										},
										{
											"begin": 3669,
											"end": 3689,
											"name": "SHL",
											"source": 13
										},
										{
											"begin": 3666,
											"end": 3667,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 3659,
											"end": 3690,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 3709,
											"end": 3713,
											"name": "PUSH",
											"source": 13,
											"value": "11"
										},
										{
											"begin": 3706,
											"end": 3707,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 3699,
											"end": 3714,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 3733,
											"end": 3737,
											"name": "PUSH",
											"source": 13,
											"value": "24"
										},
										{
											"begin": 3730,
											"end": 3731,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 3723,
											"end": 3738,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 3749,
											"end": 3917,
											"name": "tag",
											"source": 13,
											"value": "150"
										},
										{
											"begin": 3749,
											"end": 3917,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3822,
											"end": 3831,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 3822,
											"end": 3831,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 3822,
											"end": 3831,
											"name": "MUL",
											"source": 13
										},
										{
											"begin": 3853,
											"end": 3862,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 3853,
											"end": 3862,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 3870,
											"end": 3885,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 3870,
											"end": 3885,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 3870,
											"end": 3885,
											"name": "DIV",
											"source": 13
										},
										{
											"begin": 3864,
											"end": 3886,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 3864,
											"end": 3886,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 3850,
											"end": 3887,
											"name": "OR",
											"source": 13
										},
										{
											"begin": 3840,
											"end": 3911,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "430"
										},
										{
											"begin": 3840,
											"end": 3911,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 3891,
											"end": 3909,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "430"
										},
										{
											"begin": 3891,
											"end": 3909,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "396"
										},
										{
											"begin": 3891,
											"end": 3909,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 3891,
											"end": 3909,
											"name": "tag",
											"source": 13,
											"value": "430"
										},
										{
											"begin": 3891,
											"end": 3909,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3749,
											"end": 3917,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 3749,
											"end": 3917,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 3749,
											"end": 3917,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 3749,
											"end": 3917,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 3749,
											"end": 3917,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 3922,
											"end": 4139,
											"name": "tag",
											"source": 13,
											"value": "152"
										},
										{
											"begin": 3922,
											"end": 4139,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3962,
											"end": 3963,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 3988,
											"end": 3989,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 3978,
											"end": 4110,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "432"
										},
										{
											"begin": 3978,
											"end": 4110,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 4032,
											"end": 4042,
											"name": "PUSH",
											"source": 13,
											"value": "4E487B71"
										},
										{
											"begin": 4027,
											"end": 4030,
											"name": "PUSH",
											"source": 13,
											"value": "E0"
										},
										{
											"begin": 4023,
											"end": 4043,
											"name": "SHL",
											"source": 13
										},
										{
											"begin": 4020,
											"end": 4021,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 4013,
											"end": 4044,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 4067,
											"end": 4071,
											"name": "PUSH",
											"source": 13,
											"value": "12"
										},
										{
											"begin": 4064,
											"end": 4065,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 4057,
											"end": 4072,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 4095,
											"end": 4099,
											"name": "PUSH",
											"source": 13,
											"value": "24"
										},
										{
											"begin": 4092,
											"end": 4093,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 4085,
											"end": 4100,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 3978,
											"end": 4110,
											"name": "tag",
											"source": 13,
											"value": "432"
										},
										{
											"begin": 3978,
											"end": 4110,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4124,
											"end": 4133,
											"name": "DIV",
											"source": 13
										},
										{
											"begin": 4124,
											"end": 4133,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 3922,
											"end": 4139,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 4144,
											"end": 4271,
											"name": "tag",
											"source": 13,
											"value": "157"
										},
										{
											"begin": 4144,
											"end": 4271,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 4205,
											"end": 4215,
											"name": "PUSH",
											"source": 13,
											"value": "4E487B71"
										},
										{
											"begin": 4200,
											"end": 4203,
											"name": "PUSH",
											"source": 13,
											"value": "E0"
										},
										{
											"begin": 4196,
											"end": 4216,
											"name": "SHL",
											"source": 13
										},
										{
											"begin": 4193,
											"end": 4194,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 4186,
											"end": 4217,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 4236,
											"end": 4240,
											"name": "PUSH",
											"source": 13,
											"value": "41"
										},
										{
											"begin": 4233,
											"end": 4234,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 4226,
											"end": 4241,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 4260,
											"end": 4264,
											"name": "PUSH",
											"source": 13,
											"value": "24"
										},
										{
											"begin": 4257,
											"end": 4258,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 4250,
											"end": 4265,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 4276,
											"end": 4403,
											"name": "tag",
											"source": 13,
											"value": "161"
										},
										{
											"begin": 4276,
											"end": 4403,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 4337,
											"end": 4347,
											"name": "PUSH",
											"source": 13,
											"value": "4E487B71"
										},
										{
											"begin": 4332,
											"end": 4335,
											"name": "PUSH",
											"source": 13,
											"value": "E0"
										},
										{
											"begin": 4328,
											"end": 4348,
											"name": "SHL",
											"source": 13
										},
										{
											"begin": 4325,
											"end": 4326,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 4318,
											"end": 4349,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 4368,
											"end": 4372,
											"name": "PUSH",
											"source": 13,
											"value": "32"
										},
										{
											"begin": 4365,
											"end": 4366,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 4358,
											"end": 4373,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 4392,
											"end": 4396,
											"name": "PUSH",
											"source": 13,
											"value": "24"
										},
										{
											"begin": 4389,
											"end": 4390,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 4382,
											"end": 4397,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 4408,
											"end": 4536,
											"name": "tag",
											"source": 13,
											"value": "165"
										},
										{
											"begin": 4408,
											"end": 4536,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 4475,
											"end": 4484,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 4475,
											"end": 4484,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 4475,
											"end": 4484,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 4496,
											"end": 4507,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 4496,
											"end": 4507,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 4496,
											"end": 4507,
											"name": "GT",
											"source": 13
										},
										{
											"begin": 4493,
											"end": 4530,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 4493,
											"end": 4530,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "430"
										},
										{
											"begin": 4493,
											"end": 4530,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 4510,
											"end": 4528,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "430"
										},
										{
											"begin": 4510,
											"end": 4528,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "396"
										},
										{
											"begin": 4510,
											"end": 4528,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 4541,
											"end": 4666,
											"name": "tag",
											"source": 13,
											"value": "167"
										},
										{
											"begin": 4541,
											"end": 4666,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 4606,
											"end": 4615,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 4606,
											"end": 4615,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 4606,
											"end": 4615,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 4627,
											"end": 4637,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 4627,
											"end": 4637,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 4627,
											"end": 4637,
											"name": "GT",
											"source": 13
										},
										{
											"begin": 4624,
											"end": 4660,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 4624,
											"end": 4660,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "430"
										},
										{
											"begin": 4624,
											"end": 4660,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 4640,
											"end": 4658,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "430"
										},
										{
											"begin": 4640,
											"end": 4658,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "396"
										},
										{
											"begin": 4640,
											"end": 4658,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 4671,
											"end": 5132,
											"name": "tag",
											"source": 13,
											"value": "397"
										},
										{
											"begin": 4671,
											"end": 5132,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 4724,
											"end": 4727,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 4762,
											"end": 4767,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 4756,
											"end": 4768,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 4789,
											"end": 4795,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 4784,
											"end": 4787,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 4777,
											"end": 4796,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 4815,
											"end": 4819,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 4844,
											"end": 4846,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 4839,
											"end": 4842,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 4835,
											"end": 4847,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 4828,
											"end": 4847,
											"name": "SWAP5",
											"source": 13
										},
										{
											"begin": 4828,
											"end": 4847,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 4881,
											"end": 4883,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 4874,
											"end": 4879,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 4870,
											"end": 4884,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 4902,
											"end": 4903,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 4912,
											"end": 5107,
											"name": "tag",
											"source": 13,
											"value": "442"
										},
										{
											"begin": 4912,
											"end": 5107,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 4926,
											"end": 4932,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 4923,
											"end": 4924,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 4920,
											"end": 4933,
											"name": "LT",
											"source": 13
										},
										{
											"begin": 4912,
											"end": 5107,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 4912,
											"end": 5107,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "444"
										},
										{
											"begin": 4912,
											"end": 5107,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 4991,
											"end": 5004,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 4991,
											"end": 5004,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4987,
											"end": 5026,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 4975,
											"end": 5027,
											"name": "DUP8",
											"source": 13
										},
										{
											"begin": 4975,
											"end": 5027,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 5047,
											"end": 5059,
											"name": "SWAP6",
											"source": 13
										},
										{
											"begin": 5047,
											"end": 5059,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 5047,
											"end": 5059,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 5047,
											"end": 5059,
											"name": "SWAP6",
											"source": 13
										},
										{
											"begin": 5082,
											"end": 5097,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 5082,
											"end": 5097,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 5082,
											"end": 5097,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 5082,
											"end": 5097,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 5023,
											"end": 5024,
											"name": "PUSH",
											"source": 13,
											"value": "1"
										},
										{
											"begin": 4941,
											"end": 4950,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 4912,
											"end": 5107,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "442"
										},
										{
											"begin": 4912,
											"end": 5107,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 4912,
											"end": 5107,
											"name": "tag",
											"source": 13,
											"value": "444"
										},
										{
											"begin": 4912,
											"end": 5107,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5123,
											"end": 5126,
											"name": "SWAP5",
											"source": 13
										},
										{
											"begin": 5123,
											"end": 5126,
											"name": "SWAP6",
											"source": 13
										},
										{
											"begin": 4671,
											"end": 5132,
											"name": "SWAP5",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4671,
											"end": 5132,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 5137,
											"end": 5711,
											"name": "tag",
											"source": 13,
											"value": "169"
										},
										{
											"begin": 5137,
											"end": 5711,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 5428,
											"end": 5434,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 5417,
											"end": 5426,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 5410,
											"end": 5435,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 5471,
											"end": 5477,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 5466,
											"end": 5468,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 5455,
											"end": 5464,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 5451,
											"end": 5469,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 5444,
											"end": 5478,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 5514,
											"end": 5517,
											"name": "PUSH",
											"source": 13,
											"value": "A0"
										},
										{
											"begin": 5509,
											"end": 5511,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 5498,
											"end": 5507,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 5494,
											"end": 5512,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 5487,
											"end": 5518,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 5391,
											"end": 5395,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 5535,
											"end": 5592,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "446"
										},
										{
											"begin": 5587,
											"end": 5590,
											"name": "PUSH",
											"source": 13,
											"value": "A0"
										},
										{
											"begin": 5576,
											"end": 5585,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 5572,
											"end": 5591,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 5564,
											"end": 5570,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 5535,
											"end": 5592,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "397"
										},
										{
											"begin": 5535,
											"end": 5592,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 5535,
											"end": 5592,
											"name": "tag",
											"source": 13,
											"value": "446"
										},
										{
											"begin": 5535,
											"end": 5592,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5628,
											"end": 5660,
											"name": "SWAP5",
											"source": 13
										},
										{
											"begin": 5628,
											"end": 5660,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 5628,
											"end": 5660,
											"name": "SWAP5",
											"source": 13
										},
										{
											"begin": 5628,
											"end": 5660,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 5623,
											"end": 5625,
											"name": "PUSH",
											"source": 13,
											"value": "60"
										},
										{
											"begin": 5608,
											"end": 5626,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 5608,
											"end": 5626,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 5601,
											"end": 5661,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5692,
											"end": 5695,
											"name": "PUSH",
											"source": 13,
											"value": "80"
										},
										{
											"begin": 5677,
											"end": 5696,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 5670,
											"end": 5705,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 5527,
											"end": 5592,
											"name": "SWAP4",
											"source": 13
										},
										{
											"begin": 5137,
											"end": 5711,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5137,
											"end": 5711,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 5716,
											"end": 5851,
											"name": "tag",
											"source": 13,
											"value": "198"
										},
										{
											"begin": 5716,
											"end": 5851,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 5755,
											"end": 5758,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 5776,
											"end": 5793,
											"name": "PUSH",
											"source": 13,
											"value": "1"
										},
										{
											"begin": 5776,
											"end": 5793,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 5776,
											"end": 5793,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 5773,
											"end": 5816,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "449"
										},
										{
											"begin": 5773,
											"end": 5816,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 5796,
											"end": 5814,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "449"
										},
										{
											"begin": 5796,
											"end": 5814,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "396"
										},
										{
											"begin": 5796,
											"end": 5814,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 5796,
											"end": 5814,
											"name": "tag",
											"source": 13,
											"value": "449"
										},
										{
											"begin": 5796,
											"end": 5814,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5843,
											"end": 5844,
											"name": "PUSH",
											"source": 13,
											"value": "1"
										},
										{
											"begin": 5832,
											"end": 5845,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 5832,
											"end": 5845,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 5716,
											"end": 5851,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 5856,
											"end": 6188,
											"name": "tag",
											"source": 13,
											"value": "215"
										},
										{
											"begin": 5856,
											"end": 6188,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 6063,
											"end": 6069,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 6052,
											"end": 6061,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 6045,
											"end": 6070,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 6106,
											"end": 6108,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 6101,
											"end": 6103,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 6090,
											"end": 6099,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 6086,
											"end": 6104,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 6079,
											"end": 6109,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 6026,
											"end": 6030,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 6126,
											"end": 6182,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "451"
										},
										{
											"begin": 6178,
											"end": 6180,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 6167,
											"end": 6176,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 6163,
											"end": 6181,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 6155,
											"end": 6161,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 6126,
											"end": 6182,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "397"
										},
										{
											"begin": 6126,
											"end": 6182,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 6126,
											"end": 6182,
											"name": "tag",
											"source": 13,
											"value": "451"
										},
										{
											"begin": 6126,
											"end": 6182,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 6118,
											"end": 6182,
											"name": "SWAP5",
											"source": 13
										},
										{
											"begin": 5856,
											"end": 6188,
											"name": "SWAP4",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5856,
											"end": 6188,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 6193,
											"end": 7298,
											"name": "tag",
											"source": 13,
											"value": "219"
										},
										{
											"begin": 6193,
											"end": 7298,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 6288,
											"end": 6294,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 6319,
											"end": 6321,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 6362,
											"end": 6364,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 6350,
											"end": 6359,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 6341,
											"end": 6348,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 6337,
											"end": 6360,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 6333,
											"end": 6365,
											"name": "SLT",
											"source": 13
										},
										{
											"begin": 6330,
											"end": 6382,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 6330,
											"end": 6382,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "453"
										},
										{
											"begin": 6330,
											"end": 6382,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 6378,
											"end": 6379,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 6375,
											"end": 6376,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 6368,
											"end": 6380,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 6330,
											"end": 6382,
											"name": "tag",
											"source": 13,
											"value": "453"
										},
										{
											"begin": 6330,
											"end": 6382,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 6411,
											"end": 6420,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 6405,
											"end": 6421,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 6440,
											"end": 6458,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6481,
											"end": 6483,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 6473,
											"end": 6479,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 6470,
											"end": 6484,
											"name": "GT",
											"source": 13
										},
										{
											"begin": 6467,
											"end": 6501,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 6467,
											"end": 6501,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "454"
										},
										{
											"begin": 6467,
											"end": 6501,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 6497,
											"end": 6498,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 6494,
											"end": 6495,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 6487,
											"end": 6499,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 6467,
											"end": 6501,
											"name": "tag",
											"source": 13,
											"value": "454"
										},
										{
											"begin": 6467,
											"end": 6501,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 6535,
											"end": 6541,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 6524,
											"end": 6533,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 6520,
											"end": 6542,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 6510,
											"end": 6542,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 6510,
											"end": 6542,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 6580,
											"end": 6587,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 6573,
											"end": 6577,
											"name": "PUSH",
											"source": 13,
											"value": "1F"
										},
										{
											"begin": 6569,
											"end": 6571,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 6565,
											"end": 6578,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 6561,
											"end": 6588,
											"name": "SLT",
											"source": 13
										},
										{
											"begin": 6551,
											"end": 6606,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "455"
										},
										{
											"begin": 6551,
											"end": 6606,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 6602,
											"end": 6603,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 6599,
											"end": 6600,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 6592,
											"end": 6604,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 6551,
											"end": 6606,
											"name": "tag",
											"source": 13,
											"value": "455"
										},
										{
											"begin": 6551,
											"end": 6606,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 6631,
											"end": 6633,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 6625,
											"end": 6634,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 6653,
											"end": 6655,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 6649,
											"end": 6651,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 6646,
											"end": 6656,
											"name": "GT",
											"source": 13
										},
										{
											"begin": 6643,
											"end": 6679,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 6643,
											"end": 6679,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "457"
										},
										{
											"begin": 6643,
											"end": 6679,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 6659,
											"end": 6677,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "457"
										},
										{
											"begin": 6659,
											"end": 6677,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "157"
										},
										{
											"begin": 6659,
											"end": 6677,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 6659,
											"end": 6677,
											"name": "tag",
											"source": 13,
											"value": "457"
										},
										{
											"begin": 6659,
											"end": 6677,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 6705,
											"end": 6707,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 6702,
											"end": 6703,
											"name": "PUSH",
											"source": 13,
											"value": "5"
										},
										{
											"begin": 6698,
											"end": 6708,
											"name": "SHL",
											"source": 13
										},
										{
											"begin": 6737,
											"end": 6739,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 6731,
											"end": 6740,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 6800,
											"end": 6802,
											"name": "PUSH",
											"source": 13,
											"value": "1F"
										},
										{
											"begin": 6796,
											"end": 6803,
											"name": "NOT",
											"source": 13
										},
										{
											"begin": 6791,
											"end": 6793,
											"name": "PUSH",
											"source": 13,
											"value": "3F"
										},
										{
											"begin": 6787,
											"end": 6789,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 6783,
											"end": 6794,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 6779,
											"end": 6804,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 6771,
											"end": 6777,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 6767,
											"end": 6805,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 6855,
											"end": 6861,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 6843,
											"end": 6853,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 6840,
											"end": 6862,
											"name": "LT",
											"source": 13
										},
										{
											"begin": 6835,
											"end": 6837,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 6823,
											"end": 6833,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 6820,
											"end": 6838,
											"name": "GT",
											"source": 13
										},
										{
											"begin": 6817,
											"end": 6863,
											"name": "OR",
											"source": 13
										},
										{
											"begin": 6814,
											"end": 6886,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 6814,
											"end": 6886,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "459"
										},
										{
											"begin": 6814,
											"end": 6886,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 6866,
											"end": 6884,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "459"
										},
										{
											"begin": 6866,
											"end": 6884,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "157"
										},
										{
											"begin": 6866,
											"end": 6884,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 6866,
											"end": 6884,
											"name": "tag",
											"source": 13,
											"value": "459"
										},
										{
											"begin": 6866,
											"end": 6884,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 6902,
											"end": 6904,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 6895,
											"end": 6917,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 6952,
											"end": 6970,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 6952,
											"end": 6970,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 6952,
											"end": 6970,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 6986,
											"end": 7001,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 6986,
											"end": 7001,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 6986,
											"end": 7001,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 6986,
											"end": 7001,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 7028,
											"end": 7039,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 7028,
											"end": 7039,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 7028,
											"end": 7039,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 7024,
											"end": 7044,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 7024,
											"end": 7044,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 7024,
											"end": 7044,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 7056,
											"end": 7075,
											"name": "DUP9",
											"source": 13
										},
										{
											"begin": 7056,
											"end": 7075,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 7056,
											"end": 7075,
											"name": "GT",
											"source": 13
										},
										{
											"begin": 7053,
											"end": 7092,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 7053,
											"end": 7092,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "460"
										},
										{
											"begin": 7053,
											"end": 7092,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 7088,
											"end": 7089,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 7085,
											"end": 7086,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 7078,
											"end": 7090,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 7053,
											"end": 7092,
											"name": "tag",
											"source": 13,
											"value": "460"
										},
										{
											"begin": 7053,
											"end": 7092,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 7112,
											"end": 7123,
											"name": "SWAP4",
											"source": 13
										},
										{
											"begin": 7112,
											"end": 7123,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 7112,
											"end": 7123,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 7112,
											"end": 7123,
											"name": "SWAP4",
											"source": 13
										},
										{
											"begin": 7132,
											"end": 7267,
											"name": "tag",
											"source": 13,
											"value": "461"
										},
										{
											"begin": 7132,
											"end": 7267,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 7148,
											"end": 7154,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 7143,
											"end": 7146,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 7140,
											"end": 7155,
											"name": "LT",
											"source": 13
										},
										{
											"begin": 7132,
											"end": 7267,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 7132,
											"end": 7267,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "463"
										},
										{
											"begin": 7132,
											"end": 7267,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 7214,
											"end": 7224,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 7214,
											"end": 7224,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 7202,
											"end": 7225,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 7202,
											"end": 7225,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 7165,
											"end": 7177,
											"name": "SWAP4",
											"source": 13
										},
										{
											"begin": 7165,
											"end": 7177,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 7165,
											"end": 7177,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 7165,
											"end": 7177,
											"name": "SWAP4",
											"source": 13
										},
										{
											"begin": 7245,
											"end": 7257,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 7245,
											"end": 7257,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 7245,
											"end": 7257,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 7245,
											"end": 7257,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 7132,
											"end": 7267,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "461"
										},
										{
											"begin": 7132,
											"end": 7267,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 7132,
											"end": 7267,
											"name": "tag",
											"source": 13,
											"value": "463"
										},
										{
											"begin": 7132,
											"end": 7267,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 7286,
											"end": 7292,
											"name": "SWAP9",
											"source": 13
										},
										{
											"begin": 6193,
											"end": 7298,
											"name": "SWAP8",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6193,
											"end": 7298,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 7303,
											"end": 7805,
											"name": "tag",
											"source": 13,
											"value": "223"
										},
										{
											"begin": 7303,
											"end": 7805,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 7566,
											"end": 7572,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 7555,
											"end": 7564,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 7548,
											"end": 7573,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 7609,
											"end": 7612,
											"name": "PUSH",
											"source": 13,
											"value": "80"
										},
										{
											"begin": 7604,
											"end": 7606,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 7593,
											"end": 7602,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 7589,
											"end": 7607,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 7582,
											"end": 7613,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 7529,
											"end": 7533,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 7630,
											"end": 7687,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "465"
										},
										{
											"begin": 7682,
											"end": 7685,
											"name": "PUSH",
											"source": 13,
											"value": "80"
										},
										{
											"begin": 7671,
											"end": 7680,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 7667,
											"end": 7686,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 7659,
											"end": 7665,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 7630,
											"end": 7687,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "397"
										},
										{
											"begin": 7630,
											"end": 7687,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 7630,
											"end": 7687,
											"name": "tag",
											"source": 13,
											"value": "465"
										},
										{
											"begin": 7630,
											"end": 7687,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7723,
											"end": 7755,
											"name": "SWAP5",
											"source": 13
										},
										{
											"begin": 7723,
											"end": 7755,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 7723,
											"end": 7755,
											"name": "SWAP5",
											"source": 13
										},
										{
											"begin": 7723,
											"end": 7755,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 7718,
											"end": 7720,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 7703,
											"end": 7721,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 7703,
											"end": 7721,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 7696,
											"end": 7756,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 7787,
											"end": 7789,
											"name": "PUSH",
											"source": 13,
											"value": "60"
										},
										{
											"begin": 7772,
											"end": 7790,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 7765,
											"end": 7799,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 7622,
											"end": 7687,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 7303,
											"end": 7805,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 7303,
											"end": 7805,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										}
									]
								},
								"BB9835C734EA2EE08B9EB3F6004F5F118E5B999FBE41C94259AC9A08CB0AFF12": "000000000000000000000000145863eb42cf62847a6ca784e6416c1682b1b2ae"
							},
							"sourceList": [
								"@openzeppelin/contracts/access/Ownable.sol",
								"@openzeppelin/contracts/interfaces/IERC1363.sol",
								"@openzeppelin/contracts/interfaces/IERC165.sol",
								"@openzeppelin/contracts/interfaces/IERC20.sol",
								"@openzeppelin/contracts/security/ReentrancyGuard.sol",
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
								"@openzeppelin/contracts/utils/Address.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"@openzeppelin/contracts/utils/Errors.sol",
								"@openzeppelin/contracts/utils/introspection/IERC165.sol",
								"ARY/HardStake.sol",
								"ARY/SwapPro.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"ARY()": "afe43b94",
							"CUSDC()": "a37b9e7f",
							"CUSDT()": "6504fbad",
							"DEXFACTORY()": "7c6f8fae",
							"DEXROUTER()": "d7b7d3f3",
							"MERY()": "b0befe63",
							"WCRO()": "1d470cb1",
							"addresses(uint256)": "edf26d9b",
							"clearVolume()": "39bda01c",
							"competition_started()": "ac65334f",
							"deposit()": "d0e30db0",
							"feePercent()": "7fd6f15c",
							"feeReceiver()": "b3f00674",
							"getUserVolumes()": "ae38a070",
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"setFeeData(address,uint256)": "3977d68d",
							"startCompetition()": "d3e66a9e",
							"stopCompetition()": "5f0018cd",
							"swapCROForToken(address,uint256)": "53ac861e",
							"swapTokenForCRO(address,uint256,uint256)": "16214120",
							"swapTokenForToken(address,address,uint256,uint256)": "d16a4010",
							"transferOwnership(address)": "f2fde38b",
							"userVolume(address)": "a6769ef8",
							"withdraw(uint256)": "2e1a7d4d"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"ARY\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"CUSDC\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"CUSDT\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"DEXFACTORY\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"DEXROUTER\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"MERY\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"WCRO\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"addresses\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"clearVolume\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"competition_started\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"deposit\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"feePercent\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"feeReceiver\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getUserVolumes\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"volume\",\"type\":\"uint256\"}],\"internalType\":\"struct Volume[]\",\"name\":\"\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_feeReceiver\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_feePercent\",\"type\":\"uint256\"}],\"name\":\"setFeeData\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"startCompetition\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"stopCompetition\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"toToken\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amountOutMin\",\"type\":\"uint256\"}],\"name\":\"swapCROForToken\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"fromToken\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amountIn\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountOutMin\",\"type\":\"uint256\"}],\"name\":\"swapTokenForCRO\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"fromToken\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"toToken\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amountIn\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountOutMin\",\"type\":\"uint256\"}],\"name\":\"swapTokenForToken\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"userVolume\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"errors\":{\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"kind\":\"dev\",\"methods\":{\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"ARY/SwapPro.sol\":\"SwapPro\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"ARY/SwapPro.sol\":{\"keccak256\":\"0xae8d740d234c37974ff3218b29ceb9cd11aa6411198a581783988be94e8433d0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c6d909c51a123835a6e1320a81b26f5a0bae6fff7c5f1ab04052511faf1ef64a\",\"dweb:/ipfs/QmV6EVkEHgqHRaunnNKcyCuDN42z7BBNHqcmGTtf63hvqh\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 8,
								"contract": "ARY/SwapPro.sol:SwapPro",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							},
							{
								"astId": 1826,
								"contract": "ARY/SwapPro.sol:SwapPro",
								"label": "feeReceiver",
								"offset": 0,
								"slot": "1",
								"type": "t_address"
							},
							{
								"astId": 1828,
								"contract": "ARY/SwapPro.sol:SwapPro",
								"label": "feePercent",
								"offset": 0,
								"slot": "2",
								"type": "t_uint256"
							},
							{
								"astId": 1831,
								"contract": "ARY/SwapPro.sol:SwapPro",
								"label": "competition_started",
								"offset": 0,
								"slot": "3",
								"type": "t_bool"
							},
							{
								"astId": 1835,
								"contract": "ARY/SwapPro.sol:SwapPro",
								"label": "userVolume",
								"offset": 0,
								"slot": "4",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 1839,
								"contract": "ARY/SwapPro.sol:SwapPro",
								"label": "isExistAddress",
								"offset": 0,
								"slot": "5",
								"type": "t_mapping(t_address,t_bool)"
							},
							{
								"astId": 1842,
								"contract": "ARY/SwapPro.sol:SwapPro",
								"label": "addresses",
								"offset": 0,
								"slot": "6",
								"type": "t_array(t_address)dyn_storage"
							},
							{
								"astId": 1845,
								"contract": "ARY/SwapPro.sol:SwapPro",
								"label": "factory",
								"offset": 0,
								"slot": "7",
								"type": "t_contract(IDEXFactory)1681"
							},
							{
								"astId": 1848,
								"contract": "ARY/SwapPro.sol:SwapPro",
								"label": "router",
								"offset": 0,
								"slot": "8",
								"type": "t_contract(IDEXRouter)1785"
							},
							{
								"astId": 1851,
								"contract": "ARY/SwapPro.sol:SwapPro",
								"label": "cusdc",
								"offset": 0,
								"slot": "9",
								"type": "t_contract(IERC20)380"
							},
							{
								"astId": 1854,
								"contract": "ARY/SwapPro.sol:SwapPro",
								"label": "cusdt",
								"offset": 0,
								"slot": "10",
								"type": "t_contract(IERC20)380"
							},
							{
								"astId": 1857,
								"contract": "ARY/SwapPro.sol:SwapPro",
								"label": "ary",
								"offset": 0,
								"slot": "11",
								"type": "t_contract(IERC20)380"
							},
							{
								"astId": 1860,
								"contract": "ARY/SwapPro.sol:SwapPro",
								"label": "mery",
								"offset": 0,
								"slot": "12",
								"type": "t_contract(IERC20)380"
							},
							{
								"astId": 1863,
								"contract": "ARY/SwapPro.sol:SwapPro",
								"label": "wcro",
								"offset": 0,
								"slot": "13",
								"type": "t_contract(IWCRO)1796"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_array(t_address)dyn_storage": {
								"base": "t_address",
								"encoding": "dynamic_array",
								"label": "address[]",
								"numberOfBytes": "32"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_contract(IDEXFactory)1681": {
								"encoding": "inplace",
								"label": "contract IDEXFactory",
								"numberOfBytes": "20"
							},
							"t_contract(IDEXRouter)1785": {
								"encoding": "inplace",
								"label": "contract IDEXRouter",
								"numberOfBytes": "20"
							},
							"t_contract(IERC20)380": {
								"encoding": "inplace",
								"label": "contract IERC20",
								"numberOfBytes": "20"
							},
							"t_contract(IWCRO)1796": {
								"encoding": "inplace",
								"label": "contract IWCRO",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_bool)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => bool)",
								"numberOfBytes": "32",
								"value": "t_bool"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"@openzeppelin/contracts/access/Ownable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
					"exportedSymbols": {
						"Context": [
							1080
						],
						"Ownable": [
							147
						]
					},
					"id": 148,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "102:24:0"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
							"file": "../utils/Context.sol",
							"id": 3,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 148,
							"sourceUnit": 1081,
							"src": "128:45:0",
							"symbolAliases": [
								{
									"foreign": {
										"id": 2,
										"name": "Context",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1080,
										"src": "136:7:0",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 5,
										"name": "Context",
										"nameLocations": [
											"692:7:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1080,
										"src": "692:7:0"
									},
									"id": 6,
									"nodeType": "InheritanceSpecifier",
									"src": "692:7:0"
								}
							],
							"canonicalName": "Ownable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 4,
								"nodeType": "StructuredDocumentation",
								"src": "175:487:0",
								"text": " @dev Contract module which provides a basic access control mechanism, where\n there is an account (an owner) that can be granted exclusive access to\n specific functions.\n The initial owner is set to the address provided by the deployer. This can\n later be changed with {transferOwnership}.\n This module is used through inheritance. It will make available the modifier\n `onlyOwner`, which can be applied to your functions to restrict their use to\n the owner."
							},
							"fullyImplemented": true,
							"id": 147,
							"linearizedBaseContracts": [
								147,
								1080
							],
							"name": "Ownable",
							"nameLocation": "681:7:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 8,
									"mutability": "mutable",
									"name": "_owner",
									"nameLocation": "722:6:0",
									"nodeType": "VariableDeclaration",
									"scope": 147,
									"src": "706:22:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 7,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "706:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "private"
								},
								{
									"documentation": {
										"id": 9,
										"nodeType": "StructuredDocumentation",
										"src": "735:85:0",
										"text": " @dev The caller account is not authorized to perform an operation."
									},
									"errorSelector": "118cdaa7",
									"id": 13,
									"name": "OwnableUnauthorizedAccount",
									"nameLocation": "831:26:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 12,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 11,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "866:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 13,
												"src": "858:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 10,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "858:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "857:17:0"
									},
									"src": "825:50:0"
								},
								{
									"documentation": {
										"id": 14,
										"nodeType": "StructuredDocumentation",
										"src": "881:82:0",
										"text": " @dev The owner is not a valid owner account. (eg. `address(0)`)"
									},
									"errorSelector": "1e4fbdf7",
									"id": 18,
									"name": "OwnableInvalidOwner",
									"nameLocation": "974:19:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 17,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 16,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1002:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 18,
												"src": "994:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 15,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "994:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "993:15:0"
									},
									"src": "968:41:0"
								},
								{
									"anonymous": false,
									"eventSelector": "8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
									"id": 24,
									"name": "OwnershipTransferred",
									"nameLocation": "1021:20:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 23,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 20,
												"indexed": true,
												"mutability": "mutable",
												"name": "previousOwner",
												"nameLocation": "1058:13:0",
												"nodeType": "VariableDeclaration",
												"scope": 24,
												"src": "1042:29:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 19,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1042:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 22,
												"indexed": true,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "1089:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 24,
												"src": "1073:24:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 21,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1073:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1041:57:0"
									},
									"src": "1015:84:0"
								},
								{
									"body": {
										"id": 49,
										"nodeType": "Block",
										"src": "1259:153:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 35,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 30,
														"name": "initialOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 27,
														"src": "1273:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 33,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1297:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 32,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "1289:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 31,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "1289:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 34,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1289:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1273:26:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 44,
												"nodeType": "IfStatement",
												"src": "1269:95:0",
												"trueBody": {
													"id": 43,
													"nodeType": "Block",
													"src": "1301:63:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 39,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "1350:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 38,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "1342:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 37,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "1342:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 40,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1342:10:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 36,
																	"name": "OwnableInvalidOwner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 18,
																	"src": "1322:19:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 41,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1322:31:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 42,
															"nodeType": "RevertStatement",
															"src": "1315:38:0"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 46,
															"name": "initialOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 27,
															"src": "1392:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 45,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 146,
														"src": "1373:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 47,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1373:32:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 48,
												"nodeType": "ExpressionStatement",
												"src": "1373:32:0"
											}
										]
									},
									"documentation": {
										"id": 25,
										"nodeType": "StructuredDocumentation",
										"src": "1105:115:0",
										"text": " @dev Initializes the contract setting the address provided by the deployer as the initial owner."
									},
									"id": 50,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 28,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 27,
												"mutability": "mutable",
												"name": "initialOwner",
												"nameLocation": "1245:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 50,
												"src": "1237:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 26,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1237:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1236:22:0"
									},
									"returnParameters": {
										"id": 29,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1259:0:0"
									},
									"scope": 147,
									"src": "1225:187:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 57,
										"nodeType": "Block",
										"src": "1521:41:0",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 53,
														"name": "_checkOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 84,
														"src": "1531:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$__$",
															"typeString": "function () view"
														}
													},
													"id": 54,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1531:13:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 55,
												"nodeType": "ExpressionStatement",
												"src": "1531:13:0"
											},
											{
												"id": 56,
												"nodeType": "PlaceholderStatement",
												"src": "1554:1:0"
											}
										]
									},
									"documentation": {
										"id": 51,
										"nodeType": "StructuredDocumentation",
										"src": "1418:77:0",
										"text": " @dev Throws if called by any account other than the owner."
									},
									"id": 58,
									"name": "onlyOwner",
									"nameLocation": "1509:9:0",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 52,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1518:2:0"
									},
									"src": "1500:62:0",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 66,
										"nodeType": "Block",
										"src": "1693:30:0",
										"statements": [
											{
												"expression": {
													"id": 64,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 8,
													"src": "1710:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 63,
												"id": 65,
												"nodeType": "Return",
												"src": "1703:13:0"
											}
										]
									},
									"documentation": {
										"id": 59,
										"nodeType": "StructuredDocumentation",
										"src": "1568:65:0",
										"text": " @dev Returns the address of the current owner."
									},
									"functionSelector": "8da5cb5b",
									"id": 67,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "owner",
									"nameLocation": "1647:5:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 60,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1652:2:0"
									},
									"returnParameters": {
										"id": 63,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 62,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 67,
												"src": "1684:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 61,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1684:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1683:9:0"
									},
									"scope": 147,
									"src": "1638:85:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 83,
										"nodeType": "Block",
										"src": "1841:117:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 75,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 71,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 67,
															"src": "1855:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																"typeString": "function () view returns (address)"
															}
														},
														"id": 72,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1855:7:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 73,
															"name": "_msgSender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1062,
															"src": "1866:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																"typeString": "function () view returns (address)"
															}
														},
														"id": 74,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1866:12:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1855:23:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 82,
												"nodeType": "IfStatement",
												"src": "1851:101:0",
												"trueBody": {
													"id": 81,
													"nodeType": "Block",
													"src": "1880:72:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 77,
																			"name": "_msgSender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1062,
																			"src": "1928:10:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																				"typeString": "function () view returns (address)"
																			}
																		},
																		"id": 78,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1928:12:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 76,
																	"name": "OwnableUnauthorizedAccount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 13,
																	"src": "1901:26:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 79,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1901:40:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 80,
															"nodeType": "RevertStatement",
															"src": "1894:47:0"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 68,
										"nodeType": "StructuredDocumentation",
										"src": "1729:62:0",
										"text": " @dev Throws if the sender is not the owner."
									},
									"id": 84,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkOwner",
									"nameLocation": "1805:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 69,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1816:2:0"
									},
									"returnParameters": {
										"id": 70,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1841:0:0"
									},
									"scope": 147,
									"src": "1796:162:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 97,
										"nodeType": "Block",
										"src": "2347:47:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 93,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2384:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 92,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "2376:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 91,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "2376:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 94,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2376:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 90,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 146,
														"src": "2357:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 95,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2357:30:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 96,
												"nodeType": "ExpressionStatement",
												"src": "2357:30:0"
											}
										]
									},
									"documentation": {
										"id": 85,
										"nodeType": "StructuredDocumentation",
										"src": "1964:324:0",
										"text": " @dev Leaves the contract without owner. It will not be possible to call\n `onlyOwner` functions. Can only be called by the current owner.\n NOTE: Renouncing ownership will leave the contract without an owner,\n thereby disabling any functionality that is only available to the owner."
									},
									"functionSelector": "715018a6",
									"id": 98,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 88,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 87,
												"name": "onlyOwner",
												"nameLocations": [
													"2337:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "2337:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "2337:9:0"
										}
									],
									"name": "renounceOwnership",
									"nameLocation": "2302:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 86,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2319:2:0"
									},
									"returnParameters": {
										"id": 89,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2347:0:0"
									},
									"scope": 147,
									"src": "2293:101:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 125,
										"nodeType": "Block",
										"src": "2613:145:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 111,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 106,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 101,
														"src": "2627:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 109,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2647:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 108,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "2639:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 107,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "2639:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 110,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2639:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2627:22:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 120,
												"nodeType": "IfStatement",
												"src": "2623:91:0",
												"trueBody": {
													"id": 119,
													"nodeType": "Block",
													"src": "2651:63:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 115,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "2700:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 114,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "2692:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 113,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "2692:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 116,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "2692:10:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 112,
																	"name": "OwnableInvalidOwner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 18,
																	"src": "2672:19:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 117,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2672:31:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 118,
															"nodeType": "RevertStatement",
															"src": "2665:38:0"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 122,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 101,
															"src": "2742:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 121,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 146,
														"src": "2723:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 123,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2723:28:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 124,
												"nodeType": "ExpressionStatement",
												"src": "2723:28:0"
											}
										]
									},
									"documentation": {
										"id": 99,
										"nodeType": "StructuredDocumentation",
										"src": "2400:138:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Can only be called by the current owner."
									},
									"functionSelector": "f2fde38b",
									"id": 126,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 104,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 103,
												"name": "onlyOwner",
												"nameLocations": [
													"2603:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "2603:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "2603:9:0"
										}
									],
									"name": "transferOwnership",
									"nameLocation": "2552:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 102,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 101,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "2578:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 126,
												"src": "2570:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 100,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2570:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2569:18:0"
									},
									"returnParameters": {
										"id": 105,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2613:0:0"
									},
									"scope": 147,
									"src": "2543:215:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 145,
										"nodeType": "Block",
										"src": "2975:124:0",
										"statements": [
											{
												"assignments": [
													133
												],
												"declarations": [
													{
														"constant": false,
														"id": 133,
														"mutability": "mutable",
														"name": "oldOwner",
														"nameLocation": "2993:8:0",
														"nodeType": "VariableDeclaration",
														"scope": 145,
														"src": "2985:16:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 132,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "2985:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 135,
												"initialValue": {
													"id": 134,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 8,
													"src": "3004:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2985:25:0"
											},
											{
												"expression": {
													"id": 138,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 136,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 8,
														"src": "3020:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 137,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 129,
														"src": "3029:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "3020:17:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 139,
												"nodeType": "ExpressionStatement",
												"src": "3020:17:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 141,
															"name": "oldOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 133,
															"src": "3073:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 142,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 129,
															"src": "3083:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 140,
														"name": "OwnershipTransferred",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 24,
														"src": "3052:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 143,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3052:40:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 144,
												"nodeType": "EmitStatement",
												"src": "3047:45:0"
											}
										]
									},
									"documentation": {
										"id": 127,
										"nodeType": "StructuredDocumentation",
										"src": "2764:143:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Internal function without access restriction."
									},
									"id": 146,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transferOwnership",
									"nameLocation": "2921:18:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 130,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 129,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "2948:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 146,
												"src": "2940:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 128,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2940:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2939:18:0"
									},
									"returnParameters": {
										"id": 131,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2975:0:0"
									},
									"scope": 147,
									"src": "2912:187:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 148,
							"src": "663:2438:0",
							"usedErrors": [
								13,
								18
							],
							"usedEvents": [
								24
							]
						}
					],
					"src": "102:3000:0"
				},
				"id": 0
			},
			"@openzeppelin/contracts/interfaces/IERC1363.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/interfaces/IERC1363.sol",
					"exportedSymbols": {
						"IERC1363": [
							229
						],
						"IERC165": [
							1114
						],
						"IERC20": [
							380
						]
					},
					"id": 230,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 149,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "107:24:1"
						},
						{
							"absolutePath": "@openzeppelin/contracts/interfaces/IERC20.sol",
							"file": "./IERC20.sol",
							"id": 151,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 230,
							"sourceUnit": 238,
							"src": "133:36:1",
							"symbolAliases": [
								{
									"foreign": {
										"id": 150,
										"name": "IERC20",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 380,
										"src": "141:6:1",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/interfaces/IERC165.sol",
							"file": "./IERC165.sol",
							"id": 153,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 230,
							"sourceUnit": 234,
							"src": "170:38:1",
							"symbolAliases": [
								{
									"foreign": {
										"id": 152,
										"name": "IERC165",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1114,
										"src": "178:7:1",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 155,
										"name": "IERC20",
										"nameLocations": [
											"590:6:1"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 380,
										"src": "590:6:1"
									},
									"id": 156,
									"nodeType": "InheritanceSpecifier",
									"src": "590:6:1"
								},
								{
									"baseName": {
										"id": 157,
										"name": "IERC165",
										"nameLocations": [
											"598:7:1"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1114,
										"src": "598:7:1"
									},
									"id": 158,
									"nodeType": "InheritanceSpecifier",
									"src": "598:7:1"
								}
							],
							"canonicalName": "IERC1363",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 154,
								"nodeType": "StructuredDocumentation",
								"src": "210:357:1",
								"text": " @title IERC1363\n @dev Interface of the ERC-1363 standard as defined in the https://eips.ethereum.org/EIPS/eip-1363[ERC-1363].\n Defines an extension interface for ERC-20 tokens that supports executing code on a recipient contract\n after `transfer` or `transferFrom`, or code on a spender contract after `approve`, in a single transaction."
							},
							"fullyImplemented": false,
							"id": 229,
							"linearizedBaseContracts": [
								229,
								1114,
								380
							],
							"name": "IERC1363",
							"nameLocation": "578:8:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 159,
										"nodeType": "StructuredDocumentation",
										"src": "1148:370:1",
										"text": " @dev Moves a `value` amount of tokens from the caller's account to `to`\n and then calls {IERC1363Receiver-onTransferReceived} on `to`.\n @param to The address which you want to transfer to.\n @param value The amount of tokens to be transferred.\n @return A boolean value indicating whether the operation succeeded unless throwing."
									},
									"functionSelector": "1296ee62",
									"id": 168,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferAndCall",
									"nameLocation": "1532:15:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 164,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 161,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1556:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 168,
												"src": "1548:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 160,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1548:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 163,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1568:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 168,
												"src": "1560:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 162,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1560:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1547:27:1"
									},
									"returnParameters": {
										"id": 167,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 166,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 168,
												"src": "1593:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 165,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1593:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1592:6:1"
									},
									"scope": 229,
									"src": "1523:76:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 169,
										"nodeType": "StructuredDocumentation",
										"src": "1605:453:1",
										"text": " @dev Moves a `value` amount of tokens from the caller's account to `to`\n and then calls {IERC1363Receiver-onTransferReceived} on `to`.\n @param to The address which you want to transfer to.\n @param value The amount of tokens to be transferred.\n @param data Additional data with no specified format, sent in call to `to`.\n @return A boolean value indicating whether the operation succeeded unless throwing."
									},
									"functionSelector": "4000aea0",
									"id": 180,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferAndCall",
									"nameLocation": "2072:15:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 176,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 171,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2096:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 180,
												"src": "2088:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 170,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2088:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 173,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2108:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 180,
												"src": "2100:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 172,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2100:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 175,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "2130:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 180,
												"src": "2115:19:1",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 174,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "2115:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2087:48:1"
									},
									"returnParameters": {
										"id": 179,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 178,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 180,
												"src": "2154:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 177,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2154:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2153:6:1"
									},
									"scope": 229,
									"src": "2063:97:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 181,
										"nodeType": "StructuredDocumentation",
										"src": "2166:453:1",
										"text": " @dev Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism\n and then calls {IERC1363Receiver-onTransferReceived} on `to`.\n @param from The address which you want to send tokens from.\n @param to The address which you want to transfer to.\n @param value The amount of tokens to be transferred.\n @return A boolean value indicating whether the operation succeeded unless throwing."
									},
									"functionSelector": "d8fbe994",
									"id": 192,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFromAndCall",
									"nameLocation": "2633:19:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 188,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 183,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2661:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 192,
												"src": "2653:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 182,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2653:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 185,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2675:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 192,
												"src": "2667:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 184,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2667:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 187,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2687:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 192,
												"src": "2679:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 186,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2679:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2652:41:1"
									},
									"returnParameters": {
										"id": 191,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 190,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 192,
												"src": "2712:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 189,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2712:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2711:6:1"
									},
									"scope": 229,
									"src": "2624:94:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 193,
										"nodeType": "StructuredDocumentation",
										"src": "2724:536:1",
										"text": " @dev Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism\n and then calls {IERC1363Receiver-onTransferReceived} on `to`.\n @param from The address which you want to send tokens from.\n @param to The address which you want to transfer to.\n @param value The amount of tokens to be transferred.\n @param data Additional data with no specified format, sent in call to `to`.\n @return A boolean value indicating whether the operation succeeded unless throwing."
									},
									"functionSelector": "c1d34b89",
									"id": 206,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFromAndCall",
									"nameLocation": "3274:19:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 202,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 195,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "3302:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 206,
												"src": "3294:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 194,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3294:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 197,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "3316:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 206,
												"src": "3308:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 196,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3308:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 199,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "3328:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 206,
												"src": "3320:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 198,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3320:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 201,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "3350:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 206,
												"src": "3335:19:1",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 200,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3335:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3293:62:1"
									},
									"returnParameters": {
										"id": 205,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 204,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 206,
												"src": "3374:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 203,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3374:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3373:6:1"
									},
									"scope": 229,
									"src": "3265:115:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 207,
										"nodeType": "StructuredDocumentation",
										"src": "3386:390:1",
										"text": " @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n caller's tokens and then calls {IERC1363Spender-onApprovalReceived} on `spender`.\n @param spender The address which will spend the funds.\n @param value The amount of tokens to be spent.\n @return A boolean value indicating whether the operation succeeded unless throwing."
									},
									"functionSelector": "3177029f",
									"id": 216,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approveAndCall",
									"nameLocation": "3790:14:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 212,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 209,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "3813:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 216,
												"src": "3805:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 208,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3805:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 211,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "3830:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 216,
												"src": "3822:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 210,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3822:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3804:32:1"
									},
									"returnParameters": {
										"id": 215,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 214,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 216,
												"src": "3855:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 213,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3855:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3854:6:1"
									},
									"scope": 229,
									"src": "3781:80:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 217,
										"nodeType": "StructuredDocumentation",
										"src": "3867:478:1",
										"text": " @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n caller's tokens and then calls {IERC1363Spender-onApprovalReceived} on `spender`.\n @param spender The address which will spend the funds.\n @param value The amount of tokens to be spent.\n @param data Additional data with no specified format, sent in call to `spender`.\n @return A boolean value indicating whether the operation succeeded unless throwing."
									},
									"functionSelector": "cae9ca51",
									"id": 228,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approveAndCall",
									"nameLocation": "4359:14:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 224,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 219,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "4382:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 228,
												"src": "4374:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 218,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4374:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 221,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "4399:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 228,
												"src": "4391:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 220,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4391:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 223,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "4421:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 228,
												"src": "4406:19:1",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 222,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4406:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4373:53:1"
									},
									"returnParameters": {
										"id": 227,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 226,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 228,
												"src": "4445:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 225,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4445:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4444:6:1"
									},
									"scope": 229,
									"src": "4350:101:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 230,
							"src": "568:3885:1",
							"usedErrors": [],
							"usedEvents": [
								314,
								323
							]
						}
					],
					"src": "107:4347:1"
				},
				"id": 1
			},
			"@openzeppelin/contracts/interfaces/IERC165.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/interfaces/IERC165.sol",
					"exportedSymbols": {
						"IERC165": [
							1114
						]
					},
					"id": 234,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 231,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "106:24:2"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/introspection/IERC165.sol",
							"file": "../utils/introspection/IERC165.sol",
							"id": 233,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 234,
							"sourceUnit": 1115,
							"src": "132:59:2",
							"symbolAliases": [
								{
									"foreign": {
										"id": 232,
										"name": "IERC165",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1114,
										"src": "140:7:2",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						}
					],
					"src": "106:86:2"
				},
				"id": 2
			},
			"@openzeppelin/contracts/interfaces/IERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/interfaces/IERC20.sol",
					"exportedSymbols": {
						"IERC20": [
							380
						]
					},
					"id": 238,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 235,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "105:24:3"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "../token/ERC20/IERC20.sol",
							"id": 237,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 238,
							"sourceUnit": 381,
							"src": "131:49:3",
							"symbolAliases": [
								{
									"foreign": {
										"id": 236,
										"name": "IERC20",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 380,
										"src": "139:6:3",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						}
					],
					"src": "105:76:3"
				},
				"id": 3
			},
			"@openzeppelin/contracts/security/ReentrancyGuard.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/security/ReentrancyGuard.sol",
					"exportedSymbols": {
						"ReentrancyGuard": [
							302
						]
					},
					"id": 303,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 239,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "112:23:4"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "ReentrancyGuard",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 240,
								"nodeType": "StructuredDocumentation",
								"src": "137:750:4",
								"text": " @dev Contract module that helps prevent reentrant calls to a function.\n Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\n available, which can be applied to functions to make sure there are no nested\n (reentrant) calls to them.\n Note that because there is a single `nonReentrant` guard, functions marked as\n `nonReentrant` may not call one another. This can be worked around by making\n those functions `private`, and then adding `external` `nonReentrant` entry\n points to them.\n TIP: If you would like to learn more about reentrancy and alternative ways\n to protect against it, check out our blog post\n https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul]."
							},
							"fullyImplemented": true,
							"id": 302,
							"linearizedBaseContracts": [
								302
							],
							"name": "ReentrancyGuard",
							"nameLocation": "906:15:4",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": true,
									"id": 243,
									"mutability": "constant",
									"name": "_NOT_ENTERED",
									"nameLocation": "1701:12:4",
									"nodeType": "VariableDeclaration",
									"scope": 302,
									"src": "1676:41:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 241,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1676:7:4",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "31",
										"id": 242,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1716:1:4",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_1_by_1",
											"typeString": "int_const 1"
										},
										"value": "1"
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"id": 246,
									"mutability": "constant",
									"name": "_ENTERED",
									"nameLocation": "1748:8:4",
									"nodeType": "VariableDeclaration",
									"scope": 302,
									"src": "1723:37:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 244,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1723:7:4",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "32",
										"id": 245,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1759:1:4",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_2_by_1",
											"typeString": "int_const 2"
										},
										"value": "2"
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 248,
									"mutability": "mutable",
									"name": "_status",
									"nameLocation": "1783:7:4",
									"nodeType": "VariableDeclaration",
									"scope": 302,
									"src": "1767:23:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 247,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1767:7:4",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 255,
										"nodeType": "Block",
										"src": "1811:39:4",
										"statements": [
											{
												"expression": {
													"id": 253,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 251,
														"name": "_status",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 248,
														"src": "1821:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 252,
														"name": "_NOT_ENTERED",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 243,
														"src": "1831:12:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1821:22:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 254,
												"nodeType": "ExpressionStatement",
												"src": "1821:22:4"
											}
										]
									},
									"id": 256,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 249,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1808:2:4"
									},
									"returnParameters": {
										"id": 250,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1811:0:4"
									},
									"scope": 302,
									"src": "1797:53:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 266,
										"nodeType": "Block",
										"src": "2251:79:4",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 259,
														"name": "_nonReentrantBefore",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 282,
														"src": "2261:19:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 260,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2261:21:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 261,
												"nodeType": "ExpressionStatement",
												"src": "2261:21:4"
											},
											{
												"id": 262,
												"nodeType": "PlaceholderStatement",
												"src": "2292:1:4"
											},
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 263,
														"name": "_nonReentrantAfter",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 290,
														"src": "2303:18:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 264,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2303:20:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 265,
												"nodeType": "ExpressionStatement",
												"src": "2303:20:4"
											}
										]
									},
									"documentation": {
										"id": 257,
										"nodeType": "StructuredDocumentation",
										"src": "1856:366:4",
										"text": " @dev Prevents a contract from calling itself, directly or indirectly.\n Calling a `nonReentrant` function from another `nonReentrant`\n function is not supported. It is possible to prevent this from happening\n by making the `nonReentrant` function external, and making it call a\n `private` function that does the actual work."
									},
									"id": 267,
									"name": "nonReentrant",
									"nameLocation": "2236:12:4",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 258,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2248:2:4"
									},
									"src": "2227:103:4",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 281,
										"nodeType": "Block",
										"src": "2375:248:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 273,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 271,
																"name": "_status",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 248,
																"src": "2468:7:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"id": 272,
																"name": "_ENTERED",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 246,
																"src": "2479:8:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2468:19:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5265656e7472616e637947756172643a207265656e7472616e742063616c6c",
															"id": 274,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2489:33:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619",
																"typeString": "literal_string \"ReentrancyGuard: reentrant call\""
															},
															"value": "ReentrancyGuard: reentrant call"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619",
																"typeString": "literal_string \"ReentrancyGuard: reentrant call\""
															}
														],
														"id": 270,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2460:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 275,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2460:63:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 276,
												"nodeType": "ExpressionStatement",
												"src": "2460:63:4"
											},
											{
												"expression": {
													"id": 279,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 277,
														"name": "_status",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 248,
														"src": "2598:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 278,
														"name": "_ENTERED",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 246,
														"src": "2608:8:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2598:18:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 280,
												"nodeType": "ExpressionStatement",
												"src": "2598:18:4"
											}
										]
									},
									"id": 282,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_nonReentrantBefore",
									"nameLocation": "2345:19:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 268,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2364:2:4"
									},
									"returnParameters": {
										"id": 269,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2375:0:4"
									},
									"scope": 302,
									"src": "2336:287:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 289,
										"nodeType": "Block",
										"src": "2667:171:4",
										"statements": [
											{
												"expression": {
													"id": 287,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 285,
														"name": "_status",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 248,
														"src": "2809:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 286,
														"name": "_NOT_ENTERED",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 243,
														"src": "2819:12:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2809:22:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 288,
												"nodeType": "ExpressionStatement",
												"src": "2809:22:4"
											}
										]
									},
									"id": 290,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_nonReentrantAfter",
									"nameLocation": "2638:18:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 283,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2656:2:4"
									},
									"returnParameters": {
										"id": 284,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2667:0:4"
									},
									"scope": 302,
									"src": "2629:209:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 300,
										"nodeType": "Block",
										"src": "3081:43:4",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 298,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 296,
														"name": "_status",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 248,
														"src": "3098:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"id": 297,
														"name": "_ENTERED",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 246,
														"src": "3109:8:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3098:19:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 295,
												"id": 299,
												"nodeType": "Return",
												"src": "3091:26:4"
											}
										]
									},
									"documentation": {
										"id": 291,
										"nodeType": "StructuredDocumentation",
										"src": "2844:168:4",
										"text": " @dev Returns true if the reentrancy guard is currently set to \"entered\", which indicates there is a\n `nonReentrant` function in the call stack."
									},
									"id": 301,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_reentrancyGuardEntered",
									"nameLocation": "3026:23:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 292,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3049:2:4"
									},
									"returnParameters": {
										"id": 295,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 294,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 301,
												"src": "3075:4:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 293,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3075:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3074:6:4"
									},
									"scope": 302,
									"src": "3017:107:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 303,
							"src": "888:2238:4",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "112:3015:4"
				},
				"id": 4
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
					"exportedSymbols": {
						"IERC20": [
							380
						]
					},
					"id": 381,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 304,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "106:24:5"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 305,
								"nodeType": "StructuredDocumentation",
								"src": "132:71:5",
								"text": " @dev Interface of the ERC-20 standard as defined in the ERC."
							},
							"fullyImplemented": false,
							"id": 380,
							"linearizedBaseContracts": [
								380
							],
							"name": "IERC20",
							"nameLocation": "214:6:5",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 306,
										"nodeType": "StructuredDocumentation",
										"src": "227:158:5",
										"text": " @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."
									},
									"eventSelector": "ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
									"id": 314,
									"name": "Transfer",
									"nameLocation": "396:8:5",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 313,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 308,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "421:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 314,
												"src": "405:20:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 307,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "405:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 310,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "443:2:5",
												"nodeType": "VariableDeclaration",
												"scope": 314,
												"src": "427:18:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 309,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "427:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 312,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "455:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 314,
												"src": "447:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 311,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "447:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "404:57:5"
									},
									"src": "390:72:5"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 315,
										"nodeType": "StructuredDocumentation",
										"src": "468:148:5",
										"text": " @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."
									},
									"eventSelector": "8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925",
									"id": 323,
									"name": "Approval",
									"nameLocation": "627:8:5",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 322,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 317,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "652:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 323,
												"src": "636:21:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 316,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "636:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 319,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "675:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 323,
												"src": "659:23:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 318,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "659:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 321,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "692:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 323,
												"src": "684:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 320,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "684:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "635:63:5"
									},
									"src": "621:78:5"
								},
								{
									"documentation": {
										"id": 324,
										"nodeType": "StructuredDocumentation",
										"src": "705:65:5",
										"text": " @dev Returns the value of tokens in existence."
									},
									"functionSelector": "18160ddd",
									"id": 329,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "784:11:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 325,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "795:2:5"
									},
									"returnParameters": {
										"id": 328,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 327,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 329,
												"src": "821:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 326,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "821:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "820:9:5"
									},
									"scope": 380,
									"src": "775:55:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 330,
										"nodeType": "StructuredDocumentation",
										"src": "836:71:5",
										"text": " @dev Returns the value of tokens owned by `account`."
									},
									"functionSelector": "70a08231",
									"id": 337,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "921:9:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 333,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 332,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "939:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 337,
												"src": "931:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 331,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "931:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "930:17:5"
									},
									"returnParameters": {
										"id": 336,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 335,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 337,
												"src": "971:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 334,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "971:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "970:9:5"
									},
									"scope": 380,
									"src": "912:68:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 338,
										"nodeType": "StructuredDocumentation",
										"src": "986:213:5",
										"text": " @dev Moves a `value` amount of tokens from the caller's account to `to`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "a9059cbb",
									"id": 347,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "1213:8:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 343,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 340,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1230:2:5",
												"nodeType": "VariableDeclaration",
												"scope": 347,
												"src": "1222:10:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 339,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1222:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 342,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1242:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 347,
												"src": "1234:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 341,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1234:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1221:27:5"
									},
									"returnParameters": {
										"id": 346,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 345,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 347,
												"src": "1267:4:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 344,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1267:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1266:6:5"
									},
									"scope": 380,
									"src": "1204:69:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 348,
										"nodeType": "StructuredDocumentation",
										"src": "1279:264:5",
										"text": " @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."
									},
									"functionSelector": "dd62ed3e",
									"id": 357,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "1557:9:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 353,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 350,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1575:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 357,
												"src": "1567:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 349,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1567:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 352,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1590:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 357,
												"src": "1582:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 351,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1582:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1566:32:5"
									},
									"returnParameters": {
										"id": 356,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 355,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 357,
												"src": "1622:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 354,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1622:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1621:9:5"
									},
									"scope": 380,
									"src": "1548:83:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 358,
										"nodeType": "StructuredDocumentation",
										"src": "1637:667:5",
										"text": " @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 367,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "2318:7:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 363,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 360,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2334:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 367,
												"src": "2326:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 359,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2326:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 362,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2351:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 367,
												"src": "2343:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 361,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2343:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2325:32:5"
									},
									"returnParameters": {
										"id": 366,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 365,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 367,
												"src": "2376:4:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 364,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2376:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2375:6:5"
									},
									"scope": 380,
									"src": "2309:73:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 368,
										"nodeType": "StructuredDocumentation",
										"src": "2388:297:5",
										"text": " @dev Moves a `value` amount of tokens from `from` to `to` using the\n allowance mechanism. `value` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 379,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "2699:12:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 375,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 370,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2720:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 379,
												"src": "2712:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 369,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2712:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 372,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2734:2:5",
												"nodeType": "VariableDeclaration",
												"scope": 379,
												"src": "2726:10:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 371,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2726:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 374,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2746:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 379,
												"src": "2738:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 373,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2738:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2711:41:5"
									},
									"returnParameters": {
										"id": 378,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 377,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 379,
												"src": "2771:4:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 376,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2771:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2770:6:5"
									},
									"scope": 380,
									"src": "2690:87:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 381,
							"src": "204:2575:5",
							"usedErrors": [],
							"usedEvents": [
								314,
								323
							]
						}
					],
					"src": "106:2674:5"
				},
				"id": 5
			},
			"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
					"exportedSymbols": {
						"Address": [
							1050
						],
						"IERC1363": [
							229
						],
						"IERC20": [
							380
						],
						"SafeERC20": [
							791
						]
					},
					"id": 792,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 382,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "115:24:6"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "../IERC20.sol",
							"id": 384,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 792,
							"sourceUnit": 381,
							"src": "141:37:6",
							"symbolAliases": [
								{
									"foreign": {
										"id": 383,
										"name": "IERC20",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 380,
										"src": "149:6:6",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/interfaces/IERC1363.sol",
							"file": "../../../interfaces/IERC1363.sol",
							"id": 386,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 792,
							"sourceUnit": 230,
							"src": "179:58:6",
							"symbolAliases": [
								{
									"foreign": {
										"id": 385,
										"name": "IERC1363",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 229,
										"src": "187:8:6",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Address.sol",
							"file": "../../../utils/Address.sol",
							"id": 388,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 792,
							"sourceUnit": 1051,
							"src": "238:51:6",
							"symbolAliases": [
								{
									"foreign": {
										"id": 387,
										"name": "Address",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1050,
										"src": "246:7:6",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "SafeERC20",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 389,
								"nodeType": "StructuredDocumentation",
								"src": "291:458:6",
								"text": " @title SafeERC20\n @dev Wrappers around ERC-20 operations that throw on failure (when the token\n contract returns false). Tokens that return no value (and instead revert or\n throw on failure) are also supported, non-reverting calls are assumed to be\n successful.\n To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract,\n which allows you to call the safe operations as `token.safeTransfer(...)`, etc."
							},
							"fullyImplemented": true,
							"id": 791,
							"linearizedBaseContracts": [
								791
							],
							"name": "SafeERC20",
							"nameLocation": "758:9:6",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 390,
										"nodeType": "StructuredDocumentation",
										"src": "774:65:6",
										"text": " @dev An operation with an ERC-20 token failed."
									},
									"errorSelector": "5274afe7",
									"id": 394,
									"name": "SafeERC20FailedOperation",
									"nameLocation": "850:24:6",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 393,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 392,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "883:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 394,
												"src": "875:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 391,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "875:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "874:15:6"
									},
									"src": "844:46:6"
								},
								{
									"documentation": {
										"id": 395,
										"nodeType": "StructuredDocumentation",
										"src": "896:71:6",
										"text": " @dev Indicates a failed `decreaseAllowance` request."
									},
									"errorSelector": "e570110f",
									"id": 403,
									"name": "SafeERC20FailedDecreaseAllowance",
									"nameLocation": "978:32:6",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 402,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 397,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1019:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 403,
												"src": "1011:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 396,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1011:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 399,
												"mutability": "mutable",
												"name": "currentAllowance",
												"nameLocation": "1036:16:6",
												"nodeType": "VariableDeclaration",
												"scope": 403,
												"src": "1028:24:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 398,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1028:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 401,
												"mutability": "mutable",
												"name": "requestedDecrease",
												"nameLocation": "1062:17:6",
												"nodeType": "VariableDeclaration",
												"scope": 403,
												"src": "1054:25:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 400,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1054:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1010:70:6"
									},
									"src": "972:109:6"
								},
								{
									"body": {
										"id": 426,
										"nodeType": "Block",
										"src": "1343:88:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 415,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 407,
															"src": "1373:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$380",
																"typeString": "contract IERC20"
															}
														},
														{
															"arguments": [
																{
																	"expression": {
																		"id": 418,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 407,
																		"src": "1395:5:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$380",
																			"typeString": "contract IERC20"
																		}
																	},
																	"id": 419,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "1401:8:6",
																	"memberName": "transfer",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 347,
																	"src": "1395:14:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																		"typeString": "function (address,uint256) external returns (bool)"
																	}
																},
																{
																	"components": [
																		{
																			"id": 420,
																			"name": "to",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 409,
																			"src": "1412:2:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		{
																			"id": 421,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 411,
																			"src": "1416:5:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 422,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "1411:11:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_tuple$_t_address_$_t_uint256_$",
																		"typeString": "tuple(address,uint256)"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																		"typeString": "function (address,uint256) external returns (bool)"
																	},
																	{
																		"typeIdentifier": "t_tuple$_t_address_$_t_uint256_$",
																		"typeString": "tuple(address,uint256)"
																	}
																],
																"expression": {
																	"id": 416,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "1380:3:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 417,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "1384:10:6",
																"memberName": "encodeCall",
																"nodeType": "MemberAccess",
																"src": "1380:14:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodecall_pure$__$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function () pure returns (bytes memory)"
																}
															},
															"id": 423,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1380:43:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$380",
																"typeString": "contract IERC20"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 414,
														"name": "_callOptionalReturn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 749,
														"src": "1353:19:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$380_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (contract IERC20,bytes memory)"
														}
													},
													"id": 424,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1353:71:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 425,
												"nodeType": "ExpressionStatement",
												"src": "1353:71:6"
											}
										]
									},
									"documentation": {
										"id": 404,
										"nodeType": "StructuredDocumentation",
										"src": "1087:179:6",
										"text": " @dev Transfer `value` amount of `token` from the calling contract to `to`. If `token` returns no value,\n non-reverting calls are assumed to be successful."
									},
									"id": 427,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransfer",
									"nameLocation": "1280:12:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 412,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 407,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "1300:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 427,
												"src": "1293:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$380",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 406,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 405,
														"name": "IERC20",
														"nameLocations": [
															"1293:6:6"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 380,
														"src": "1293:6:6"
													},
													"referencedDeclaration": 380,
													"src": "1293:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$380",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 409,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1315:2:6",
												"nodeType": "VariableDeclaration",
												"scope": 427,
												"src": "1307:10:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 408,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1307:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 411,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1327:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 427,
												"src": "1319:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 410,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1319:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1292:41:6"
									},
									"returnParameters": {
										"id": 413,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1343:0:6"
									},
									"scope": 791,
									"src": "1271:160:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 453,
										"nodeType": "Block",
										"src": "1760:98:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 441,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 431,
															"src": "1790:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$380",
																"typeString": "contract IERC20"
															}
														},
														{
															"arguments": [
																{
																	"expression": {
																		"id": 444,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 431,
																		"src": "1812:5:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$380",
																			"typeString": "contract IERC20"
																		}
																	},
																	"id": 445,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "1818:12:6",
																	"memberName": "transferFrom",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 379,
																	"src": "1812:18:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
																		"typeString": "function (address,address,uint256) external returns (bool)"
																	}
																},
																{
																	"components": [
																		{
																			"id": 446,
																			"name": "from",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 433,
																			"src": "1833:4:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		{
																			"id": 447,
																			"name": "to",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 435,
																			"src": "1839:2:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		{
																			"id": 448,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 437,
																			"src": "1843:5:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 449,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "1832:17:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_tuple$_t_address_$_t_address_$_t_uint256_$",
																		"typeString": "tuple(address,address,uint256)"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
																		"typeString": "function (address,address,uint256) external returns (bool)"
																	},
																	{
																		"typeIdentifier": "t_tuple$_t_address_$_t_address_$_t_uint256_$",
																		"typeString": "tuple(address,address,uint256)"
																	}
																],
																"expression": {
																	"id": 442,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "1797:3:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 443,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "1801:10:6",
																"memberName": "encodeCall",
																"nodeType": "MemberAccess",
																"src": "1797:14:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodecall_pure$__$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function () pure returns (bytes memory)"
																}
															},
															"id": 450,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1797:53:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$380",
																"typeString": "contract IERC20"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 440,
														"name": "_callOptionalReturn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 749,
														"src": "1770:19:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$380_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (contract IERC20,bytes memory)"
														}
													},
													"id": 451,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1770:81:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 452,
												"nodeType": "ExpressionStatement",
												"src": "1770:81:6"
											}
										]
									},
									"documentation": {
										"id": 428,
										"nodeType": "StructuredDocumentation",
										"src": "1437:228:6",
										"text": " @dev Transfer `value` amount of `token` from `from` to `to`, spending the approval given by `from` to the\n calling contract. If `token` returns no value, non-reverting calls are assumed to be successful."
									},
									"id": 454,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nameLocation": "1679:16:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 438,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 431,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "1703:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 454,
												"src": "1696:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$380",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 430,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 429,
														"name": "IERC20",
														"nameLocations": [
															"1696:6:6"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 380,
														"src": "1696:6:6"
													},
													"referencedDeclaration": 380,
													"src": "1696:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$380",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 433,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "1718:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 454,
												"src": "1710:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 432,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1710:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 435,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1732:2:6",
												"nodeType": "VariableDeclaration",
												"scope": 454,
												"src": "1724:10:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 434,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1724:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 437,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1744:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 454,
												"src": "1736:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 436,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1736:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1695:55:6"
									},
									"returnParameters": {
										"id": 439,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1760:0:6"
									},
									"scope": 791,
									"src": "1670:188:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 484,
										"nodeType": "Block",
										"src": "2600:139:6",
										"statements": [
											{
												"assignments": [
													466
												],
												"declarations": [
													{
														"constant": false,
														"id": 466,
														"mutability": "mutable",
														"name": "oldAllowance",
														"nameLocation": "2618:12:6",
														"nodeType": "VariableDeclaration",
														"scope": 484,
														"src": "2610:20:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 465,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2610:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 475,
												"initialValue": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 471,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "2657:4:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_SafeERC20_$791",
																		"typeString": "library SafeERC20"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_SafeERC20_$791",
																		"typeString": "library SafeERC20"
																	}
																],
																"id": 470,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "2649:7:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 469,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "2649:7:6",
																	"typeDescriptions": {}
																}
															},
															"id": 472,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2649:13:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 473,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 460,
															"src": "2664:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"id": 467,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 458,
															"src": "2633:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$380",
																"typeString": "contract IERC20"
															}
														},
														"id": 468,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2639:9:6",
														"memberName": "allowance",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 357,
														"src": "2633:15:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address,address) view external returns (uint256)"
														}
													},
													"id": 474,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2633:39:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2610:62:6"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 477,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 458,
															"src": "2695:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$380",
																"typeString": "contract IERC20"
															}
														},
														{
															"id": 478,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 460,
															"src": "2702:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 481,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 479,
																"name": "oldAllowance",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 466,
																"src": "2711:12:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"id": 480,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 462,
																"src": "2726:5:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2711:20:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$380",
																"typeString": "contract IERC20"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 476,
														"name": "forceApprove",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 575,
														"src": "2682:12:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$380_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (contract IERC20,address,uint256)"
														}
													},
													"id": 482,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2682:50:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 483,
												"nodeType": "ExpressionStatement",
												"src": "2682:50:6"
											}
										]
									},
									"documentation": {
										"id": 455,
										"nodeType": "StructuredDocumentation",
										"src": "1864:645:6",
										"text": " @dev Increase the calling contract's allowance toward `spender` by `value`. If `token` returns no value,\n non-reverting calls are assumed to be successful.\n IMPORTANT: If the token implements ERC-7674 (ERC-20 with temporary allowance), and if the \"client\"\n smart contract uses ERC-7674 to set temporary allowances, then the \"client\" smart contract should avoid using\n this function. Performing a {safeIncreaseAllowance} or {safeDecreaseAllowance} operation on a token contract\n that has a non-zero temporary allowance (for that particular owner-spender) will result in unexpected behavior."
									},
									"id": 485,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeIncreaseAllowance",
									"nameLocation": "2523:21:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 463,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 458,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "2552:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 485,
												"src": "2545:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$380",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 457,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 456,
														"name": "IERC20",
														"nameLocations": [
															"2545:6:6"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 380,
														"src": "2545:6:6"
													},
													"referencedDeclaration": 380,
													"src": "2545:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$380",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 460,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2567:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 485,
												"src": "2559:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 459,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2559:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 462,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2584:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 485,
												"src": "2576:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 461,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2576:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2544:46:6"
									},
									"returnParameters": {
										"id": 464,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2600:0:6"
									},
									"scope": 791,
									"src": "2514:225:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 527,
										"nodeType": "Block",
										"src": "3505:370:6",
										"statements": [
											{
												"id": 526,
												"nodeType": "UncheckedBlock",
												"src": "3515:354:6",
												"statements": [
													{
														"assignments": [
															497
														],
														"declarations": [
															{
																"constant": false,
																"id": 497,
																"mutability": "mutable",
																"name": "currentAllowance",
																"nameLocation": "3547:16:6",
																"nodeType": "VariableDeclaration",
																"scope": 526,
																"src": "3539:24:6",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 496,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "3539:7:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 506,
														"initialValue": {
															"arguments": [
																{
																	"arguments": [
																		{
																			"id": 502,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "3590:4:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_SafeERC20_$791",
																				"typeString": "library SafeERC20"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_SafeERC20_$791",
																				"typeString": "library SafeERC20"
																			}
																		],
																		"id": 501,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "3582:7:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 500,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "3582:7:6",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 503,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "3582:13:6",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 504,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 491,
																	"src": "3597:7:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"expression": {
																	"id": 498,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 489,
																	"src": "3566:5:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$380",
																		"typeString": "contract IERC20"
																	}
																},
																"id": 499,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "3572:9:6",
																"memberName": "allowance",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 357,
																"src": "3566:15:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$",
																	"typeString": "function (address,address) view external returns (uint256)"
																}
															},
															"id": 505,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3566:39:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "3539:66:6"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 509,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 507,
																"name": "currentAllowance",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 497,
																"src": "3623:16:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<",
															"rightExpression": {
																"id": 508,
																"name": "requestedDecrease",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 493,
																"src": "3642:17:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "3623:36:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 517,
														"nodeType": "IfStatement",
														"src": "3619:160:6",
														"trueBody": {
															"id": 516,
															"nodeType": "Block",
															"src": "3661:118:6",
															"statements": [
																{
																	"errorCall": {
																		"arguments": [
																			{
																				"id": 511,
																				"name": "spender",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 491,
																				"src": "3719:7:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"id": 512,
																				"name": "currentAllowance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 497,
																				"src": "3728:16:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			{
																				"id": 513,
																				"name": "requestedDecrease",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 493,
																				"src": "3746:17:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			],
																			"id": 510,
																			"name": "SafeERC20FailedDecreaseAllowance",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 403,
																			"src": "3686:32:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_error_pure$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
																				"typeString": "function (address,uint256,uint256) pure"
																			}
																		},
																		"id": 514,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "3686:78:6",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_tuple$__$",
																			"typeString": "tuple()"
																		}
																	},
																	"id": 515,
																	"nodeType": "RevertStatement",
																	"src": "3679:85:6"
																}
															]
														}
													},
													{
														"expression": {
															"arguments": [
																{
																	"id": 519,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 489,
																	"src": "3805:5:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$380",
																		"typeString": "contract IERC20"
																	}
																},
																{
																	"id": 520,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 491,
																	"src": "3812:7:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 523,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 521,
																		"name": "currentAllowance",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 497,
																		"src": "3821:16:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "-",
																	"rightExpression": {
																		"id": 522,
																		"name": "requestedDecrease",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 493,
																		"src": "3840:17:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "3821:36:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_IERC20_$380",
																		"typeString": "contract IERC20"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 518,
																"name": "forceApprove",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 575,
																"src": "3792:12:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$380_$_t_address_$_t_uint256_$returns$__$",
																	"typeString": "function (contract IERC20,address,uint256)"
																}
															},
															"id": 524,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3792:66:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 525,
														"nodeType": "ExpressionStatement",
														"src": "3792:66:6"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 486,
										"nodeType": "StructuredDocumentation",
										"src": "2745:657:6",
										"text": " @dev Decrease the calling contract's allowance toward `spender` by `requestedDecrease`. If `token` returns no\n value, non-reverting calls are assumed to be successful.\n IMPORTANT: If the token implements ERC-7674 (ERC-20 with temporary allowance), and if the \"client\"\n smart contract uses ERC-7674 to set temporary allowances, then the \"client\" smart contract should avoid using\n this function. Performing a {safeIncreaseAllowance} or {safeDecreaseAllowance} operation on a token contract\n that has a non-zero temporary allowance (for that particular owner-spender) will result in unexpected behavior."
									},
									"id": 528,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeDecreaseAllowance",
									"nameLocation": "3416:21:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 494,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 489,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "3445:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 528,
												"src": "3438:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$380",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 488,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 487,
														"name": "IERC20",
														"nameLocations": [
															"3438:6:6"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 380,
														"src": "3438:6:6"
													},
													"referencedDeclaration": 380,
													"src": "3438:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$380",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 491,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "3460:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 528,
												"src": "3452:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 490,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3452:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 493,
												"mutability": "mutable",
												"name": "requestedDecrease",
												"nameLocation": "3477:17:6",
												"nodeType": "VariableDeclaration",
												"scope": 528,
												"src": "3469:25:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 492,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3469:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3437:58:6"
									},
									"returnParameters": {
										"id": 495,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3505:0:6"
									},
									"scope": 791,
									"src": "3407:468:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 574,
										"nodeType": "Block",
										"src": "4529:303:6",
										"statements": [
											{
												"assignments": [
													540
												],
												"declarations": [
													{
														"constant": false,
														"id": 540,
														"mutability": "mutable",
														"name": "approvalCall",
														"nameLocation": "4552:12:6",
														"nodeType": "VariableDeclaration",
														"scope": 574,
														"src": "4539:25:6",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 539,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "4539:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 549,
												"initialValue": {
													"arguments": [
														{
															"expression": {
																"id": 543,
																"name": "token",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 532,
																"src": "4582:5:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_IERC20_$380",
																	"typeString": "contract IERC20"
																}
															},
															"id": 544,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "4588:7:6",
															"memberName": "approve",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 367,
															"src": "4582:13:6",
															"typeDescriptions": {
																"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																"typeString": "function (address,uint256) external returns (bool)"
															}
														},
														{
															"components": [
																{
																	"id": 545,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 534,
																	"src": "4598:7:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 546,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 536,
																	"src": "4607:5:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 547,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "4597:16:6",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_address_$_t_uint256_$",
																"typeString": "tuple(address,uint256)"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																"typeString": "function (address,uint256) external returns (bool)"
															},
															{
																"typeIdentifier": "t_tuple$_t_address_$_t_uint256_$",
																"typeString": "tuple(address,uint256)"
															}
														],
														"expression": {
															"id": 541,
															"name": "abi",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967295,
															"src": "4567:3:6",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_abi",
																"typeString": "abi"
															}
														},
														"id": 542,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "4571:10:6",
														"memberName": "encodeCall",
														"nodeType": "MemberAccess",
														"src": "4567:14:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_abiencodecall_pure$__$returns$_t_bytes_memory_ptr_$",
															"typeString": "function () pure returns (bytes memory)"
														}
													},
													"id": 548,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4567:47:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4539:75:6"
											},
											{
												"condition": {
													"id": 554,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "4629:45:6",
													"subExpression": {
														"arguments": [
															{
																"id": 551,
																"name": "token",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 532,
																"src": "4654:5:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_IERC20_$380",
																	"typeString": "contract IERC20"
																}
															},
															{
																"id": 552,
																"name": "approvalCall",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 540,
																"src": "4661:12:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_contract$_IERC20_$380",
																	"typeString": "contract IERC20"
																},
																{
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															],
															"id": 550,
															"name": "_callOptionalReturnBool",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 790,
															"src": "4630:23:6",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$380_$_t_bytes_memory_ptr_$returns$_t_bool_$",
																"typeString": "function (contract IERC20,bytes memory) returns (bool)"
															}
														},
														"id": 553,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "4630:44:6",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 573,
												"nodeType": "IfStatement",
												"src": "4625:201:6",
												"trueBody": {
													"id": 572,
													"nodeType": "Block",
													"src": "4676:150:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 556,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 532,
																		"src": "4710:5:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$380",
																			"typeString": "contract IERC20"
																		}
																	},
																	{
																		"arguments": [
																			{
																				"expression": {
																					"id": 559,
																					"name": "token",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 532,
																					"src": "4732:5:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_contract$_IERC20_$380",
																						"typeString": "contract IERC20"
																					}
																				},
																				"id": 560,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "4738:7:6",
																				"memberName": "approve",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 367,
																				"src": "4732:13:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																					"typeString": "function (address,uint256) external returns (bool)"
																				}
																			},
																			{
																				"components": [
																					{
																						"id": 561,
																						"name": "spender",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 534,
																						"src": "4748:7:6",
																						"typeDescriptions": {
																							"typeIdentifier": "t_address",
																							"typeString": "address"
																						}
																					},
																					{
																						"hexValue": "30",
																						"id": 562,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "4757:1:6",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_0_by_1",
																							"typeString": "int_const 0"
																						},
																						"value": "0"
																					}
																				],
																				"id": 563,
																				"isConstant": false,
																				"isInlineArray": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"nodeType": "TupleExpression",
																				"src": "4747:12:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_tuple$_t_address_$_t_rational_0_by_1_$",
																					"typeString": "tuple(address,int_const 0)"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																					"typeString": "function (address,uint256) external returns (bool)"
																				},
																				{
																					"typeIdentifier": "t_tuple$_t_address_$_t_rational_0_by_1_$",
																					"typeString": "tuple(address,int_const 0)"
																				}
																			],
																			"expression": {
																				"id": 557,
																				"name": "abi",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967295,
																				"src": "4717:3:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_magic_abi",
																					"typeString": "abi"
																				}
																			},
																			"id": 558,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"memberLocation": "4721:10:6",
																			"memberName": "encodeCall",
																			"nodeType": "MemberAccess",
																			"src": "4717:14:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_abiencodecall_pure$__$returns$_t_bytes_memory_ptr_$",
																				"typeString": "function () pure returns (bytes memory)"
																			}
																		},
																		"id": 564,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "4717:43:6",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_IERC20_$380",
																			"typeString": "contract IERC20"
																		},
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	],
																	"id": 555,
																	"name": "_callOptionalReturn",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 749,
																	"src": "4690:19:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$380_$_t_bytes_memory_ptr_$returns$__$",
																		"typeString": "function (contract IERC20,bytes memory)"
																	}
																},
																"id": 565,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4690:71:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 566,
															"nodeType": "ExpressionStatement",
															"src": "4690:71:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"id": 568,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 532,
																		"src": "4795:5:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$380",
																			"typeString": "contract IERC20"
																		}
																	},
																	{
																		"id": 569,
																		"name": "approvalCall",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 540,
																		"src": "4802:12:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_IERC20_$380",
																			"typeString": "contract IERC20"
																		},
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	],
																	"id": 567,
																	"name": "_callOptionalReturn",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 749,
																	"src": "4775:19:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$380_$_t_bytes_memory_ptr_$returns$__$",
																		"typeString": "function (contract IERC20,bytes memory)"
																	}
																},
																"id": 570,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4775:40:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 571,
															"nodeType": "ExpressionStatement",
															"src": "4775:40:6"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 529,
										"nodeType": "StructuredDocumentation",
										"src": "3881:566:6",
										"text": " @dev Set the calling contract's allowance toward `spender` to `value`. If `token` returns no value,\n non-reverting calls are assumed to be successful. Meant to be used with tokens that require the approval\n to be set to zero before setting it to a non-zero value, such as USDT.\n NOTE: If the token implements ERC-7674, this function will not modify any temporary allowance. This function\n only sets the \"standard\" allowance. Any temporary allowance will remain active, in addition to the value being\n set here."
									},
									"id": 575,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "forceApprove",
									"nameLocation": "4461:12:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 537,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 532,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "4481:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 575,
												"src": "4474:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$380",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 531,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 530,
														"name": "IERC20",
														"nameLocations": [
															"4474:6:6"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 380,
														"src": "4474:6:6"
													},
													"referencedDeclaration": 380,
													"src": "4474:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$380",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 534,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "4496:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 575,
												"src": "4488:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 533,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4488:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 536,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "4513:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 575,
												"src": "4505:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 535,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4505:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4473:46:6"
									},
									"returnParameters": {
										"id": 538,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4529:0:6"
									},
									"scope": 791,
									"src": "4452:380:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 617,
										"nodeType": "Block",
										"src": "5279:219:6",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 592,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"expression": {
																"id": 588,
																"name": "to",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 581,
																"src": "5293:2:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 589,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "5296:4:6",
															"memberName": "code",
															"nodeType": "MemberAccess",
															"src": "5293:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 590,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "5301:6:6",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "5293:14:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 591,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "5311:1:6",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "5293:19:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"condition": {
														"id": 606,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "!",
														"prefix": true,
														"src": "5379:39:6",
														"subExpression": {
															"arguments": [
																{
																	"id": 602,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 581,
																	"src": "5402:2:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 603,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 583,
																	"src": "5406:5:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"id": 604,
																	"name": "data",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 585,
																	"src": "5413:4:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																],
																"expression": {
																	"id": 600,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 579,
																	"src": "5380:5:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC1363_$229",
																		"typeString": "contract IERC1363"
																	}
																},
																"id": 601,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "5386:15:6",
																"memberName": "transferAndCall",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 180,
																"src": "5380:21:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bool_$",
																	"typeString": "function (address,uint256,bytes memory) external returns (bool)"
																}
															},
															"id": 605,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5380:38:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"id": 615,
													"nodeType": "IfStatement",
													"src": "5375:117:6",
													"trueBody": {
														"id": 614,
														"nodeType": "Block",
														"src": "5420:72:6",
														"statements": [
															{
																"errorCall": {
																	"arguments": [
																		{
																			"arguments": [
																				{
																					"id": 610,
																					"name": "token",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 579,
																					"src": "5474:5:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_contract$_IERC1363_$229",
																						"typeString": "contract IERC1363"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_contract$_IERC1363_$229",
																						"typeString": "contract IERC1363"
																					}
																				],
																				"id": 609,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "5466:7:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_address_$",
																					"typeString": "type(address)"
																				},
																				"typeName": {
																					"id": 608,
																					"name": "address",
																					"nodeType": "ElementaryTypeName",
																					"src": "5466:7:6",
																					"typeDescriptions": {}
																				}
																			},
																			"id": 611,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "5466:14:6",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		],
																		"id": 607,
																		"name": "SafeERC20FailedOperation",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 394,
																		"src": "5441:24:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																			"typeString": "function (address) pure"
																		}
																	},
																	"id": 612,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "5441:40:6",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_tuple$__$",
																		"typeString": "tuple()"
																	}
																},
																"id": 613,
																"nodeType": "RevertStatement",
																"src": "5434:47:6"
															}
														]
													}
												},
												"id": 616,
												"nodeType": "IfStatement",
												"src": "5289:203:6",
												"trueBody": {
													"id": 599,
													"nodeType": "Block",
													"src": "5314:55:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 594,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 579,
																		"src": "5341:5:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC1363_$229",
																			"typeString": "contract IERC1363"
																		}
																	},
																	{
																		"id": 595,
																		"name": "to",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 581,
																		"src": "5348:2:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 596,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 583,
																		"src": "5352:5:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_IERC1363_$229",
																			"typeString": "contract IERC1363"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 593,
																	"name": "safeTransfer",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 427,
																	"src": "5328:12:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$380_$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (contract IERC20,address,uint256)"
																	}
																},
																"id": 597,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5328:30:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 598,
															"nodeType": "ExpressionStatement",
															"src": "5328:30:6"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 576,
										"nodeType": "StructuredDocumentation",
										"src": "4838:333:6",
										"text": " @dev Performs an {ERC1363} transferAndCall, with a fallback to the simple {ERC20} transfer if the target has no\n code. This can be used to implement an {ERC721}-like safe transfer that rely on {ERC1363} checks when\n targeting contracts.\n Reverts if the returned value is other than `true`."
									},
									"id": 618,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transferAndCallRelaxed",
									"nameLocation": "5185:22:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 586,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 579,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "5217:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 618,
												"src": "5208:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC1363_$229",
													"typeString": "contract IERC1363"
												},
												"typeName": {
													"id": 578,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 577,
														"name": "IERC1363",
														"nameLocations": [
															"5208:8:6"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 229,
														"src": "5208:8:6"
													},
													"referencedDeclaration": 229,
													"src": "5208:8:6",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC1363_$229",
														"typeString": "contract IERC1363"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 581,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "5232:2:6",
												"nodeType": "VariableDeclaration",
												"scope": 618,
												"src": "5224:10:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 580,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5224:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 583,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "5244:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 618,
												"src": "5236:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 582,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5236:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 585,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "5264:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 618,
												"src": "5251:17:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 584,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5251:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5207:62:6"
									},
									"returnParameters": {
										"id": 587,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5279:0:6"
									},
									"scope": 791,
									"src": "5176:322:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 664,
										"nodeType": "Block",
										"src": "6017:239:6",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 637,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"expression": {
																"id": 633,
																"name": "to",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 626,
																"src": "6031:2:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 634,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "6034:4:6",
															"memberName": "code",
															"nodeType": "MemberAccess",
															"src": "6031:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 635,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "6039:6:6",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "6031:14:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 636,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "6049:1:6",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "6031:19:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"condition": {
														"id": 653,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "!",
														"prefix": true,
														"src": "6127:49:6",
														"subExpression": {
															"arguments": [
																{
																	"id": 648,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 624,
																	"src": "6154:4:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 649,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 626,
																	"src": "6160:2:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 650,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 628,
																	"src": "6164:5:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"id": 651,
																	"name": "data",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 630,
																	"src": "6171:4:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																],
																"expression": {
																	"id": 646,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 622,
																	"src": "6128:5:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC1363_$229",
																		"typeString": "contract IERC1363"
																	}
																},
																"id": 647,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "6134:19:6",
																"memberName": "transferFromAndCall",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 206,
																"src": "6128:25:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bool_$",
																	"typeString": "function (address,address,uint256,bytes memory) external returns (bool)"
																}
															},
															"id": 652,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6128:48:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"id": 662,
													"nodeType": "IfStatement",
													"src": "6123:127:6",
													"trueBody": {
														"id": 661,
														"nodeType": "Block",
														"src": "6178:72:6",
														"statements": [
															{
																"errorCall": {
																	"arguments": [
																		{
																			"arguments": [
																				{
																					"id": 657,
																					"name": "token",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 622,
																					"src": "6232:5:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_contract$_IERC1363_$229",
																						"typeString": "contract IERC1363"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_contract$_IERC1363_$229",
																						"typeString": "contract IERC1363"
																					}
																				],
																				"id": 656,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "6224:7:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_address_$",
																					"typeString": "type(address)"
																				},
																				"typeName": {
																					"id": 655,
																					"name": "address",
																					"nodeType": "ElementaryTypeName",
																					"src": "6224:7:6",
																					"typeDescriptions": {}
																				}
																			},
																			"id": 658,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "6224:14:6",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		],
																		"id": 654,
																		"name": "SafeERC20FailedOperation",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 394,
																		"src": "6199:24:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																			"typeString": "function (address) pure"
																		}
																	},
																	"id": 659,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "6199:40:6",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_tuple$__$",
																		"typeString": "tuple()"
																	}
																},
																"id": 660,
																"nodeType": "RevertStatement",
																"src": "6192:47:6"
															}
														]
													}
												},
												"id": 663,
												"nodeType": "IfStatement",
												"src": "6027:223:6",
												"trueBody": {
													"id": 645,
													"nodeType": "Block",
													"src": "6052:65:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 639,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 622,
																		"src": "6083:5:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC1363_$229",
																			"typeString": "contract IERC1363"
																		}
																	},
																	{
																		"id": 640,
																		"name": "from",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 624,
																		"src": "6090:4:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 641,
																		"name": "to",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 626,
																		"src": "6096:2:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 642,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 628,
																		"src": "6100:5:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_IERC1363_$229",
																			"typeString": "contract IERC1363"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 638,
																	"name": "safeTransferFrom",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 454,
																	"src": "6066:16:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$380_$_t_address_$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (contract IERC20,address,address,uint256)"
																	}
																},
																"id": 643,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6066:40:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 644,
															"nodeType": "ExpressionStatement",
															"src": "6066:40:6"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 619,
										"nodeType": "StructuredDocumentation",
										"src": "5504:341:6",
										"text": " @dev Performs an {ERC1363} transferFromAndCall, with a fallback to the simple {ERC20} transferFrom if the target\n has no code. This can be used to implement an {ERC721}-like safe transfer that rely on {ERC1363} checks when\n targeting contracts.\n Reverts if the returned value is other than `true`."
									},
									"id": 665,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transferFromAndCallRelaxed",
									"nameLocation": "5859:26:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 631,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 622,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "5904:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 665,
												"src": "5895:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC1363_$229",
													"typeString": "contract IERC1363"
												},
												"typeName": {
													"id": 621,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 620,
														"name": "IERC1363",
														"nameLocations": [
															"5895:8:6"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 229,
														"src": "5895:8:6"
													},
													"referencedDeclaration": 229,
													"src": "5895:8:6",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC1363_$229",
														"typeString": "contract IERC1363"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 624,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "5927:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 665,
												"src": "5919:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 623,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5919:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 626,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "5949:2:6",
												"nodeType": "VariableDeclaration",
												"scope": 665,
												"src": "5941:10:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 625,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5941:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 628,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "5969:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 665,
												"src": "5961:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 627,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5961:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 630,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "5997:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 665,
												"src": "5984:17:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 629,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5984:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5885:122:6"
									},
									"returnParameters": {
										"id": 632,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6017:0:6"
									},
									"scope": 791,
									"src": "5850:406:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 707,
										"nodeType": "Block",
										"src": "7023:218:6",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 682,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"expression": {
																"id": 678,
																"name": "to",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 671,
																"src": "7037:2:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 679,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "7040:4:6",
															"memberName": "code",
															"nodeType": "MemberAccess",
															"src": "7037:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 680,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "7045:6:6",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "7037:14:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 681,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "7055:1:6",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "7037:19:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"condition": {
														"id": 696,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "!",
														"prefix": true,
														"src": "7123:38:6",
														"subExpression": {
															"arguments": [
																{
																	"id": 692,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 671,
																	"src": "7145:2:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 693,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 673,
																	"src": "7149:5:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"id": 694,
																	"name": "data",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 675,
																	"src": "7156:4:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																],
																"expression": {
																	"id": 690,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 669,
																	"src": "7124:5:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC1363_$229",
																		"typeString": "contract IERC1363"
																	}
																},
																"id": 691,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "7130:14:6",
																"memberName": "approveAndCall",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 228,
																"src": "7124:20:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bool_$",
																	"typeString": "function (address,uint256,bytes memory) external returns (bool)"
																}
															},
															"id": 695,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "7124:37:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"id": 705,
													"nodeType": "IfStatement",
													"src": "7119:116:6",
													"trueBody": {
														"id": 704,
														"nodeType": "Block",
														"src": "7163:72:6",
														"statements": [
															{
																"errorCall": {
																	"arguments": [
																		{
																			"arguments": [
																				{
																					"id": 700,
																					"name": "token",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 669,
																					"src": "7217:5:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_contract$_IERC1363_$229",
																						"typeString": "contract IERC1363"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_contract$_IERC1363_$229",
																						"typeString": "contract IERC1363"
																					}
																				],
																				"id": 699,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "7209:7:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_address_$",
																					"typeString": "type(address)"
																				},
																				"typeName": {
																					"id": 698,
																					"name": "address",
																					"nodeType": "ElementaryTypeName",
																					"src": "7209:7:6",
																					"typeDescriptions": {}
																				}
																			},
																			"id": 701,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "7209:14:6",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		],
																		"id": 697,
																		"name": "SafeERC20FailedOperation",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 394,
																		"src": "7184:24:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																			"typeString": "function (address) pure"
																		}
																	},
																	"id": 702,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "7184:40:6",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_tuple$__$",
																		"typeString": "tuple()"
																	}
																},
																"id": 703,
																"nodeType": "RevertStatement",
																"src": "7177:47:6"
															}
														]
													}
												},
												"id": 706,
												"nodeType": "IfStatement",
												"src": "7033:202:6",
												"trueBody": {
													"id": 689,
													"nodeType": "Block",
													"src": "7058:55:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 684,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 669,
																		"src": "7085:5:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC1363_$229",
																			"typeString": "contract IERC1363"
																		}
																	},
																	{
																		"id": 685,
																		"name": "to",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 671,
																		"src": "7092:2:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 686,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 673,
																		"src": "7096:5:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_IERC1363_$229",
																			"typeString": "contract IERC1363"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 683,
																	"name": "forceApprove",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 575,
																	"src": "7072:12:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$380_$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (contract IERC20,address,uint256)"
																	}
																},
																"id": 687,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7072:30:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 688,
															"nodeType": "ExpressionStatement",
															"src": "7072:30:6"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 666,
										"nodeType": "StructuredDocumentation",
										"src": "6262:654:6",
										"text": " @dev Performs an {ERC1363} approveAndCall, with a fallback to the simple {ERC20} approve if the target has no\n code. This can be used to implement an {ERC721}-like safe transfer that rely on {ERC1363} checks when\n targeting contracts.\n NOTE: When the recipient address (`to`) has no code (i.e. is an EOA), this function behaves as {forceApprove}.\n Opposedly, when the recipient address (`to`) has code, this function only attempts to call {ERC1363-approveAndCall}\n once without retrying, and relies on the returned value to be true.\n Reverts if the returned value is other than `true`."
									},
									"id": 708,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "approveAndCallRelaxed",
									"nameLocation": "6930:21:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 676,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 669,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "6961:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 708,
												"src": "6952:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC1363_$229",
													"typeString": "contract IERC1363"
												},
												"typeName": {
													"id": 668,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 667,
														"name": "IERC1363",
														"nameLocations": [
															"6952:8:6"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 229,
														"src": "6952:8:6"
													},
													"referencedDeclaration": 229,
													"src": "6952:8:6",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC1363_$229",
														"typeString": "contract IERC1363"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 671,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "6976:2:6",
												"nodeType": "VariableDeclaration",
												"scope": 708,
												"src": "6968:10:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 670,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6968:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 673,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "6988:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 708,
												"src": "6980:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 672,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6980:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 675,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "7008:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 708,
												"src": "6995:17:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 674,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6995:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6951:62:6"
									},
									"returnParameters": {
										"id": 677,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7023:0:6"
									},
									"scope": 791,
									"src": "6921:320:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 748,
										"nodeType": "Block",
										"src": "7808:650:6",
										"statements": [
											{
												"assignments": [
													718
												],
												"declarations": [
													{
														"constant": false,
														"id": 718,
														"mutability": "mutable",
														"name": "returnSize",
														"nameLocation": "7826:10:6",
														"nodeType": "VariableDeclaration",
														"scope": 748,
														"src": "7818:18:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 717,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "7818:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 719,
												"nodeType": "VariableDeclarationStatement",
												"src": "7818:18:6"
											},
											{
												"assignments": [
													721
												],
												"declarations": [
													{
														"constant": false,
														"id": 721,
														"mutability": "mutable",
														"name": "returnValue",
														"nameLocation": "7854:11:6",
														"nodeType": "VariableDeclaration",
														"scope": 748,
														"src": "7846:19:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 720,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "7846:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 722,
												"nodeType": "VariableDeclarationStatement",
												"src": "7846:19:6"
											},
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "7900:396:6",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "7914:75:6",
															"value": {
																"arguments": [
																	{
																		"arguments": [],
																		"functionName": {
																			"name": "gas",
																			"nodeType": "YulIdentifier",
																			"src": "7934:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7934:5:6"
																	},
																	{
																		"name": "token",
																		"nodeType": "YulIdentifier",
																		"src": "7941:5:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7948:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"name": "data",
																				"nodeType": "YulIdentifier",
																				"src": "7955:4:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7961:4:6",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7951:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7951:15:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "data",
																				"nodeType": "YulIdentifier",
																				"src": "7974:4:6"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nodeType": "YulIdentifier",
																			"src": "7968:5:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7968:11:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7981:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7984:4:6",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "call",
																	"nodeType": "YulIdentifier",
																	"src": "7929:4:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "7929:60:6"
															},
															"variables": [
																{
																	"name": "success",
																	"nodeType": "YulTypedName",
																	"src": "7918:7:6",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "8050:157:6",
																"statements": [
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "8068:22:6",
																		"value": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "8085:4:6",
																					"type": "",
																					"value": "0x40"
																				}
																			],
																			"functionName": {
																				"name": "mload",
																				"nodeType": "YulIdentifier",
																				"src": "8079:5:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "8079:11:6"
																		},
																		"variables": [
																			{
																				"name": "ptr",
																				"nodeType": "YulTypedName",
																				"src": "8072:3:6",
																				"type": ""
																			}
																		]
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "ptr",
																					"nodeType": "YulIdentifier",
																					"src": "8122:3:6"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "8127:1:6",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [],
																					"functionName": {
																						"name": "returndatasize",
																						"nodeType": "YulIdentifier",
																						"src": "8130:14:6"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "8130:16:6"
																				}
																			],
																			"functionName": {
																				"name": "returndatacopy",
																				"nodeType": "YulIdentifier",
																				"src": "8107:14:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "8107:40:6"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "8107:40:6"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "ptr",
																					"nodeType": "YulIdentifier",
																					"src": "8171:3:6"
																				},
																				{
																					"arguments": [],
																					"functionName": {
																						"name": "returndatasize",
																						"nodeType": "YulIdentifier",
																						"src": "8176:14:6"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "8176:16:6"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "8164:6:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "8164:29:6"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "8164:29:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "success",
																		"nodeType": "YulIdentifier",
																		"src": "8041:7:6"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "8034:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "8034:15:6"
															},
															"nodeType": "YulIf",
															"src": "8031:176:6"
														},
														{
															"nodeType": "YulAssignment",
															"src": "8220:30:6",
															"value": {
																"arguments": [],
																"functionName": {
																	"name": "returndatasize",
																	"nodeType": "YulIdentifier",
																	"src": "8234:14:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "8234:16:6"
															},
															"variableNames": [
																{
																	"name": "returnSize",
																	"nodeType": "YulIdentifier",
																	"src": "8220:10:6"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "8263:23:6",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8284:1:6",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "8278:5:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "8278:8:6"
															},
															"variableNames": [
																{
																	"name": "returnValue",
																	"nodeType": "YulIdentifier",
																	"src": "8263:11:6"
																}
															]
														}
													]
												},
												"evmVersion": "shanghai",
												"externalReferences": [
													{
														"declaration": 714,
														"isOffset": false,
														"isSlot": false,
														"src": "7955:4:6",
														"valueSize": 1
													},
													{
														"declaration": 714,
														"isOffset": false,
														"isSlot": false,
														"src": "7974:4:6",
														"valueSize": 1
													},
													{
														"declaration": 718,
														"isOffset": false,
														"isSlot": false,
														"src": "8220:10:6",
														"valueSize": 1
													},
													{
														"declaration": 721,
														"isOffset": false,
														"isSlot": false,
														"src": "8263:11:6",
														"valueSize": 1
													},
													{
														"declaration": 712,
														"isOffset": false,
														"isSlot": false,
														"src": "7941:5:6",
														"valueSize": 1
													}
												],
												"flags": [
													"memory-safe"
												],
												"id": 723,
												"nodeType": "InlineAssembly",
												"src": "7875:421:6"
											},
											{
												"condition": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 726,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 724,
															"name": "returnSize",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 718,
															"src": "8310:10:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"hexValue": "30",
															"id": 725,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8324:1:6",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "8310:15:6",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 737,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 735,
															"name": "returnValue",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 721,
															"src": "8362:11:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "!=",
														"rightExpression": {
															"hexValue": "31",
															"id": 736,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8377:1:6",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														"src": "8362:16:6",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"id": 738,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "8310:68:6",
													"trueExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 734,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"expression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 729,
																			"name": "token",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 712,
																			"src": "8336:5:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_IERC20_$380",
																				"typeString": "contract IERC20"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_IERC20_$380",
																				"typeString": "contract IERC20"
																			}
																		],
																		"id": 728,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "8328:7:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 727,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "8328:7:6",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 730,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "8328:14:6",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"id": 731,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "8343:4:6",
																"memberName": "code",
																"nodeType": "MemberAccess",
																"src": "8328:19:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"id": 732,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "8348:6:6",
															"memberName": "length",
															"nodeType": "MemberAccess",
															"src": "8328:26:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"hexValue": "30",
															"id": 733,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8358:1:6",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "8328:31:6",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 747,
												"nodeType": "IfStatement",
												"src": "8306:146:6",
												"trueBody": {
													"id": 746,
													"nodeType": "Block",
													"src": "8380:72:6",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"id": 742,
																				"name": "token",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 712,
																				"src": "8434:5:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_contract$_IERC20_$380",
																					"typeString": "contract IERC20"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_contract$_IERC20_$380",
																					"typeString": "contract IERC20"
																				}
																			],
																			"id": 741,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "8426:7:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 740,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "8426:7:6",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 743,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "8426:14:6",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 739,
																	"name": "SafeERC20FailedOperation",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 394,
																	"src": "8401:24:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 744,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8401:40:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 745,
															"nodeType": "RevertStatement",
															"src": "8394:47:6"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 709,
										"nodeType": "StructuredDocumentation",
										"src": "7247:486:6",
										"text": " @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n on the return value: the return value is optional (but if data is returned, it must not be false).\n @param token The token targeted by the call.\n @param data The call data (encoded using abi.encode or one of its variants).\n This is a variant of {_callOptionalReturnBool} that reverts if call fails to meet the requirements."
									},
									"id": 749,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_callOptionalReturn",
									"nameLocation": "7747:19:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 715,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 712,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "7774:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 749,
												"src": "7767:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$380",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 711,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 710,
														"name": "IERC20",
														"nameLocations": [
															"7767:6:6"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 380,
														"src": "7767:6:6"
													},
													"referencedDeclaration": 380,
													"src": "7767:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$380",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 714,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "7794:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 749,
												"src": "7781:17:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 713,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "7781:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7766:33:6"
									},
									"returnParameters": {
										"id": 716,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7808:0:6"
									},
									"scope": 791,
									"src": "7738:720:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 789,
										"nodeType": "Block",
										"src": "9049:391:6",
										"statements": [
											{
												"assignments": [
													761
												],
												"declarations": [
													{
														"constant": false,
														"id": 761,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "9064:7:6",
														"nodeType": "VariableDeclaration",
														"scope": 789,
														"src": "9059:12:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 760,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "9059:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 762,
												"nodeType": "VariableDeclarationStatement",
												"src": "9059:12:6"
											},
											{
												"assignments": [
													764
												],
												"declarations": [
													{
														"constant": false,
														"id": 764,
														"mutability": "mutable",
														"name": "returnSize",
														"nameLocation": "9089:10:6",
														"nodeType": "VariableDeclaration",
														"scope": 789,
														"src": "9081:18:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 763,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "9081:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 765,
												"nodeType": "VariableDeclarationStatement",
												"src": "9081:18:6"
											},
											{
												"assignments": [
													767
												],
												"declarations": [
													{
														"constant": false,
														"id": 767,
														"mutability": "mutable",
														"name": "returnValue",
														"nameLocation": "9117:11:6",
														"nodeType": "VariableDeclaration",
														"scope": 789,
														"src": "9109:19:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 766,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "9109:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 768,
												"nodeType": "VariableDeclarationStatement",
												"src": "9109:19:6"
											},
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "9163:174:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "9177:71:6",
															"value": {
																"arguments": [
																	{
																		"arguments": [],
																		"functionName": {
																			"name": "gas",
																			"nodeType": "YulIdentifier",
																			"src": "9193:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9193:5:6"
																	},
																	{
																		"name": "token",
																		"nodeType": "YulIdentifier",
																		"src": "9200:5:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9207:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"name": "data",
																				"nodeType": "YulIdentifier",
																				"src": "9214:4:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9220:4:6",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9210:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9210:15:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "data",
																				"nodeType": "YulIdentifier",
																				"src": "9233:4:6"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nodeType": "YulIdentifier",
																			"src": "9227:5:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9227:11:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9240:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9243:4:6",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "call",
																	"nodeType": "YulIdentifier",
																	"src": "9188:4:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "9188:60:6"
															},
															"variableNames": [
																{
																	"name": "success",
																	"nodeType": "YulIdentifier",
																	"src": "9177:7:6"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "9261:30:6",
															"value": {
																"arguments": [],
																"functionName": {
																	"name": "returndatasize",
																	"nodeType": "YulIdentifier",
																	"src": "9275:14:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "9275:16:6"
															},
															"variableNames": [
																{
																	"name": "returnSize",
																	"nodeType": "YulIdentifier",
																	"src": "9261:10:6"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "9304:23:6",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9325:1:6",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "9319:5:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "9319:8:6"
															},
															"variableNames": [
																{
																	"name": "returnValue",
																	"nodeType": "YulIdentifier",
																	"src": "9304:11:6"
																}
															]
														}
													]
												},
												"evmVersion": "shanghai",
												"externalReferences": [
													{
														"declaration": 755,
														"isOffset": false,
														"isSlot": false,
														"src": "9214:4:6",
														"valueSize": 1
													},
													{
														"declaration": 755,
														"isOffset": false,
														"isSlot": false,
														"src": "9233:4:6",
														"valueSize": 1
													},
													{
														"declaration": 764,
														"isOffset": false,
														"isSlot": false,
														"src": "9261:10:6",
														"valueSize": 1
													},
													{
														"declaration": 767,
														"isOffset": false,
														"isSlot": false,
														"src": "9304:11:6",
														"valueSize": 1
													},
													{
														"declaration": 761,
														"isOffset": false,
														"isSlot": false,
														"src": "9177:7:6",
														"valueSize": 1
													},
													{
														"declaration": 753,
														"isOffset": false,
														"isSlot": false,
														"src": "9200:5:6",
														"valueSize": 1
													}
												],
												"flags": [
													"memory-safe"
												],
												"id": 769,
												"nodeType": "InlineAssembly",
												"src": "9138:199:6"
											},
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 787,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 770,
														"name": "success",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 761,
														"src": "9353:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"components": [
															{
																"condition": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 773,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 771,
																		"name": "returnSize",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 764,
																		"src": "9365:10:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "==",
																	"rightExpression": {
																		"hexValue": "30",
																		"id": 772,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "9379:1:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	"src": "9365:15:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"falseExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 784,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 782,
																		"name": "returnValue",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 767,
																		"src": "9416:11:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "==",
																	"rightExpression": {
																		"hexValue": "31",
																		"id": 783,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "9431:1:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_1_by_1",
																			"typeString": "int_const 1"
																		},
																		"value": "1"
																	},
																	"src": "9416:16:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"id": 785,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "Conditional",
																"src": "9365:67:6",
																"trueExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 781,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"expression": {
																			"expression": {
																				"arguments": [
																					{
																						"id": 776,
																						"name": "token",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 753,
																						"src": "9391:5:6",
																						"typeDescriptions": {
																							"typeIdentifier": "t_contract$_IERC20_$380",
																							"typeString": "contract IERC20"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_contract$_IERC20_$380",
																							"typeString": "contract IERC20"
																						}
																					],
																					"id": 775,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"nodeType": "ElementaryTypeNameExpression",
																					"src": "9383:7:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_type$_t_address_$",
																						"typeString": "type(address)"
																					},
																					"typeName": {
																						"id": 774,
																						"name": "address",
																						"nodeType": "ElementaryTypeName",
																						"src": "9383:7:6",
																						"typeDescriptions": {}
																					}
																				},
																				"id": 777,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "typeConversion",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "9383:14:6",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"id": 778,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "9398:4:6",
																			"memberName": "code",
																			"nodeType": "MemberAccess",
																			"src": "9383:19:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes_memory_ptr",
																				"typeString": "bytes memory"
																			}
																		},
																		"id": 779,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "9403:6:6",
																		"memberName": "length",
																		"nodeType": "MemberAccess",
																		"src": "9383:26:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": ">",
																	"rightExpression": {
																		"hexValue": "30",
																		"id": 780,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "9412:1:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	"src": "9383:30:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															}
														],
														"id": 786,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "9364:69:6",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "9353:80:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 759,
												"id": 788,
												"nodeType": "Return",
												"src": "9346:87:6"
											}
										]
									},
									"documentation": {
										"id": 750,
										"nodeType": "StructuredDocumentation",
										"src": "8464:491:6",
										"text": " @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n on the return value: the return value is optional (but if data is returned, it must not be false).\n @param token The token targeted by the call.\n @param data The call data (encoded using abi.encode or one of its variants).\n This is a variant of {_callOptionalReturn} that silently catches all reverts and returns a bool instead."
									},
									"id": 790,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_callOptionalReturnBool",
									"nameLocation": "8969:23:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 756,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 753,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "9000:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 790,
												"src": "8993:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$380",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 752,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 751,
														"name": "IERC20",
														"nameLocations": [
															"8993:6:6"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 380,
														"src": "8993:6:6"
													},
													"referencedDeclaration": 380,
													"src": "8993:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$380",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 755,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "9020:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 790,
												"src": "9007:17:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 754,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "9007:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8992:33:6"
									},
									"returnParameters": {
										"id": 759,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 758,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 790,
												"src": "9043:4:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 757,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "9043:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9042:6:6"
									},
									"scope": 791,
									"src": "8960:480:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								}
							],
							"scope": 792,
							"src": "750:8692:6",
							"usedErrors": [
								394,
								403
							],
							"usedEvents": []
						}
					],
					"src": "115:9328:6"
				},
				"id": 6
			},
			"@openzeppelin/contracts/utils/Address.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Address.sol",
					"exportedSymbols": {
						"Address": [
							1050
						],
						"Errors": [
							1102
						]
					},
					"id": 1051,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 793,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "101:24:7"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Errors.sol",
							"file": "./Errors.sol",
							"id": 795,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1051,
							"sourceUnit": 1103,
							"src": "127:36:7",
							"symbolAliases": [
								{
									"foreign": {
										"id": 794,
										"name": "Errors",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1102,
										"src": "135:6:7",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "Address",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 796,
								"nodeType": "StructuredDocumentation",
								"src": "165:67:7",
								"text": " @dev Collection of functions related to the address type"
							},
							"fullyImplemented": true,
							"id": 1050,
							"linearizedBaseContracts": [
								1050
							],
							"name": "Address",
							"nameLocation": "241:7:7",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 797,
										"nodeType": "StructuredDocumentation",
										"src": "255:75:7",
										"text": " @dev There's no code at `target` (it is not a contract)."
									},
									"errorSelector": "9996b315",
									"id": 801,
									"name": "AddressEmptyCode",
									"nameLocation": "341:16:7",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 800,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 799,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "366:6:7",
												"nodeType": "VariableDeclaration",
												"scope": 801,
												"src": "358:14:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 798,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "358:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "357:16:7"
									},
									"src": "335:39:7"
								},
								{
									"body": {
										"id": 847,
										"nodeType": "Block",
										"src": "1361:278:7",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 815,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 811,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "1383:4:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_Address_$1050",
																		"typeString": "library Address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_Address_$1050",
																		"typeString": "library Address"
																	}
																],
																"id": 810,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "1375:7:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 809,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "1375:7:7",
																	"typeDescriptions": {}
																}
															},
															"id": 812,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1375:13:7",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 813,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1389:7:7",
														"memberName": "balance",
														"nodeType": "MemberAccess",
														"src": "1375:21:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"id": 814,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 806,
														"src": "1399:6:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1375:30:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 828,
												"nodeType": "IfStatement",
												"src": "1371:125:7",
												"trueBody": {
													"id": 827,
													"nodeType": "Block",
													"src": "1407:89:7",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"id": 821,
																					"name": "this",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 4294967268,
																					"src": "1463:4:7",
																					"typeDescriptions": {
																						"typeIdentifier": "t_contract$_Address_$1050",
																						"typeString": "library Address"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_contract$_Address_$1050",
																						"typeString": "library Address"
																					}
																				],
																				"id": 820,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "1455:7:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_address_$",
																					"typeString": "type(address)"
																				},
																				"typeName": {
																					"id": 819,
																					"name": "address",
																					"nodeType": "ElementaryTypeName",
																					"src": "1455:7:7",
																					"typeDescriptions": {}
																				}
																			},
																			"id": 822,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "1455:13:7",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"id": 823,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "1469:7:7",
																		"memberName": "balance",
																		"nodeType": "MemberAccess",
																		"src": "1455:21:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"id": 824,
																		"name": "amount",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 806,
																		"src": "1478:6:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"id": 816,
																		"name": "Errors",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1102,
																		"src": "1428:6:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_Errors_$1102_$",
																			"typeString": "type(library Errors)"
																		}
																	},
																	"id": 818,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "1435:19:7",
																	"memberName": "InsufficientBalance",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1090,
																	"src": "1428:26:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint256_$_t_uint256_$returns$__$",
																		"typeString": "function (uint256,uint256) pure"
																	}
																},
																"id": 825,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1428:57:7",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 826,
															"nodeType": "RevertStatement",
															"src": "1421:64:7"
														}
													]
												}
											},
											{
												"assignments": [
													830,
													null
												],
												"declarations": [
													{
														"constant": false,
														"id": 830,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "1512:7:7",
														"nodeType": "VariableDeclaration",
														"scope": 847,
														"src": "1507:12:7",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 829,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "1507:4:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													null
												],
												"id": 837,
												"initialValue": {
													"arguments": [
														{
															"hexValue": "",
															"id": 835,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1555:2:7",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																	"typeString": "literal_string \"\""
																}
															],
															"expression": {
																"id": 831,
																"name": "recipient",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 804,
																"src": "1525:9:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"id": 832,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1535:4:7",
															"memberName": "call",
															"nodeType": "MemberAccess",
															"src": "1525:14:7",
															"typeDescriptions": {
																"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
															}
														},
														"id": 834,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"id": 833,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 806,
																"src": "1547:6:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "1525:29:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 836,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1525:33:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1506:52:7"
											},
											{
												"condition": {
													"id": 839,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "1572:8:7",
													"subExpression": {
														"id": 838,
														"name": "success",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 830,
														"src": "1573:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 846,
												"nodeType": "IfStatement",
												"src": "1568:65:7",
												"trueBody": {
													"id": 845,
													"nodeType": "Block",
													"src": "1582:51:7",
													"statements": [
														{
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"expression": {
																		"id": 840,
																		"name": "Errors",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1102,
																		"src": "1603:6:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_Errors_$1102_$",
																			"typeString": "type(library Errors)"
																		}
																	},
																	"id": 842,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "1610:10:7",
																	"memberName": "FailedCall",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1093,
																	"src": "1603:17:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$__$",
																		"typeString": "function () pure"
																	}
																},
																"id": 843,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1603:19:7",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 844,
															"nodeType": "RevertStatement",
															"src": "1596:26:7"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 802,
										"nodeType": "StructuredDocumentation",
										"src": "380:905:7",
										"text": " @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n `recipient`, forwarding all available gas and reverting on errors.\n https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n of certain opcodes, possibly making contracts go over the 2300 gas limit\n imposed by `transfer`, making them unable to receive funds via\n `transfer`. {sendValue} removes this limitation.\n https://consensys.net/diligence/blog/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n IMPORTANT: because control is transferred to `recipient`, care must be\n taken to not create reentrancy vulnerabilities. Consider using\n {ReentrancyGuard} or the\n https://solidity.readthedocs.io/en/v0.8.20/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern]."
									},
									"id": 848,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sendValue",
									"nameLocation": "1299:9:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 807,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 804,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "1325:9:7",
												"nodeType": "VariableDeclaration",
												"scope": 848,
												"src": "1309:25:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address_payable",
													"typeString": "address payable"
												},
												"typeName": {
													"id": 803,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1309:15:7",
													"stateMutability": "payable",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 806,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1344:6:7",
												"nodeType": "VariableDeclaration",
												"scope": 848,
												"src": "1336:14:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 805,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1336:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1308:43:7"
									},
									"returnParameters": {
										"id": 808,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1361:0:7"
									},
									"scope": 1050,
									"src": "1290:349:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 864,
										"nodeType": "Block",
										"src": "2573:62:7",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 859,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 851,
															"src": "2612:6:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 860,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 853,
															"src": "2620:4:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "30",
															"id": 861,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2626:1:7",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															}
														],
														"id": 858,
														"name": "functionCallWithValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 915,
														"src": "2590:21:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,uint256) returns (bytes memory)"
														}
													},
													"id": 862,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2590:38:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 857,
												"id": 863,
												"nodeType": "Return",
												"src": "2583:45:7"
											}
										]
									},
									"documentation": {
										"id": 849,
										"nodeType": "StructuredDocumentation",
										"src": "1645:834:7",
										"text": " @dev Performs a Solidity function call using a low level `call`. A\n plain `call` is an unsafe replacement for a function call: use this\n function instead.\n If `target` reverts with a revert reason or custom error, it is bubbled\n up by this function (like regular Solidity function calls). However, if\n the call reverted with no returned reason, this function reverts with a\n {Errors.FailedCall} error.\n Returns the raw returned data. To convert to the expected return value,\n use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n Requirements:\n - `target` must be a contract.\n - calling `target` with `data` must not revert."
									},
									"id": 865,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCall",
									"nameLocation": "2493:12:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 854,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 851,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "2514:6:7",
												"nodeType": "VariableDeclaration",
												"scope": 865,
												"src": "2506:14:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 850,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2506:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 853,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "2535:4:7",
												"nodeType": "VariableDeclaration",
												"scope": 865,
												"src": "2522:17:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 852,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "2522:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2505:35:7"
									},
									"returnParameters": {
										"id": 857,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 856,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 865,
												"src": "2559:12:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 855,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "2559:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2558:14:7"
									},
									"scope": 1050,
									"src": "2484:151:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 914,
										"nodeType": "Block",
										"src": "3072:294:7",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 883,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 879,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "3094:4:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_Address_$1050",
																		"typeString": "library Address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_Address_$1050",
																		"typeString": "library Address"
																	}
																],
																"id": 878,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "3086:7:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 877,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "3086:7:7",
																	"typeDescriptions": {}
																}
															},
															"id": 880,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3086:13:7",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 881,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3100:7:7",
														"memberName": "balance",
														"nodeType": "MemberAccess",
														"src": "3086:21:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"id": 882,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 872,
														"src": "3110:5:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3086:29:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 896,
												"nodeType": "IfStatement",
												"src": "3082:123:7",
												"trueBody": {
													"id": 895,
													"nodeType": "Block",
													"src": "3117:88:7",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"id": 889,
																					"name": "this",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 4294967268,
																					"src": "3173:4:7",
																					"typeDescriptions": {
																						"typeIdentifier": "t_contract$_Address_$1050",
																						"typeString": "library Address"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_contract$_Address_$1050",
																						"typeString": "library Address"
																					}
																				],
																				"id": 888,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "3165:7:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_address_$",
																					"typeString": "type(address)"
																				},
																				"typeName": {
																					"id": 887,
																					"name": "address",
																					"nodeType": "ElementaryTypeName",
																					"src": "3165:7:7",
																					"typeDescriptions": {}
																				}
																			},
																			"id": 890,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "3165:13:7",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"id": 891,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "3179:7:7",
																		"memberName": "balance",
																		"nodeType": "MemberAccess",
																		"src": "3165:21:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"id": 892,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 872,
																		"src": "3188:5:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"id": 884,
																		"name": "Errors",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1102,
																		"src": "3138:6:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_Errors_$1102_$",
																			"typeString": "type(library Errors)"
																		}
																	},
																	"id": 886,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "3145:19:7",
																	"memberName": "InsufficientBalance",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1090,
																	"src": "3138:26:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint256_$_t_uint256_$returns$__$",
																		"typeString": "function (uint256,uint256) pure"
																	}
																},
																"id": 893,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3138:56:7",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 894,
															"nodeType": "RevertStatement",
															"src": "3131:63:7"
														}
													]
												}
											},
											{
												"assignments": [
													898,
													900
												],
												"declarations": [
													{
														"constant": false,
														"id": 898,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "3220:7:7",
														"nodeType": "VariableDeclaration",
														"scope": 914,
														"src": "3215:12:7",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 897,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "3215:4:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 900,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "3242:10:7",
														"nodeType": "VariableDeclaration",
														"scope": 914,
														"src": "3229:23:7",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 899,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "3229:5:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 907,
												"initialValue": {
													"arguments": [
														{
															"id": 905,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 870,
															"src": "3282:4:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															],
															"expression": {
																"id": 901,
																"name": "target",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 868,
																"src": "3256:6:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 902,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3263:4:7",
															"memberName": "call",
															"nodeType": "MemberAccess",
															"src": "3256:11:7",
															"typeDescriptions": {
																"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
															}
														},
														"id": 904,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"id": 903,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 872,
																"src": "3275:5:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "3256:25:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 906,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3256:31:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3214:73:7"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 909,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 868,
															"src": "3331:6:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 910,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 898,
															"src": "3339:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 911,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 900,
															"src": "3348:10:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 908,
														"name": "verifyCallResultFromTarget",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1007,
														"src": "3304:26:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_bool_$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bool,bytes memory) view returns (bytes memory)"
														}
													},
													"id": 912,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3304:55:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 876,
												"id": 913,
												"nodeType": "Return",
												"src": "3297:62:7"
											}
										]
									},
									"documentation": {
										"id": 866,
										"nodeType": "StructuredDocumentation",
										"src": "2641:313:7",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but also transferring `value` wei to `target`.\n Requirements:\n - the calling contract must have an ETH balance of at least `value`.\n - the called Solidity function must be `payable`."
									},
									"id": 915,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCallWithValue",
									"nameLocation": "2968:21:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 873,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 868,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "2998:6:7",
												"nodeType": "VariableDeclaration",
												"scope": 915,
												"src": "2990:14:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 867,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2990:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 870,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "3019:4:7",
												"nodeType": "VariableDeclaration",
												"scope": 915,
												"src": "3006:17:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 869,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3006:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 872,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "3033:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 915,
												"src": "3025:13:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 871,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3025:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2989:50:7"
									},
									"returnParameters": {
										"id": 876,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 875,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 915,
												"src": "3058:12:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 874,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3058:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3057:14:7"
									},
									"scope": 1050,
									"src": "2959:407:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 940,
										"nodeType": "Block",
										"src": "3605:154:7",
										"statements": [
											{
												"assignments": [
													926,
													928
												],
												"declarations": [
													{
														"constant": false,
														"id": 926,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "3621:7:7",
														"nodeType": "VariableDeclaration",
														"scope": 940,
														"src": "3616:12:7",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 925,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "3616:4:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 928,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "3643:10:7",
														"nodeType": "VariableDeclaration",
														"scope": 940,
														"src": "3630:23:7",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 927,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "3630:5:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 933,
												"initialValue": {
													"arguments": [
														{
															"id": 931,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 920,
															"src": "3675:4:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"id": 929,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 918,
															"src": "3657:6:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 930,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3664:10:7",
														"memberName": "staticcall",
														"nodeType": "MemberAccess",
														"src": "3657:17:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barestaticcall_view$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes memory) view returns (bool,bytes memory)"
														}
													},
													"id": 932,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3657:23:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3615:65:7"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 935,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 918,
															"src": "3724:6:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 936,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 926,
															"src": "3732:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 937,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 928,
															"src": "3741:10:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 934,
														"name": "verifyCallResultFromTarget",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1007,
														"src": "3697:26:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_bool_$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bool,bytes memory) view returns (bytes memory)"
														}
													},
													"id": 938,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3697:55:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 924,
												"id": 939,
												"nodeType": "Return",
												"src": "3690:62:7"
											}
										]
									},
									"documentation": {
										"id": 916,
										"nodeType": "StructuredDocumentation",
										"src": "3372:128:7",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a static call."
									},
									"id": 941,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionStaticCall",
									"nameLocation": "3514:18:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 921,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 918,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "3541:6:7",
												"nodeType": "VariableDeclaration",
												"scope": 941,
												"src": "3533:14:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 917,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3533:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 920,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "3562:4:7",
												"nodeType": "VariableDeclaration",
												"scope": 941,
												"src": "3549:17:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 919,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3549:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3532:35:7"
									},
									"returnParameters": {
										"id": 924,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 923,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 941,
												"src": "3591:12:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 922,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3591:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3590:14:7"
									},
									"scope": 1050,
									"src": "3505:254:7",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 966,
										"nodeType": "Block",
										"src": "3997:156:7",
										"statements": [
											{
												"assignments": [
													952,
													954
												],
												"declarations": [
													{
														"constant": false,
														"id": 952,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "4013:7:7",
														"nodeType": "VariableDeclaration",
														"scope": 966,
														"src": "4008:12:7",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 951,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "4008:4:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 954,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "4035:10:7",
														"nodeType": "VariableDeclaration",
														"scope": 966,
														"src": "4022:23:7",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 953,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "4022:5:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 959,
												"initialValue": {
													"arguments": [
														{
															"id": 957,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 946,
															"src": "4069:4:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"id": 955,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 944,
															"src": "4049:6:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 956,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "4056:12:7",
														"memberName": "delegatecall",
														"nodeType": "MemberAccess",
														"src": "4049:19:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_baredelegatecall_nonpayable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes memory) returns (bool,bytes memory)"
														}
													},
													"id": 958,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4049:25:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4007:67:7"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 961,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 944,
															"src": "4118:6:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 962,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 952,
															"src": "4126:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 963,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 954,
															"src": "4135:10:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 960,
														"name": "verifyCallResultFromTarget",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1007,
														"src": "4091:26:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_bool_$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bool,bytes memory) view returns (bytes memory)"
														}
													},
													"id": 964,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4091:55:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 950,
												"id": 965,
												"nodeType": "Return",
												"src": "4084:62:7"
											}
										]
									},
									"documentation": {
										"id": 942,
										"nodeType": "StructuredDocumentation",
										"src": "3765:130:7",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a delegate call."
									},
									"id": 967,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionDelegateCall",
									"nameLocation": "3909:20:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 947,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 944,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "3938:6:7",
												"nodeType": "VariableDeclaration",
												"scope": 967,
												"src": "3930:14:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 943,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3930:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 946,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "3959:4:7",
												"nodeType": "VariableDeclaration",
												"scope": 967,
												"src": "3946:17:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 945,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3946:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3929:35:7"
									},
									"returnParameters": {
										"id": 950,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 949,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 967,
												"src": "3983:12:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 948,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3983:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3982:14:7"
									},
									"scope": 1050,
									"src": "3900:253:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1006,
										"nodeType": "Block",
										"src": "4579:424:7",
										"statements": [
											{
												"condition": {
													"id": 980,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "4593:8:7",
													"subExpression": {
														"id": 979,
														"name": "success",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 972,
														"src": "4594:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 1004,
													"nodeType": "Block",
													"src": "4653:344:7",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"id": 995,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 989,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"expression": {
																			"id": 986,
																			"name": "returndata",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 974,
																			"src": "4841:10:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes_memory_ptr",
																				"typeString": "bytes memory"
																			}
																		},
																		"id": 987,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "4852:6:7",
																		"memberName": "length",
																		"nodeType": "MemberAccess",
																		"src": "4841:17:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "==",
																	"rightExpression": {
																		"hexValue": "30",
																		"id": 988,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "4862:1:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	"src": "4841:22:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "&&",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 994,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"expression": {
																			"expression": {
																				"id": 990,
																				"name": "target",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 970,
																				"src": "4867:6:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"id": 991,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "4874:4:7",
																			"memberName": "code",
																			"nodeType": "MemberAccess",
																			"src": "4867:11:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes_memory_ptr",
																				"typeString": "bytes memory"
																			}
																		},
																		"id": 992,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "4879:6:7",
																		"memberName": "length",
																		"nodeType": "MemberAccess",
																		"src": "4867:18:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "==",
																	"rightExpression": {
																		"hexValue": "30",
																		"id": 993,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "4889:1:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	"src": "4867:23:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"src": "4841:49:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 1001,
															"nodeType": "IfStatement",
															"src": "4837:119:7",
															"trueBody": {
																"id": 1000,
																"nodeType": "Block",
																"src": "4892:64:7",
																"statements": [
																	{
																		"errorCall": {
																			"arguments": [
																				{
																					"id": 997,
																					"name": "target",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 970,
																					"src": "4934:6:7",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				],
																				"id": 996,
																				"name": "AddressEmptyCode",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 801,
																				"src": "4917:16:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																					"typeString": "function (address) pure"
																				}
																			},
																			"id": 998,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "4917:24:7",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 999,
																		"nodeType": "RevertStatement",
																		"src": "4910:31:7"
																	}
																]
															}
														},
														{
															"expression": {
																"id": 1002,
																"name": "returndata",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 974,
																"src": "4976:10:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"functionReturnParameters": 978,
															"id": 1003,
															"nodeType": "Return",
															"src": "4969:17:7"
														}
													]
												},
												"id": 1005,
												"nodeType": "IfStatement",
												"src": "4589:408:7",
												"trueBody": {
													"id": 985,
													"nodeType": "Block",
													"src": "4603:44:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 982,
																		"name": "returndata",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 974,
																		"src": "4625:10:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	],
																	"id": 981,
																	"name": "_revert",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1049,
																	"src": "4617:7:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_bytes_memory_ptr_$returns$__$",
																		"typeString": "function (bytes memory) pure"
																	}
																},
																"id": 983,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4617:19:7",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 984,
															"nodeType": "ExpressionStatement",
															"src": "4617:19:7"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 968,
										"nodeType": "StructuredDocumentation",
										"src": "4159:257:7",
										"text": " @dev Tool to verify that a low level call to smart-contract was successful, and reverts if the target\n was not a contract or bubbling up the revert reason (falling back to {Errors.FailedCall}) in case\n of an unsuccessful call."
									},
									"id": 1007,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "verifyCallResultFromTarget",
									"nameLocation": "4430:26:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 975,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 970,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "4474:6:7",
												"nodeType": "VariableDeclaration",
												"scope": 1007,
												"src": "4466:14:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 969,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4466:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 972,
												"mutability": "mutable",
												"name": "success",
												"nameLocation": "4495:7:7",
												"nodeType": "VariableDeclaration",
												"scope": 1007,
												"src": "4490:12:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 971,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4490:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 974,
												"mutability": "mutable",
												"name": "returndata",
												"nameLocation": "4525:10:7",
												"nodeType": "VariableDeclaration",
												"scope": 1007,
												"src": "4512:23:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 973,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4512:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4456:85:7"
									},
									"returnParameters": {
										"id": 978,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 977,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1007,
												"src": "4565:12:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 976,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4565:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4564:14:7"
									},
									"scope": 1050,
									"src": "4421:582:7",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1028,
										"nodeType": "Block",
										"src": "5307:122:7",
										"statements": [
											{
												"condition": {
													"id": 1018,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "5321:8:7",
													"subExpression": {
														"id": 1017,
														"name": "success",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1010,
														"src": "5322:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 1026,
													"nodeType": "Block",
													"src": "5381:42:7",
													"statements": [
														{
															"expression": {
																"id": 1024,
																"name": "returndata",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1012,
																"src": "5402:10:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"functionReturnParameters": 1016,
															"id": 1025,
															"nodeType": "Return",
															"src": "5395:17:7"
														}
													]
												},
												"id": 1027,
												"nodeType": "IfStatement",
												"src": "5317:106:7",
												"trueBody": {
													"id": 1023,
													"nodeType": "Block",
													"src": "5331:44:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 1020,
																		"name": "returndata",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1012,
																		"src": "5353:10:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	],
																	"id": 1019,
																	"name": "_revert",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1049,
																	"src": "5345:7:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_bytes_memory_ptr_$returns$__$",
																		"typeString": "function (bytes memory) pure"
																	}
																},
																"id": 1021,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5345:19:7",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1022,
															"nodeType": "ExpressionStatement",
															"src": "5345:19:7"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1008,
										"nodeType": "StructuredDocumentation",
										"src": "5009:191:7",
										"text": " @dev Tool to verify that a low level call was successful, and reverts if it wasn't, either by bubbling the\n revert reason or with a default {Errors.FailedCall} error."
									},
									"id": 1029,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "verifyCallResult",
									"nameLocation": "5214:16:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1013,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1010,
												"mutability": "mutable",
												"name": "success",
												"nameLocation": "5236:7:7",
												"nodeType": "VariableDeclaration",
												"scope": 1029,
												"src": "5231:12:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1009,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "5231:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1012,
												"mutability": "mutable",
												"name": "returndata",
												"nameLocation": "5258:10:7",
												"nodeType": "VariableDeclaration",
												"scope": 1029,
												"src": "5245:23:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1011,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5245:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5230:39:7"
									},
									"returnParameters": {
										"id": 1016,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1015,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1029,
												"src": "5293:12:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1014,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5293:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5292:14:7"
									},
									"scope": 1050,
									"src": "5205:224:7",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1048,
										"nodeType": "Block",
										"src": "5598:432:7",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1038,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 1035,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1032,
															"src": "5674:10:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 1036,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "5685:6:7",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "5674:17:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 1037,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "5694:1:7",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "5674:21:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 1046,
													"nodeType": "Block",
													"src": "5973:51:7",
													"statements": [
														{
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"expression": {
																		"id": 1041,
																		"name": "Errors",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1102,
																		"src": "5994:6:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_Errors_$1102_$",
																			"typeString": "type(library Errors)"
																		}
																	},
																	"id": 1043,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "6001:10:7",
																	"memberName": "FailedCall",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1093,
																	"src": "5994:17:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$__$",
																		"typeString": "function () pure"
																	}
																},
																"id": 1044,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5994:19:7",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1045,
															"nodeType": "RevertStatement",
															"src": "5987:26:7"
														}
													]
												},
												"id": 1047,
												"nodeType": "IfStatement",
												"src": "5670:354:7",
												"trueBody": {
													"id": 1040,
													"nodeType": "Block",
													"src": "5697:270:7",
													"statements": [
														{
															"AST": {
																"nodeType": "YulBlock",
																"src": "5824:133:7",
																"statements": [
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "5842:40:7",
																		"value": {
																			"arguments": [
																				{
																					"name": "returndata",
																					"nodeType": "YulIdentifier",
																					"src": "5871:10:7"
																				}
																			],
																			"functionName": {
																				"name": "mload",
																				"nodeType": "YulIdentifier",
																				"src": "5865:5:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5865:17:7"
																		},
																		"variables": [
																			{
																				"name": "returndata_size",
																				"nodeType": "YulTypedName",
																				"src": "5846:15:7",
																				"type": ""
																			}
																		]
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "5910:2:7",
																							"type": "",
																							"value": "32"
																						},
																						{
																							"name": "returndata",
																							"nodeType": "YulIdentifier",
																							"src": "5914:10:7"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "5906:3:7"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "5906:19:7"
																				},
																				{
																					"name": "returndata_size",
																					"nodeType": "YulIdentifier",
																					"src": "5927:15:7"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "5899:6:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5899:44:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5899:44:7"
																	}
																]
															},
															"evmVersion": "shanghai",
															"externalReferences": [
																{
																	"declaration": 1032,
																	"isOffset": false,
																	"isSlot": false,
																	"src": "5871:10:7",
																	"valueSize": 1
																},
																{
																	"declaration": 1032,
																	"isOffset": false,
																	"isSlot": false,
																	"src": "5914:10:7",
																	"valueSize": 1
																}
															],
															"flags": [
																"memory-safe"
															],
															"id": 1039,
															"nodeType": "InlineAssembly",
															"src": "5799:158:7"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1030,
										"nodeType": "StructuredDocumentation",
										"src": "5435:103:7",
										"text": " @dev Reverts with returndata if present. Otherwise reverts with {Errors.FailedCall}."
									},
									"id": 1049,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_revert",
									"nameLocation": "5552:7:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1033,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1032,
												"mutability": "mutable",
												"name": "returndata",
												"nameLocation": "5573:10:7",
												"nodeType": "VariableDeclaration",
												"scope": 1049,
												"src": "5560:23:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1031,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5560:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5559:25:7"
									},
									"returnParameters": {
										"id": 1034,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5598:0:7"
									},
									"scope": 1050,
									"src": "5543:487:7",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "private"
								}
							],
							"scope": 1051,
							"src": "233:5799:7",
							"usedErrors": [
								801
							],
							"usedEvents": []
						}
					],
					"src": "101:5932:7"
				},
				"id": 7
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
					"exportedSymbols": {
						"Context": [
							1080
						]
					},
					"id": 1081,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1052,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "101:24:8"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "Context",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 1053,
								"nodeType": "StructuredDocumentation",
								"src": "127:496:8",
								"text": " @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."
							},
							"fullyImplemented": true,
							"id": 1080,
							"linearizedBaseContracts": [
								1080
							],
							"name": "Context",
							"nameLocation": "642:7:8",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 1061,
										"nodeType": "Block",
										"src": "718:34:8",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 1058,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "735:3:8",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 1059,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "739:6:8",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "735:10:8",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 1057,
												"id": 1060,
												"nodeType": "Return",
												"src": "728:17:8"
											}
										]
									},
									"id": 1062,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nameLocation": "665:10:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1054,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "675:2:8"
									},
									"returnParameters": {
										"id": 1057,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1056,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1062,
												"src": "709:7:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1055,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "709:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "708:9:8"
									},
									"scope": 1080,
									"src": "656:96:8",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1070,
										"nodeType": "Block",
										"src": "825:32:8",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 1067,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "842:3:8",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 1068,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "846:4:8",
													"memberName": "data",
													"nodeType": "MemberAccess",
													"src": "842:8:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 1066,
												"id": 1069,
												"nodeType": "Return",
												"src": "835:15:8"
											}
										]
									},
									"id": 1071,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nameLocation": "767:8:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1063,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "775:2:8"
									},
									"returnParameters": {
										"id": 1066,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1065,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1071,
												"src": "809:14:8",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1064,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "809:5:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "808:16:8"
									},
									"scope": 1080,
									"src": "758:99:8",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1078,
										"nodeType": "Block",
										"src": "935:25:8",
										"statements": [
											{
												"expression": {
													"hexValue": "30",
													"id": 1076,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "952:1:8",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"functionReturnParameters": 1075,
												"id": 1077,
												"nodeType": "Return",
												"src": "945:8:8"
											}
										]
									},
									"id": 1079,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_contextSuffixLength",
									"nameLocation": "872:20:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1072,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "892:2:8"
									},
									"returnParameters": {
										"id": 1075,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1074,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1079,
												"src": "926:7:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1073,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "926:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "925:9:8"
									},
									"scope": 1080,
									"src": "863:97:8",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 1081,
							"src": "624:338:8",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "101:862:8"
				},
				"id": 8
			},
			"@openzeppelin/contracts/utils/Errors.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Errors.sol",
					"exportedSymbols": {
						"Errors": [
							1102
						]
					},
					"id": 1103,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1082,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "100:24:9"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "Errors",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 1083,
								"nodeType": "StructuredDocumentation",
								"src": "126:284:9",
								"text": " @dev Collection of common custom errors used in multiple contracts\n IMPORTANT: Backwards compatibility is not guaranteed in future versions of the library.\n It is recommended to avoid relying on the error API for critical functionality.\n _Available since v5.1._"
							},
							"fullyImplemented": true,
							"id": 1102,
							"linearizedBaseContracts": [
								1102
							],
							"name": "Errors",
							"nameLocation": "419:6:9",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 1084,
										"nodeType": "StructuredDocumentation",
										"src": "432:94:9",
										"text": " @dev The ETH balance of the account is not enough to perform the operation."
									},
									"errorSelector": "cf479181",
									"id": 1090,
									"name": "InsufficientBalance",
									"nameLocation": "537:19:9",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1089,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1086,
												"mutability": "mutable",
												"name": "balance",
												"nameLocation": "565:7:9",
												"nodeType": "VariableDeclaration",
												"scope": 1090,
												"src": "557:15:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1085,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "557:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1088,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "582:6:9",
												"nodeType": "VariableDeclaration",
												"scope": 1090,
												"src": "574:14:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1087,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "574:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "556:33:9"
									},
									"src": "531:59:9"
								},
								{
									"documentation": {
										"id": 1091,
										"nodeType": "StructuredDocumentation",
										"src": "596:89:9",
										"text": " @dev A call to an address target failed. The target may have reverted."
									},
									"errorSelector": "d6bda275",
									"id": 1093,
									"name": "FailedCall",
									"nameLocation": "696:10:9",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1092,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "706:2:9"
									},
									"src": "690:19:9"
								},
								{
									"documentation": {
										"id": 1094,
										"nodeType": "StructuredDocumentation",
										"src": "715:46:9",
										"text": " @dev The deployment failed."
									},
									"errorSelector": "b06ebf3d",
									"id": 1096,
									"name": "FailedDeployment",
									"nameLocation": "772:16:9",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1095,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "788:2:9"
									},
									"src": "766:25:9"
								},
								{
									"documentation": {
										"id": 1097,
										"nodeType": "StructuredDocumentation",
										"src": "797:58:9",
										"text": " @dev A necessary precompile is missing."
									},
									"errorSelector": "42b01bce",
									"id": 1101,
									"name": "MissingPrecompile",
									"nameLocation": "866:17:9",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1100,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1099,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1101,
												"src": "884:7:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1098,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "884:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "883:9:9"
									},
									"src": "860:33:9"
								}
							],
							"scope": 1103,
							"src": "411:484:9",
							"usedErrors": [
								1090,
								1093,
								1096,
								1101
							],
							"usedEvents": []
						}
					],
					"src": "100:796:9"
				},
				"id": 9
			},
			"@openzeppelin/contracts/utils/introspection/IERC165.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/introspection/IERC165.sol",
					"exportedSymbols": {
						"IERC165": [
							1114
						]
					},
					"id": 1115,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1104,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "115:24:10"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC165",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1105,
								"nodeType": "StructuredDocumentation",
								"src": "141:280:10",
								"text": " @dev Interface of the ERC-165 standard, as defined in the\n https://eips.ethereum.org/EIPS/eip-165[ERC].\n Implementers can declare support of contract interfaces, which can then be\n queried by others ({ERC165Checker}).\n For an implementation, see {ERC165}."
							},
							"fullyImplemented": false,
							"id": 1114,
							"linearizedBaseContracts": [
								1114
							],
							"name": "IERC165",
							"nameLocation": "432:7:10",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 1106,
										"nodeType": "StructuredDocumentation",
										"src": "446:340:10",
										"text": " @dev Returns true if this contract implements the interface defined by\n `interfaceId`. See the corresponding\n https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section]\n to learn more about how these ids are created.\n This function call must use less than 30 000 gas."
									},
									"functionSelector": "01ffc9a7",
									"id": 1113,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "800:17:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1109,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1108,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "825:11:10",
												"nodeType": "VariableDeclaration",
												"scope": 1113,
												"src": "818:18:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 1107,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "818:6:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "817:20:10"
									},
									"returnParameters": {
										"id": 1112,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1111,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1113,
												"src": "861:4:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1110,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "861:4:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "860:6:10"
									},
									"scope": 1114,
									"src": "791:76:10",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1115,
							"src": "422:447:10",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "115:755:10"
				},
				"id": 10
			},
			"ARY/HardStake.sol": {
				"ast": {
					"absolutePath": "ARY/HardStake.sol",
					"exportedSymbols": {
						"Address": [
							1050
						],
						"Context": [
							1080
						],
						"HardStake": [
							1658
						],
						"IDEXFactory": [
							1681
						],
						"IDEXRouter": [
							1785
						],
						"IERC1363": [
							229
						],
						"IERC20": [
							380
						],
						"IPair": [
							1701
						],
						"IWCRO": [
							1796
						],
						"Ownable": [
							147
						],
						"ReentrancyGuard": [
							302
						],
						"SafeERC20": [
							791
						],
						"SwapPro": [
							2711
						],
						"Volume": [
							1801
						]
					},
					"id": 1659,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1116,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "33:23:11"
						},
						{
							"absolutePath": "ARY/SwapPro.sol",
							"file": "./SwapPro.sol",
							"id": 1117,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1659,
							"sourceUnit": 2712,
							"src": "60:23:11",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
							"file": "@openzeppelin/contracts/access/Ownable.sol",
							"id": 1118,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1659,
							"sourceUnit": 148,
							"src": "114:52:11",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/security/ReentrancyGuard.sol",
							"file": "@openzeppelin/contracts/security/ReentrancyGuard.sol",
							"id": 1119,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1659,
							"sourceUnit": 303,
							"src": "168:62:11",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
							"file": "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
							"id": 1120,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1659,
							"sourceUnit": 792,
							"src": "232:65:11",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 1121,
										"name": "Ownable",
										"nameLocations": [
											"323:7:11"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 147,
										"src": "323:7:11"
									},
									"id": 1122,
									"nodeType": "InheritanceSpecifier",
									"src": "323:7:11"
								},
								{
									"baseName": {
										"id": 1123,
										"name": "ReentrancyGuard",
										"nameLocations": [
											"332:15:11"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 302,
										"src": "332:15:11"
									},
									"id": 1124,
									"nodeType": "InheritanceSpecifier",
									"src": "332:15:11"
								}
							],
							"canonicalName": "HardStake",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 1658,
							"linearizedBaseContracts": [
								1658,
								302,
								147,
								1080
							],
							"name": "HardStake",
							"nameLocation": "310:9:11",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"global": false,
									"id": 1128,
									"libraryName": {
										"id": 1125,
										"name": "SafeERC20",
										"nameLocations": [
											"361:9:11"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 791,
										"src": "361:9:11"
									},
									"nodeType": "UsingForDirective",
									"src": "355:27:11",
									"typeName": {
										"id": 1127,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 1126,
											"name": "IERC20",
											"nameLocations": [
												"375:6:11"
											],
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 380,
											"src": "375:6:11"
										},
										"referencedDeclaration": 380,
										"src": "375:6:11",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IERC20_$380",
											"typeString": "contract IERC20"
										}
									}
								},
								{
									"constant": false,
									"functionSelector": "8ea83031",
									"id": 1131,
									"mutability": "mutable",
									"name": "swapContract",
									"nameLocation": "445:12:11",
									"nodeType": "VariableDeclaration",
									"scope": 1658,
									"src": "430:27:11",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_contract$_SwapPro_$2711",
										"typeString": "contract SwapPro"
									},
									"typeName": {
										"id": 1130,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 1129,
											"name": "SwapPro",
											"nameLocations": [
												"430:7:11"
											],
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 2711,
											"src": "430:7:11"
										},
										"referencedDeclaration": 2711,
										"src": "430:7:11",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_SwapPro_$2711",
											"typeString": "contract SwapPro"
										}
									},
									"visibility": "public"
								},
								{
									"canonicalName": "HardStake.UserInfo",
									"id": 1136,
									"members": [
										{
											"constant": false,
											"id": 1133,
											"mutability": "mutable",
											"name": "amount",
											"nameLocation": "528:6:11",
											"nodeType": "VariableDeclaration",
											"scope": 1136,
											"src": "520:14:11",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 1132,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "520:7:11",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1135,
											"mutability": "mutable",
											"name": "rewardDebt",
											"nameLocation": "597:10:11",
											"nodeType": "VariableDeclaration",
											"scope": 1136,
											"src": "589:18:11",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 1134,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "589:7:11",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "UserInfo",
									"nameLocation": "500:8:11",
									"nodeType": "StructDefinition",
									"scope": 1658,
									"src": "493:138:11",
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "72f702f3",
									"id": 1139,
									"mutability": "immutable",
									"name": "stakingToken",
									"nameLocation": "663:12:11",
									"nodeType": "VariableDeclaration",
									"scope": 1658,
									"src": "639:36:11",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_contract$_IERC20_$380",
										"typeString": "contract IERC20"
									},
									"typeName": {
										"id": 1138,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 1137,
											"name": "IERC20",
											"nameLocations": [
												"639:6:11"
											],
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 380,
											"src": "639:6:11"
										},
										"referencedDeclaration": 380,
										"src": "639:6:11",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IERC20_$380",
											"typeString": "contract IERC20"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "f7c618c1",
									"id": 1142,
									"mutability": "immutable",
									"name": "rewardToken",
									"nameLocation": "706:11:11",
									"nodeType": "VariableDeclaration",
									"scope": 1658,
									"src": "682:35:11",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_contract$_IERC20_$380",
										"typeString": "contract IERC20"
									},
									"typeName": {
										"id": 1141,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 1140,
											"name": "IERC20",
											"nameLocations": [
												"682:6:11"
											],
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 380,
											"src": "682:6:11"
										},
										"referencedDeclaration": 380,
										"src": "682:6:11",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IERC20_$380",
											"typeString": "contract IERC20"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "817b1cd2",
									"id": 1144,
									"mutability": "mutable",
									"name": "totalStaked",
									"nameLocation": "769:11:11",
									"nodeType": "VariableDeclaration",
									"scope": 1658,
									"src": "754:26:11",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1143,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "754:7:11",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "1959a002",
									"id": 1149,
									"mutability": "mutable",
									"name": "userInfo",
									"nameLocation": "872:8:11",
									"nodeType": "VariableDeclaration",
									"scope": 1658,
									"src": "835:45:11",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_struct$_UserInfo_$1136_storage_$",
										"typeString": "mapping(address => struct HardStake.UserInfo)"
									},
									"typeName": {
										"id": 1148,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 1145,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "844:7:11",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "835:29:11",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_struct$_UserInfo_$1136_storage_$",
											"typeString": "mapping(address => struct HardStake.UserInfo)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 1147,
											"nodeType": "UserDefinedTypeName",
											"pathNode": {
												"id": 1146,
												"name": "UserInfo",
												"nameLocations": [
													"855:8:11"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1136,
												"src": "855:8:11"
											},
											"referencedDeclaration": 1136,
											"src": "855:8:11",
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_UserInfo_$1136_storage_ptr",
												"typeString": "struct HardStake.UserInfo"
											}
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "2f3c9a4f",
									"id": 1151,
									"mutability": "mutable",
									"name": "accTokensPerShare",
									"nameLocation": "955:17:11",
									"nodeType": "VariableDeclaration",
									"scope": 1658,
									"src": "940:32:11",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1150,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "940:7:11",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "0e15561a",
									"id": 1153,
									"mutability": "mutable",
									"name": "totalRewards",
									"nameLocation": "1030:12:11",
									"nodeType": "VariableDeclaration",
									"scope": 1658,
									"src": "1015:27:11",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1152,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1015:7:11",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "644f362d",
									"id": 1155,
									"mutability": "mutable",
									"name": "minimumVolumeRequired",
									"nameLocation": "1113:21:11",
									"nodeType": "VariableDeclaration",
									"scope": 1658,
									"src": "1098:36:11",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1154,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1098:7:11",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"anonymous": false,
									"eventSelector": "e1fffcc4923d04b559f4d29a8bfc6cda04eb5b0d3c460751c2402c5c5cc9109c",
									"id": 1161,
									"name": "Deposit",
									"nameLocation": "1176:7:11",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1160,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1157,
												"indexed": true,
												"mutability": "mutable",
												"name": "user",
												"nameLocation": "1200:4:11",
												"nodeType": "VariableDeclaration",
												"scope": 1161,
												"src": "1184:20:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1156,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1184:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1159,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1214:6:11",
												"nodeType": "VariableDeclaration",
												"scope": 1161,
												"src": "1206:14:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1158,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1206:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1183:38:11"
									},
									"src": "1170:52:11"
								},
								{
									"anonymous": false,
									"eventSelector": "884edad9ce6fa2440d8a54cc123490eb96d2768479d49ff9c7366125a9424364",
									"id": 1167,
									"name": "Withdraw",
									"nameLocation": "1234:8:11",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1166,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1163,
												"indexed": true,
												"mutability": "mutable",
												"name": "user",
												"nameLocation": "1259:4:11",
												"nodeType": "VariableDeclaration",
												"scope": 1167,
												"src": "1243:20:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1162,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1243:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1165,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1273:6:11",
												"nodeType": "VariableDeclaration",
												"scope": 1167,
												"src": "1265:14:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1164,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1265:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1242:38:11"
									},
									"src": "1228:53:11"
								},
								{
									"anonymous": false,
									"eventSelector": "47cee97cb7acd717b3c0aa1435d004cd5b3c8c57d70dbceb4e4458bbd60e39d4",
									"id": 1173,
									"name": "Claim",
									"nameLocation": "1293:5:11",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1172,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1169,
												"indexed": true,
												"mutability": "mutable",
												"name": "user",
												"nameLocation": "1315:4:11",
												"nodeType": "VariableDeclaration",
												"scope": 1173,
												"src": "1299:20:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1168,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1299:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1171,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1329:6:11",
												"nodeType": "VariableDeclaration",
												"scope": 1173,
												"src": "1321:14:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1170,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1321:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1298:38:11"
									},
									"src": "1287:50:11"
								},
								{
									"anonymous": false,
									"eventSelector": "de88a922e0d3b88b24e9623efeb464919c6bf9f66857a65e2bfcf2ce87a9433d",
									"id": 1177,
									"name": "RewardAdded",
									"nameLocation": "1349:11:11",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1176,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1175,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1369:6:11",
												"nodeType": "VariableDeclaration",
												"scope": 1177,
												"src": "1361:14:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1174,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1361:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1360:16:11"
									},
									"src": "1343:34:11"
								},
								{
									"body": {
										"id": 1212,
										"nodeType": "Block",
										"src": "1537:295:11",
										"statements": [
											{
												"expression": {
													"id": 1194,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1190,
														"name": "stakingToken",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1139,
														"src": "1595:12:11",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IERC20_$380",
															"typeString": "contract IERC20"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 1192,
																"name": "_stakingToken",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1179,
																"src": "1617:13:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 1191,
															"name": "IERC20",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 380,
															"src": "1610:6:11",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_IERC20_$380_$",
																"typeString": "type(contract IERC20)"
															}
														},
														"id": 1193,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1610:21:11",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IERC20_$380",
															"typeString": "contract IERC20"
														}
													},
													"src": "1595:36:11",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$380",
														"typeString": "contract IERC20"
													}
												},
												"id": 1195,
												"nodeType": "ExpressionStatement",
												"src": "1595:36:11"
											},
											{
												"expression": {
													"id": 1200,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1196,
														"name": "rewardToken",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1142,
														"src": "1642:11:11",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IERC20_$380",
															"typeString": "contract IERC20"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 1198,
																"name": "_stakingToken",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1179,
																"src": "1663:13:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 1197,
															"name": "IERC20",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 380,
															"src": "1656:6:11",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_IERC20_$380_$",
																"typeString": "type(contract IERC20)"
															}
														},
														"id": 1199,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1656:21:11",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IERC20_$380",
															"typeString": "contract IERC20"
														}
													},
													"src": "1642:35:11",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$380",
														"typeString": "contract IERC20"
													}
												},
												"id": 1201,
												"nodeType": "ExpressionStatement",
												"src": "1642:35:11"
											},
											{
												"expression": {
													"id": 1206,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1202,
														"name": "swapContract",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1131,
														"src": "1730:12:11",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_SwapPro_$2711",
															"typeString": "contract SwapPro"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 1204,
																"name": "_swapContract",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1181,
																"src": "1753:13:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															],
															"id": 1203,
															"name": "SwapPro",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2711,
															"src": "1745:7:11",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_SwapPro_$2711_$",
																"typeString": "type(contract SwapPro)"
															}
														},
														"id": 1205,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1745:22:11",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_SwapPro_$2711",
															"typeString": "contract SwapPro"
														}
													},
													"src": "1730:37:11",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_SwapPro_$2711",
														"typeString": "contract SwapPro"
													}
												},
												"id": 1207,
												"nodeType": "ExpressionStatement",
												"src": "1730:37:11"
											},
											{
												"expression": {
													"id": 1210,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1208,
														"name": "minimumVolumeRequired",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1155,
														"src": "1778:21:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1209,
														"name": "_minimumVolumeRequired",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1183,
														"src": "1802:22:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1778:46:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1211,
												"nodeType": "ExpressionStatement",
												"src": "1778:46:11"
											}
										]
									},
									"id": 1213,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [
										{
											"arguments": [
												{
													"expression": {
														"id": 1186,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "1525:3:11",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 1187,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "1529:6:11",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "1525:10:11",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												}
											],
											"id": 1188,
											"kind": "baseConstructorSpecifier",
											"modifierName": {
												"id": 1185,
												"name": "Ownable",
												"nameLocations": [
													"1517:7:11"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 147,
												"src": "1517:7:11"
											},
											"nodeType": "ModifierInvocation",
											"src": "1517:19:11"
										}
									],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1184,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1179,
												"mutability": "mutable",
												"name": "_stakingToken",
												"nameLocation": "1415:13:11",
												"nodeType": "VariableDeclaration",
												"scope": 1213,
												"src": "1407:21:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1178,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1407:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1181,
												"mutability": "mutable",
												"name": "_swapContract",
												"nameLocation": "1455:13:11",
												"nodeType": "VariableDeclaration",
												"scope": 1213,
												"src": "1439:29:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address_payable",
													"typeString": "address payable"
												},
												"typeName": {
													"id": 1180,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1439:15:11",
													"stateMutability": "payable",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1183,
												"mutability": "mutable",
												"name": "_minimumVolumeRequired",
												"nameLocation": "1487:22:11",
												"nodeType": "VariableDeclaration",
												"scope": 1213,
												"src": "1479:30:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1182,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1479:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1396:120:11"
									},
									"returnParameters": {
										"id": 1189,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1537:0:11"
									},
									"scope": 1658,
									"src": "1385:447:11",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1258,
										"nodeType": "Block",
										"src": "1964:376:11",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 1231,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																"id": 1225,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"expression": {
																		"id": 1219,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967281,
																		"src": "1983:3:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 1220,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "1987:6:11",
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"src": "1983:10:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"arguments": [
																		{
																			"id": 1223,
																			"name": "swapContract",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1131,
																			"src": "2005:12:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_SwapPro_$2711",
																				"typeString": "contract SwapPro"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_SwapPro_$2711",
																				"typeString": "contract SwapPro"
																			}
																		],
																		"id": 1222,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "1997:7:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 1221,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "1997:7:11",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 1224,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "1997:21:11",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"src": "1983:35:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "||",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																"id": 1230,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"expression": {
																		"id": 1226,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967281,
																		"src": "2022:3:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 1227,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "2026:6:11",
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"src": "2022:10:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"arguments": [],
																	"expression": {
																		"argumentTypes": [],
																		"id": 1228,
																		"name": "owner",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 67,
																		"src": "2036:5:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																			"typeString": "function () view returns (address)"
																		}
																	},
																	"id": 1229,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2036:7:11",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"src": "2022:21:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "1983:60:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4e6f7420617574686f72697a6564",
															"id": 1232,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2045:16:11",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_fac3bac318c0d00994f57b0f2f4c643c313072b71db2302bf4b900309cc50b36",
																"typeString": "literal_string \"Not authorized\""
															},
															"value": "Not authorized"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_fac3bac318c0d00994f57b0f2f4c643c313072b71db2302bf4b900309cc50b36",
																"typeString": "literal_string \"Not authorized\""
															}
														],
														"id": 1218,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1975:7:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1233,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1975:87:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1234,
												"nodeType": "ExpressionStatement",
												"src": "1975:87:11"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1237,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1235,
														"name": "totalStaked",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1144,
														"src": "2077:11:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 1236,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2092:1:11",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "2077:16:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1240,
												"nodeType": "IfStatement",
												"src": "2073:94:11",
												"trueBody": {
													"id": 1239,
													"nodeType": "Block",
													"src": "2095:72:11",
													"statements": [
														{
															"functionReturnParameters": 1217,
															"id": 1238,
															"nodeType": "Return",
															"src": "2149:7:11"
														}
													]
												}
											},
											{
												"expression": {
													"id": 1248,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1241,
														"name": "accTokensPerShare",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1151,
														"src": "2214:17:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1247,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"components": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1244,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1242,
																		"name": "reward",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1215,
																		"src": "2236:6:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"hexValue": "31653132",
																		"id": 1243,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2245:4:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_1000000000000_by_1",
																			"typeString": "int_const 1000000000000"
																		},
																		"value": "1e12"
																	},
																	"src": "2236:13:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 1245,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "2235:15:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "/",
														"rightExpression": {
															"id": 1246,
															"name": "totalStaked",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1144,
															"src": "2253:11:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "2235:29:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2214:50:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1249,
												"nodeType": "ExpressionStatement",
												"src": "2214:50:11"
											},
											{
												"expression": {
													"id": 1252,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1250,
														"name": "totalRewards",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1153,
														"src": "2275:12:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"id": 1251,
														"name": "reward",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1215,
														"src": "2291:6:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2275:22:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1253,
												"nodeType": "ExpressionStatement",
												"src": "2275:22:11"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1255,
															"name": "reward",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1215,
															"src": "2325:6:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1254,
														"name": "RewardAdded",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1177,
														"src": "2313:11:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_uint256_$returns$__$",
															"typeString": "function (uint256)"
														}
													},
													"id": 1256,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2313:19:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1257,
												"nodeType": "EmitStatement",
												"src": "2308:24:11"
											}
										]
									},
									"functionSelector": "3c6b16ab",
									"id": 1259,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "notifyRewardAmount",
									"nameLocation": "1920:18:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1216,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1215,
												"mutability": "mutable",
												"name": "reward",
												"nameLocation": "1947:6:11",
												"nodeType": "VariableDeclaration",
												"scope": 1259,
												"src": "1939:14:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1214,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1939:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1938:16:11"
									},
									"returnParameters": {
										"id": 1217,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1964:0:11"
									},
									"scope": 1658,
									"src": "1911:429:11",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1288,
										"nodeType": "Block",
										"src": "2475:170:11",
										"statements": [
											{
												"assignments": [
													1268
												],
												"declarations": [
													{
														"constant": false,
														"id": 1268,
														"mutability": "mutable",
														"name": "user",
														"nameLocation": "2503:4:11",
														"nodeType": "VariableDeclaration",
														"scope": 1288,
														"src": "2486:21:11",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_UserInfo_$1136_storage_ptr",
															"typeString": "struct HardStake.UserInfo"
														},
														"typeName": {
															"id": 1267,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 1266,
																"name": "UserInfo",
																"nameLocations": [
																	"2486:8:11"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 1136,
																"src": "2486:8:11"
															},
															"referencedDeclaration": 1136,
															"src": "2486:8:11",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_UserInfo_$1136_storage_ptr",
																"typeString": "struct HardStake.UserInfo"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1272,
												"initialValue": {
													"baseExpression": {
														"id": 1269,
														"name": "userInfo",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1149,
														"src": "2510:8:11",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_struct$_UserInfo_$1136_storage_$",
															"typeString": "mapping(address => struct HardStake.UserInfo storage ref)"
														}
													},
													"id": 1271,
													"indexExpression": {
														"id": 1270,
														"name": "_user",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1261,
														"src": "2519:5:11",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "2510:15:11",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_UserInfo_$1136_storage",
														"typeString": "struct HardStake.UserInfo storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2486:39:11"
											},
											{
												"assignments": [
													1274
												],
												"declarations": [
													{
														"constant": false,
														"id": 1274,
														"mutability": "mutable",
														"name": "pending",
														"nameLocation": "2544:7:11",
														"nodeType": "VariableDeclaration",
														"scope": 1288,
														"src": "2536:15:11",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1273,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2536:7:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1285,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1284,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1281,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"components": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1278,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"expression": {
																			"id": 1275,
																			"name": "user",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1268,
																			"src": "2555:4:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_UserInfo_$1136_storage_ptr",
																				"typeString": "struct HardStake.UserInfo storage pointer"
																			}
																		},
																		"id": 1276,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "2560:6:11",
																		"memberName": "amount",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 1133,
																		"src": "2555:11:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 1277,
																		"name": "accTokensPerShare",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1151,
																		"src": "2569:17:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "2555:31:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 1279,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "2554:33:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "/",
														"rightExpression": {
															"hexValue": "31653132",
															"id": 1280,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2590:4:11",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1000000000000_by_1",
																"typeString": "int_const 1000000000000"
															},
															"value": "1e12"
														},
														"src": "2554:40:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "-",
													"rightExpression": {
														"expression": {
															"id": 1282,
															"name": "user",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1268,
															"src": "2597:4:11",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_UserInfo_$1136_storage_ptr",
																"typeString": "struct HardStake.UserInfo storage pointer"
															}
														},
														"id": 1283,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2602:10:11",
														"memberName": "rewardDebt",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1135,
														"src": "2597:15:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2554:58:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2536:76:11"
											},
											{
												"expression": {
													"id": 1286,
													"name": "pending",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1274,
													"src": "2630:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1265,
												"id": 1287,
												"nodeType": "Return",
												"src": "2623:14:11"
											}
										]
									},
									"functionSelector": "f40f0f52",
									"id": 1289,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "pendingReward",
									"nameLocation": "2414:13:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1262,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1261,
												"mutability": "mutable",
												"name": "_user",
												"nameLocation": "2436:5:11",
												"nodeType": "VariableDeclaration",
												"scope": 1289,
												"src": "2428:13:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1260,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2428:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2427:15:11"
									},
									"returnParameters": {
										"id": 1265,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1264,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1289,
												"src": "2466:7:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1263,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2466:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2465:9:11"
									},
									"scope": 1658,
									"src": "2405:240:11",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1402,
										"nodeType": "Block",
										"src": "2730:886:11",
										"statements": [
											{
												"assignments": [
													1297
												],
												"declarations": [
													{
														"constant": false,
														"id": 1297,
														"mutability": "mutable",
														"name": "userVol",
														"nameLocation": "2749:7:11",
														"nodeType": "VariableDeclaration",
														"scope": 1402,
														"src": "2741:15:11",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1296,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2741:7:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1303,
												"initialValue": {
													"arguments": [
														{
															"expression": {
																"id": 1300,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "2783:3:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1301,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2787:6:11",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "2783:10:11",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"id": 1298,
															"name": "swapContract",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1131,
															"src": "2759:12:11",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_SwapPro_$2711",
																"typeString": "contract SwapPro"
															}
														},
														"id": 1299,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2772:10:11",
														"memberName": "userVolume",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1835,
														"src": "2759:23:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address) view external returns (uint256)"
														}
													},
													"id": 1302,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2759:35:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2741:53:11"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1307,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1305,
																"name": "userVol",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1297,
																"src": "2813:7:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 1306,
																"name": "minimumVolumeRequired",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1155,
																"src": "2824:21:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2813:32:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "496e73756666696369656e74204441707020766f6c756d6520746f207374616b65",
															"id": 1308,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2847:35:11",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_648cd7d2c3c6138e60aa25ba2516146489ba1c539e5d2a1fbcb5aa65ada4b39e",
																"typeString": "literal_string \"Insufficient DApp volume to stake\""
															},
															"value": "Insufficient DApp volume to stake"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_648cd7d2c3c6138e60aa25ba2516146489ba1c539e5d2a1fbcb5aa65ada4b39e",
																"typeString": "literal_string \"Insufficient DApp volume to stake\""
															}
														],
														"id": 1304,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2805:7:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1309,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2805:78:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1310,
												"nodeType": "ExpressionStatement",
												"src": "2805:78:11"
											},
											{
												"assignments": [
													1313
												],
												"declarations": [
													{
														"constant": false,
														"id": 1313,
														"mutability": "mutable",
														"name": "user",
														"nameLocation": "2913:4:11",
														"nodeType": "VariableDeclaration",
														"scope": 1402,
														"src": "2896:21:11",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_UserInfo_$1136_storage_ptr",
															"typeString": "struct HardStake.UserInfo"
														},
														"typeName": {
															"id": 1312,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 1311,
																"name": "UserInfo",
																"nameLocations": [
																	"2896:8:11"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 1136,
																"src": "2896:8:11"
															},
															"referencedDeclaration": 1136,
															"src": "2896:8:11",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_UserInfo_$1136_storage_ptr",
																"typeString": "struct HardStake.UserInfo"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1318,
												"initialValue": {
													"baseExpression": {
														"id": 1314,
														"name": "userInfo",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1149,
														"src": "2920:8:11",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_struct$_UserInfo_$1136_storage_$",
															"typeString": "mapping(address => struct HardStake.UserInfo storage ref)"
														}
													},
													"id": 1317,
													"indexExpression": {
														"expression": {
															"id": 1315,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967281,
															"src": "2929:3:11",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 1316,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2933:6:11",
														"memberName": "sender",
														"nodeType": "MemberAccess",
														"src": "2929:10:11",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "2920:20:11",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_UserInfo_$1136_storage",
														"typeString": "struct HardStake.UserInfo storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2896:44:11"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1322,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 1319,
															"name": "user",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1313,
															"src": "3018:4:11",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_UserInfo_$1136_storage_ptr",
																"typeString": "struct HardStake.UserInfo storage pointer"
															}
														},
														"id": 1320,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3023:6:11",
														"memberName": "amount",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1133,
														"src": "3018:11:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 1321,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3032:1:11",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "3018:15:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1356,
												"nodeType": "IfStatement",
												"src": "3014:285:11",
												"trueBody": {
													"id": 1355,
													"nodeType": "Block",
													"src": "3035:264:11",
													"statements": [
														{
															"assignments": [
																1324
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 1324,
																	"mutability": "mutable",
																	"name": "pending",
																	"nameLocation": "3058:7:11",
																	"nodeType": "VariableDeclaration",
																	"scope": 1355,
																	"src": "3050:15:11",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 1323,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "3050:7:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 1335,
															"initialValue": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1334,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1331,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"components": [
																			{
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 1328,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"expression": {
																						"id": 1325,
																						"name": "user",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1313,
																						"src": "3069:4:11",
																						"typeDescriptions": {
																							"typeIdentifier": "t_struct$_UserInfo_$1136_storage_ptr",
																							"typeString": "struct HardStake.UserInfo storage pointer"
																						}
																					},
																					"id": 1326,
																					"isConstant": false,
																					"isLValue": true,
																					"isPure": false,
																					"lValueRequested": false,
																					"memberLocation": "3074:6:11",
																					"memberName": "amount",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 1133,
																					"src": "3069:11:11",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "*",
																				"rightExpression": {
																					"id": 1327,
																					"name": "accTokensPerShare",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1151,
																					"src": "3083:17:11",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "3069:31:11",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"id": 1329,
																		"isConstant": false,
																		"isInlineArray": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "TupleExpression",
																		"src": "3068:33:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "/",
																	"rightExpression": {
																		"hexValue": "31653132",
																		"id": 1330,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "3104:4:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_1000000000000_by_1",
																			"typeString": "int_const 1000000000000"
																		},
																		"value": "1e12"
																	},
																	"src": "3068:40:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"expression": {
																		"id": 1332,
																		"name": "user",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1313,
																		"src": "3111:4:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_UserInfo_$1136_storage_ptr",
																			"typeString": "struct HardStake.UserInfo storage pointer"
																		}
																	},
																	"id": 1333,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "3116:10:11",
																	"memberName": "rewardDebt",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1135,
																	"src": "3111:15:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "3068:58:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "3050:76:11"
														},
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1338,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1336,
																	"name": "pending",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1324,
																	"src": "3145:7:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">",
																"rightExpression": {
																	"hexValue": "30",
																	"id": 1337,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "3155:1:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "3145:11:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 1354,
															"nodeType": "IfStatement",
															"src": "3141:147:11",
															"trueBody": {
																"id": 1353,
																"nodeType": "Block",
																"src": "3158:130:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"expression": {
																						"id": 1342,
																						"name": "msg",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 4294967281,
																						"src": "3202:3:11",
																						"typeDescriptions": {
																							"typeIdentifier": "t_magic_message",
																							"typeString": "msg"
																						}
																					},
																					"id": 1343,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"memberLocation": "3206:6:11",
																					"memberName": "sender",
																					"nodeType": "MemberAccess",
																					"src": "3202:10:11",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 1344,
																					"name": "pending",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1324,
																					"src": "3214:7:11",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"expression": {
																					"id": 1339,
																					"name": "rewardToken",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1142,
																					"src": "3177:11:11",
																					"typeDescriptions": {
																						"typeIdentifier": "t_contract$_IERC20_$380",
																						"typeString": "contract IERC20"
																					}
																				},
																				"id": 1341,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "3189:12:11",
																				"memberName": "safeTransfer",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 427,
																				"src": "3177:24:11",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$380_$_t_address_$_t_uint256_$returns$__$attached_to$_t_contract$_IERC20_$380_$",
																					"typeString": "function (contract IERC20,address,uint256)"
																				}
																			},
																			"id": 1345,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "3177:45:11",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 1346,
																		"nodeType": "ExpressionStatement",
																		"src": "3177:45:11"
																	},
																	{
																		"eventCall": {
																			"arguments": [
																				{
																					"expression": {
																						"id": 1348,
																						"name": "msg",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 4294967281,
																						"src": "3252:3:11",
																						"typeDescriptions": {
																							"typeIdentifier": "t_magic_message",
																							"typeString": "msg"
																						}
																					},
																					"id": 1349,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"memberLocation": "3256:6:11",
																					"memberName": "sender",
																					"nodeType": "MemberAccess",
																					"src": "3252:10:11",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 1350,
																					"name": "pending",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1324,
																					"src": "3264:7:11",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 1347,
																				"name": "Claim",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1173,
																				"src": "3246:5:11",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
																					"typeString": "function (address,uint256)"
																				}
																			},
																			"id": 1351,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "3246:26:11",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 1352,
																		"nodeType": "EmitStatement",
																		"src": "3241:31:11"
																	}
																]
															}
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1359,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1357,
														"name": "_amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1291,
														"src": "3315:7:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 1358,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3325:1:11",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "3315:11:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1383,
												"nodeType": "IfStatement",
												"src": "3311:183:11",
												"trueBody": {
													"id": 1382,
													"nodeType": "Block",
													"src": "3328:166:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"expression": {
																			"id": 1363,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967281,
																			"src": "3373:3:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 1364,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "3377:6:11",
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"src": "3373:10:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"arguments": [
																			{
																				"id": 1367,
																				"name": "this",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967268,
																				"src": "3393:4:11",
																				"typeDescriptions": {
																					"typeIdentifier": "t_contract$_HardStake_$1658",
																					"typeString": "contract HardStake"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_contract$_HardStake_$1658",
																					"typeString": "contract HardStake"
																				}
																			],
																			"id": 1366,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "3385:7:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 1365,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "3385:7:11",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 1368,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "3385:13:11",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 1369,
																		"name": "_amount",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1291,
																		"src": "3400:7:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"id": 1360,
																		"name": "stakingToken",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1139,
																		"src": "3343:12:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$380",
																			"typeString": "contract IERC20"
																		}
																	},
																	"id": 1362,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "3356:16:11",
																	"memberName": "safeTransferFrom",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 454,
																	"src": "3343:29:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$380_$_t_address_$_t_address_$_t_uint256_$returns$__$attached_to$_t_contract$_IERC20_$380_$",
																		"typeString": "function (contract IERC20,address,address,uint256)"
																	}
																},
																"id": 1370,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3343:65:11",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1371,
															"nodeType": "ExpressionStatement",
															"src": "3343:65:11"
														},
														{
															"expression": {
																"id": 1376,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"expression": {
																		"id": 1372,
																		"name": "user",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1313,
																		"src": "3423:4:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_UserInfo_$1136_storage_ptr",
																			"typeString": "struct HardStake.UserInfo storage pointer"
																		}
																	},
																	"id": 1374,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"memberLocation": "3428:6:11",
																	"memberName": "amount",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1133,
																	"src": "3423:11:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "+=",
																"rightHandSide": {
																	"id": 1375,
																	"name": "_amount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1291,
																	"src": "3438:7:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "3423:22:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1377,
															"nodeType": "ExpressionStatement",
															"src": "3423:22:11"
														},
														{
															"expression": {
																"id": 1380,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 1378,
																	"name": "totalStaked",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1144,
																	"src": "3460:11:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "+=",
																"rightHandSide": {
																	"id": 1379,
																	"name": "_amount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1291,
																	"src": "3475:7:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "3460:22:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1381,
															"nodeType": "ExpressionStatement",
															"src": "3460:22:11"
														}
													]
												}
											},
											{
												"expression": {
													"id": 1394,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 1384,
															"name": "user",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1313,
															"src": "3506:4:11",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_UserInfo_$1136_storage_ptr",
																"typeString": "struct HardStake.UserInfo storage pointer"
															}
														},
														"id": 1386,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "3511:10:11",
														"memberName": "rewardDebt",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1135,
														"src": "3506:15:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1393,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"components": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1390,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"expression": {
																			"id": 1387,
																			"name": "user",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1313,
																			"src": "3525:4:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_UserInfo_$1136_storage_ptr",
																				"typeString": "struct HardStake.UserInfo storage pointer"
																			}
																		},
																		"id": 1388,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "3530:6:11",
																		"memberName": "amount",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 1133,
																		"src": "3525:11:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 1389,
																		"name": "accTokensPerShare",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1151,
																		"src": "3539:17:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "3525:31:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 1391,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "3524:33:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "/",
														"rightExpression": {
															"hexValue": "31653132",
															"id": 1392,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3560:4:11",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1000000000000_by_1",
																"typeString": "int_const 1000000000000"
															},
															"value": "1e12"
														},
														"src": "3524:40:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3506:58:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1395,
												"nodeType": "ExpressionStatement",
												"src": "3506:58:11"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"expression": {
																"id": 1397,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "3588:3:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1398,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3592:6:11",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "3588:10:11",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1399,
															"name": "_amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1291,
															"src": "3600:7:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1396,
														"name": "Deposit",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1161,
														"src": "3580:7:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 1400,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3580:28:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1401,
												"nodeType": "EmitStatement",
												"src": "3575:33:11"
											}
										]
									},
									"functionSelector": "b6b55f25",
									"id": 1403,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1294,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1293,
												"name": "nonReentrant",
												"nameLocations": [
													"2717:12:11"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 267,
												"src": "2717:12:11"
											},
											"nodeType": "ModifierInvocation",
											"src": "2717:12:11"
										}
									],
									"name": "deposit",
									"nameLocation": "2683:7:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1292,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1291,
												"mutability": "mutable",
												"name": "_amount",
												"nameLocation": "2699:7:11",
												"nodeType": "VariableDeclaration",
												"scope": 1403,
												"src": "2691:15:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1290,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2691:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2690:17:11"
									},
									"returnParameters": {
										"id": 1295,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2730:0:11"
									},
									"scope": 1658,
									"src": "2674:942:11",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1499,
										"nodeType": "Block",
										"src": "3712:731:11",
										"statements": [
											{
												"assignments": [
													1412
												],
												"declarations": [
													{
														"constant": false,
														"id": 1412,
														"mutability": "mutable",
														"name": "user",
														"nameLocation": "3740:4:11",
														"nodeType": "VariableDeclaration",
														"scope": 1499,
														"src": "3723:21:11",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_UserInfo_$1136_storage_ptr",
															"typeString": "struct HardStake.UserInfo"
														},
														"typeName": {
															"id": 1411,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 1410,
																"name": "UserInfo",
																"nameLocations": [
																	"3723:8:11"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 1136,
																"src": "3723:8:11"
															},
															"referencedDeclaration": 1136,
															"src": "3723:8:11",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_UserInfo_$1136_storage_ptr",
																"typeString": "struct HardStake.UserInfo"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1417,
												"initialValue": {
													"baseExpression": {
														"id": 1413,
														"name": "userInfo",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1149,
														"src": "3747:8:11",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_struct$_UserInfo_$1136_storage_$",
															"typeString": "mapping(address => struct HardStake.UserInfo storage ref)"
														}
													},
													"id": 1416,
													"indexExpression": {
														"expression": {
															"id": 1414,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967281,
															"src": "3756:3:11",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 1415,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3760:6:11",
														"memberName": "sender",
														"nodeType": "MemberAccess",
														"src": "3756:10:11",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "3747:20:11",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_UserInfo_$1136_storage",
														"typeString": "struct HardStake.UserInfo storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3723:44:11"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1422,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 1419,
																	"name": "user",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1412,
																	"src": "3786:4:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_UserInfo_$1136_storage_ptr",
																		"typeString": "struct HardStake.UserInfo storage pointer"
																	}
																},
																"id": 1420,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "3791:6:11",
																"memberName": "amount",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 1133,
																"src": "3786:11:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 1421,
																"name": "_amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1405,
																"src": "3801:7:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "3786:22:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "576974686472617720616d6f756e7420657863656564732062616c616e6365",
															"id": 1423,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3810:33:11",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_4c501aa39f818920bdbabc4e74fb2842a64ecd00cde0a748633014f4258571f4",
																"typeString": "literal_string \"Withdraw amount exceeds balance\""
															},
															"value": "Withdraw amount exceeds balance"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_4c501aa39f818920bdbabc4e74fb2842a64ecd00cde0a748633014f4258571f4",
																"typeString": "literal_string \"Withdraw amount exceeds balance\""
															}
														],
														"id": 1418,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "3778:7:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1424,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3778:66:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1425,
												"nodeType": "ExpressionStatement",
												"src": "3778:66:11"
											},
											{
												"assignments": [
													1427
												],
												"declarations": [
													{
														"constant": false,
														"id": 1427,
														"mutability": "mutable",
														"name": "pending",
														"nameLocation": "3926:7:11",
														"nodeType": "VariableDeclaration",
														"scope": 1499,
														"src": "3918:15:11",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1426,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "3918:7:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1438,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1437,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1434,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"components": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1431,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"expression": {
																			"id": 1428,
																			"name": "user",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1412,
																			"src": "3937:4:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_UserInfo_$1136_storage_ptr",
																				"typeString": "struct HardStake.UserInfo storage pointer"
																			}
																		},
																		"id": 1429,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "3942:6:11",
																		"memberName": "amount",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 1133,
																		"src": "3937:11:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 1430,
																		"name": "accTokensPerShare",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1151,
																		"src": "3951:17:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "3937:31:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 1432,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "3936:33:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "/",
														"rightExpression": {
															"hexValue": "31653132",
															"id": 1433,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3972:4:11",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1000000000000_by_1",
																"typeString": "int_const 1000000000000"
															},
															"value": "1e12"
														},
														"src": "3936:40:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "-",
													"rightExpression": {
														"expression": {
															"id": 1435,
															"name": "user",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1412,
															"src": "3979:4:11",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_UserInfo_$1136_storage_ptr",
																"typeString": "struct HardStake.UserInfo storage pointer"
															}
														},
														"id": 1436,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3984:10:11",
														"memberName": "rewardDebt",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1135,
														"src": "3979:15:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3936:58:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3918:76:11"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1441,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1439,
														"name": "pending",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1427,
														"src": "4009:7:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 1440,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "4019:1:11",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "4009:11:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1457,
												"nodeType": "IfStatement",
												"src": "4005:135:11",
												"trueBody": {
													"id": 1456,
													"nodeType": "Block",
													"src": "4022:118:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"expression": {
																			"id": 1445,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967281,
																			"src": "4062:3:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 1446,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "4066:6:11",
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"src": "4062:10:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 1447,
																		"name": "pending",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1427,
																		"src": "4074:7:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"id": 1442,
																		"name": "rewardToken",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1142,
																		"src": "4037:11:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$380",
																			"typeString": "contract IERC20"
																		}
																	},
																	"id": 1444,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "4049:12:11",
																	"memberName": "safeTransfer",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 427,
																	"src": "4037:24:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$380_$_t_address_$_t_uint256_$returns$__$attached_to$_t_contract$_IERC20_$380_$",
																		"typeString": "function (contract IERC20,address,uint256)"
																	}
																},
																"id": 1448,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4037:45:11",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1449,
															"nodeType": "ExpressionStatement",
															"src": "4037:45:11"
														},
														{
															"eventCall": {
																"arguments": [
																	{
																		"expression": {
																			"id": 1451,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967281,
																			"src": "4108:3:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 1452,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "4112:6:11",
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"src": "4108:10:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 1453,
																		"name": "pending",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1427,
																		"src": "4120:7:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 1450,
																	"name": "Claim",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1173,
																	"src": "4102:5:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (address,uint256)"
																	}
																},
																"id": 1454,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4102:26:11",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1455,
															"nodeType": "EmitStatement",
															"src": "4097:31:11"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1460,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1458,
														"name": "_amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1405,
														"src": "4156:7:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 1459,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "4166:1:11",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "4156:11:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1486,
												"nodeType": "IfStatement",
												"src": "4152:213:11",
												"trueBody": {
													"id": 1485,
													"nodeType": "Block",
													"src": "4169:196:11",
													"statements": [
														{
															"expression": {
																"id": 1465,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"expression": {
																		"id": 1461,
																		"name": "user",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1412,
																		"src": "4184:4:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_UserInfo_$1136_storage_ptr",
																			"typeString": "struct HardStake.UserInfo storage pointer"
																		}
																	},
																	"id": 1463,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"memberLocation": "4189:6:11",
																	"memberName": "amount",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1133,
																	"src": "4184:11:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "-=",
																"rightHandSide": {
																	"id": 1464,
																	"name": "_amount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1405,
																	"src": "4199:7:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "4184:22:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1466,
															"nodeType": "ExpressionStatement",
															"src": "4184:22:11"
														},
														{
															"expression": {
																"id": 1469,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 1467,
																	"name": "totalStaked",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1144,
																	"src": "4221:11:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "-=",
																"rightHandSide": {
																	"id": 1468,
																	"name": "_amount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1405,
																	"src": "4236:7:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "4221:22:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1470,
															"nodeType": "ExpressionStatement",
															"src": "4221:22:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"expression": {
																			"id": 1474,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967281,
																			"src": "4284:3:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 1475,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "4288:6:11",
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"src": "4284:10:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 1476,
																		"name": "_amount",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1405,
																		"src": "4296:7:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"id": 1471,
																		"name": "stakingToken",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1139,
																		"src": "4258:12:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$380",
																			"typeString": "contract IERC20"
																		}
																	},
																	"id": 1473,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "4271:12:11",
																	"memberName": "safeTransfer",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 427,
																	"src": "4258:25:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$380_$_t_address_$_t_uint256_$returns$__$attached_to$_t_contract$_IERC20_$380_$",
																		"typeString": "function (contract IERC20,address,uint256)"
																	}
																},
																"id": 1477,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4258:46:11",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1478,
															"nodeType": "ExpressionStatement",
															"src": "4258:46:11"
														},
														{
															"eventCall": {
																"arguments": [
																	{
																		"expression": {
																			"id": 1480,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967281,
																			"src": "4333:3:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 1481,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "4337:6:11",
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"src": "4333:10:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 1482,
																		"name": "_amount",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1405,
																		"src": "4345:7:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 1479,
																	"name": "Withdraw",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1167,
																	"src": "4324:8:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (address,uint256)"
																	}
																},
																"id": 1483,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4324:29:11",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1484,
															"nodeType": "EmitStatement",
															"src": "4319:34:11"
														}
													]
												}
											},
											{
												"expression": {
													"id": 1497,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 1487,
															"name": "user",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1412,
															"src": "4377:4:11",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_UserInfo_$1136_storage_ptr",
																"typeString": "struct HardStake.UserInfo storage pointer"
															}
														},
														"id": 1489,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "4382:10:11",
														"memberName": "rewardDebt",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1135,
														"src": "4377:15:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1496,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"components": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1493,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"expression": {
																			"id": 1490,
																			"name": "user",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1412,
																			"src": "4396:4:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_UserInfo_$1136_storage_ptr",
																				"typeString": "struct HardStake.UserInfo storage pointer"
																			}
																		},
																		"id": 1491,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "4401:6:11",
																		"memberName": "amount",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 1133,
																		"src": "4396:11:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 1492,
																		"name": "accTokensPerShare",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1151,
																		"src": "4410:17:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "4396:31:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 1494,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "4395:33:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "/",
														"rightExpression": {
															"hexValue": "31653132",
															"id": 1495,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4431:4:11",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1000000000000_by_1",
																"typeString": "int_const 1000000000000"
															},
															"value": "1e12"
														},
														"src": "4395:40:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4377:58:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1498,
												"nodeType": "ExpressionStatement",
												"src": "4377:58:11"
											}
										]
									},
									"functionSelector": "2e1a7d4d",
									"id": 1500,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1408,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1407,
												"name": "nonReentrant",
												"nameLocations": [
													"3699:12:11"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 267,
												"src": "3699:12:11"
											},
											"nodeType": "ModifierInvocation",
											"src": "3699:12:11"
										}
									],
									"name": "withdraw",
									"nameLocation": "3664:8:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1406,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1405,
												"mutability": "mutable",
												"name": "_amount",
												"nameLocation": "3681:7:11",
												"nodeType": "VariableDeclaration",
												"scope": 1500,
												"src": "3673:15:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1404,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3673:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3672:17:11"
									},
									"returnParameters": {
										"id": 1409,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3712:0:11"
									},
									"scope": 1658,
									"src": "3655:788:11",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1559,
										"nodeType": "Block",
										"src": "4553:371:11",
										"statements": [
											{
												"assignments": [
													1507
												],
												"declarations": [
													{
														"constant": false,
														"id": 1507,
														"mutability": "mutable",
														"name": "user",
														"nameLocation": "4581:4:11",
														"nodeType": "VariableDeclaration",
														"scope": 1559,
														"src": "4564:21:11",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_UserInfo_$1136_storage_ptr",
															"typeString": "struct HardStake.UserInfo"
														},
														"typeName": {
															"id": 1506,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 1505,
																"name": "UserInfo",
																"nameLocations": [
																	"4564:8:11"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 1136,
																"src": "4564:8:11"
															},
															"referencedDeclaration": 1136,
															"src": "4564:8:11",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_UserInfo_$1136_storage_ptr",
																"typeString": "struct HardStake.UserInfo"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1512,
												"initialValue": {
													"baseExpression": {
														"id": 1508,
														"name": "userInfo",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1149,
														"src": "4588:8:11",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_struct$_UserInfo_$1136_storage_$",
															"typeString": "mapping(address => struct HardStake.UserInfo storage ref)"
														}
													},
													"id": 1511,
													"indexExpression": {
														"expression": {
															"id": 1509,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967281,
															"src": "4597:3:11",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 1510,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "4601:6:11",
														"memberName": "sender",
														"nodeType": "MemberAccess",
														"src": "4597:10:11",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "4588:20:11",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_UserInfo_$1136_storage",
														"typeString": "struct HardStake.UserInfo storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4564:44:11"
											},
											{
												"assignments": [
													1514
												],
												"declarations": [
													{
														"constant": false,
														"id": 1514,
														"mutability": "mutable",
														"name": "pending",
														"nameLocation": "4627:7:11",
														"nodeType": "VariableDeclaration",
														"scope": 1559,
														"src": "4619:15:11",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1513,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "4619:7:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1525,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1524,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1521,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"components": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1518,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"expression": {
																			"id": 1515,
																			"name": "user",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1507,
																			"src": "4638:4:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_UserInfo_$1136_storage_ptr",
																				"typeString": "struct HardStake.UserInfo storage pointer"
																			}
																		},
																		"id": 1516,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "4643:6:11",
																		"memberName": "amount",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 1133,
																		"src": "4638:11:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 1517,
																		"name": "accTokensPerShare",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1151,
																		"src": "4652:17:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "4638:31:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 1519,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "4637:33:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "/",
														"rightExpression": {
															"hexValue": "31653132",
															"id": 1520,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4673:4:11",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1000000000000_by_1",
																"typeString": "int_const 1000000000000"
															},
															"value": "1e12"
														},
														"src": "4637:40:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "-",
													"rightExpression": {
														"expression": {
															"id": 1522,
															"name": "user",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1507,
															"src": "4680:4:11",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_UserInfo_$1136_storage_ptr",
																"typeString": "struct HardStake.UserInfo storage pointer"
															}
														},
														"id": 1523,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "4685:10:11",
														"memberName": "rewardDebt",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1135,
														"src": "4680:15:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4637:58:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4619:76:11"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1529,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1527,
																"name": "pending",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1514,
																"src": "4714:7:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1528,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "4724:1:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "4714:11:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4e6f207265776172647320746f20636c61696d",
															"id": 1530,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4727:21:11",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_584cf1690fd4124c524340f65c2f0897ce34c8cad61c485ada0c89030473339d",
																"typeString": "literal_string \"No rewards to claim\""
															},
															"value": "No rewards to claim"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_584cf1690fd4124c524340f65c2f0897ce34c8cad61c485ada0c89030473339d",
																"typeString": "literal_string \"No rewards to claim\""
															}
														],
														"id": 1526,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "4706:7:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1531,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4706:43:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1532,
												"nodeType": "ExpressionStatement",
												"src": "4706:43:11"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 1536,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "4785:3:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1537,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "4789:6:11",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "4785:10:11",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1538,
															"name": "pending",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1514,
															"src": "4797:7:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 1533,
															"name": "rewardToken",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1142,
															"src": "4760:11:11",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$380",
																"typeString": "contract IERC20"
															}
														},
														"id": 1535,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "4772:12:11",
														"memberName": "safeTransfer",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 427,
														"src": "4760:24:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$380_$_t_address_$_t_uint256_$returns$__$attached_to$_t_contract$_IERC20_$380_$",
															"typeString": "function (contract IERC20,address,uint256)"
														}
													},
													"id": 1539,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4760:45:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1540,
												"nodeType": "ExpressionStatement",
												"src": "4760:45:11"
											},
											{
												"expression": {
													"id": 1551,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 1541,
															"name": "user",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1507,
															"src": "4816:4:11",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_UserInfo_$1136_storage_ptr",
																"typeString": "struct HardStake.UserInfo storage pointer"
															}
														},
														"id": 1543,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "4821:10:11",
														"memberName": "rewardDebt",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1135,
														"src": "4816:15:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1550,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"components": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1547,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"expression": {
																			"id": 1544,
																			"name": "user",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1507,
																			"src": "4835:4:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_UserInfo_$1136_storage_ptr",
																				"typeString": "struct HardStake.UserInfo storage pointer"
																			}
																		},
																		"id": 1545,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "4840:6:11",
																		"memberName": "amount",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 1133,
																		"src": "4835:11:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 1546,
																		"name": "accTokensPerShare",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1151,
																		"src": "4849:17:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "4835:31:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 1548,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "4834:33:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "/",
														"rightExpression": {
															"hexValue": "31653132",
															"id": 1549,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4870:4:11",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1000000000000_by_1",
																"typeString": "int_const 1000000000000"
															},
															"value": "1e12"
														},
														"src": "4834:40:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4816:58:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1552,
												"nodeType": "ExpressionStatement",
												"src": "4816:58:11"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"expression": {
																"id": 1554,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "4896:3:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1555,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "4900:6:11",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "4896:10:11",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1556,
															"name": "pending",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1514,
															"src": "4908:7:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1553,
														"name": "Claim",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1173,
														"src": "4890:5:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 1557,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4890:26:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1558,
												"nodeType": "EmitStatement",
												"src": "4885:31:11"
											}
										]
									},
									"functionSelector": "372500ab",
									"id": 1560,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1503,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1502,
												"name": "nonReentrant",
												"nameLocations": [
													"4540:12:11"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 267,
												"src": "4540:12:11"
											},
											"nodeType": "ModifierInvocation",
											"src": "4540:12:11"
										}
									],
									"name": "claimRewards",
									"nameLocation": "4516:12:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1501,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4528:2:11"
									},
									"returnParameters": {
										"id": 1504,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4553:0:11"
									},
									"scope": 1658,
									"src": "4507:417:11",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1615,
										"nodeType": "Block",
										"src": "5058:343:11",
										"statements": [
											{
												"assignments": [
													1567
												],
												"declarations": [
													{
														"constant": false,
														"id": 1567,
														"mutability": "mutable",
														"name": "user",
														"nameLocation": "5086:4:11",
														"nodeType": "VariableDeclaration",
														"scope": 1615,
														"src": "5069:21:11",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_UserInfo_$1136_storage_ptr",
															"typeString": "struct HardStake.UserInfo"
														},
														"typeName": {
															"id": 1566,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 1565,
																"name": "UserInfo",
																"nameLocations": [
																	"5069:8:11"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 1136,
																"src": "5069:8:11"
															},
															"referencedDeclaration": 1136,
															"src": "5069:8:11",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_UserInfo_$1136_storage_ptr",
																"typeString": "struct HardStake.UserInfo"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1572,
												"initialValue": {
													"baseExpression": {
														"id": 1568,
														"name": "userInfo",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1149,
														"src": "5093:8:11",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_struct$_UserInfo_$1136_storage_$",
															"typeString": "mapping(address => struct HardStake.UserInfo storage ref)"
														}
													},
													"id": 1571,
													"indexExpression": {
														"expression": {
															"id": 1569,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967281,
															"src": "5102:3:11",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 1570,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "5106:6:11",
														"memberName": "sender",
														"nodeType": "MemberAccess",
														"src": "5102:10:11",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "5093:20:11",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_UserInfo_$1136_storage",
														"typeString": "struct HardStake.UserInfo storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5069:44:11"
											},
											{
												"assignments": [
													1574
												],
												"declarations": [
													{
														"constant": false,
														"id": 1574,
														"mutability": "mutable",
														"name": "amount",
														"nameLocation": "5132:6:11",
														"nodeType": "VariableDeclaration",
														"scope": 1615,
														"src": "5124:14:11",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1573,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "5124:7:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1577,
												"initialValue": {
													"expression": {
														"id": 1575,
														"name": "user",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1567,
														"src": "5141:4:11",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_UserInfo_$1136_storage_ptr",
															"typeString": "struct HardStake.UserInfo storage pointer"
														}
													},
													"id": 1576,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "5146:6:11",
													"memberName": "amount",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 1133,
													"src": "5141:11:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5124:28:11"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1581,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1579,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1574,
																"src": "5171:6:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1580,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "5180:1:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "5171:10:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4e6f7468696e6720746f207769746864726177",
															"id": 1582,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5183:21:11",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_1b19ac089d87f4146c293e731799080c98f8ee751187f94356e96cb0c086a394",
																"typeString": "literal_string \"Nothing to withdraw\""
															},
															"value": "Nothing to withdraw"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_1b19ac089d87f4146c293e731799080c98f8ee751187f94356e96cb0c086a394",
																"typeString": "literal_string \"Nothing to withdraw\""
															}
														],
														"id": 1578,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "5163:7:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1583,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5163:42:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1584,
												"nodeType": "ExpressionStatement",
												"src": "5163:42:11"
											},
											{
												"expression": {
													"id": 1587,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1585,
														"name": "totalStaked",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1144,
														"src": "5216:11:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "-=",
													"rightHandSide": {
														"id": 1586,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1574,
														"src": "5231:6:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "5216:21:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1588,
												"nodeType": "ExpressionStatement",
												"src": "5216:21:11"
											},
											{
												"expression": {
													"id": 1593,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 1589,
															"name": "user",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1567,
															"src": "5248:4:11",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_UserInfo_$1136_storage_ptr",
																"typeString": "struct HardStake.UserInfo storage pointer"
															}
														},
														"id": 1591,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "5253:6:11",
														"memberName": "amount",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1133,
														"src": "5248:11:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "30",
														"id": 1592,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "5262:1:11",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "5248:15:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1594,
												"nodeType": "ExpressionStatement",
												"src": "5248:15:11"
											},
											{
												"expression": {
													"id": 1599,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 1595,
															"name": "user",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1567,
															"src": "5274:4:11",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_UserInfo_$1136_storage_ptr",
																"typeString": "struct HardStake.UserInfo storage pointer"
															}
														},
														"id": 1597,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "5279:10:11",
														"memberName": "rewardDebt",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1135,
														"src": "5274:15:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "30",
														"id": 1598,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "5292:1:11",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "5274:19:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1600,
												"nodeType": "ExpressionStatement",
												"src": "5274:19:11"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 1604,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "5330:3:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1605,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "5334:6:11",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "5330:10:11",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1606,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1574,
															"src": "5342:6:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 1601,
															"name": "stakingToken",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1139,
															"src": "5304:12:11",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$380",
																"typeString": "contract IERC20"
															}
														},
														"id": 1603,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "5317:12:11",
														"memberName": "safeTransfer",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 427,
														"src": "5304:25:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$380_$_t_address_$_t_uint256_$returns$__$attached_to$_t_contract$_IERC20_$380_$",
															"typeString": "function (contract IERC20,address,uint256)"
														}
													},
													"id": 1607,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5304:45:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1608,
												"nodeType": "ExpressionStatement",
												"src": "5304:45:11"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"expression": {
																"id": 1610,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "5374:3:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1611,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "5378:6:11",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "5374:10:11",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1612,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1574,
															"src": "5386:6:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1609,
														"name": "Withdraw",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1167,
														"src": "5365:8:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 1613,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5365:28:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1614,
												"nodeType": "EmitStatement",
												"src": "5360:33:11"
											}
										]
									},
									"functionSelector": "db2e21bc",
									"id": 1616,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1563,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1562,
												"name": "nonReentrant",
												"nameLocations": [
													"5045:12:11"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 267,
												"src": "5045:12:11"
											},
											"nodeType": "ModifierInvocation",
											"src": "5045:12:11"
										}
									],
									"name": "emergencyWithdraw",
									"nameLocation": "5016:17:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1561,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5033:2:11"
									},
									"returnParameters": {
										"id": 1564,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5058:0:11"
									},
									"scope": 1658,
									"src": "5007:394:11",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1627,
										"nodeType": "Block",
										"src": "5540:53:11",
										"statements": [
											{
												"expression": {
													"id": 1625,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1623,
														"name": "minimumVolumeRequired",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1155,
														"src": "5551:21:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1624,
														"name": "_newVolume",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1618,
														"src": "5575:10:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "5551:34:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1626,
												"nodeType": "ExpressionStatement",
												"src": "5551:34:11"
											}
										]
									},
									"functionSelector": "2277d7e1",
									"id": 1628,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1621,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1620,
												"name": "onlyOwner",
												"nameLocations": [
													"5530:9:11"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "5530:9:11"
											},
											"nodeType": "ModifierInvocation",
											"src": "5530:9:11"
										}
									],
									"name": "updateMinimumVolumeRequired",
									"nameLocation": "5473:27:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1619,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1618,
												"mutability": "mutable",
												"name": "_newVolume",
												"nameLocation": "5509:10:11",
												"nodeType": "VariableDeclaration",
												"scope": 1628,
												"src": "5501:18:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1617,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5501:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5500:20:11"
									},
									"returnParameters": {
										"id": 1622,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5540:0:11"
									},
									"scope": 1658,
									"src": "5464:129:11",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1656,
										"nodeType": "Block",
										"src": "5748:163:11",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 1643,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1638,
																"name": "tokenAddress",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1630,
																"src": "5767:12:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"id": 1641,
																		"name": "stakingToken",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1139,
																		"src": "5791:12:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$380",
																			"typeString": "contract IERC20"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_IERC20_$380",
																			"typeString": "contract IERC20"
																		}
																	],
																	"id": 1640,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "5783:7:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 1639,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "5783:7:11",
																		"typeDescriptions": {}
																	}
																},
																"id": 1642,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5783:21:11",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "5767:37:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "43616e6e6f74207265636f766572207374616b696e6720746f6b656e",
															"id": 1644,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5806:30:11",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_f2260e3055faa792d924d265619c5330df351b382bad9f6027ac5a13b486d2d4",
																"typeString": "literal_string \"Cannot recover staking token\""
															},
															"value": "Cannot recover staking token"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_f2260e3055faa792d924d265619c5330df351b382bad9f6027ac5a13b486d2d4",
																"typeString": "literal_string \"Cannot recover staking token\""
															}
														],
														"id": 1637,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "5759:7:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1645,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5759:78:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1646,
												"nodeType": "ExpressionStatement",
												"src": "5759:78:11"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 1651,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 67,
																"src": "5882:5:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 1652,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5882:7:11",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1653,
															"name": "tokenAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1632,
															"src": "5891:11:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 1648,
																	"name": "tokenAddress",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1630,
																	"src": "5855:12:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 1647,
																"name": "IERC20",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 380,
																"src": "5848:6:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_IERC20_$380_$",
																	"typeString": "type(contract IERC20)"
																}
															},
															"id": 1649,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5848:20:11",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$380",
																"typeString": "contract IERC20"
															}
														},
														"id": 1650,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "5869:12:11",
														"memberName": "safeTransfer",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 427,
														"src": "5848:33:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$380_$_t_address_$_t_uint256_$returns$__$attached_to$_t_contract$_IERC20_$380_$",
															"typeString": "function (contract IERC20,address,uint256)"
														}
													},
													"id": 1654,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5848:55:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1655,
												"nodeType": "ExpressionStatement",
												"src": "5848:55:11"
											}
										]
									},
									"functionSelector": "8980f11f",
									"id": 1657,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1635,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1634,
												"name": "onlyOwner",
												"nameLocations": [
													"5738:9:11"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "5738:9:11"
											},
											"nodeType": "ModifierInvocation",
											"src": "5738:9:11"
										}
									],
									"name": "recoverERC20",
									"nameLocation": "5673:12:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1633,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1630,
												"mutability": "mutable",
												"name": "tokenAddress",
												"nameLocation": "5694:12:11",
												"nodeType": "VariableDeclaration",
												"scope": 1657,
												"src": "5686:20:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1629,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5686:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1632,
												"mutability": "mutable",
												"name": "tokenAmount",
												"nameLocation": "5716:11:11",
												"nodeType": "VariableDeclaration",
												"scope": 1657,
												"src": "5708:19:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1631,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5708:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5685:43:11"
									},
									"returnParameters": {
										"id": 1636,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5748:0:11"
									},
									"scope": 1658,
									"src": "5664:247:11",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1659,
							"src": "301:5613:11",
							"usedErrors": [
								13,
								18,
								394
							],
							"usedEvents": [
								24,
								1161,
								1167,
								1173,
								1177
							]
						}
					],
					"src": "33:5883:11"
				},
				"id": 11
			},
			"ARY/SwapPro.sol": {
				"ast": {
					"absolutePath": "ARY/SwapPro.sol",
					"exportedSymbols": {
						"Context": [
							1080
						],
						"IDEXFactory": [
							1681
						],
						"IDEXRouter": [
							1785
						],
						"IERC20": [
							380
						],
						"IPair": [
							1701
						],
						"IWCRO": [
							1796
						],
						"Ownable": [
							147
						],
						"SwapPro": [
							2711
						],
						"Volume": [
							1801
						]
					},
					"id": 2712,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1660,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "32:23:12"
						},
						{
							"absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
							"file": "@openzeppelin/contracts/access/Ownable.sol",
							"id": 1661,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2712,
							"sourceUnit": 148,
							"src": "57:52:12",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"id": 1662,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2712,
							"sourceUnit": 381,
							"src": "111:56:12",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IDEXFactory",
							"contractDependencies": [],
							"contractKind": "interface",
							"fullyImplemented": false,
							"id": 1681,
							"linearizedBaseContracts": [
								1681
							],
							"name": "IDEXFactory",
							"nameLocation": "181:11:12",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"functionSelector": "c9c65396",
									"id": 1671,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "createPair",
									"nameLocation": "209:10:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1667,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1664,
												"mutability": "mutable",
												"name": "tokenA",
												"nameLocation": "238:6:12",
												"nodeType": "VariableDeclaration",
												"scope": 1671,
												"src": "230:14:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1663,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "230:7:12",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1666,
												"mutability": "mutable",
												"name": "tokenB",
												"nameLocation": "263:6:12",
												"nodeType": "VariableDeclaration",
												"scope": 1671,
												"src": "255:14:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1665,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "255:7:12",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "219:57:12"
									},
									"returnParameters": {
										"id": 1670,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1669,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1671,
												"src": "295:7:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1668,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "295:7:12",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "294:9:12"
									},
									"scope": 1681,
									"src": "200:104:12",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "e6a43905",
									"id": 1680,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getPair",
									"nameLocation": "321:7:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1676,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1673,
												"mutability": "mutable",
												"name": "tokenA",
												"nameLocation": "347:6:12",
												"nodeType": "VariableDeclaration",
												"scope": 1680,
												"src": "339:14:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1672,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "339:7:12",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1675,
												"mutability": "mutable",
												"name": "tokenB",
												"nameLocation": "372:6:12",
												"nodeType": "VariableDeclaration",
												"scope": 1680,
												"src": "364:14:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1674,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "364:7:12",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "328:57:12"
									},
									"returnParameters": {
										"id": 1679,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1678,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1680,
												"src": "404:7:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1677,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "404:7:12",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "403:9:12"
									},
									"scope": 1681,
									"src": "312:101:12",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 2712,
							"src": "171:245:12",
							"usedErrors": [],
							"usedEvents": []
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IPair",
							"contractDependencies": [],
							"contractKind": "interface",
							"fullyImplemented": false,
							"id": 1701,
							"linearizedBaseContracts": [
								1701
							],
							"name": "IPair",
							"nameLocation": "430:5:12",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"functionSelector": "0dfe1681",
									"id": 1686,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "token0",
									"nameLocation": "511:6:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1682,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "517:2:12"
									},
									"returnParameters": {
										"id": 1685,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1684,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1686,
												"src": "543:7:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1683,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "543:7:12",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "542:9:12"
									},
									"scope": 1701,
									"src": "502:50:12",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "d21220a7",
									"id": 1691,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "token1",
									"nameLocation": "567:6:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1687,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "573:2:12"
									},
									"returnParameters": {
										"id": 1690,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1689,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1691,
												"src": "599:7:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1688,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "599:7:12",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "598:9:12"
									},
									"scope": 1701,
									"src": "558:50:12",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "0902f1ac",
									"id": 1700,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getReserves",
									"nameLocation": "623:11:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1692,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "634:2:12"
									},
									"returnParameters": {
										"id": 1699,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1694,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1700,
												"src": "660:7:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint112",
													"typeString": "uint112"
												},
												"typeName": {
													"id": 1693,
													"name": "uint112",
													"nodeType": "ElementaryTypeName",
													"src": "660:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint112",
														"typeString": "uint112"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1696,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1700,
												"src": "669:7:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint112",
													"typeString": "uint112"
												},
												"typeName": {
													"id": 1695,
													"name": "uint112",
													"nodeType": "ElementaryTypeName",
													"src": "669:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint112",
														"typeString": "uint112"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1698,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1700,
												"src": "678:6:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint32",
													"typeString": "uint32"
												},
												"typeName": {
													"id": 1697,
													"name": "uint32",
													"nodeType": "ElementaryTypeName",
													"src": "678:6:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint32",
														"typeString": "uint32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "659:26:12"
									},
									"scope": 1701,
									"src": "614:72:12",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 2712,
							"src": "420:269:12",
							"usedErrors": [],
							"usedEvents": []
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IDEXRouter",
							"contractDependencies": [],
							"contractKind": "interface",
							"fullyImplemented": false,
							"id": 1785,
							"linearizedBaseContracts": [
								1785
							],
							"name": "IDEXRouter",
							"nameLocation": "703:10:12",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"functionSelector": "c45a0155",
									"id": 1706,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "factory",
									"nameLocation": "730:7:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1702,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "737:2:12"
									},
									"returnParameters": {
										"id": 1705,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1704,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1706,
												"src": "763:7:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1703,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "763:7:12",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "762:9:12"
									},
									"scope": 1785,
									"src": "721:51:12",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "ad5c4648",
									"id": 1711,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "WETH",
									"nameLocation": "787:4:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1707,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "791:2:12"
									},
									"returnParameters": {
										"id": 1710,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1709,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1711,
												"src": "817:7:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1708,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "817:7:12",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "816:9:12"
									},
									"scope": 1785,
									"src": "778:48:12",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "5c11d795",
									"id": 1725,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "swapExactTokensForTokensSupportingFeeOnTransferTokens",
									"nameLocation": "843:53:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1723,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1713,
												"mutability": "mutable",
												"name": "amountIn",
												"nameLocation": "912:8:12",
												"nodeType": "VariableDeclaration",
												"scope": 1725,
												"src": "907:13:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1712,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "907:4:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1715,
												"mutability": "mutable",
												"name": "amountOutMin",
												"nameLocation": "936:12:12",
												"nodeType": "VariableDeclaration",
												"scope": 1725,
												"src": "931:17:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1714,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "931:4:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1718,
												"mutability": "mutable",
												"name": "path",
												"nameLocation": "978:4:12",
												"nodeType": "VariableDeclaration",
												"scope": 1725,
												"src": "959:23:12",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
													"typeString": "address[]"
												},
												"typeName": {
													"baseType": {
														"id": 1716,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "959:7:12",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 1717,
													"nodeType": "ArrayTypeName",
													"src": "959:9:12",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
														"typeString": "address[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1720,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1001:2:12",
												"nodeType": "VariableDeclaration",
												"scope": 1725,
												"src": "993:10:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1719,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "993:7:12",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1722,
												"mutability": "mutable",
												"name": "deadline",
												"nameLocation": "1019:8:12",
												"nodeType": "VariableDeclaration",
												"scope": 1725,
												"src": "1014:13:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1721,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1014:4:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "896:138:12"
									},
									"returnParameters": {
										"id": 1724,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1043:0:12"
									},
									"scope": 1785,
									"src": "834:210:12",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "b6f9de95",
									"id": 1737,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "swapExactETHForTokensSupportingFeeOnTransferTokens",
									"nameLocation": "1061:50:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1735,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1727,
												"mutability": "mutable",
												"name": "amountOutMin",
												"nameLocation": "1127:12:12",
												"nodeType": "VariableDeclaration",
												"scope": 1737,
												"src": "1122:17:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1726,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1122:4:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1730,
												"mutability": "mutable",
												"name": "path",
												"nameLocation": "1169:4:12",
												"nodeType": "VariableDeclaration",
												"scope": 1737,
												"src": "1150:23:12",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
													"typeString": "address[]"
												},
												"typeName": {
													"baseType": {
														"id": 1728,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "1150:7:12",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 1729,
													"nodeType": "ArrayTypeName",
													"src": "1150:9:12",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
														"typeString": "address[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1732,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1192:2:12",
												"nodeType": "VariableDeclaration",
												"scope": 1737,
												"src": "1184:10:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1731,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1184:7:12",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1734,
												"mutability": "mutable",
												"name": "deadline",
												"nameLocation": "1210:8:12",
												"nodeType": "VariableDeclaration",
												"scope": 1737,
												"src": "1205:13:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1733,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1205:4:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1111:114:12"
									},
									"returnParameters": {
										"id": 1736,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1242:0:12"
									},
									"scope": 1785,
									"src": "1052:191:12",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "791ac947",
									"id": 1751,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "swapExactTokensForETHSupportingFeeOnTransferTokens",
									"nameLocation": "1260:50:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1749,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1739,
												"mutability": "mutable",
												"name": "amountIn",
												"nameLocation": "1326:8:12",
												"nodeType": "VariableDeclaration",
												"scope": 1751,
												"src": "1321:13:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1738,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1321:4:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1741,
												"mutability": "mutable",
												"name": "amountOutMin",
												"nameLocation": "1350:12:12",
												"nodeType": "VariableDeclaration",
												"scope": 1751,
												"src": "1345:17:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1740,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1345:4:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1744,
												"mutability": "mutable",
												"name": "path",
												"nameLocation": "1392:4:12",
												"nodeType": "VariableDeclaration",
												"scope": 1751,
												"src": "1373:23:12",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
													"typeString": "address[]"
												},
												"typeName": {
													"baseType": {
														"id": 1742,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "1373:7:12",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 1743,
													"nodeType": "ArrayTypeName",
													"src": "1373:9:12",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
														"typeString": "address[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1746,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1415:2:12",
												"nodeType": "VariableDeclaration",
												"scope": 1751,
												"src": "1407:10:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1745,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1407:7:12",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1748,
												"mutability": "mutable",
												"name": "deadline",
												"nameLocation": "1433:8:12",
												"nodeType": "VariableDeclaration",
												"scope": 1751,
												"src": "1428:13:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1747,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1428:4:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1310:138:12"
									},
									"returnParameters": {
										"id": 1750,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1457:0:12"
									},
									"scope": 1785,
									"src": "1251:207:12",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "1f00ca74",
									"id": 1762,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getAmountsIn",
									"nameLocation": "1475:12:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1757,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1753,
												"mutability": "mutable",
												"name": "amountOut",
												"nameLocation": "1506:9:12",
												"nodeType": "VariableDeclaration",
												"scope": 1762,
												"src": "1498:17:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1752,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1498:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1756,
												"mutability": "mutable",
												"name": "path",
												"nameLocation": "1545:4:12",
												"nodeType": "VariableDeclaration",
												"scope": 1762,
												"src": "1526:23:12",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
													"typeString": "address[]"
												},
												"typeName": {
													"baseType": {
														"id": 1754,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "1526:7:12",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 1755,
													"nodeType": "ArrayTypeName",
													"src": "1526:9:12",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
														"typeString": "address[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1487:69:12"
									},
									"returnParameters": {
										"id": 1761,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1760,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1762,
												"src": "1580:16:12",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1758,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "1580:7:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1759,
													"nodeType": "ArrayTypeName",
													"src": "1580:9:12",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1579:18:12"
									},
									"scope": 1785,
									"src": "1466:132:12",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "054d50d4",
									"id": 1773,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getAmountOut",
									"nameLocation": "1615:12:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1769,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1764,
												"mutability": "mutable",
												"name": "amountIn",
												"nameLocation": "1646:8:12",
												"nodeType": "VariableDeclaration",
												"scope": 1773,
												"src": "1638:16:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1763,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1638:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1766,
												"mutability": "mutable",
												"name": "reserveIn",
												"nameLocation": "1673:9:12",
												"nodeType": "VariableDeclaration",
												"scope": 1773,
												"src": "1665:17:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1765,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1665:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1768,
												"mutability": "mutable",
												"name": "reserveOut",
												"nameLocation": "1701:10:12",
												"nodeType": "VariableDeclaration",
												"scope": 1773,
												"src": "1693:18:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1767,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1693:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1627:91:12"
									},
									"returnParameters": {
										"id": 1772,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1771,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1773,
												"src": "1742:7:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1770,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1742:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1741:9:12"
									},
									"scope": 1785,
									"src": "1606:145:12",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "d06ca61f",
									"id": 1784,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getAmountsOut",
									"nameLocation": "1769:13:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1779,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1775,
												"mutability": "mutable",
												"name": "amountIn",
												"nameLocation": "1801:8:12",
												"nodeType": "VariableDeclaration",
												"scope": 1784,
												"src": "1793:16:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1774,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1793:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1778,
												"mutability": "mutable",
												"name": "path",
												"nameLocation": "1839:4:12",
												"nodeType": "VariableDeclaration",
												"scope": 1784,
												"src": "1820:23:12",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
													"typeString": "address[]"
												},
												"typeName": {
													"baseType": {
														"id": 1776,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "1820:7:12",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 1777,
													"nodeType": "ArrayTypeName",
													"src": "1820:9:12",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
														"typeString": "address[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1782:68:12"
									},
									"returnParameters": {
										"id": 1783,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1782,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1784,
												"src": "1874:16:12",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1780,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "1874:7:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1781,
													"nodeType": "ArrayTypeName",
													"src": "1874:9:12",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1873:18:12"
									},
									"scope": 1785,
									"src": "1760:132:12",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 2712,
							"src": "693:1202:12",
							"usedErrors": [],
							"usedEvents": []
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 1786,
										"name": "IERC20",
										"nameLocations": [
											"1918:6:12"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 380,
										"src": "1918:6:12"
									},
									"id": 1787,
									"nodeType": "InheritanceSpecifier",
									"src": "1918:6:12"
								}
							],
							"canonicalName": "IWCRO",
							"contractDependencies": [],
							"contractKind": "interface",
							"fullyImplemented": false,
							"id": 1796,
							"linearizedBaseContracts": [
								1796,
								380
							],
							"name": "IWCRO",
							"nameLocation": "1909:5:12",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"functionSelector": "d0e30db0",
									"id": 1790,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "deposit",
									"nameLocation": "1941:7:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1788,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1949:2:12"
									},
									"returnParameters": {
										"id": 1789,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1968:0:12"
									},
									"scope": 1796,
									"src": "1932:37:12",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "2e1a7d4d",
									"id": 1795,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "withdraw",
									"nameLocation": "1990:8:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1793,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1792,
												"mutability": "mutable",
												"name": "wad",
												"nameLocation": "2018:3:12",
												"nodeType": "VariableDeclaration",
												"scope": 1795,
												"src": "2010:11:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1791,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2010:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1999:29:12"
									},
									"returnParameters": {
										"id": 1794,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2037:0:12"
									},
									"scope": 1796,
									"src": "1981:57:12",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 2712,
							"src": "1899:142:12",
							"usedErrors": [],
							"usedEvents": [
								314,
								323
							]
						},
						{
							"canonicalName": "Volume",
							"id": 1801,
							"members": [
								{
									"constant": false,
									"id": 1798,
									"mutability": "mutable",
									"name": "user",
									"nameLocation": "2074:4:12",
									"nodeType": "VariableDeclaration",
									"scope": 1801,
									"src": "2066:12:12",
									"stateVariable": false,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 1797,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "2066:7:12",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 1800,
									"mutability": "mutable",
									"name": "volume",
									"nameLocation": "2093:6:12",
									"nodeType": "VariableDeclaration",
									"scope": 1801,
									"src": "2085:14:12",
									"stateVariable": false,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1799,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "2085:7:12",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "internal"
								}
							],
							"name": "Volume",
							"nameLocation": "2052:6:12",
							"nodeType": "StructDefinition",
							"scope": 2712,
							"src": "2045:58:12",
							"visibility": "public"
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 1802,
										"name": "Ownable",
										"nameLocations": [
											"2127:7:12"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 147,
										"src": "2127:7:12"
									},
									"id": 1803,
									"nodeType": "InheritanceSpecifier",
									"src": "2127:7:12"
								}
							],
							"canonicalName": "SwapPro",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 2711,
							"linearizedBaseContracts": [
								2711,
								147,
								1080
							],
							"name": "SwapPro",
							"nameLocation": "2116:7:12",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": true,
									"functionSelector": "a37b9e7f",
									"id": 1806,
									"mutability": "constant",
									"name": "CUSDC",
									"nameLocation": "2166:5:12",
									"nodeType": "VariableDeclaration",
									"scope": 2711,
									"src": "2142:74:12",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 1804,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "2142:7:12",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"value": {
										"hexValue": "307863323132323332343943413238333937423442363534316466466145634335333942664630633539",
										"id": 1805,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "2174:42:12",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										},
										"value": "0xc21223249CA28397B4B6541dfFaEcC539BfF0c59"
									},
									"visibility": "public"
								},
								{
									"constant": true,
									"functionSelector": "6504fbad",
									"id": 1809,
									"mutability": "constant",
									"name": "CUSDT",
									"nameLocation": "2247:5:12",
									"nodeType": "VariableDeclaration",
									"scope": 2711,
									"src": "2223:74:12",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 1807,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "2223:7:12",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"value": {
										"hexValue": "307836366534323863336636376136383837383536326537394130323334633146383363323038373730",
										"id": 1808,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "2255:42:12",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										},
										"value": "0x66e428c3f67a68878562e79A0234c1F83c208770"
									},
									"visibility": "public"
								},
								{
									"constant": true,
									"functionSelector": "1d470cb1",
									"id": 1812,
									"mutability": "constant",
									"name": "WCRO",
									"nameLocation": "2328:4:12",
									"nodeType": "VariableDeclaration",
									"scope": 2711,
									"src": "2304:73:12",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 1810,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "2304:7:12",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"value": {
										"hexValue": "307835433746384135373064353738454438344536336664464137623165453732644561653141453233",
										"id": 1811,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "2335:42:12",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										},
										"value": "0x5C7F8A570d578ED84E63fdFA7b1eE72dEae1AE23"
									},
									"visibility": "public"
								},
								{
									"constant": true,
									"functionSelector": "afe43b94",
									"id": 1815,
									"mutability": "constant",
									"name": "ARY",
									"nameLocation": "2408:3:12",
									"nodeType": "VariableDeclaration",
									"scope": 2711,
									"src": "2384:72:12",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 1813,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "2384:7:12",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"value": {
										"hexValue": "307834316263303236644142653937386263324641666541313835303435363531316361344230316263",
										"id": 1814,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "2414:42:12",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										},
										"value": "0x41bc026dABe978bc2FAfeA1850456511ca4B01bc"
									},
									"visibility": "public"
								},
								{
									"constant": true,
									"functionSelector": "b0befe63",
									"id": 1818,
									"mutability": "constant",
									"name": "MERY",
									"nameLocation": "2487:4:12",
									"nodeType": "VariableDeclaration",
									"scope": 2711,
									"src": "2463:73:12",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 1816,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "2463:7:12",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"value": {
										"hexValue": "307833623431423237453734446433363643453237634233383964633738373744346531353136643464",
										"id": 1817,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "2494:42:12",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										},
										"value": "0x3b41B27E74Dd366CE27cB389dc7877D4e1516d4d"
									},
									"visibility": "public"
								},
								{
									"constant": true,
									"functionSelector": "d7b7d3f3",
									"id": 1821,
									"mutability": "constant",
									"name": "DEXROUTER",
									"nameLocation": "2567:9:12",
									"nodeType": "VariableDeclaration",
									"scope": 2711,
									"src": "2543:87:12",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 1819,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "2543:7:12",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"value": {
										"hexValue": "307831343538363345623432436636323834374136436137383465363431364331363832623162324165",
										"id": 1820,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "2588:42:12",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										},
										"value": "0x145863Eb42Cf62847A6Ca784e6416C1682b1b2Ae"
									},
									"visibility": "public"
								},
								{
									"constant": true,
									"functionSelector": "7c6f8fae",
									"id": 1824,
									"mutability": "constant",
									"name": "DEXFACTORY",
									"nameLocation": "2661:10:12",
									"nodeType": "VariableDeclaration",
									"scope": 2711,
									"src": "2637:88:12",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 1822,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "2637:7:12",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"value": {
										"hexValue": "307833423434423261313837613762333832343133314638646235613734313934443061343246633135",
										"id": 1823,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "2683:42:12",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										},
										"value": "0x3B44B2a187a7b3824131F8db5a74194D0a42Fc15"
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "b3f00674",
									"id": 1826,
									"mutability": "mutable",
									"name": "feeReceiver",
									"nameLocation": "2747:11:12",
									"nodeType": "VariableDeclaration",
									"scope": 2711,
									"src": "2732:26:12",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 1825,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "2732:7:12",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "7fd6f15c",
									"id": 1828,
									"mutability": "mutable",
									"name": "feePercent",
									"nameLocation": "2780:10:12",
									"nodeType": "VariableDeclaration",
									"scope": 2711,
									"src": "2765:25:12",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1827,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "2765:7:12",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "ac65334f",
									"id": 1831,
									"mutability": "mutable",
									"name": "competition_started",
									"nameLocation": "2809:19:12",
									"nodeType": "VariableDeclaration",
									"scope": 2711,
									"src": "2797:39:12",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bool",
										"typeString": "bool"
									},
									"typeName": {
										"id": 1829,
										"name": "bool",
										"nodeType": "ElementaryTypeName",
										"src": "2797:4:12",
										"typeDescriptions": {
											"typeIdentifier": "t_bool",
											"typeString": "bool"
										}
									},
									"value": {
										"hexValue": "66616c7365",
										"id": 1830,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "bool",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "2831:5:12",
										"typeDescriptions": {
											"typeIdentifier": "t_bool",
											"typeString": "bool"
										},
										"value": "false"
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "a6769ef8",
									"id": 1835,
									"mutability": "mutable",
									"name": "userVolume",
									"nameLocation": "2878:10:12",
									"nodeType": "VariableDeclaration",
									"scope": 2711,
									"src": "2843:45:12",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 1834,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 1832,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "2851:7:12",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "2843:27:12",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 1833,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "2862:7:12",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 1839,
									"mutability": "mutable",
									"name": "isExistAddress",
									"nameLocation": "2920:14:12",
									"nodeType": "VariableDeclaration",
									"scope": 2711,
									"src": "2895:39:12",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
										"typeString": "mapping(address => bool)"
									},
									"typeName": {
										"id": 1838,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 1836,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "2903:7:12",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "2895:24:12",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
											"typeString": "mapping(address => bool)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 1837,
											"name": "bool",
											"nodeType": "ElementaryTypeName",
											"src": "2914:4:12",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											}
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"functionSelector": "edf26d9b",
									"id": 1842,
									"mutability": "mutable",
									"name": "addresses",
									"nameLocation": "2958:9:12",
									"nodeType": "VariableDeclaration",
									"scope": 2711,
									"src": "2941:26:12",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_array$_t_address_$dyn_storage",
										"typeString": "address[]"
									},
									"typeName": {
										"baseType": {
											"id": 1840,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "2941:7:12",
											"stateMutability": "nonpayable",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"id": 1841,
										"nodeType": "ArrayTypeName",
										"src": "2941:9:12",
										"typeDescriptions": {
											"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
											"typeString": "address[]"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 1845,
									"mutability": "mutable",
									"name": "factory",
									"nameLocation": "2988:7:12",
									"nodeType": "VariableDeclaration",
									"scope": 2711,
									"src": "2976:19:12",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_contract$_IDEXFactory_$1681",
										"typeString": "contract IDEXFactory"
									},
									"typeName": {
										"id": 1844,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 1843,
											"name": "IDEXFactory",
											"nameLocations": [
												"2976:11:12"
											],
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 1681,
											"src": "2976:11:12"
										},
										"referencedDeclaration": 1681,
										"src": "2976:11:12",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IDEXFactory_$1681",
											"typeString": "contract IDEXFactory"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 1848,
									"mutability": "mutable",
									"name": "router",
									"nameLocation": "3013:6:12",
									"nodeType": "VariableDeclaration",
									"scope": 2711,
									"src": "3002:17:12",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_contract$_IDEXRouter_$1785",
										"typeString": "contract IDEXRouter"
									},
									"typeName": {
										"id": 1847,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 1846,
											"name": "IDEXRouter",
											"nameLocations": [
												"3002:10:12"
											],
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 1785,
											"src": "3002:10:12"
										},
										"referencedDeclaration": 1785,
										"src": "3002:10:12",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IDEXRouter_$1785",
											"typeString": "contract IDEXRouter"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 1851,
									"mutability": "mutable",
									"name": "cusdc",
									"nameLocation": "3033:5:12",
									"nodeType": "VariableDeclaration",
									"scope": 2711,
									"src": "3026:12:12",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_contract$_IERC20_$380",
										"typeString": "contract IERC20"
									},
									"typeName": {
										"id": 1850,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 1849,
											"name": "IERC20",
											"nameLocations": [
												"3026:6:12"
											],
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 380,
											"src": "3026:6:12"
										},
										"referencedDeclaration": 380,
										"src": "3026:6:12",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IERC20_$380",
											"typeString": "contract IERC20"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 1854,
									"mutability": "mutable",
									"name": "cusdt",
									"nameLocation": "3052:5:12",
									"nodeType": "VariableDeclaration",
									"scope": 2711,
									"src": "3045:12:12",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_contract$_IERC20_$380",
										"typeString": "contract IERC20"
									},
									"typeName": {
										"id": 1853,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 1852,
											"name": "IERC20",
											"nameLocations": [
												"3045:6:12"
											],
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 380,
											"src": "3045:6:12"
										},
										"referencedDeclaration": 380,
										"src": "3045:6:12",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IERC20_$380",
											"typeString": "contract IERC20"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 1857,
									"mutability": "mutable",
									"name": "ary",
									"nameLocation": "3071:3:12",
									"nodeType": "VariableDeclaration",
									"scope": 2711,
									"src": "3064:10:12",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_contract$_IERC20_$380",
										"typeString": "contract IERC20"
									},
									"typeName": {
										"id": 1856,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 1855,
											"name": "IERC20",
											"nameLocations": [
												"3064:6:12"
											],
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 380,
											"src": "3064:6:12"
										},
										"referencedDeclaration": 380,
										"src": "3064:6:12",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IERC20_$380",
											"typeString": "contract IERC20"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 1860,
									"mutability": "mutable",
									"name": "mery",
									"nameLocation": "3088:4:12",
									"nodeType": "VariableDeclaration",
									"scope": 2711,
									"src": "3081:11:12",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_contract$_IERC20_$380",
										"typeString": "contract IERC20"
									},
									"typeName": {
										"id": 1859,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 1858,
											"name": "IERC20",
											"nameLocations": [
												"3081:6:12"
											],
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 380,
											"src": "3081:6:12"
										},
										"referencedDeclaration": 380,
										"src": "3081:6:12",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IERC20_$380",
											"typeString": "contract IERC20"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 1863,
									"mutability": "mutable",
									"name": "wcro",
									"nameLocation": "3105:4:12",
									"nodeType": "VariableDeclaration",
									"scope": 2711,
									"src": "3099:10:12",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_contract$_IWCRO_$1796",
										"typeString": "contract IWCRO"
									},
									"typeName": {
										"id": 1862,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 1861,
											"name": "IWCRO",
											"nameLocations": [
												"3099:5:12"
											],
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 1796,
											"src": "3099:5:12"
										},
										"referencedDeclaration": 1796,
										"src": "3099:5:12",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IWCRO_$1796",
											"typeString": "contract IWCRO"
										}
									},
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1976,
										"nodeType": "Block",
										"src": "3152:608:12",
										"statements": [
											{
												"expression": {
													"id": 1874,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1870,
														"name": "factory",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1845,
														"src": "3163:7:12",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IDEXFactory_$1681",
															"typeString": "contract IDEXFactory"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 1872,
																"name": "DEXFACTORY",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1824,
																"src": "3185:10:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 1871,
															"name": "IDEXFactory",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1681,
															"src": "3173:11:12",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_IDEXFactory_$1681_$",
																"typeString": "type(contract IDEXFactory)"
															}
														},
														"id": 1873,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "3173:23:12",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IDEXFactory_$1681",
															"typeString": "contract IDEXFactory"
														}
													},
													"src": "3163:33:12",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IDEXFactory_$1681",
														"typeString": "contract IDEXFactory"
													}
												},
												"id": 1875,
												"nodeType": "ExpressionStatement",
												"src": "3163:33:12"
											},
											{
												"expression": {
													"id": 1880,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1876,
														"name": "router",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1848,
														"src": "3207:6:12",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IDEXRouter_$1785",
															"typeString": "contract IDEXRouter"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 1878,
																"name": "DEXROUTER",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1821,
																"src": "3227:9:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 1877,
															"name": "IDEXRouter",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1785,
															"src": "3216:10:12",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_IDEXRouter_$1785_$",
																"typeString": "type(contract IDEXRouter)"
															}
														},
														"id": 1879,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "3216:21:12",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IDEXRouter_$1785",
															"typeString": "contract IDEXRouter"
														}
													},
													"src": "3207:30:12",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IDEXRouter_$1785",
														"typeString": "contract IDEXRouter"
													}
												},
												"id": 1881,
												"nodeType": "ExpressionStatement",
												"src": "3207:30:12"
											},
											{
												"expression": {
													"id": 1886,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1882,
														"name": "cusdc",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1851,
														"src": "3248:5:12",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IERC20_$380",
															"typeString": "contract IERC20"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 1884,
																"name": "CUSDC",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1806,
																"src": "3263:5:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 1883,
															"name": "IERC20",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 380,
															"src": "3256:6:12",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_IERC20_$380_$",
																"typeString": "type(contract IERC20)"
															}
														},
														"id": 1885,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "3256:13:12",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IERC20_$380",
															"typeString": "contract IERC20"
														}
													},
													"src": "3248:21:12",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$380",
														"typeString": "contract IERC20"
													}
												},
												"id": 1887,
												"nodeType": "ExpressionStatement",
												"src": "3248:21:12"
											},
											{
												"expression": {
													"id": 1892,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1888,
														"name": "cusdt",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1854,
														"src": "3280:5:12",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IERC20_$380",
															"typeString": "contract IERC20"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 1890,
																"name": "CUSDT",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1809,
																"src": "3295:5:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 1889,
															"name": "IERC20",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 380,
															"src": "3288:6:12",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_IERC20_$380_$",
																"typeString": "type(contract IERC20)"
															}
														},
														"id": 1891,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "3288:13:12",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IERC20_$380",
															"typeString": "contract IERC20"
														}
													},
													"src": "3280:21:12",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$380",
														"typeString": "contract IERC20"
													}
												},
												"id": 1893,
												"nodeType": "ExpressionStatement",
												"src": "3280:21:12"
											},
											{
												"expression": {
													"id": 1898,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1894,
														"name": "ary",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1857,
														"src": "3312:3:12",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IERC20_$380",
															"typeString": "contract IERC20"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 1896,
																"name": "ARY",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1815,
																"src": "3325:3:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 1895,
															"name": "IERC20",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 380,
															"src": "3318:6:12",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_IERC20_$380_$",
																"typeString": "type(contract IERC20)"
															}
														},
														"id": 1897,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "3318:11:12",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IERC20_$380",
															"typeString": "contract IERC20"
														}
													},
													"src": "3312:17:12",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$380",
														"typeString": "contract IERC20"
													}
												},
												"id": 1899,
												"nodeType": "ExpressionStatement",
												"src": "3312:17:12"
											},
											{
												"expression": {
													"id": 1904,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1900,
														"name": "mery",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1860,
														"src": "3340:4:12",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IERC20_$380",
															"typeString": "contract IERC20"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 1902,
																"name": "MERY",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1818,
																"src": "3354:4:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 1901,
															"name": "IERC20",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 380,
															"src": "3347:6:12",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_IERC20_$380_$",
																"typeString": "type(contract IERC20)"
															}
														},
														"id": 1903,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "3347:12:12",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IERC20_$380",
															"typeString": "contract IERC20"
														}
													},
													"src": "3340:19:12",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$380",
														"typeString": "contract IERC20"
													}
												},
												"id": 1905,
												"nodeType": "ExpressionStatement",
												"src": "3340:19:12"
											},
											{
												"expression": {
													"id": 1910,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1906,
														"name": "wcro",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1863,
														"src": "3370:4:12",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IWCRO_$1796",
															"typeString": "contract IWCRO"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 1908,
																"name": "WCRO",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1812,
																"src": "3383:4:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 1907,
															"name": "IWCRO",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1796,
															"src": "3377:5:12",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_IWCRO_$1796_$",
																"typeString": "type(contract IWCRO)"
															}
														},
														"id": 1909,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "3377:11:12",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IWCRO_$1796",
															"typeString": "contract IWCRO"
														}
													},
													"src": "3370:18:12",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IWCRO_$1796",
														"typeString": "contract IWCRO"
													}
												},
												"id": 1911,
												"nodeType": "ExpressionStatement",
												"src": "3370:18:12"
											},
											{
												"expression": {
													"id": 1915,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1912,
														"name": "feeReceiver",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1826,
														"src": "3399:11:12",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"expression": {
															"id": 1913,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967281,
															"src": "3413:3:12",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 1914,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3417:6:12",
														"memberName": "sender",
														"nodeType": "MemberAccess",
														"src": "3413:10:12",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "3399:24:12",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 1916,
												"nodeType": "ExpressionStatement",
												"src": "3399:24:12"
											},
											{
												"expression": {
													"id": 1919,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1917,
														"name": "feePercent",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1828,
														"src": "3434:10:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "33",
														"id": 1918,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3447:1:12",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_3_by_1",
															"typeString": "int_const 3"
														},
														"value": "3"
													},
													"src": "3434:14:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1920,
												"nodeType": "ExpressionStatement",
												"src": "3434:14:12"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1924,
															"name": "DEXROUTER",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1821,
															"src": "3511:9:12",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"expression": {
																"arguments": [
																	{
																		"id": 1927,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "3527:7:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_uint256_$",
																			"typeString": "type(uint256)"
																		},
																		"typeName": {
																			"id": 1926,
																			"name": "uint256",
																			"nodeType": "ElementaryTypeName",
																			"src": "3527:7:12",
																			"typeDescriptions": {}
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_type$_t_uint256_$",
																			"typeString": "type(uint256)"
																		}
																	],
																	"id": 1925,
																	"name": "type",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967269,
																	"src": "3522:4:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																		"typeString": "function () pure"
																	}
																},
																"id": 1928,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3522:13:12",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_meta_type_t_uint256",
																	"typeString": "type(uint256)"
																}
															},
															"id": 1929,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"memberLocation": "3536:3:12",
															"memberName": "max",
															"nodeType": "MemberAccess",
															"src": "3522:17:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 1921,
															"name": "cusdc",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1851,
															"src": "3497:5:12",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$380",
																"typeString": "contract IERC20"
															}
														},
														"id": 1923,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3503:7:12",
														"memberName": "approve",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 367,
														"src": "3497:13:12",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
															"typeString": "function (address,uint256) external returns (bool)"
														}
													},
													"id": 1930,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3497:43:12",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1931,
												"nodeType": "ExpressionStatement",
												"src": "3497:43:12"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1935,
															"name": "DEXROUTER",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1821,
															"src": "3565:9:12",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"expression": {
																"arguments": [
																	{
																		"id": 1938,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "3581:7:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_uint256_$",
																			"typeString": "type(uint256)"
																		},
																		"typeName": {
																			"id": 1937,
																			"name": "uint256",
																			"nodeType": "ElementaryTypeName",
																			"src": "3581:7:12",
																			"typeDescriptions": {}
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_type$_t_uint256_$",
																			"typeString": "type(uint256)"
																		}
																	],
																	"id": 1936,
																	"name": "type",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967269,
																	"src": "3576:4:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																		"typeString": "function () pure"
																	}
																},
																"id": 1939,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3576:13:12",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_meta_type_t_uint256",
																	"typeString": "type(uint256)"
																}
															},
															"id": 1940,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"memberLocation": "3590:3:12",
															"memberName": "max",
															"nodeType": "MemberAccess",
															"src": "3576:17:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 1932,
															"name": "cusdt",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1854,
															"src": "3551:5:12",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$380",
																"typeString": "contract IERC20"
															}
														},
														"id": 1934,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3557:7:12",
														"memberName": "approve",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 367,
														"src": "3551:13:12",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
															"typeString": "function (address,uint256) external returns (bool)"
														}
													},
													"id": 1941,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3551:43:12",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1942,
												"nodeType": "ExpressionStatement",
												"src": "3551:43:12"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1946,
															"name": "DEXROUTER",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1821,
															"src": "3617:9:12",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"expression": {
																"arguments": [
																	{
																		"id": 1949,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "3633:7:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_uint256_$",
																			"typeString": "type(uint256)"
																		},
																		"typeName": {
																			"id": 1948,
																			"name": "uint256",
																			"nodeType": "ElementaryTypeName",
																			"src": "3633:7:12",
																			"typeDescriptions": {}
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_type$_t_uint256_$",
																			"typeString": "type(uint256)"
																		}
																	],
																	"id": 1947,
																	"name": "type",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967269,
																	"src": "3628:4:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																		"typeString": "function () pure"
																	}
																},
																"id": 1950,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3628:13:12",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_meta_type_t_uint256",
																	"typeString": "type(uint256)"
																}
															},
															"id": 1951,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"memberLocation": "3642:3:12",
															"memberName": "max",
															"nodeType": "MemberAccess",
															"src": "3628:17:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 1943,
															"name": "ary",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1857,
															"src": "3605:3:12",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$380",
																"typeString": "contract IERC20"
															}
														},
														"id": 1945,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3609:7:12",
														"memberName": "approve",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 367,
														"src": "3605:11:12",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
															"typeString": "function (address,uint256) external returns (bool)"
														}
													},
													"id": 1952,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3605:41:12",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1953,
												"nodeType": "ExpressionStatement",
												"src": "3605:41:12"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1957,
															"name": "DEXROUTER",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1821,
															"src": "3670:9:12",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"expression": {
																"arguments": [
																	{
																		"id": 1960,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "3686:7:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_uint256_$",
																			"typeString": "type(uint256)"
																		},
																		"typeName": {
																			"id": 1959,
																			"name": "uint256",
																			"nodeType": "ElementaryTypeName",
																			"src": "3686:7:12",
																			"typeDescriptions": {}
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_type$_t_uint256_$",
																			"typeString": "type(uint256)"
																		}
																	],
																	"id": 1958,
																	"name": "type",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967269,
																	"src": "3681:4:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																		"typeString": "function () pure"
																	}
																},
																"id": 1961,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3681:13:12",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_meta_type_t_uint256",
																	"typeString": "type(uint256)"
																}
															},
															"id": 1962,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"memberLocation": "3695:3:12",
															"memberName": "max",
															"nodeType": "MemberAccess",
															"src": "3681:17:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 1954,
															"name": "wcro",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1863,
															"src": "3657:4:12",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IWCRO_$1796",
																"typeString": "contract IWCRO"
															}
														},
														"id": 1956,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3662:7:12",
														"memberName": "approve",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 367,
														"src": "3657:12:12",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
															"typeString": "function (address,uint256) external returns (bool)"
														}
													},
													"id": 1963,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3657:42:12",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1964,
												"nodeType": "ExpressionStatement",
												"src": "3657:42:12"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1968,
															"name": "DEXROUTER",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1821,
															"src": "3723:9:12",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"expression": {
																"arguments": [
																	{
																		"id": 1971,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "3739:7:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_uint256_$",
																			"typeString": "type(uint256)"
																		},
																		"typeName": {
																			"id": 1970,
																			"name": "uint256",
																			"nodeType": "ElementaryTypeName",
																			"src": "3739:7:12",
																			"typeDescriptions": {}
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_type$_t_uint256_$",
																			"typeString": "type(uint256)"
																		}
																	],
																	"id": 1969,
																	"name": "type",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967269,
																	"src": "3734:4:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																		"typeString": "function () pure"
																	}
																},
																"id": 1972,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3734:13:12",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_meta_type_t_uint256",
																	"typeString": "type(uint256)"
																}
															},
															"id": 1973,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"memberLocation": "3748:3:12",
															"memberName": "max",
															"nodeType": "MemberAccess",
															"src": "3734:17:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 1965,
															"name": "mery",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1860,
															"src": "3710:4:12",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$380",
																"typeString": "contract IERC20"
															}
														},
														"id": 1967,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3715:7:12",
														"memberName": "approve",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 367,
														"src": "3710:12:12",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
															"typeString": "function (address,uint256) external returns (bool)"
														}
													},
													"id": 1974,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3710:42:12",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1975,
												"nodeType": "ExpressionStatement",
												"src": "3710:42:12"
											}
										]
									},
									"id": 1977,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [
										{
											"arguments": [
												{
													"expression": {
														"id": 1866,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "3140:3:12",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 1867,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "3144:6:12",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "3140:10:12",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												}
											],
											"id": 1868,
											"kind": "baseConstructorSpecifier",
											"modifierName": {
												"id": 1865,
												"name": "Ownable",
												"nameLocations": [
													"3132:7:12"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 147,
												"src": "3132:7:12"
											},
											"nodeType": "ModifierInvocation",
											"src": "3132:19:12"
										}
									],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1864,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3129:2:12"
									},
									"returnParameters": {
										"id": 1869,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3152:0:12"
									},
									"scope": 2711,
									"src": "3118:642:12",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 2030,
										"nodeType": "Block",
										"src": "3875:299:12",
										"statements": [
											{
												"assignments": [
													1985
												],
												"declarations": [
													{
														"constant": false,
														"id": 1985,
														"mutability": "mutable",
														"name": "n",
														"nameLocation": "3894:1:12",
														"nodeType": "VariableDeclaration",
														"scope": 2030,
														"src": "3886:9:12",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1984,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "3886:7:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1988,
												"initialValue": {
													"expression": {
														"id": 1986,
														"name": "addresses",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1842,
														"src": "3898:9:12",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_address_$dyn_storage",
															"typeString": "address[] storage ref"
														}
													},
													"id": 1987,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "3908:6:12",
													"memberName": "length",
													"nodeType": "MemberAccess",
													"src": "3898:16:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3886:28:12"
											},
											{
												"assignments": [
													1993
												],
												"declarations": [
													{
														"constant": false,
														"id": 1993,
														"mutability": "mutable",
														"name": "volumes",
														"nameLocation": "3941:7:12",
														"nodeType": "VariableDeclaration",
														"scope": 2030,
														"src": "3925:23:12",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_struct$_Volume_$1801_memory_ptr_$dyn_memory_ptr",
															"typeString": "struct Volume[]"
														},
														"typeName": {
															"baseType": {
																"id": 1991,
																"nodeType": "UserDefinedTypeName",
																"pathNode": {
																	"id": 1990,
																	"name": "Volume",
																	"nameLocations": [
																		"3925:6:12"
																	],
																	"nodeType": "IdentifierPath",
																	"referencedDeclaration": 1801,
																	"src": "3925:6:12"
																},
																"referencedDeclaration": 1801,
																"src": "3925:6:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Volume_$1801_storage_ptr",
																	"typeString": "struct Volume"
																}
															},
															"id": 1992,
															"nodeType": "ArrayTypeName",
															"src": "3925:8:12",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_struct$_Volume_$1801_storage_$dyn_storage_ptr",
																"typeString": "struct Volume[]"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2000,
												"initialValue": {
													"arguments": [
														{
															"id": 1998,
															"name": "n",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1985,
															"src": "3964:1:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1997,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "NewExpression",
														"src": "3951:12:12",
														"typeDescriptions": {
															"typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_struct$_Volume_$1801_memory_ptr_$dyn_memory_ptr_$",
															"typeString": "function (uint256) pure returns (struct Volume memory[] memory)"
														},
														"typeName": {
															"baseType": {
																"id": 1995,
																"nodeType": "UserDefinedTypeName",
																"pathNode": {
																	"id": 1994,
																	"name": "Volume",
																	"nameLocations": [
																		"3955:6:12"
																	],
																	"nodeType": "IdentifierPath",
																	"referencedDeclaration": 1801,
																	"src": "3955:6:12"
																},
																"referencedDeclaration": 1801,
																"src": "3955:6:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Volume_$1801_storage_ptr",
																	"typeString": "struct Volume"
																}
															},
															"id": 1996,
															"nodeType": "ArrayTypeName",
															"src": "3955:8:12",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_struct$_Volume_$1801_storage_$dyn_storage_ptr",
																"typeString": "struct Volume[]"
															}
														}
													},
													"id": 1999,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3951:15:12",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_struct$_Volume_$1801_memory_ptr_$dyn_memory_ptr",
														"typeString": "struct Volume memory[] memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3925:41:12"
											},
											{
												"body": {
													"id": 2026,
													"nodeType": "Block",
													"src": "4054:86:12",
													"statements": [
														{
															"expression": {
																"id": 2024,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"id": 2011,
																		"name": "volumes",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1993,
																		"src": "4069:7:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_struct$_Volume_$1801_memory_ptr_$dyn_memory_ptr",
																			"typeString": "struct Volume memory[] memory"
																		}
																	},
																	"id": 2013,
																	"indexExpression": {
																		"id": 2012,
																		"name": "i",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2002,
																		"src": "4077:1:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "4069:10:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_Volume_$1801_memory_ptr",
																		"typeString": "struct Volume memory"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"arguments": [
																		{
																			"baseExpression": {
																				"id": 2015,
																				"name": "addresses",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1842,
																				"src": "4089:9:12",
																				"typeDescriptions": {
																					"typeIdentifier": "t_array$_t_address_$dyn_storage",
																					"typeString": "address[] storage ref"
																				}
																			},
																			"id": 2017,
																			"indexExpression": {
																				"id": 2016,
																				"name": "i",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2002,
																				"src": "4099:1:12",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "4089:12:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		{
																			"baseExpression": {
																				"id": 2018,
																				"name": "userVolume",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1835,
																				"src": "4103:10:12",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																					"typeString": "mapping(address => uint256)"
																				}
																			},
																			"id": 2022,
																			"indexExpression": {
																				"baseExpression": {
																					"id": 2019,
																					"name": "addresses",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1842,
																					"src": "4114:9:12",
																					"typeDescriptions": {
																						"typeIdentifier": "t_array$_t_address_$dyn_storage",
																						"typeString": "address[] storage ref"
																					}
																				},
																				"id": 2021,
																				"indexExpression": {
																					"id": 2020,
																					"name": "i",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2002,
																					"src": "4124:1:12",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": false,
																				"nodeType": "IndexAccess",
																				"src": "4114:12:12",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "4103:24:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			},
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"id": 2014,
																		"name": "Volume",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1801,
																		"src": "4082:6:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_struct$_Volume_$1801_storage_ptr_$",
																			"typeString": "type(struct Volume storage pointer)"
																		}
																	},
																	"id": 2023,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "structConstructorCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "4082:46:12",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_Volume_$1801_memory_ptr",
																		"typeString": "struct Volume memory"
																	}
																},
																"src": "4069:59:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Volume_$1801_memory_ptr",
																	"typeString": "struct Volume memory"
																}
															},
															"id": 2025,
															"nodeType": "ExpressionStatement",
															"src": "4069:59:12"
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2007,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2005,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2002,
														"src": "4042:1:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"id": 2006,
														"name": "n",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1985,
														"src": "4046:1:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4042:5:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2027,
												"initializationExpression": {
													"assignments": [
														2002
													],
													"declarations": [
														{
															"constant": false,
															"id": 2002,
															"mutability": "mutable",
															"name": "i",
															"nameLocation": "4035:1:12",
															"nodeType": "VariableDeclaration",
															"scope": 2027,
															"src": "4027:9:12",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 2001,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "4027:7:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 2004,
													"initialValue": {
														"hexValue": "30",
														"id": 2003,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "4039:1:12",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "4027:13:12"
												},
												"loopExpression": {
													"expression": {
														"id": 2009,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": false,
														"src": "4049:3:12",
														"subExpression": {
															"id": 2008,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2002,
															"src": "4049:1:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 2010,
													"nodeType": "ExpressionStatement",
													"src": "4049:3:12"
												},
												"nodeType": "ForStatement",
												"src": "4022:118:12"
											},
											{
												"expression": {
													"id": 2028,
													"name": "volumes",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1993,
													"src": "4159:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_struct$_Volume_$1801_memory_ptr_$dyn_memory_ptr",
														"typeString": "struct Volume memory[] memory"
													}
												},
												"functionReturnParameters": 1983,
												"id": 2029,
												"nodeType": "Return",
												"src": "4152:14:12"
											}
										]
									},
									"functionSelector": "ae38a070",
									"id": 2031,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getUserVolumes",
									"nameLocation": "3818:14:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1978,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3832:2:12"
									},
									"returnParameters": {
										"id": 1983,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1982,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2031,
												"src": "3858:15:12",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_struct$_Volume_$1801_memory_ptr_$dyn_memory_ptr",
													"typeString": "struct Volume[]"
												},
												"typeName": {
													"baseType": {
														"id": 1980,
														"nodeType": "UserDefinedTypeName",
														"pathNode": {
															"id": 1979,
															"name": "Volume",
															"nameLocations": [
																"3858:6:12"
															],
															"nodeType": "IdentifierPath",
															"referencedDeclaration": 1801,
															"src": "3858:6:12"
														},
														"referencedDeclaration": 1801,
														"src": "3858:6:12",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Volume_$1801_storage_ptr",
															"typeString": "struct Volume"
														}
													},
													"id": 1981,
													"nodeType": "ArrayTypeName",
													"src": "3858:8:12",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_struct$_Volume_$1801_storage_$dyn_storage_ptr",
														"typeString": "struct Volume[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3857:17:12"
									},
									"scope": 2711,
									"src": "3809:365:12",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 2067,
										"nodeType": "Block",
										"src": "4261:211:12",
										"statements": [
											{
												"assignments": [
													2037
												],
												"declarations": [
													{
														"constant": false,
														"id": 2037,
														"mutability": "mutable",
														"name": "n",
														"nameLocation": "4280:1:12",
														"nodeType": "VariableDeclaration",
														"scope": 2067,
														"src": "4272:9:12",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2036,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "4272:7:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2040,
												"initialValue": {
													"expression": {
														"id": 2038,
														"name": "addresses",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1842,
														"src": "4284:9:12",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_address_$dyn_storage",
															"typeString": "address[] storage ref"
														}
													},
													"id": 2039,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "4294:6:12",
													"memberName": "length",
													"nodeType": "MemberAccess",
													"src": "4284:16:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4272:28:12"
											},
											{
												"body": {
													"id": 2058,
													"nodeType": "Block",
													"src": "4342:58:12",
													"statements": [
														{
															"expression": {
																"id": 2056,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "UnaryOperation",
																"operator": "delete",
																"prefix": true,
																"src": "4357:31:12",
																"subExpression": {
																	"baseExpression": {
																		"id": 2051,
																		"name": "userVolume",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1835,
																		"src": "4364:10:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																			"typeString": "mapping(address => uint256)"
																		}
																	},
																	"id": 2055,
																	"indexExpression": {
																		"baseExpression": {
																			"id": 2052,
																			"name": "addresses",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1842,
																			"src": "4375:9:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_array$_t_address_$dyn_storage",
																				"typeString": "address[] storage ref"
																			}
																		},
																		"id": 2054,
																		"indexExpression": {
																			"id": 2053,
																			"name": "i",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2042,
																			"src": "4385:1:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "4375:12:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "4364:24:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 2057,
															"nodeType": "ExpressionStatement",
															"src": "4357:31:12"
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2047,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2045,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2042,
														"src": "4330:1:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"id": 2046,
														"name": "n",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2037,
														"src": "4334:1:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4330:5:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2059,
												"initializationExpression": {
													"assignments": [
														2042
													],
													"declarations": [
														{
															"constant": false,
															"id": 2042,
															"mutability": "mutable",
															"name": "i",
															"nameLocation": "4323:1:12",
															"nodeType": "VariableDeclaration",
															"scope": 2059,
															"src": "4315:9:12",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 2041,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "4315:7:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 2044,
													"initialValue": {
														"hexValue": "30",
														"id": 2043,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "4327:1:12",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "4315:13:12"
												},
												"loopExpression": {
													"expression": {
														"id": 2049,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": false,
														"src": "4337:3:12",
														"subExpression": {
															"id": 2048,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2042,
															"src": "4337:1:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 2050,
													"nodeType": "ExpressionStatement",
													"src": "4337:3:12"
												},
												"nodeType": "ForStatement",
												"src": "4311:89:12"
											},
											{
												"expression": {
													"id": 2061,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "delete",
													"prefix": true,
													"src": "4410:16:12",
													"subExpression": {
														"id": 2060,
														"name": "addresses",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1842,
														"src": "4417:9:12",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_address_$dyn_storage",
															"typeString": "address[] storage ref"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2062,
												"nodeType": "ExpressionStatement",
												"src": "4410:16:12"
											},
											{
												"expression": {
													"id": 2065,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2063,
														"name": "competition_started",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1831,
														"src": "4437:19:12",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "66616c7365",
														"id": 2064,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "4459:5:12",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "false"
													},
													"src": "4437:27:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2066,
												"nodeType": "ExpressionStatement",
												"src": "4437:27:12"
											}
										]
									},
									"functionSelector": "39bda01c",
									"id": 2068,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 2034,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 2033,
												"name": "onlyOwner",
												"nameLocations": [
													"4252:9:12"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "4252:9:12"
											},
											"nodeType": "ModifierInvocation",
											"src": "4252:9:12"
										}
									],
									"name": "clearVolume",
									"nameLocation": "4231:11:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2032,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4242:2:12"
									},
									"returnParameters": {
										"id": 2035,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4261:0:12"
									},
									"scope": 2711,
									"src": "4222:250:12",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 2077,
										"nodeType": "Block",
										"src": "4524:46:12",
										"statements": [
											{
												"expression": {
													"id": 2075,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2073,
														"name": "competition_started",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1831,
														"src": "4535:19:12",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "66616c7365",
														"id": 2074,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "4557:5:12",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "false"
													},
													"src": "4535:27:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2076,
												"nodeType": "ExpressionStatement",
												"src": "4535:27:12"
											}
										]
									},
									"functionSelector": "5f0018cd",
									"id": 2078,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 2071,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 2070,
												"name": "onlyOwner",
												"nameLocations": [
													"4514:9:12"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "4514:9:12"
											},
											"nodeType": "ModifierInvocation",
											"src": "4514:9:12"
										}
									],
									"name": "stopCompetition",
									"nameLocation": "4489:15:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2069,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4504:2:12"
									},
									"returnParameters": {
										"id": 2072,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4524:0:12"
									},
									"scope": 2711,
									"src": "4480:90:12",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 2087,
										"nodeType": "Block",
										"src": "4621:45:12",
										"statements": [
											{
												"expression": {
													"id": 2085,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2083,
														"name": "competition_started",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1831,
														"src": "4632:19:12",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "74727565",
														"id": 2084,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "4654:4:12",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "true"
													},
													"src": "4632:26:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2086,
												"nodeType": "ExpressionStatement",
												"src": "4632:26:12"
											}
										]
									},
									"functionSelector": "d3e66a9e",
									"id": 2088,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 2081,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 2080,
												"name": "onlyOwner",
												"nameLocations": [
													"4611:9:12"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "4611:9:12"
											},
											"nodeType": "ModifierInvocation",
											"src": "4611:9:12"
										}
									],
									"name": "startCompetition",
									"nameLocation": "4585:16:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2079,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4601:2:12"
									},
									"returnParameters": {
										"id": 2082,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4621:0:12"
									},
									"scope": 2711,
									"src": "4576:90:12",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 2105,
										"nodeType": "Block",
										"src": "4811:80:12",
										"statements": [
											{
												"expression": {
													"id": 2099,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2097,
														"name": "feeReceiver",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1826,
														"src": "4822:11:12",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 2098,
														"name": "_feeReceiver",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2090,
														"src": "4836:12:12",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "4822:26:12",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 2100,
												"nodeType": "ExpressionStatement",
												"src": "4822:26:12"
											},
											{
												"expression": {
													"id": 2103,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2101,
														"name": "feePercent",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1828,
														"src": "4859:10:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 2102,
														"name": "_feePercent",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2092,
														"src": "4872:11:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4859:24:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 2104,
												"nodeType": "ExpressionStatement",
												"src": "4859:24:12"
											}
										]
									},
									"functionSelector": "3977d68d",
									"id": 2106,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 2095,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 2094,
												"name": "onlyOwner",
												"nameLocations": [
													"4801:9:12"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "4801:9:12"
											},
											"nodeType": "ModifierInvocation",
											"src": "4801:9:12"
										}
									],
									"name": "setFeeData",
									"nameLocation": "4740:10:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2093,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2090,
												"mutability": "mutable",
												"name": "_feeReceiver",
												"nameLocation": "4759:12:12",
												"nodeType": "VariableDeclaration",
												"scope": 2106,
												"src": "4751:20:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2089,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4751:7:12",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2092,
												"mutability": "mutable",
												"name": "_feePercent",
												"nameLocation": "4781:11:12",
												"nodeType": "VariableDeclaration",
												"scope": 2106,
												"src": "4773:19:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2091,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4773:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4750:43:12"
									},
									"returnParameters": {
										"id": 2096,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4811:0:12"
									},
									"scope": 2711,
									"src": "4731:160:12",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 2171,
										"nodeType": "Block",
										"src": "5002:531:12",
										"statements": [
											{
												"assignments": [
													2114
												],
												"declarations": [
													{
														"constant": false,
														"id": 2114,
														"mutability": "mutable",
														"name": "pathLen",
														"nameLocation": "5021:7:12",
														"nodeType": "VariableDeclaration",
														"scope": 2171,
														"src": "5013:15:12",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2113,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "5013:7:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2121,
												"initialValue": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"id": 2117,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 2115,
															"name": "fromToken",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2108,
															"src": "5031:9:12",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"id": 2116,
															"name": "WCRO",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1812,
															"src": "5044:4:12",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"src": "5031:17:12",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"hexValue": "32",
														"id": 2119,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "5055:1:12",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_2_by_1",
															"typeString": "int_const 2"
														},
														"value": "2"
													},
													"id": 2120,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "5031:25:12",
													"trueExpression": {
														"hexValue": "31",
														"id": 2118,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "5051:1:12",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5013:43:12"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2124,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2122,
														"name": "pathLen",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2114,
														"src": "5070:7:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "31",
														"id": 2123,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "5081:1:12",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"src": "5070:12:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 2169,
													"nodeType": "Block",
													"src": "5153:373:12",
													"statements": [
														{
															"assignments": [
																2137
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 2137,
																	"mutability": "mutable",
																	"name": "path",
																	"nameLocation": "5185:4:12",
																	"nodeType": "VariableDeclaration",
																	"scope": 2169,
																	"src": "5168:21:12",
																	"stateVariable": false,
																	"storageLocation": "memory",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
																		"typeString": "address[]"
																	},
																	"typeName": {
																		"baseType": {
																			"id": 2135,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "5168:7:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"id": 2136,
																		"nodeType": "ArrayTypeName",
																		"src": "5168:9:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
																			"typeString": "address[]"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 2143,
															"initialValue": {
																"arguments": [
																	{
																		"id": 2141,
																		"name": "pathLen",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2114,
																		"src": "5206:7:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 2140,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "NewExpression",
																	"src": "5192:13:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_address_$dyn_memory_ptr_$",
																		"typeString": "function (uint256) pure returns (address[] memory)"
																	},
																	"typeName": {
																		"baseType": {
																			"id": 2138,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "5196:7:12",
																			"stateMutability": "nonpayable",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"id": 2139,
																		"nodeType": "ArrayTypeName",
																		"src": "5196:9:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
																			"typeString": "address[]"
																		}
																	}
																},
																"id": 2142,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5192:22:12",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
																	"typeString": "address[] memory"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "5168:46:12"
														},
														{
															"expression": {
																"id": 2148,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"id": 2144,
																		"name": "path",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2137,
																		"src": "5229:4:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
																			"typeString": "address[] memory"
																		}
																	},
																	"id": 2146,
																	"indexExpression": {
																		"hexValue": "30",
																		"id": 2145,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "5234:1:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "5229:7:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"id": 2147,
																	"name": "fromToken",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2108,
																	"src": "5239:9:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"src": "5229:19:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 2149,
															"nodeType": "ExpressionStatement",
															"src": "5229:19:12"
														},
														{
															"expression": {
																"id": 2154,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"id": 2150,
																		"name": "path",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2137,
																		"src": "5263:4:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
																			"typeString": "address[] memory"
																		}
																	},
																	"id": 2152,
																	"indexExpression": {
																		"hexValue": "31",
																		"id": 2151,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "5268:1:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_1_by_1",
																			"typeString": "int_const 1"
																		},
																		"value": "1"
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "5263:7:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"id": 2153,
																	"name": "WCRO",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1812,
																	"src": "5273:4:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"src": "5263:14:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 2155,
															"nodeType": "ExpressionStatement",
															"src": "5263:14:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"id": 2159,
																		"name": "feeAmount",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2110,
																		"src": "5373:9:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"hexValue": "30",
																		"id": 2160,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "5401:1:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	{
																		"id": 2161,
																		"name": "path",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2137,
																		"src": "5421:4:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
																			"typeString": "address[] memory"
																		}
																	},
																	{
																		"id": 2162,
																		"name": "feeReceiver",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1826,
																		"src": "5444:11:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 2166,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"expression": {
																				"id": 2163,
																				"name": "block",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967292,
																				"src": "5474:5:12",
																				"typeDescriptions": {
																					"typeIdentifier": "t_magic_block",
																					"typeString": "block"
																				}
																			},
																			"id": 2164,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "5480:9:12",
																			"memberName": "timestamp",
																			"nodeType": "MemberAccess",
																			"src": "5474:15:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "+",
																		"rightExpression": {
																			"hexValue": "31",
																			"id": 2165,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "5492:7:12",
																			"subdenomination": "hours",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_3600_by_1",
																				"typeString": "int_const 3600"
																			},
																			"value": "1"
																		},
																		"src": "5474:25:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		{
																			"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
																			"typeString": "address[] memory"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"id": 2156,
																		"name": "router",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1848,
																		"src": "5294:6:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IDEXRouter_$1785",
																			"typeString": "contract IDEXRouter"
																		}
																	},
																	"id": 2158,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "5301:53:12",
																	"memberName": "swapExactTokensForTokensSupportingFeeOnTransferTokens",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1725,
																	"src": "5294:60:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_nonpayable$_t_uint256_$_t_uint256_$_t_array$_t_address_$dyn_memory_ptr_$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (uint256,uint256,address[] memory,address,uint256) external"
																	}
																},
																"id": 2167,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5294:220:12",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 2168,
															"nodeType": "ExpressionStatement",
															"src": "5294:220:12"
														}
													]
												},
												"id": 2170,
												"nodeType": "IfStatement",
												"src": "5067:459:12",
												"trueBody": {
													"id": 2132,
													"nodeType": "Block",
													"src": "5083:64:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 2128,
																		"name": "feeReceiver",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1826,
																		"src": "5112:11:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 2129,
																		"name": "feeAmount",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2110,
																		"src": "5125:9:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"id": 2125,
																		"name": "wcro",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1863,
																		"src": "5098:4:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IWCRO_$1796",
																			"typeString": "contract IWCRO"
																		}
																	},
																	"id": 2127,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "5103:8:12",
																	"memberName": "transfer",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 347,
																	"src": "5098:13:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																		"typeString": "function (address,uint256) external returns (bool)"
																	}
																},
																"id": 2130,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5098:37:12",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 2131,
															"nodeType": "ExpressionStatement",
															"src": "5098:37:12"
														}
													]
												}
											}
										]
									},
									"id": 2172,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getFee",
									"nameLocation": "4949:6:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2111,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2108,
												"mutability": "mutable",
												"name": "fromToken",
												"nameLocation": "4964:9:12",
												"nodeType": "VariableDeclaration",
												"scope": 2172,
												"src": "4956:17:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2107,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4956:7:12",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2110,
												"mutability": "mutable",
												"name": "feeAmount",
												"nameLocation": "4983:9:12",
												"nodeType": "VariableDeclaration",
												"scope": 2172,
												"src": "4975:17:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2109,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4975:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4955:38:12"
									},
									"returnParameters": {
										"id": 2112,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5002:0:12"
									},
									"scope": 2711,
									"src": "4940:593:12",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 2203,
										"nodeType": "Block",
										"src": "5624:181:12",
										"statements": [
											{
												"condition": {
													"id": 2182,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "5638:21:12",
													"subExpression": {
														"baseExpression": {
															"id": 2179,
															"name": "isExistAddress",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1839,
															"src": "5639:14:12",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																"typeString": "mapping(address => bool)"
															}
														},
														"id": 2181,
														"indexExpression": {
															"id": 2180,
															"name": "user",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2174,
															"src": "5654:4:12",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "5639:20:12",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2196,
												"nodeType": "IfStatement",
												"src": "5635:115:12",
												"trueBody": {
													"id": 2195,
													"nodeType": "Block",
													"src": "5661:89:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 2186,
																		"name": "user",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2174,
																		"src": "5691:4:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"expression": {
																		"id": 2183,
																		"name": "addresses",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1842,
																		"src": "5676:9:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_address_$dyn_storage",
																			"typeString": "address[] storage ref"
																		}
																	},
																	"id": 2185,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "5686:4:12",
																	"memberName": "push",
																	"nodeType": "MemberAccess",
																	"src": "5676:14:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_address_$dyn_storage_ptr_$_t_address_$returns$__$attached_to$_t_array$_t_address_$dyn_storage_ptr_$",
																		"typeString": "function (address[] storage pointer,address)"
																	}
																},
																"id": 2187,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5676:20:12",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 2188,
															"nodeType": "ExpressionStatement",
															"src": "5676:20:12"
														},
														{
															"expression": {
																"id": 2193,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"id": 2189,
																		"name": "isExistAddress",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1839,
																		"src": "5711:14:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																			"typeString": "mapping(address => bool)"
																		}
																	},
																	"id": 2191,
																	"indexExpression": {
																		"id": 2190,
																		"name": "user",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2174,
																		"src": "5726:4:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "5711:20:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"hexValue": "74727565",
																	"id": 2192,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "5734:4:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																"src": "5711:27:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 2194,
															"nodeType": "ExpressionStatement",
															"src": "5711:27:12"
														}
													]
												}
											},
											{
												"expression": {
													"id": 2201,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 2197,
															"name": "userVolume",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1835,
															"src": "5771:10:12",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 2199,
														"indexExpression": {
															"id": 2198,
															"name": "user",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2174,
															"src": "5782:4:12",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "5771:16:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"id": 2200,
														"name": "volume",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2176,
														"src": "5791:6:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "5771:26:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 2202,
												"nodeType": "ExpressionStatement",
												"src": "5771:26:12"
											}
										]
									},
									"id": 2204,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "addVolume",
									"nameLocation": "5550:9:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2177,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2174,
												"mutability": "mutable",
												"name": "user",
												"nameLocation": "5579:4:12",
												"nodeType": "VariableDeclaration",
												"scope": 2204,
												"src": "5571:12:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2173,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5571:7:12",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2176,
												"mutability": "mutable",
												"name": "volume",
												"nameLocation": "5602:6:12",
												"nodeType": "VariableDeclaration",
												"scope": 2204,
												"src": "5594:14:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2175,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5594:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5560:55:12"
									},
									"returnParameters": {
										"id": 2178,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5624:0:12"
									},
									"scope": 2711,
									"src": "5541:264:12",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 2464,
										"nodeType": "Block",
										"src": "6007:1992:12",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 2219,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "6049:3:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 2220,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "6053:6:12",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "6049:10:12",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"id": 2223,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "6069:4:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_SwapPro_$2711",
																		"typeString": "contract SwapPro"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_SwapPro_$2711",
																		"typeString": "contract SwapPro"
																	}
																],
																"id": 2222,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "6061:7:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 2221,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "6061:7:12",
																	"typeDescriptions": {}
																}
															},
															"id": 2224,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6061:13:12",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2225,
															"name": "amountIn",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2210,
															"src": "6076:8:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 2216,
																	"name": "fromToken",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2206,
																	"src": "6025:9:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 2215,
																"name": "IERC20",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 380,
																"src": "6018:6:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_IERC20_$380_$",
																	"typeString": "type(contract IERC20)"
																}
															},
															"id": 2217,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6018:17:12",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$380",
																"typeString": "contract IERC20"
															}
														},
														"id": 2218,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "6036:12:12",
														"memberName": "transferFrom",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 379,
														"src": "6018:30:12",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
															"typeString": "function (address,address,uint256) external returns (bool)"
														}
													},
													"id": 2226,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6018:67:12",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2227,
												"nodeType": "ExpressionStatement",
												"src": "6018:67:12"
											},
											{
												"condition": {
													"components": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 2232,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																"id": 2230,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2228,
																	"name": "fromToken",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2206,
																	"src": "6117:9:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"id": 2229,
																	"name": "ARY",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1815,
																	"src": "6130:3:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"src": "6117:16:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "&&",
															"rightExpression": {
																"id": 2231,
																"name": "competition_started",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1831,
																"src": "6137:19:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "6117:39:12",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"id": 2233,
													"isConstant": false,
													"isInlineArray": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "TupleExpression",
													"src": "6116:41:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2241,
												"nodeType": "IfStatement",
												"src": "6098:129:12",
												"trueBody": {
													"id": 2240,
													"nodeType": "Block",
													"src": "6169:58:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"expression": {
																			"id": 2235,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967281,
																			"src": "6194:3:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 2236,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "6198:6:12",
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"src": "6194:10:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 2237,
																		"name": "amountIn",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2210,
																		"src": "6206:8:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 2234,
																	"name": "addVolume",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2204,
																	"src": "6184:9:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (address,uint256)"
																	}
																},
																"id": 2238,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6184:31:12",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 2239,
															"nodeType": "ExpressionStatement",
															"src": "6184:31:12"
														}
													]
												}
											},
											{
												"assignments": [
													2243
												],
												"declarations": [
													{
														"constant": false,
														"id": 2243,
														"mutability": "mutable",
														"name": "feeAmount",
														"nameLocation": "6247:9:12",
														"nodeType": "VariableDeclaration",
														"scope": 2464,
														"src": "6239:17:12",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2242,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "6239:7:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2250,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2249,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2246,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2244,
																	"name": "amountIn",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2210,
																	"src": "6260:8:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"id": 2245,
																	"name": "feePercent",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1828,
																	"src": "6271:10:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "6260:21:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 2247,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "6259:23:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"hexValue": "31303030",
														"id": 2248,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "6285:4:12",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1000_by_1",
															"typeString": "int_const 1000"
														},
														"value": "1000"
													},
													"src": "6259:30:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6239:50:12"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 2252,
															"name": "fromToken",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2206,
															"src": "6307:9:12",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2253,
															"name": "feeAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2243,
															"src": "6318:9:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2251,
														"name": "getFee",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2172,
														"src": "6300:6:12",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 2254,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6300:28:12",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2255,
												"nodeType": "ExpressionStatement",
												"src": "6300:28:12"
											},
											{
												"assignments": [
													2257
												],
												"declarations": [
													{
														"constant": false,
														"id": 2257,
														"mutability": "mutable",
														"name": "pathLen",
														"nameLocation": "6349:7:12",
														"nodeType": "VariableDeclaration",
														"scope": 2464,
														"src": "6341:15:12",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2256,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "6341:7:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2258,
												"nodeType": "VariableDeclarationStatement",
												"src": "6341:15:12"
											},
											{
												"expression": {
													"id": 2271,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2259,
														"name": "pathLen",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2257,
														"src": "6367:7:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"condition": {
															"components": [
																{
																	"commonType": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"id": 2266,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"commonType": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		"id": 2262,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 2260,
																			"name": "fromToken",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2206,
																			"src": "6378:9:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "==",
																		"rightExpression": {
																			"id": 2261,
																			"name": "WCRO",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1812,
																			"src": "6391:4:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"src": "6378:17:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "||",
																	"rightExpression": {
																		"commonType": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		"id": 2265,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 2263,
																			"name": "toToken",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2208,
																			"src": "6399:7:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "==",
																		"rightExpression": {
																			"id": 2264,
																			"name": "WCRO",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1812,
																			"src": "6410:4:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"src": "6399:15:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"src": "6378:36:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																}
															],
															"id": 2267,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "6377:38:12",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"falseExpression": {
															"hexValue": "33",
															"id": 2269,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6422:1:12",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_3_by_1",
																"typeString": "int_const 3"
															},
															"value": "3"
														},
														"id": 2270,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "Conditional",
														"src": "6377:46:12",
														"trueExpression": {
															"hexValue": "32",
															"id": 2268,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6418:1:12",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_2_by_1",
																"typeString": "int_const 2"
															},
															"value": "2"
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														}
													},
													"src": "6367:56:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 2272,
												"nodeType": "ExpressionStatement",
												"src": "6367:56:12"
											},
											{
												"assignments": [
													2274
												],
												"declarations": [
													{
														"constant": false,
														"id": 2274,
														"mutability": "mutable",
														"name": "amountOut",
														"nameLocation": "6444:9:12",
														"nodeType": "VariableDeclaration",
														"scope": 2464,
														"src": "6436:17:12",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2273,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "6436:7:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2275,
												"nodeType": "VariableDeclarationStatement",
												"src": "6436:17:12"
											},
											{
												"assignments": [
													2280
												],
												"declarations": [
													{
														"constant": false,
														"id": 2280,
														"mutability": "mutable",
														"name": "path",
														"nameLocation": "6481:4:12",
														"nodeType": "VariableDeclaration",
														"scope": 2464,
														"src": "6464:21:12",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
															"typeString": "address[]"
														},
														"typeName": {
															"baseType": {
																"id": 2278,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "6464:7:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 2279,
															"nodeType": "ArrayTypeName",
															"src": "6464:9:12",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
																"typeString": "address[]"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2281,
												"nodeType": "VariableDeclarationStatement",
												"src": "6464:21:12"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 2288,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"id": 2284,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 2282,
															"name": "fromToken",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2206,
															"src": "6500:9:12",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"id": 2283,
															"name": "WCRO",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1812,
															"src": "6513:4:12",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"src": "6500:17:12",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "||",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"id": 2287,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 2285,
															"name": "toToken",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2208,
															"src": "6521:7:12",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"id": 2286,
															"name": "WCRO",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1812,
															"src": "6532:4:12",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"src": "6521:15:12",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "6500:36:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"id": 2345,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"components": [
																{
																	"commonType": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"id": 2335,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"commonType": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		"id": 2331,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 2329,
																			"name": "fromToken",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2206,
																			"src": "6861:9:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "==",
																		"rightExpression": {
																			"id": 2330,
																			"name": "ARY",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1815,
																			"src": "6874:3:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"src": "6861:16:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "&&",
																	"rightExpression": {
																		"commonType": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		"id": 2334,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 2332,
																			"name": "toToken",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2208,
																			"src": "6881:7:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "==",
																		"rightExpression": {
																			"id": 2333,
																			"name": "MERY",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1818,
																			"src": "6892:4:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"src": "6881:15:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"src": "6861:35:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																}
															],
															"id": 2336,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "6860:37:12",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "||",
														"rightExpression": {
															"components": [
																{
																	"commonType": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"id": 2343,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"commonType": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		"id": 2339,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 2337,
																			"name": "fromToken",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2206,
																			"src": "6915:9:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "==",
																		"rightExpression": {
																			"id": 2338,
																			"name": "MERY",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1818,
																			"src": "6928:4:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"src": "6915:17:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "&&",
																	"rightExpression": {
																		"commonType": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		"id": 2342,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 2340,
																			"name": "toToken",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2208,
																			"src": "6936:7:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "==",
																		"rightExpression": {
																			"id": 2341,
																			"name": "ARY",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1815,
																			"src": "6947:3:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"src": "6936:14:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"src": "6915:35:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																}
															],
															"id": 2344,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "6914:37:12",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"src": "6860:91:12",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseBody": {
														"id": 2431,
														"nodeType": "Block",
														"src": "7267:327:12",
														"statements": [
															{
																"expression": {
																	"id": 2392,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftHandSide": {
																		"id": 2386,
																		"name": "path",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2280,
																		"src": "7282:4:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
																			"typeString": "address[] memory"
																		}
																	},
																	"nodeType": "Assignment",
																	"operator": "=",
																	"rightHandSide": {
																		"arguments": [
																			{
																				"hexValue": "33",
																				"id": 2390,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "7303:1:12",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_3_by_1",
																					"typeString": "int_const 3"
																				},
																				"value": "3"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_3_by_1",
																					"typeString": "int_const 3"
																				}
																			],
																			"id": 2389,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "NewExpression",
																			"src": "7289:13:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_address_$dyn_memory_ptr_$",
																				"typeString": "function (uint256) pure returns (address[] memory)"
																			},
																			"typeName": {
																				"baseType": {
																					"id": 2387,
																					"name": "address",
																					"nodeType": "ElementaryTypeName",
																					"src": "7293:7:12",
																					"stateMutability": "nonpayable",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				"id": 2388,
																				"nodeType": "ArrayTypeName",
																				"src": "7293:9:12",
																				"typeDescriptions": {
																					"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
																					"typeString": "address[]"
																				}
																			}
																		},
																		"id": 2391,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "7289:16:12",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
																			"typeString": "address[] memory"
																		}
																	},
																	"src": "7282:23:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
																		"typeString": "address[] memory"
																	}
																},
																"id": 2393,
																"nodeType": "ExpressionStatement",
																"src": "7282:23:12"
															},
															{
																"expression": {
																	"id": 2398,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftHandSide": {
																		"baseExpression": {
																			"id": 2394,
																			"name": "path",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2280,
																			"src": "7320:4:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
																				"typeString": "address[] memory"
																			}
																		},
																		"id": 2396,
																		"indexExpression": {
																			"hexValue": "30",
																			"id": 2395,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "7325:1:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": true,
																		"nodeType": "IndexAccess",
																		"src": "7320:7:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"nodeType": "Assignment",
																	"operator": "=",
																	"rightHandSide": {
																		"id": 2397,
																		"name": "fromToken",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2206,
																		"src": "7330:9:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"src": "7320:19:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"id": 2399,
																"nodeType": "ExpressionStatement",
																"src": "7320:19:12"
															},
															{
																"expression": {
																	"id": 2404,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftHandSide": {
																		"baseExpression": {
																			"id": 2400,
																			"name": "path",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2280,
																			"src": "7354:4:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
																				"typeString": "address[] memory"
																			}
																		},
																		"id": 2402,
																		"indexExpression": {
																			"hexValue": "31",
																			"id": 2401,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "7359:1:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": true,
																		"nodeType": "IndexAccess",
																		"src": "7354:7:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"nodeType": "Assignment",
																	"operator": "=",
																	"rightHandSide": {
																		"id": 2403,
																		"name": "WCRO",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1812,
																		"src": "7364:4:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"src": "7354:14:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"id": 2405,
																"nodeType": "ExpressionStatement",
																"src": "7354:14:12"
															},
															{
																"expression": {
																	"id": 2410,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftHandSide": {
																		"baseExpression": {
																			"id": 2406,
																			"name": "path",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2280,
																			"src": "7383:4:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
																				"typeString": "address[] memory"
																			}
																		},
																		"id": 2408,
																		"indexExpression": {
																			"hexValue": "32",
																			"id": 2407,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "7388:1:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_2_by_1",
																				"typeString": "int_const 2"
																			},
																			"value": "2"
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": true,
																		"nodeType": "IndexAccess",
																		"src": "7383:7:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"nodeType": "Assignment",
																	"operator": "=",
																	"rightHandSide": {
																		"id": 2409,
																		"name": "toToken",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2208,
																		"src": "7393:7:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"src": "7383:17:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"id": 2411,
																"nodeType": "ExpressionStatement",
																"src": "7383:17:12"
															},
															{
																"assignments": [
																	2416
																],
																"declarations": [
																	{
																		"constant": false,
																		"id": 2416,
																		"mutability": "mutable",
																		"name": "amountsOut",
																		"nameLocation": "7432:10:12",
																		"nodeType": "VariableDeclaration",
																		"scope": 2431,
																		"src": "7415:27:12",
																		"stateVariable": false,
																		"storageLocation": "memory",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																			"typeString": "uint256[]"
																		},
																		"typeName": {
																			"baseType": {
																				"id": 2414,
																				"name": "uint256",
																				"nodeType": "ElementaryTypeName",
																				"src": "7415:7:12",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"id": 2415,
																			"nodeType": "ArrayTypeName",
																			"src": "7415:9:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
																				"typeString": "uint256[]"
																			}
																		},
																		"visibility": "internal"
																	}
																],
																"id": 2424,
																"initialValue": {
																	"arguments": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 2421,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 2419,
																				"name": "amountIn",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2210,
																				"src": "7484:8:12",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "-",
																			"rightExpression": {
																				"id": 2420,
																				"name": "feeAmount",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2243,
																				"src": "7495:9:12",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "7484:20:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		{
																			"id": 2422,
																			"name": "path",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2280,
																			"src": "7523:4:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
																				"typeString": "address[] memory"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			{
																				"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
																				"typeString": "address[] memory"
																			}
																		],
																		"expression": {
																			"id": 2417,
																			"name": "router",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1848,
																			"src": "7445:6:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_IDEXRouter_$1785",
																				"typeString": "contract IDEXRouter"
																			}
																		},
																		"id": 2418,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "7452:13:12",
																		"memberName": "getAmountsOut",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 1784,
																		"src": "7445:20:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_external_pure$_t_uint256_$_t_array$_t_address_$dyn_memory_ptr_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$",
																			"typeString": "function (uint256,address[] memory) pure external returns (uint256[] memory)"
																		}
																	},
																	"id": 2423,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "7445:97:12",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																		"typeString": "uint256[] memory"
																	}
																},
																"nodeType": "VariableDeclarationStatement",
																"src": "7415:127:12"
															},
															{
																"expression": {
																	"id": 2429,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftHandSide": {
																		"id": 2425,
																		"name": "amountOut",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2274,
																		"src": "7557:9:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "Assignment",
																	"operator": "=",
																	"rightHandSide": {
																		"baseExpression": {
																			"id": 2426,
																			"name": "amountsOut",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2416,
																			"src": "7569:10:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																				"typeString": "uint256[] memory"
																			}
																		},
																		"id": 2428,
																		"indexExpression": {
																			"hexValue": "32",
																			"id": 2427,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "7580:1:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_2_by_1",
																				"typeString": "int_const 2"
																			},
																			"value": "2"
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "7569:13:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "7557:25:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 2430,
																"nodeType": "ExpressionStatement",
																"src": "7557:25:12"
															}
														]
													},
													"id": 2432,
													"nodeType": "IfStatement",
													"src": "6842:752:12",
													"trueBody": {
														"id": 2385,
														"nodeType": "Block",
														"src": "6963:298:12",
														"statements": [
															{
																"expression": {
																	"id": 2352,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftHandSide": {
																		"id": 2346,
																		"name": "path",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2280,
																		"src": "6978:4:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
																			"typeString": "address[] memory"
																		}
																	},
																	"nodeType": "Assignment",
																	"operator": "=",
																	"rightHandSide": {
																		"arguments": [
																			{
																				"hexValue": "32",
																				"id": 2350,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "6999:1:12",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_2_by_1",
																					"typeString": "int_const 2"
																				},
																				"value": "2"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_2_by_1",
																					"typeString": "int_const 2"
																				}
																			],
																			"id": 2349,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "NewExpression",
																			"src": "6985:13:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_address_$dyn_memory_ptr_$",
																				"typeString": "function (uint256) pure returns (address[] memory)"
																			},
																			"typeName": {
																				"baseType": {
																					"id": 2347,
																					"name": "address",
																					"nodeType": "ElementaryTypeName",
																					"src": "6989:7:12",
																					"stateMutability": "nonpayable",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				"id": 2348,
																				"nodeType": "ArrayTypeName",
																				"src": "6989:9:12",
																				"typeDescriptions": {
																					"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
																					"typeString": "address[]"
																				}
																			}
																		},
																		"id": 2351,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "6985:16:12",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
																			"typeString": "address[] memory"
																		}
																	},
																	"src": "6978:23:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
																		"typeString": "address[] memory"
																	}
																},
																"id": 2353,
																"nodeType": "ExpressionStatement",
																"src": "6978:23:12"
															},
															{
																"expression": {
																	"id": 2358,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftHandSide": {
																		"baseExpression": {
																			"id": 2354,
																			"name": "path",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2280,
																			"src": "7016:4:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
																				"typeString": "address[] memory"
																			}
																		},
																		"id": 2356,
																		"indexExpression": {
																			"hexValue": "30",
																			"id": 2355,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "7021:1:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": true,
																		"nodeType": "IndexAccess",
																		"src": "7016:7:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"nodeType": "Assignment",
																	"operator": "=",
																	"rightHandSide": {
																		"id": 2357,
																		"name": "fromToken",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2206,
																		"src": "7026:9:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"src": "7016:19:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"id": 2359,
																"nodeType": "ExpressionStatement",
																"src": "7016:19:12"
															},
															{
																"expression": {
																	"id": 2364,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftHandSide": {
																		"baseExpression": {
																			"id": 2360,
																			"name": "path",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2280,
																			"src": "7050:4:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
																				"typeString": "address[] memory"
																			}
																		},
																		"id": 2362,
																		"indexExpression": {
																			"hexValue": "31",
																			"id": 2361,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "7055:1:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": true,
																		"nodeType": "IndexAccess",
																		"src": "7050:7:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"nodeType": "Assignment",
																	"operator": "=",
																	"rightHandSide": {
																		"id": 2363,
																		"name": "toToken",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2208,
																		"src": "7060:7:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"src": "7050:17:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"id": 2365,
																"nodeType": "ExpressionStatement",
																"src": "7050:17:12"
															},
															{
																"assignments": [
																	2370
																],
																"declarations": [
																	{
																		"constant": false,
																		"id": 2370,
																		"mutability": "mutable",
																		"name": "amountsOut",
																		"nameLocation": "7099:10:12",
																		"nodeType": "VariableDeclaration",
																		"scope": 2385,
																		"src": "7082:27:12",
																		"stateVariable": false,
																		"storageLocation": "memory",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																			"typeString": "uint256[]"
																		},
																		"typeName": {
																			"baseType": {
																				"id": 2368,
																				"name": "uint256",
																				"nodeType": "ElementaryTypeName",
																				"src": "7082:7:12",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"id": 2369,
																			"nodeType": "ArrayTypeName",
																			"src": "7082:9:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
																				"typeString": "uint256[]"
																			}
																		},
																		"visibility": "internal"
																	}
																],
																"id": 2378,
																"initialValue": {
																	"arguments": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 2375,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 2373,
																				"name": "amountIn",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2210,
																				"src": "7151:8:12",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "-",
																			"rightExpression": {
																				"id": 2374,
																				"name": "feeAmount",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2243,
																				"src": "7162:9:12",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "7151:20:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		{
																			"id": 2376,
																			"name": "path",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2280,
																			"src": "7190:4:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
																				"typeString": "address[] memory"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			{
																				"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
																				"typeString": "address[] memory"
																			}
																		],
																		"expression": {
																			"id": 2371,
																			"name": "router",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1848,
																			"src": "7112:6:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_IDEXRouter_$1785",
																				"typeString": "contract IDEXRouter"
																			}
																		},
																		"id": 2372,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "7119:13:12",
																		"memberName": "getAmountsOut",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 1784,
																		"src": "7112:20:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_external_pure$_t_uint256_$_t_array$_t_address_$dyn_memory_ptr_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$",
																			"typeString": "function (uint256,address[] memory) pure external returns (uint256[] memory)"
																		}
																	},
																	"id": 2377,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "7112:97:12",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																		"typeString": "uint256[] memory"
																	}
																},
																"nodeType": "VariableDeclarationStatement",
																"src": "7082:127:12"
															},
															{
																"expression": {
																	"id": 2383,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftHandSide": {
																		"id": 2379,
																		"name": "amountOut",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2274,
																		"src": "7224:9:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "Assignment",
																	"operator": "=",
																	"rightHandSide": {
																		"baseExpression": {
																			"id": 2380,
																			"name": "amountsOut",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2370,
																			"src": "7236:10:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																				"typeString": "uint256[] memory"
																			}
																		},
																		"id": 2382,
																		"indexExpression": {
																			"hexValue": "31",
																			"id": 2381,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "7247:1:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "7236:13:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "7224:25:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 2384,
																"nodeType": "ExpressionStatement",
																"src": "7224:25:12"
															}
														]
													}
												},
												"id": 2433,
												"nodeType": "IfStatement",
												"src": "6496:1098:12",
												"trueBody": {
													"id": 2328,
													"nodeType": "Block",
													"src": "6538:298:12",
													"statements": [
														{
															"expression": {
																"id": 2295,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 2289,
																	"name": "path",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2280,
																	"src": "6553:4:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
																		"typeString": "address[] memory"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"arguments": [
																		{
																			"hexValue": "32",
																			"id": 2293,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "6574:1:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_2_by_1",
																				"typeString": "int_const 2"
																			},
																			"value": "2"
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_rational_2_by_1",
																				"typeString": "int_const 2"
																			}
																		],
																		"id": 2292,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "NewExpression",
																		"src": "6560:13:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_address_$dyn_memory_ptr_$",
																			"typeString": "function (uint256) pure returns (address[] memory)"
																		},
																		"typeName": {
																			"baseType": {
																				"id": 2290,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "6564:7:12",
																				"stateMutability": "nonpayable",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"id": 2291,
																			"nodeType": "ArrayTypeName",
																			"src": "6564:9:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
																				"typeString": "address[]"
																			}
																		}
																	},
																	"id": 2294,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "6560:16:12",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
																		"typeString": "address[] memory"
																	}
																},
																"src": "6553:23:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
																	"typeString": "address[] memory"
																}
															},
															"id": 2296,
															"nodeType": "ExpressionStatement",
															"src": "6553:23:12"
														},
														{
															"expression": {
																"id": 2301,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"id": 2297,
																		"name": "path",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2280,
																		"src": "6591:4:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
																			"typeString": "address[] memory"
																		}
																	},
																	"id": 2299,
																	"indexExpression": {
																		"hexValue": "30",
																		"id": 2298,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "6596:1:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "6591:7:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"id": 2300,
																	"name": "fromToken",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2206,
																	"src": "6601:9:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"src": "6591:19:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 2302,
															"nodeType": "ExpressionStatement",
															"src": "6591:19:12"
														},
														{
															"expression": {
																"id": 2307,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"id": 2303,
																		"name": "path",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2280,
																		"src": "6625:4:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
																			"typeString": "address[] memory"
																		}
																	},
																	"id": 2305,
																	"indexExpression": {
																		"hexValue": "31",
																		"id": 2304,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "6630:1:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_1_by_1",
																			"typeString": "int_const 1"
																		},
																		"value": "1"
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "6625:7:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"id": 2306,
																	"name": "toToken",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2208,
																	"src": "6635:7:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"src": "6625:17:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 2308,
															"nodeType": "ExpressionStatement",
															"src": "6625:17:12"
														},
														{
															"assignments": [
																2313
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 2313,
																	"mutability": "mutable",
																	"name": "amountsOut",
																	"nameLocation": "6674:10:12",
																	"nodeType": "VariableDeclaration",
																	"scope": 2328,
																	"src": "6657:27:12",
																	"stateVariable": false,
																	"storageLocation": "memory",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																		"typeString": "uint256[]"
																	},
																	"typeName": {
																		"baseType": {
																			"id": 2311,
																			"name": "uint256",
																			"nodeType": "ElementaryTypeName",
																			"src": "6657:7:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 2312,
																		"nodeType": "ArrayTypeName",
																		"src": "6657:9:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
																			"typeString": "uint256[]"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 2321,
															"initialValue": {
																"arguments": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 2318,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 2316,
																			"name": "amountIn",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2210,
																			"src": "6726:8:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "-",
																		"rightExpression": {
																			"id": 2317,
																			"name": "feeAmount",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2243,
																			"src": "6737:9:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "6726:20:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"id": 2319,
																		"name": "path",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2280,
																		"src": "6765:4:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
																			"typeString": "address[] memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
																			"typeString": "address[] memory"
																		}
																	],
																	"expression": {
																		"id": 2314,
																		"name": "router",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1848,
																		"src": "6687:6:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IDEXRouter_$1785",
																			"typeString": "contract IDEXRouter"
																		}
																	},
																	"id": 2315,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "6694:13:12",
																	"memberName": "getAmountsOut",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1784,
																	"src": "6687:20:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_pure$_t_uint256_$_t_array$_t_address_$dyn_memory_ptr_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$",
																		"typeString": "function (uint256,address[] memory) pure external returns (uint256[] memory)"
																	}
																},
																"id": 2320,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6687:97:12",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																	"typeString": "uint256[] memory"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "6657:127:12"
														},
														{
															"expression": {
																"id": 2326,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 2322,
																	"name": "amountOut",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2274,
																	"src": "6799:9:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"baseExpression": {
																		"id": 2323,
																		"name": "amountsOut",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2313,
																		"src": "6811:10:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																			"typeString": "uint256[] memory"
																		}
																	},
																	"id": 2325,
																	"indexExpression": {
																		"hexValue": "31",
																		"id": 2324,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "6822:1:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_1_by_1",
																			"typeString": "int_const 1"
																		},
																		"value": "1"
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "6811:13:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "6799:25:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 2327,
															"nodeType": "ExpressionStatement",
															"src": "6799:25:12"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2439,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2437,
																"name": "amountIn",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2210,
																"src": "7689:8:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "-",
															"rightExpression": {
																"id": 2438,
																"name": "feeAmount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2243,
																"src": "7700:9:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7689:20:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 2440,
															"name": "amountOutMin",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2212,
															"src": "7728:12:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 2441,
															"name": "path",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2280,
															"src": "7759:4:12",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
																"typeString": "address[] memory"
															}
														},
														{
															"expression": {
																"id": 2442,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "7782:3:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 2443,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "7786:6:12",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "7782:10:12",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2447,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 2444,
																	"name": "block",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967292,
																	"src": "7811:5:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_block",
																		"typeString": "block"
																	}
																},
																"id": 2445,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "7817:9:12",
																"memberName": "timestamp",
																"nodeType": "MemberAccess",
																"src": "7811:15:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"hexValue": "31",
																"id": 2446,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "7829:7:12",
																"subdenomination": "hours",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_3600_by_1",
																	"typeString": "int_const 3600"
																},
																"value": "1"
															},
															"src": "7811:25:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
																"typeString": "address[] memory"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 2434,
															"name": "router",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1848,
															"src": "7610:6:12",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IDEXRouter_$1785",
																"typeString": "contract IDEXRouter"
															}
														},
														"id": 2436,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "7617:53:12",
														"memberName": "swapExactTokensForTokensSupportingFeeOnTransferTokens",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1725,
														"src": "7610:60:12",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_uint256_$_t_uint256_$_t_array$_t_address_$dyn_memory_ptr_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (uint256,uint256,address[] memory,address,uint256) external"
														}
													},
													"id": 2448,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7610:241:12",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2449,
												"nodeType": "ExpressionStatement",
												"src": "7610:241:12"
											},
											{
												"condition": {
													"components": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 2454,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																"id": 2452,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2450,
																	"name": "toToken",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2208,
																	"src": "7883:7:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"id": 2451,
																	"name": "ARY",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1815,
																	"src": "7894:3:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"src": "7883:14:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "&&",
															"rightExpression": {
																"id": 2453,
																"name": "competition_started",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1831,
																"src": "7901:19:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "7883:37:12",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"id": 2455,
													"isConstant": false,
													"isInlineArray": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "TupleExpression",
													"src": "7882:39:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2463,
												"nodeType": "IfStatement",
												"src": "7864:128:12",
												"trueBody": {
													"id": 2462,
													"nodeType": "Block",
													"src": "7933:59:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"expression": {
																			"id": 2457,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967281,
																			"src": "7958:3:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 2458,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "7962:6:12",
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"src": "7958:10:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 2459,
																		"name": "amountOut",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2274,
																		"src": "7970:9:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 2456,
																	"name": "addVolume",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2204,
																	"src": "7948:9:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (address,uint256)"
																	}
																},
																"id": 2460,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7948:32:12",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 2461,
															"nodeType": "ExpressionStatement",
															"src": "7948:32:12"
														}
													]
												}
											}
										]
									},
									"functionSelector": "d16a4010",
									"id": 2465,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "swapTokenForToken",
									"nameLocation": "5863:17:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2213,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2206,
												"mutability": "mutable",
												"name": "fromToken",
												"nameLocation": "5899:9:12",
												"nodeType": "VariableDeclaration",
												"scope": 2465,
												"src": "5891:17:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2205,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5891:7:12",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2208,
												"mutability": "mutable",
												"name": "toToken",
												"nameLocation": "5927:7:12",
												"nodeType": "VariableDeclaration",
												"scope": 2465,
												"src": "5919:15:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2207,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5919:7:12",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2210,
												"mutability": "mutable",
												"name": "amountIn",
												"nameLocation": "5953:8:12",
												"nodeType": "VariableDeclaration",
												"scope": 2465,
												"src": "5945:16:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2209,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5945:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2212,
												"mutability": "mutable",
												"name": "amountOutMin",
												"nameLocation": "5980:12:12",
												"nodeType": "VariableDeclaration",
												"scope": 2465,
												"src": "5972:20:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2211,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5972:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5880:119:12"
									},
									"returnParameters": {
										"id": 2214,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6007:0:12"
									},
									"scope": 2711,
									"src": "5854:2145:12",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 2561,
										"nodeType": "Block",
										"src": "8152:690:12",
										"statements": [
											{
												"assignments": [
													2473
												],
												"declarations": [
													{
														"constant": false,
														"id": 2473,
														"mutability": "mutable",
														"name": "amountIn",
														"nameLocation": "8171:8:12",
														"nodeType": "VariableDeclaration",
														"scope": 2561,
														"src": "8163:16:12",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2472,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "8163:7:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2476,
												"initialValue": {
													"expression": {
														"id": 2474,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "8182:3:12",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 2475,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "8186:5:12",
													"memberName": "value",
													"nodeType": "MemberAccess",
													"src": "8182:9:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "8163:28:12"
											},
											{
												"assignments": [
													2478
												],
												"declarations": [
													{
														"constant": false,
														"id": 2478,
														"mutability": "mutable",
														"name": "feeAmount",
														"nameLocation": "8210:9:12",
														"nodeType": "VariableDeclaration",
														"scope": 2561,
														"src": "8202:17:12",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2477,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "8202:7:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2484,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2483,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 2481,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 2479,
															"name": "amountIn",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2473,
															"src": "8222:8:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "*",
														"rightExpression": {
															"id": 2480,
															"name": "feePercent",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1828,
															"src": "8233:10:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "8222:21:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"hexValue": "31303030",
														"id": 2482,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "8246:4:12",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1000_by_1",
															"typeString": "int_const 1000"
														},
														"value": "1000"
													},
													"src": "8222:28:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "8202:48:12"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 2490,
															"name": "feeAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2478,
															"src": "8291:9:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 2487,
																	"name": "feeReceiver",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1826,
																	"src": "8269:11:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 2486,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "8261:8:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_payable_$",
																	"typeString": "type(address payable)"
																},
																"typeName": {
																	"id": 2485,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "8261:8:12",
																	"stateMutability": "payable",
																	"typeDescriptions": {}
																}
															},
															"id": 2488,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8261:20:12",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														"id": 2489,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "8282:8:12",
														"memberName": "transfer",
														"nodeType": "MemberAccess",
														"src": "8261:29:12",
														"typeDescriptions": {
															"typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
															"typeString": "function (uint256)"
														}
													},
													"id": 2491,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8261:40:12",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2492,
												"nodeType": "ExpressionStatement",
												"src": "8261:40:12"
											},
											{
												"assignments": [
													2497
												],
												"declarations": [
													{
														"constant": false,
														"id": 2497,
														"mutability": "mutable",
														"name": "path",
														"nameLocation": "8331:4:12",
														"nodeType": "VariableDeclaration",
														"scope": 2561,
														"src": "8314:21:12",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
															"typeString": "address[]"
														},
														"typeName": {
															"baseType": {
																"id": 2495,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "8314:7:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 2496,
															"nodeType": "ArrayTypeName",
															"src": "8314:9:12",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
																"typeString": "address[]"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2503,
												"initialValue": {
													"arguments": [
														{
															"hexValue": "32",
															"id": 2501,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8352:1:12",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_2_by_1",
																"typeString": "int_const 2"
															},
															"value": "2"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_rational_2_by_1",
																"typeString": "int_const 2"
															}
														],
														"id": 2500,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "NewExpression",
														"src": "8338:13:12",
														"typeDescriptions": {
															"typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_address_$dyn_memory_ptr_$",
															"typeString": "function (uint256) pure returns (address[] memory)"
														},
														"typeName": {
															"baseType": {
																"id": 2498,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "8342:7:12",
																"stateMutability": "nonpayable",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 2499,
															"nodeType": "ArrayTypeName",
															"src": "8342:9:12",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
																"typeString": "address[]"
															}
														}
													},
													"id": 2502,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8338:16:12",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
														"typeString": "address[] memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "8314:40:12"
											},
											{
												"expression": {
													"id": 2508,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 2504,
															"name": "path",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2497,
															"src": "8365:4:12",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
																"typeString": "address[] memory"
															}
														},
														"id": 2506,
														"indexExpression": {
															"hexValue": "30",
															"id": 2505,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8370:1:12",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "8365:7:12",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 2507,
														"name": "WCRO",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1812,
														"src": "8375:4:12",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "8365:14:12",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 2509,
												"nodeType": "ExpressionStatement",
												"src": "8365:14:12"
											},
											{
												"expression": {
													"id": 2514,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 2510,
															"name": "path",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2497,
															"src": "8390:4:12",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
																"typeString": "address[] memory"
															}
														},
														"id": 2512,
														"indexExpression": {
															"hexValue": "31",
															"id": 2511,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8395:1:12",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "8390:7:12",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 2513,
														"name": "toToken",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2467,
														"src": "8400:7:12",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "8390:17:12",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 2515,
												"nodeType": "ExpressionStatement",
												"src": "8390:17:12"
											},
											{
												"assignments": [
													2520
												],
												"declarations": [
													{
														"constant": false,
														"id": 2520,
														"mutability": "mutable",
														"name": "amountsOut",
														"nameLocation": "8437:10:12",
														"nodeType": "VariableDeclaration",
														"scope": 2561,
														"src": "8420:27:12",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
															"typeString": "uint256[]"
														},
														"typeName": {
															"baseType": {
																"id": 2518,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "8420:7:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 2519,
															"nodeType": "ArrayTypeName",
															"src": "8420:9:12",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
																"typeString": "uint256[]"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2528,
												"initialValue": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2525,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2523,
																"name": "amountIn",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2473,
																"src": "8471:8:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "-",
															"rightExpression": {
																"id": 2524,
																"name": "feeAmount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2478,
																"src": "8482:9:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "8471:20:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 2526,
															"name": "path",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2497,
															"src": "8493:4:12",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
																"typeString": "address[] memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
																"typeString": "address[] memory"
															}
														],
														"expression": {
															"id": 2521,
															"name": "router",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1848,
															"src": "8450:6:12",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IDEXRouter_$1785",
																"typeString": "contract IDEXRouter"
															}
														},
														"id": 2522,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "8457:13:12",
														"memberName": "getAmountsOut",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1784,
														"src": "8450:20:12",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_pure$_t_uint256_$_t_array$_t_address_$dyn_memory_ptr_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$",
															"typeString": "function (uint256,address[] memory) pure external returns (uint256[] memory)"
														}
													},
													"id": 2527,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8450:48:12",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
														"typeString": "uint256[] memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "8420:78:12"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 2536,
															"name": "amountOutMin",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2469,
															"src": "8610:12:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 2537,
															"name": "path",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2497,
															"src": "8637:4:12",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
																"typeString": "address[] memory"
															}
														},
														{
															"expression": {
																"id": 2538,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "8656:3:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 2539,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "8660:6:12",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "8656:10:12",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2543,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 2540,
																	"name": "block",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967292,
																	"src": "8681:5:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_block",
																		"typeString": "block"
																	}
																},
																"id": 2541,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "8687:9:12",
																"memberName": "timestamp",
																"nodeType": "MemberAccess",
																"src": "8681:15:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"hexValue": "31",
																"id": 2542,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "8699:7:12",
																"subdenomination": "hours",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_3600_by_1",
																	"typeString": "int_const 3600"
																},
																"value": "1"
															},
															"src": "8681:25:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
																"typeString": "address[] memory"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																{
																	"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
																	"typeString": "address[] memory"
																},
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"id": 2529,
																"name": "router",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1848,
																"src": "8509:6:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_IDEXRouter_$1785",
																	"typeString": "contract IDEXRouter"
																}
															},
															"id": 2531,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "8516:50:12",
															"memberName": "swapExactETHForTokensSupportingFeeOnTransferTokens",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1737,
															"src": "8509:57:12",
															"typeDescriptions": {
																"typeIdentifier": "t_function_external_payable$_t_uint256_$_t_array$_t_address_$dyn_memory_ptr_$_t_address_$_t_uint256_$returns$__$",
																"typeString": "function (uint256,address[] memory,address,uint256) payable external"
															}
														},
														"id": 2535,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2534,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2532,
																	"name": "amountIn",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2473,
																	"src": "8574:8:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"id": 2533,
																	"name": "feeAmount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2478,
																	"src": "8585:9:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "8574:20:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "8509:86:12",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_payable$_t_uint256_$_t_array$_t_address_$dyn_memory_ptr_$_t_address_$_t_uint256_$returns$__$value",
															"typeString": "function (uint256,address[] memory,address,uint256) payable external"
														}
													},
													"id": 2544,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8509:208:12",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2545,
												"nodeType": "ExpressionStatement",
												"src": "8509:208:12"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 2550,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"id": 2548,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 2546,
															"name": "toToken",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2467,
															"src": "8733:7:12",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"id": 2547,
															"name": "ARY",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1815,
															"src": "8744:3:12",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"src": "8733:14:12",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"id": 2549,
														"name": "competition_started",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1831,
														"src": "8751:19:12",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "8733:37:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2560,
												"nodeType": "IfStatement",
												"src": "8730:105:12",
												"trueBody": {
													"id": 2559,
													"nodeType": "Block",
													"src": "8772:63:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"expression": {
																			"id": 2552,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967281,
																			"src": "8797:3:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 2553,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "8801:6:12",
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"src": "8797:10:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"baseExpression": {
																			"id": 2554,
																			"name": "amountsOut",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2520,
																			"src": "8809:10:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																				"typeString": "uint256[] memory"
																			}
																		},
																		"id": 2556,
																		"indexExpression": {
																			"hexValue": "31",
																			"id": 2555,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "8820:1:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "8809:13:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 2551,
																	"name": "addVolume",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2204,
																	"src": "8787:9:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (address,uint256)"
																	}
																},
																"id": 2557,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8787:36:12",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 2558,
															"nodeType": "ExpressionStatement",
															"src": "8787:36:12"
														}
													]
												}
											}
										]
									},
									"functionSelector": "53ac861e",
									"id": 2562,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "swapCROForToken",
									"nameLocation": "8056:15:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2470,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2467,
												"mutability": "mutable",
												"name": "toToken",
												"nameLocation": "8091:7:12",
												"nodeType": "VariableDeclaration",
												"scope": 2562,
												"src": "8083:15:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2466,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8083:7:12",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2469,
												"mutability": "mutable",
												"name": "amountOutMin",
												"nameLocation": "8117:12:12",
												"nodeType": "VariableDeclaration",
												"scope": 2562,
												"src": "8109:20:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2468,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8109:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8072:64:12"
									},
									"returnParameters": {
										"id": 2471,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8152:0:12"
									},
									"scope": 2711,
									"src": "8047:795:12",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 2648,
										"nodeType": "Block",
										"src": "9019:617:12",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 2575,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"id": 2573,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 2571,
															"name": "fromToken",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2564,
															"src": "9035:9:12",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"id": 2572,
															"name": "ARY",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1815,
															"src": "9048:3:12",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"src": "9035:16:12",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"id": 2574,
														"name": "competition_started",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1831,
														"src": "9055:19:12",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "9035:39:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2582,
												"nodeType": "IfStatement",
												"src": "9032:75:12",
												"trueBody": {
													"expression": {
														"arguments": [
															{
																"expression": {
																	"id": 2577,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "9086:3:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 2578,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "9090:6:12",
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "9086:10:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															{
																"id": 2579,
																"name": "amountIn",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2566,
																"src": "9098:8:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"id": 2576,
															"name": "addVolume",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2204,
															"src": "9076:9:12",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
																"typeString": "function (address,uint256)"
															}
														},
														"id": 2580,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "9076:31:12",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$__$",
															"typeString": "tuple()"
														}
													},
													"id": 2581,
													"nodeType": "ExpressionStatement",
													"src": "9076:31:12"
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 2587,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "9149:3:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 2588,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "9153:6:12",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "9149:10:12",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"id": 2591,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "9169:4:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_SwapPro_$2711",
																		"typeString": "contract SwapPro"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_SwapPro_$2711",
																		"typeString": "contract SwapPro"
																	}
																],
																"id": 2590,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "9161:7:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 2589,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "9161:7:12",
																	"typeDescriptions": {}
																}
															},
															"id": 2592,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "9161:13:12",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2593,
															"name": "amountIn",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2566,
															"src": "9176:8:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 2584,
																	"name": "fromToken",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2564,
																	"src": "9125:9:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 2583,
																"name": "IERC20",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 380,
																"src": "9118:6:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_IERC20_$380_$",
																	"typeString": "type(contract IERC20)"
																}
															},
															"id": 2585,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "9118:17:12",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$380",
																"typeString": "contract IERC20"
															}
														},
														"id": 2586,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "9136:12:12",
														"memberName": "transferFrom",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 379,
														"src": "9118:30:12",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
															"typeString": "function (address,address,uint256) external returns (bool)"
														}
													},
													"id": 2594,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9118:67:12",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2595,
												"nodeType": "ExpressionStatement",
												"src": "9118:67:12"
											},
											{
												"assignments": [
													2597
												],
												"declarations": [
													{
														"constant": false,
														"id": 2597,
														"mutability": "mutable",
														"name": "feeAmount",
														"nameLocation": "9214:9:12",
														"nodeType": "VariableDeclaration",
														"scope": 2648,
														"src": "9206:17:12",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2596,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "9206:7:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2603,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2602,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 2600,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 2598,
															"name": "amountIn",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2566,
															"src": "9226:8:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "*",
														"rightExpression": {
															"id": 2599,
															"name": "feePercent",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1828,
															"src": "9237:10:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "9226:21:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"hexValue": "31303030",
														"id": 2601,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "9250:4:12",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1000_by_1",
															"typeString": "int_const 1000"
														},
														"value": "1000"
													},
													"src": "9226:28:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "9206:48:12"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 2605,
															"name": "fromToken",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2564,
															"src": "9274:9:12",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2606,
															"name": "feeAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2597,
															"src": "9285:9:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2604,
														"name": "getFee",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2172,
														"src": "9267:6:12",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 2607,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9267:28:12",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2608,
												"nodeType": "ExpressionStatement",
												"src": "9267:28:12"
											},
											{
												"assignments": [
													2613
												],
												"declarations": [
													{
														"constant": false,
														"id": 2613,
														"mutability": "mutable",
														"name": "path",
														"nameLocation": "9325:4:12",
														"nodeType": "VariableDeclaration",
														"scope": 2648,
														"src": "9308:21:12",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
															"typeString": "address[]"
														},
														"typeName": {
															"baseType": {
																"id": 2611,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "9308:7:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 2612,
															"nodeType": "ArrayTypeName",
															"src": "9308:9:12",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
																"typeString": "address[]"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2619,
												"initialValue": {
													"arguments": [
														{
															"hexValue": "32",
															"id": 2617,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "9346:1:12",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_2_by_1",
																"typeString": "int_const 2"
															},
															"value": "2"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_rational_2_by_1",
																"typeString": "int_const 2"
															}
														],
														"id": 2616,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "NewExpression",
														"src": "9332:13:12",
														"typeDescriptions": {
															"typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_address_$dyn_memory_ptr_$",
															"typeString": "function (uint256) pure returns (address[] memory)"
														},
														"typeName": {
															"baseType": {
																"id": 2614,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "9336:7:12",
																"stateMutability": "nonpayable",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 2615,
															"nodeType": "ArrayTypeName",
															"src": "9336:9:12",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
																"typeString": "address[]"
															}
														}
													},
													"id": 2618,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9332:16:12",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
														"typeString": "address[] memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "9308:40:12"
											},
											{
												"expression": {
													"id": 2624,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 2620,
															"name": "path",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2613,
															"src": "9359:4:12",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
																"typeString": "address[] memory"
															}
														},
														"id": 2622,
														"indexExpression": {
															"hexValue": "30",
															"id": 2621,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "9364:1:12",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "9359:7:12",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 2623,
														"name": "fromToken",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2564,
														"src": "9369:9:12",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "9359:19:12",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 2625,
												"nodeType": "ExpressionStatement",
												"src": "9359:19:12"
											},
											{
												"expression": {
													"id": 2630,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 2626,
															"name": "path",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2613,
															"src": "9389:4:12",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
																"typeString": "address[] memory"
															}
														},
														"id": 2628,
														"indexExpression": {
															"hexValue": "31",
															"id": 2627,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "9394:1:12",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "9389:7:12",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 2629,
														"name": "WCRO",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1812,
														"src": "9399:4:12",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "9389:14:12",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 2631,
												"nodeType": "ExpressionStatement",
												"src": "9389:14:12"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2637,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2635,
																"name": "amountIn",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2566,
																"src": "9486:8:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "-",
															"rightExpression": {
																"id": 2636,
																"name": "feeAmount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2597,
																"src": "9497:9:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "9486:20:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 2638,
															"name": "amountOutMin",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2568,
															"src": "9521:12:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 2639,
															"name": "path",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2613,
															"src": "9548:4:12",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
																"typeString": "address[] memory"
															}
														},
														{
															"expression": {
																"id": 2640,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "9567:3:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 2641,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "9571:6:12",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "9567:10:12",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2645,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 2642,
																	"name": "block",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967292,
																	"src": "9592:5:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_block",
																		"typeString": "block"
																	}
																},
																"id": 2643,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "9598:9:12",
																"memberName": "timestamp",
																"nodeType": "MemberAccess",
																"src": "9592:15:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"hexValue": "31",
																"id": 2644,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "9610:7:12",
																"subdenomination": "hours",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_3600_by_1",
																	"typeString": "int_const 3600"
																},
																"value": "1"
															},
															"src": "9592:25:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
																"typeString": "address[] memory"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 2632,
															"name": "router",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1848,
															"src": "9414:6:12",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IDEXRouter_$1785",
																"typeString": "contract IDEXRouter"
															}
														},
														"id": 2634,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "9421:50:12",
														"memberName": "swapExactTokensForETHSupportingFeeOnTransferTokens",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1751,
														"src": "9414:57:12",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_uint256_$_t_uint256_$_t_array$_t_address_$dyn_memory_ptr_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (uint256,uint256,address[] memory,address,uint256) external"
														}
													},
													"id": 2646,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9414:214:12",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2647,
												"nodeType": "ExpressionStatement",
												"src": "9414:214:12"
											}
										]
									},
									"functionSelector": "16214120",
									"id": 2649,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "swapTokenForCRO",
									"nameLocation": "8903:15:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2569,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2564,
												"mutability": "mutable",
												"name": "fromToken",
												"nameLocation": "8937:9:12",
												"nodeType": "VariableDeclaration",
												"scope": 2649,
												"src": "8929:17:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2563,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8929:7:12",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2566,
												"mutability": "mutable",
												"name": "amountIn",
												"nameLocation": "8965:8:12",
												"nodeType": "VariableDeclaration",
												"scope": 2649,
												"src": "8957:16:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2565,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8957:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2568,
												"mutability": "mutable",
												"name": "amountOutMin",
												"nameLocation": "8992:12:12",
												"nodeType": "VariableDeclaration",
												"scope": 2649,
												"src": "8984:20:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2567,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8984:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8918:93:12"
									},
									"returnParameters": {
										"id": 2570,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "9019:0:12"
									},
									"scope": 2711,
									"src": "8894:742:12",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 2672,
										"nodeType": "Block",
										"src": "9707:136:12",
										"statements": [
											{
												"assignments": [
													2653
												],
												"declarations": [
													{
														"constant": false,
														"id": 2653,
														"mutability": "mutable",
														"name": "amountIn",
														"nameLocation": "9726:8:12",
														"nodeType": "VariableDeclaration",
														"scope": 2672,
														"src": "9718:16:12",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2652,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "9718:7:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2656,
												"initialValue": {
													"expression": {
														"id": 2654,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "9737:3:12",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 2655,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "9741:5:12",
													"memberName": "value",
													"nodeType": "MemberAccess",
													"src": "9737:9:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "9718:28:12"
											},
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"expression": {
															"argumentTypes": [],
															"expression": {
																"id": 2657,
																"name": "wcro",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1863,
																"src": "9757:4:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_IWCRO_$1796",
																	"typeString": "contract IWCRO"
																}
															},
															"id": 2659,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "9762:7:12",
															"memberName": "deposit",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1790,
															"src": "9757:12:12",
															"typeDescriptions": {
																"typeIdentifier": "t_function_external_payable$__$returns$__$",
																"typeString": "function () payable external"
															}
														},
														"id": 2661,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"id": 2660,
																"name": "amountIn",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2653,
																"src": "9776:8:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "9757:28:12",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_payable$__$returns$__$value",
															"typeString": "function () payable external"
														}
													},
													"id": 2662,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9757:30:12",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2663,
												"nodeType": "ExpressionStatement",
												"src": "9757:30:12"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 2667,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "9813:3:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 2668,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "9817:6:12",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "9813:10:12",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2669,
															"name": "amountIn",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2653,
															"src": "9825:8:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 2664,
															"name": "wcro",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1863,
															"src": "9798:4:12",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IWCRO_$1796",
																"typeString": "contract IWCRO"
															}
														},
														"id": 2666,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "9803:8:12",
														"memberName": "transfer",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 347,
														"src": "9798:13:12",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
															"typeString": "function (address,uint256) external returns (bool)"
														}
													},
													"id": 2670,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9798:37:12",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2671,
												"nodeType": "ExpressionStatement",
												"src": "9798:37:12"
											}
										]
									},
									"functionSelector": "d0e30db0",
									"id": 2673,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "deposit",
									"nameLocation": "9681:7:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2650,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "9689:2:12"
									},
									"returnParameters": {
										"id": 2651,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "9707:0:12"
									},
									"scope": 2711,
									"src": "9672:171:12",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 2705,
										"nodeType": "Block",
										"src": "9906:148:12",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 2681,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "9935:3:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 2682,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "9939:6:12",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "9935:10:12",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"id": 2685,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "9955:4:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_SwapPro_$2711",
																		"typeString": "contract SwapPro"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_SwapPro_$2711",
																		"typeString": "contract SwapPro"
																	}
																],
																"id": 2684,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "9947:7:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 2683,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "9947:7:12",
																	"typeDescriptions": {}
																}
															},
															"id": 2686,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "9947:13:12",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2687,
															"name": "wad",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2675,
															"src": "9962:3:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 2678,
															"name": "wcro",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1863,
															"src": "9917:4:12",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IWCRO_$1796",
																"typeString": "contract IWCRO"
															}
														},
														"id": 2680,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "9922:12:12",
														"memberName": "transferFrom",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 379,
														"src": "9917:17:12",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
															"typeString": "function (address,address,uint256) external returns (bool)"
														}
													},
													"id": 2688,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9917:49:12",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2689,
												"nodeType": "ExpressionStatement",
												"src": "9917:49:12"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 2693,
															"name": "wad",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2675,
															"src": "9991:3:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 2690,
															"name": "wcro",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1863,
															"src": "9977:4:12",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IWCRO_$1796",
																"typeString": "contract IWCRO"
															}
														},
														"id": 2692,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "9982:8:12",
														"memberName": "withdraw",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1795,
														"src": "9977:13:12",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_uint256_$returns$__$",
															"typeString": "function (uint256) external"
														}
													},
													"id": 2694,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9977:18:12",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2695,
												"nodeType": "ExpressionStatement",
												"src": "9977:18:12"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 2702,
															"name": "wad",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2675,
															"src": "10042:3:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"arguments": [
																{
																	"expression": {
																		"id": 2698,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967281,
																		"src": "10021:3:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 2699,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "10025:6:12",
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"src": "10021:10:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 2697,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "10013:8:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_payable_$",
																	"typeString": "type(address payable)"
																},
																"typeName": {
																	"id": 2696,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "10013:8:12",
																	"stateMutability": "payable",
																	"typeDescriptions": {}
																}
															},
															"id": 2700,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "10013:19:12",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														"id": 2701,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "10033:8:12",
														"memberName": "transfer",
														"nodeType": "MemberAccess",
														"src": "10013:28:12",
														"typeDescriptions": {
															"typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
															"typeString": "function (uint256)"
														}
													},
													"id": 2703,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10013:33:12",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2704,
												"nodeType": "ExpressionStatement",
												"src": "10013:33:12"
											}
										]
									},
									"functionSelector": "2e1a7d4d",
									"id": 2706,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "withdraw",
									"nameLocation": "9860:8:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2676,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2675,
												"mutability": "mutable",
												"name": "wad",
												"nameLocation": "9888:3:12",
												"nodeType": "VariableDeclaration",
												"scope": 2706,
												"src": "9880:11:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2674,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9880:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9869:29:12"
									},
									"returnParameters": {
										"id": 2677,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "9906:0:12"
									},
									"scope": 2711,
									"src": "9851:203:12",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 2709,
										"nodeType": "Block",
										"src": "10089:2:12",
										"statements": []
									},
									"id": 2710,
									"implemented": true,
									"kind": "receive",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2707,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10069:2:12"
									},
									"returnParameters": {
										"id": 2708,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10089:0:12"
									},
									"scope": 2711,
									"src": "10062:29:12",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 2712,
							"src": "2107:7987:12",
							"usedErrors": [
								13,
								18
							],
							"usedEvents": [
								24
							]
						}
					],
					"src": "32:10062:12"
				},
				"id": 12
			}
		}
	}
}