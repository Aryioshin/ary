{
	"id": "36d979373cbe00a825029bf628676d08",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.20",
	"solcLongVersion": "0.8.20+commit.a1b79de6",
	"input": {
		"language": "Solidity",
		"sources": {
			"ARY/SwapPro.sol": {
				"content": "//SPDX-License-Identifier: MIT\r\npragma solidity ^0.8.0;\r\nimport \"@openzeppelin/contracts/access/Ownable.sol\";\r\nimport \"@openzeppelin/contracts/token/ERC20/IERC20.sol\";\r\n\r\ninterface IDEXFactory {\r\n    function createPair(\r\n        address tokenA,\r\n        address tokenB\r\n    ) external returns (address);\r\n\r\n    function getPair(\r\n        address tokenA,\r\n        address tokenB\r\n    ) external returns (address);\r\n}\r\n\r\ninterface IPair {\r\n    // Returns the address of the other token of the pair\r\n    function token0() external view returns (address);\r\n    function token1() external view returns (address);\r\n    function getReserves() external view returns (uint112, uint112, uint32);\r\n}\r\n\r\ninterface IDEXRouter {\r\n    function factory() external pure returns (address);\r\n    function WETH() external pure returns (address);\r\n\r\n    function swapExactTokensForTokensSupportingFeeOnTransferTokens(\r\n        uint amountIn,\r\n        uint amountOutMin,\r\n        address[] calldata path,\r\n        address to,\r\n        uint deadline\r\n    ) external;\r\n\r\n    function swapExactETHForTokensSupportingFeeOnTransferTokens(\r\n        uint amountOutMin,\r\n        address[] calldata path,\r\n        address to,\r\n        uint deadline\r\n    ) external payable;\r\n\r\n    function swapExactTokensForETHSupportingFeeOnTransferTokens(\r\n        uint amountIn,\r\n        uint amountOutMin,\r\n        address[] calldata path,\r\n        address to,\r\n        uint deadline\r\n    ) external;\r\n\r\n    function getAmountsIn(\r\n        uint256 amountOut,\r\n        address[] calldata path\r\n    ) external pure returns (uint256[] memory);\r\n\r\n    function getAmountOut(\r\n        uint256 amountIn,\r\n        uint256 reserveIn,\r\n        uint256 reserveOut\r\n    ) external pure returns (uint256);\r\n\r\n     function getAmountsOut(\r\n        uint256 amountIn,\r\n        address[] calldata path\r\n    ) external pure returns (uint256[] memory);\r\n}\r\n\r\ninterface IWCRO is IERC20 {\r\n    function deposit () external payable;\r\n    \r\n    function withdraw (\r\n        uint256 wad\r\n    ) external;\r\n}\r\n\r\nstruct Volume {\r\n    address user;\r\n    uint256 volume;\r\n}\r\n\r\ncontract SwapPro is Ownable {\r\n    address public constant CUSDC = 0xc21223249CA28397B4B6541dfFaEcC539BfF0c59;\r\n    address public constant CUSDT = 0x66e428c3f67a68878562e79A0234c1F83c208770;\r\n    address public constant WCRO = 0x5C7F8A570d578ED84E63fdFA7b1eE72dEae1AE23;\r\n    address public constant ARY = 0x41bc026dABe978bc2FAfeA1850456511ca4B01bc;\r\n    address public constant MERY = 0x3b41B27E74Dd366CE27cB389dc7877D4e1516d4d;\r\n    address public constant DEXROUTER =\r\n        0x145863Eb42Cf62847A6Ca784e6416C1682b1b2Ae;\r\n    address public constant DEXFACTORY =\r\n        0x3B44B2a187a7b3824131F8db5a74194D0a42Fc15;\r\n    address public feeReceiver;\r\n    uint256 public feePercent;\r\n    bool public competition_started = false;\r\n    mapping(address => uint256) public userVolume;\r\n    mapping(address => bool) isExistAddress;\r\n    address[] public addresses;\r\n\r\n    IDEXFactory factory;\r\n    IDEXRouter router;\r\n    IERC20 cusdc;\r\n    IERC20 cusdt;\r\n    IERC20 ary;\r\n    IERC20 mery;\r\n    IWCRO wcro;\r\n\r\n    constructor() Ownable(msg.sender) {\r\n        factory = IDEXFactory(DEXFACTORY);\r\n        router = IDEXRouter(DEXROUTER);\r\n        cusdc = IERC20(CUSDC);\r\n        cusdt = IERC20(CUSDT);\r\n        ary = IERC20(ARY);\r\n        mery = IERC20(MERY);\r\n        wcro = IWCRO(WCRO);\r\n        feeReceiver = msg.sender;\r\n        feePercent = 3;\r\n        \r\n        //Approving tokens\r\n        cusdc.approve(DEXROUTER, type(uint256).max);\r\n        cusdt.approve(DEXROUTER, type(uint256).max);\r\n        ary.approve(DEXROUTER, type(uint256).max);\r\n        wcro.approve(DEXROUTER, type(uint256).max);\r\n        mery.approve(DEXROUTER, type(uint256).max);\r\n    }\r\n\r\n    // Function to get sorted addresses\r\n    function getUserVolumes() external view returns (Volume[] memory) {\r\n        uint256 n = addresses.length;\r\n        Volume[] memory volumes = new Volume[](n); // Initialize memory array with fixed size\r\n\r\n        for (uint256 i = 0; i < n; i++) {\r\n            volumes[i] = Volume(addresses[i], userVolume[addresses[i]]);\r\n        }\r\n\r\n        return volumes;\r\n    }\r\n\r\n    // Function to clear volume record\r\n    function clearVolume() public onlyOwner{\r\n        uint256 n = addresses.length;\r\n        for(uint256 i = 0; i < n; i++) {\r\n            delete userVolume[addresses[i]];\r\n        }\r\n        delete addresses;\r\n        competition_started = false;\r\n    }\r\n\r\n    function stopCompetition() public onlyOwner {\r\n        competition_started = false;\r\n    }\r\n    function startCompetition() public onlyOwner {\r\n        competition_started = true;\r\n    }\r\n\r\n    // Function to config the fee rate and fee receiver\r\n    function setFeeData(address _feeReceiver, uint256 _feePercent) public onlyOwner {\r\n        feeReceiver = _feeReceiver;\r\n        feePercent = _feePercent;\r\n    }\r\n\r\n    // Function to get fee from trading\r\n    function getFee(address fromToken, uint256 feeAmount) private {\r\n        uint256 pathLen = fromToken == WCRO ? 1 : 2;\r\n        if(pathLen == 1){\r\n            wcro.transfer(feeReceiver, feeAmount);\r\n        } else {\r\n            address[] memory path = new address[](pathLen);\r\n            path[0] = fromToken;\r\n            path[1] = WCRO;\r\n\r\n            router.swapExactTokensForTokensSupportingFeeOnTransferTokens(\r\n                feeAmount,\r\n                0,\r\n                path,\r\n                feeReceiver,\r\n                block.timestamp + 1 hours\r\n            );\r\n        }\r\n    }\r\n\r\n    function addVolume (\r\n        address user,\r\n        uint256 volume\r\n    ) private {\r\n        if(!isExistAddress[user]) {\r\n            addresses.push(user);\r\n            isExistAddress[user] = true;\r\n        } \r\n        \r\n        userVolume[user] += volume;\r\n    }\r\n\r\n    //Function to swap token for token\r\n     function swapTokenForToken(\r\n        address fromToken,\r\n        address toToken,\r\n        uint256 amountIn,\r\n        uint256 amountOutMin\r\n    ) public {\r\n        IERC20(fromToken).transferFrom(msg.sender, address(this), amountIn);\r\n\r\n        if (\r\n            (fromToken == ARY && competition_started)\r\n        ) {\r\n            addVolume(msg.sender, amountIn);\r\n        }\r\n\r\n        uint256 feeAmount = (amountIn * feePercent) / 1000;\r\n        getFee(fromToken, feeAmount);\r\n\r\n        uint256 pathLen;\r\n        pathLen = (fromToken == WCRO || toToken == WCRO) ? 2 : 3;\r\n\r\n        uint256 amountOut;\r\n        address[] memory path;\r\n        if (fromToken == WCRO || toToken == WCRO) {\r\n            path = new address[](2);\r\n            path[0] = fromToken;\r\n            path[1] = toToken;\r\n            uint256[] memory amountsOut = router.getAmountsOut(\r\n                amountIn - feeAmount,\r\n                path\r\n            );\r\n            amountOut = amountsOut[1];\r\n        } else if (\r\n            (fromToken == ARY && toToken == MERY) ||\r\n            (fromToken == MERY && toToken == ARY)\r\n        ) {\r\n            path = new address[](2);\r\n            path[0] = fromToken;\r\n            path[1] = toToken;\r\n            uint256[] memory amountsOut = router.getAmountsOut(\r\n                amountIn - feeAmount,\r\n                path\r\n            );\r\n            amountOut = amountsOut[1];\r\n        } else {\r\n            path = new address[](3);\r\n            path[0] = fromToken;\r\n            path[1] = WCRO;\r\n            path[2] = toToken;\r\n            uint256[] memory amountsOut = router.getAmountsOut(\r\n                amountIn - feeAmount,\r\n                path\r\n            );\r\n            amountOut = amountsOut[2];\r\n        }\r\n\r\n            router.swapExactTokensForTokensSupportingFeeOnTransferTokens(\r\n                amountIn - feeAmount,\r\n                amountOutMin,\r\n                path,\r\n                msg.sender,\r\n                block.timestamp + 1 hours\r\n            );\r\n\r\n        if (\r\n            (toToken == ARY && competition_started)\r\n        ) {\r\n            addVolume(msg.sender, amountOut);\r\n        }\r\n    }\r\n\r\n    // Function to swap coin for token\r\n    function swapCROForToken (\r\n        address toToken,\r\n        uint256 amountOutMin\r\n    ) public payable {\r\n        uint256 amountIn = msg.value;\r\n        uint256 feeAmount = amountIn * feePercent / 1000;\r\n        payable(feeReceiver).transfer(feeAmount);\r\n\r\n        address[] memory path = new address[](2);\r\n        path[0] = WCRO;\r\n        path[1] = toToken;\r\n\r\n        uint256[] memory amountsOut = router.getAmountsOut(amountIn - feeAmount, path);\r\n        router.swapExactETHForTokensSupportingFeeOnTransferTokens{ value:amountIn - feeAmount}(\r\n            amountOutMin,\r\n            path,\r\n            msg.sender,\r\n            block.timestamp + 1 hours\r\n        );\r\n\r\n        if(toToken == ARY && competition_started) {\r\n            addVolume(msg.sender, amountsOut[1]);\r\n        }\r\n    }  \r\n\r\n\r\n    // Function to swap token for coin\r\n    function swapTokenForCRO(\r\n        address fromToken,\r\n        uint256 amountIn,\r\n        uint256 amountOutMin\r\n    ) public {\r\n\r\n        if(fromToken == ARY && competition_started) addVolume(msg.sender, amountIn);\r\n        IERC20(fromToken).transferFrom(msg.sender, address(this), amountIn);\r\n        \r\n        uint256 feeAmount = amountIn * feePercent / 1000;\r\n\r\n        getFee(fromToken, feeAmount);\r\n\r\n        address[] memory path = new address[](2);\r\n        path[0] = fromToken;\r\n        path[1] = WCRO;\r\n        router.swapExactTokensForETHSupportingFeeOnTransferTokens(\r\n            amountIn - feeAmount,\r\n            amountOutMin,\r\n            path,\r\n            msg.sender,\r\n            block.timestamp + 1 hours\r\n        );\r\n    }\r\n\r\n    //Function to wrap Cro\r\n    function deposit () public payable {\r\n        uint256 amountIn = msg.value;\r\n        wcro.deposit{value:amountIn}();\r\n        wcro.transfer( msg.sender, amountIn );\r\n    }\r\n\r\n    function withdraw (\r\n        uint256 wad\r\n    ) public {\r\n        wcro.transferFrom(msg.sender, address(this), wad);\r\n        wcro.withdraw(wad);       \r\n        payable(msg.sender).transfer(wad);\r\n    }\r\n\r\n    receive() external payable {}\r\n}"
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (token/ERC20/IERC20.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Interface of the ERC-20 standard as defined in the ERC.\n */\ninterface IERC20 {\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n\n    /**\n     * @dev Returns the value of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the value of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address to, uint256 value) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n     * caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 value) external returns (bool);\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the\n     * allowance mechanism. `value` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(address from, address to, uint256 value) external returns (bool);\n}\n"
			},
			"@openzeppelin/contracts/access/Ownable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (access/Ownable.sol)\n\npragma solidity ^0.8.20;\n\nimport {Context} from \"../utils/Context.sol\";\n\n/**\n * @dev Contract module which provides a basic access control mechanism, where\n * there is an account (an owner) that can be granted exclusive access to\n * specific functions.\n *\n * The initial owner is set to the address provided by the deployer. This can\n * later be changed with {transferOwnership}.\n *\n * This module is used through inheritance. It will make available the modifier\n * `onlyOwner`, which can be applied to your functions to restrict their use to\n * the owner.\n */\nabstract contract Ownable is Context {\n    address private _owner;\n\n    /**\n     * @dev The caller account is not authorized to perform an operation.\n     */\n    error OwnableUnauthorizedAccount(address account);\n\n    /**\n     * @dev The owner is not a valid owner account. (eg. `address(0)`)\n     */\n    error OwnableInvalidOwner(address owner);\n\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n\n    /**\n     * @dev Initializes the contract setting the address provided by the deployer as the initial owner.\n     */\n    constructor(address initialOwner) {\n        if (initialOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(initialOwner);\n    }\n\n    /**\n     * @dev Throws if called by any account other than the owner.\n     */\n    modifier onlyOwner() {\n        _checkOwner();\n        _;\n    }\n\n    /**\n     * @dev Returns the address of the current owner.\n     */\n    function owner() public view virtual returns (address) {\n        return _owner;\n    }\n\n    /**\n     * @dev Throws if the sender is not the owner.\n     */\n    function _checkOwner() internal view virtual {\n        if (owner() != _msgSender()) {\n            revert OwnableUnauthorizedAccount(_msgSender());\n        }\n    }\n\n    /**\n     * @dev Leaves the contract without owner. It will not be possible to call\n     * `onlyOwner` functions. Can only be called by the current owner.\n     *\n     * NOTE: Renouncing ownership will leave the contract without an owner,\n     * thereby disabling any functionality that is only available to the owner.\n     */\n    function renounceOwnership() public virtual onlyOwner {\n        _transferOwnership(address(0));\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Can only be called by the current owner.\n     */\n    function transferOwnership(address newOwner) public virtual onlyOwner {\n        if (newOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(newOwner);\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Internal function without access restriction.\n     */\n    function _transferOwnership(address newOwner) internal virtual {\n        address oldOwner = _owner;\n        _owner = newOwner;\n        emit OwnershipTransferred(oldOwner, newOwner);\n    }\n}\n"
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.1) (utils/Context.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n\n    function _contextSuffixLength() internal view virtual returns (uint256) {\n        return 0;\n    }\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": true,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			},
			"remappings": []
		}
	},
	"output": {
		"contracts": {
			"@openzeppelin/contracts/access/Ownable.sol": {
				"Ownable": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "OwnableInvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "OwnableUnauthorizedAccount",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. The initial owner is set to the address provided by the deployer. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.",
						"errors": {
							"OwnableInvalidOwner(address)": [
								{
									"details": "The owner is not a valid owner account. (eg. `address(0)`)"
								}
							],
							"OwnableUnauthorizedAccount(address)": [
								{
									"details": "The caller account is not authorized to perform an operation."
								}
							]
						},
						"kind": "dev",
						"methods": {
							"constructor": {
								"details": "Initializes the contract setting the address provided by the deployer as the initial owner."
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. The initial owner is set to the address provided by the deployer. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.\",\"errors\":{\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract setting the address provided by the deployer as the initial owner.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/access/Ownable.sol\":\"Ownable\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 8,
								"contract": "@openzeppelin/contracts/access/Ownable.sol:Ownable",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"IERC20": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC-20 standard as defined in the ERC.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the value of tokens owned by `account`."
							},
							"totalSupply()": {
								"details": "Returns the value of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC-20 standard as defined in the ERC.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"Context": {
					"abi": [],
					"devdoc": {
						"details": "Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"ARY/SwapPro.sol": {
				"IDEXFactory": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "tokenA",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "tokenB",
									"type": "address"
								}
							],
							"name": "createPair",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "tokenA",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "tokenB",
									"type": "address"
								}
							],
							"name": "getPair",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"createPair(address,address)": "c9c65396",
							"getPair(address,address)": "e6a43905"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenA\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"tokenB\",\"type\":\"address\"}],\"name\":\"createPair\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenA\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"tokenB\",\"type\":\"address\"}],\"name\":\"getPair\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"ARY/SwapPro.sol\":\"IDEXFactory\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"ARY/SwapPro.sol\":{\"keccak256\":\"0xae8d740d234c37974ff3218b29ceb9cd11aa6411198a581783988be94e8433d0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c6d909c51a123835a6e1320a81b26f5a0bae6fff7c5f1ab04052511faf1ef64a\",\"dweb:/ipfs/QmV6EVkEHgqHRaunnNKcyCuDN42z7BBNHqcmGTtf63hvqh\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IDEXRouter": {
					"abi": [
						{
							"inputs": [],
							"name": "WETH",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "pure",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "factory",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "pure",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amountIn",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "reserveIn",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "reserveOut",
									"type": "uint256"
								}
							],
							"name": "getAmountOut",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "pure",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amountOut",
									"type": "uint256"
								},
								{
									"internalType": "address[]",
									"name": "path",
									"type": "address[]"
								}
							],
							"name": "getAmountsIn",
							"outputs": [
								{
									"internalType": "uint256[]",
									"name": "",
									"type": "uint256[]"
								}
							],
							"stateMutability": "pure",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amountIn",
									"type": "uint256"
								},
								{
									"internalType": "address[]",
									"name": "path",
									"type": "address[]"
								}
							],
							"name": "getAmountsOut",
							"outputs": [
								{
									"internalType": "uint256[]",
									"name": "",
									"type": "uint256[]"
								}
							],
							"stateMutability": "pure",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amountOutMin",
									"type": "uint256"
								},
								{
									"internalType": "address[]",
									"name": "path",
									"type": "address[]"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								}
							],
							"name": "swapExactETHForTokensSupportingFeeOnTransferTokens",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amountIn",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountOutMin",
									"type": "uint256"
								},
								{
									"internalType": "address[]",
									"name": "path",
									"type": "address[]"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								}
							],
							"name": "swapExactTokensForETHSupportingFeeOnTransferTokens",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amountIn",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountOutMin",
									"type": "uint256"
								},
								{
									"internalType": "address[]",
									"name": "path",
									"type": "address[]"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								}
							],
							"name": "swapExactTokensForTokensSupportingFeeOnTransferTokens",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"WETH()": "ad5c4648",
							"factory()": "c45a0155",
							"getAmountOut(uint256,uint256,uint256)": "054d50d4",
							"getAmountsIn(uint256,address[])": "1f00ca74",
							"getAmountsOut(uint256,address[])": "d06ca61f",
							"swapExactETHForTokensSupportingFeeOnTransferTokens(uint256,address[],address,uint256)": "b6f9de95",
							"swapExactTokensForETHSupportingFeeOnTransferTokens(uint256,uint256,address[],address,uint256)": "791ac947",
							"swapExactTokensForTokensSupportingFeeOnTransferTokens(uint256,uint256,address[],address,uint256)": "5c11d795"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"WETH\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"factory\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountIn\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"reserveIn\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"reserveOut\",\"type\":\"uint256\"}],\"name\":\"getAmountOut\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountOut\",\"type\":\"uint256\"},{\"internalType\":\"address[]\",\"name\":\"path\",\"type\":\"address[]\"}],\"name\":\"getAmountsIn\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountIn\",\"type\":\"uint256\"},{\"internalType\":\"address[]\",\"name\":\"path\",\"type\":\"address[]\"}],\"name\":\"getAmountsOut\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountOutMin\",\"type\":\"uint256\"},{\"internalType\":\"address[]\",\"name\":\"path\",\"type\":\"address[]\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"swapExactETHForTokensSupportingFeeOnTransferTokens\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountIn\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountOutMin\",\"type\":\"uint256\"},{\"internalType\":\"address[]\",\"name\":\"path\",\"type\":\"address[]\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"swapExactTokensForETHSupportingFeeOnTransferTokens\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountIn\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountOutMin\",\"type\":\"uint256\"},{\"internalType\":\"address[]\",\"name\":\"path\",\"type\":\"address[]\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"swapExactTokensForTokensSupportingFeeOnTransferTokens\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"ARY/SwapPro.sol\":\"IDEXRouter\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"ARY/SwapPro.sol\":{\"keccak256\":\"0xae8d740d234c37974ff3218b29ceb9cd11aa6411198a581783988be94e8433d0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c6d909c51a123835a6e1320a81b26f5a0bae6fff7c5f1ab04052511faf1ef64a\",\"dweb:/ipfs/QmV6EVkEHgqHRaunnNKcyCuDN42z7BBNHqcmGTtf63hvqh\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IPair": {
					"abi": [
						{
							"inputs": [],
							"name": "getReserves",
							"outputs": [
								{
									"internalType": "uint112",
									"name": "",
									"type": "uint112"
								},
								{
									"internalType": "uint112",
									"name": "",
									"type": "uint112"
								},
								{
									"internalType": "uint32",
									"name": "",
									"type": "uint32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "token0",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "token1",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"getReserves()": "0902f1ac",
							"token0()": "0dfe1681",
							"token1()": "d21220a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"getReserves\",\"outputs\":[{\"internalType\":\"uint112\",\"name\":\"\",\"type\":\"uint112\"},{\"internalType\":\"uint112\",\"name\":\"\",\"type\":\"uint112\"},{\"internalType\":\"uint32\",\"name\":\"\",\"type\":\"uint32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"token0\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"token1\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"ARY/SwapPro.sol\":\"IPair\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"ARY/SwapPro.sol\":{\"keccak256\":\"0xae8d740d234c37974ff3218b29ceb9cd11aa6411198a581783988be94e8433d0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c6d909c51a123835a6e1320a81b26f5a0bae6fff7c5f1ab04052511faf1ef64a\",\"dweb:/ipfs/QmV6EVkEHgqHRaunnNKcyCuDN42z7BBNHqcmGTtf63hvqh\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IWCRO": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "deposit",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "wad",
									"type": "uint256"
								}
							],
							"name": "withdraw",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the value of tokens owned by `account`."
							},
							"totalSupply()": {
								"details": "Returns the value of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"deposit()": "d0e30db0",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd",
							"withdraw(uint256)": "2e1a7d4d"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"deposit\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"ARY/SwapPro.sol\":\"IWCRO\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"ARY/SwapPro.sol\":{\"keccak256\":\"0xae8d740d234c37974ff3218b29ceb9cd11aa6411198a581783988be94e8433d0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c6d909c51a123835a6e1320a81b26f5a0bae6fff7c5f1ab04052511faf1ef64a\",\"dweb:/ipfs/QmV6EVkEHgqHRaunnNKcyCuDN42z7BBNHqcmGTtf63hvqh\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"SwapPro": {
					"abi": [
						{
							"inputs": [],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "OwnableInvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "OwnableUnauthorizedAccount",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "ARY",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "CUSDC",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "CUSDT",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "DEXFACTORY",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "DEXROUTER",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "MERY",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "WCRO",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"name": "addresses",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "clearVolume",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "competition_started",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "deposit",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "feePercent",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "feeReceiver",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getUserVolumes",
							"outputs": [
								{
									"components": [
										{
											"internalType": "address",
											"name": "user",
											"type": "address"
										},
										{
											"internalType": "uint256",
											"name": "volume",
											"type": "uint256"
										}
									],
									"internalType": "struct Volume[]",
									"name": "",
									"type": "tuple[]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_feeReceiver",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "_feePercent",
									"type": "uint256"
								}
							],
							"name": "setFeeData",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "startCompetition",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "stopCompetition",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "toToken",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amountOutMin",
									"type": "uint256"
								}
							],
							"name": "swapCROForToken",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "fromToken",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amountIn",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountOutMin",
									"type": "uint256"
								}
							],
							"name": "swapTokenForCRO",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "fromToken",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "toToken",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amountIn",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountOutMin",
									"type": "uint256"
								}
							],
							"name": "swapTokenForToken",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "userVolume",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "wad",
									"type": "uint256"
								}
							],
							"name": "withdraw",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"stateMutability": "payable",
							"type": "receive"
						}
					],
					"devdoc": {
						"errors": {
							"OwnableInvalidOwner(address)": [
								{
									"details": "The owner is not a valid owner account. (eg. `address(0)`)"
								}
							],
							"OwnableUnauthorizedAccount(address)": [
								{
									"details": "The caller account is not authorized to perform an operation."
								}
							]
						},
						"kind": "dev",
						"methods": {
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"ARY/SwapPro.sol\":2107:10094  contract SwapPro is Ownable {... */\n  mstore(0x40, 0x80)\n    /* \"ARY/SwapPro.sol\":2797:2836  bool public competition_started = false */\n  0x03\n  dup1\n  sload\n  not(0xff)\n  and\n  swap1\n  sstore\n    /* \"ARY/SwapPro.sol\":3118:3760  constructor() Ownable(msg.sender) {... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n    /* \"ARY/SwapPro.sol\":3140:3150  msg.sender */\n  caller\n  dup1\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1269:1364  if (initialOwner == address(0)) {... */\n  tag_5\n  jumpi\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1322:1353  OwnableInvalidOwner(address(0)) */\n  mload(0x40)\n  shl(0xe0, 0x1e4fbdf7)\n  dup2\n  mstore\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1350:1351  0 */\n  0x00\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1322:1353  OwnableInvalidOwner(address(0)) */\n  0x04\n  dup3\n  add\n    /* \"#utility.yul\":160:211   */\n  mstore\n    /* \"#utility.yul\":133:151   */\n  0x24\n  add\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1322:1353  OwnableInvalidOwner(address(0)) */\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1269:1364  if (initialOwner == address(0)) {... */\ntag_5:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1373:1405  _transferOwnership(initialOwner) */\n  tag_8\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1392:1404  initialOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1373:1391  _transferOwnership */\n  tag_9\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1373:1405  _transferOwnership(initialOwner) */\n  jump\t// in\ntag_8:\n  pop\n    /* \"ARY/SwapPro.sol\":3163:3170  factory */\n  0x07\n    /* \"ARY/SwapPro.sol\":3163:3196  factory = IDEXFactory(DEXFACTORY) */\n  dup1\n  sload\n  not(sub(shl(0xa0, 0x01), 0x01))\n  swap1\n  dup2\n  and\n    /* \"ARY/SwapPro.sol\":2683:2725  0x3B44B2a187a7b3824131F8db5a74194D0a42Fc15 */\n  0x3b44b2a187a7b3824131f8db5a74194d0a42fc15\n    /* \"ARY/SwapPro.sol\":3163:3196  factory = IDEXFactory(DEXFACTORY) */\n  or\n  swap1\n  swap2\n  sstore\n    /* \"ARY/SwapPro.sol\":3207:3213  router */\n  0x08\n    /* \"ARY/SwapPro.sol\":3207:3237  router = IDEXRouter(DEXROUTER) */\n  dup1\n  sload\n  dup3\n  and\n  0x00\n  dup1\n  mload\n  0x20\n  data_bb9835c734ea2ee08b9eb3f6004f5f118e5b999fbe41c94259ac9a08cb0aff12\n  dup4\n  codecopy\n  dup2\n  mload\n  swap2\n  mstore\n  swap1\n  dup2\n  or\n  swap1\n  swap2\n  sstore\n    /* \"ARY/SwapPro.sol\":3248:3253  cusdc */\n  0x09\n    /* \"ARY/SwapPro.sol\":3248:3269  cusdc = IERC20(CUSDC) */\n  dup1\n  sload\n  dup4\n  and\n    /* \"ARY/SwapPro.sol\":2174:2216  0xc21223249CA28397B4B6541dfFaEcC539BfF0c59 */\n  0xc21223249ca28397b4b6541dffaecc539bff0c59\n    /* \"ARY/SwapPro.sol\":3248:3269  cusdc = IERC20(CUSDC) */\n  swap1\n  dup2\n  or\n  swap1\n  swap2\n  sstore\n    /* \"ARY/SwapPro.sol\":3280:3285  cusdt */\n  0x0a\n    /* \"ARY/SwapPro.sol\":3280:3301  cusdt = IERC20(CUSDT) */\n  dup1\n  sload\n  dup5\n  and\n    /* \"ARY/SwapPro.sol\":2255:2297  0x66e428c3f67a68878562e79A0234c1F83c208770 */\n  0x66e428c3f67a68878562e79a0234c1f83c208770\n    /* \"ARY/SwapPro.sol\":3280:3301  cusdt = IERC20(CUSDT) */\n  or\n  swap1\n  sstore\n    /* \"ARY/SwapPro.sol\":3312:3315  ary */\n  0x0b\n    /* \"ARY/SwapPro.sol\":3312:3329  ary = IERC20(ARY) */\n  dup1\n  sload\n  dup5\n  and\n    /* \"ARY/SwapPro.sol\":2414:2456  0x41bc026dABe978bc2FAfeA1850456511ca4B01bc */\n  0x41bc026dabe978bc2fafea1850456511ca4b01bc\n    /* \"ARY/SwapPro.sol\":3312:3329  ary = IERC20(ARY) */\n  or\n  swap1\n  sstore\n    /* \"ARY/SwapPro.sol\":3340:3344  mery */\n  0x0c\n    /* \"ARY/SwapPro.sol\":3340:3359  mery = IERC20(MERY) */\n  dup1\n  sload\n  dup5\n  and\n    /* \"ARY/SwapPro.sol\":2494:2536  0x3b41B27E74Dd366CE27cB389dc7877D4e1516d4d */\n  0x3b41b27e74dd366ce27cb389dc7877d4e1516d4d\n    /* \"ARY/SwapPro.sol\":3340:3359  mery = IERC20(MERY) */\n  or\n  swap1\n  sstore\n    /* \"ARY/SwapPro.sol\":3370:3374  wcro */\n  0x0d\n    /* \"ARY/SwapPro.sol\":3370:3388  wcro = IWCRO(WCRO) */\n  dup1\n  sload\n  dup5\n  and\n    /* \"ARY/SwapPro.sol\":2335:2377  0x5C7F8A570d578ED84E63fdFA7b1eE72dEae1AE23 */\n  0x5c7f8a570d578ed84e63fdfa7b1ee72deae1ae23\n    /* \"ARY/SwapPro.sol\":3370:3388  wcro = IWCRO(WCRO) */\n  or\n  swap1\n  sstore\n    /* \"ARY/SwapPro.sol\":3163:3196  factory = IDEXFactory(DEXFACTORY) */\n  0x01\n    /* \"ARY/SwapPro.sol\":3399:3423  feeReceiver = msg.sender */\n  dup1\n  sload\n  swap1\n  swap4\n  and\n    /* \"ARY/SwapPro.sol\":3413:3423  msg.sender */\n  caller\n    /* \"ARY/SwapPro.sol\":3399:3423  feeReceiver = msg.sender */\n  or\n  swap1\n  swap3\n  sstore\n    /* \"ARY/SwapPro.sol\":3447:3448  3 */\n  0x03\n    /* \"ARY/SwapPro.sol\":3434:3444  feePercent */\n  0x02\n    /* \"ARY/SwapPro.sol\":3434:3448  feePercent = 3 */\n  sstore\n    /* \"ARY/SwapPro.sol\":3497:3540  cusdc.approve(DEXROUTER, type(uint256).max) */\n  mload(0x40)\n  shl(0xe0, 0x095ea7b3)\n  dup2\n  mstore\n    /* \"ARY/SwapPro.sol\":3497:3510  cusdc.approve */\n  0x095ea7b3\n  swap2\n    /* \"ARY/SwapPro.sol\":3497:3540  cusdc.approve(DEXROUTER, type(uint256).max) */\n  tag_11\n  swap2\n  not(0x00)\n  swap1\n  0x04\n  add\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"#utility.yul\":414:446   */\n  swap3\n  swap1\n  swap3\n  and\n    /* \"#utility.yul\":396:447   */\n  dup3\n  mstore\n    /* \"#utility.yul\":478:480   */\n  0x20\n    /* \"#utility.yul\":463:481   */\n  dup3\n  add\n    /* \"#utility.yul\":456:490   */\n  mstore\n    /* \"#utility.yul\":384:386   */\n  0x40\n    /* \"#utility.yul\":369:387   */\n  add\n  swap1\n    /* \"#utility.yul\":222:496   */\n  jump\n    /* \"ARY/SwapPro.sol\":3497:3540  cusdc.approve(DEXROUTER, type(uint256).max) */\ntag_11:\n  0x20\n  mload(0x40)\n  dup1\n  dup4\n  sub\n  dup2\n  0x00\n  dup8\n  gas\n  call\n  iszero\n  dup1\n  iszero\n  tag_14\n  jumpi\n  returndatasize\n  0x00\n  dup1\n  returndatacopy\n  revert(0x00, returndatasize)\ntag_14:\n  pop\n  pop\n  pop\n  pop\n  mload(0x40)\n  returndatasize\n  not(0x1f)\n  0x1f\n  dup3\n  add\n  and\n  dup3\n  add\n  dup1\n  0x40\n  mstore\n  pop\n  dup2\n  add\n  swap1\n  tag_15\n  swap2\n  swap1\n  tag_16\n  jump\t// in\ntag_15:\n  pop\n    /* \"ARY/SwapPro.sol\":3551:3556  cusdt */\n  sload(0x0a)\n    /* \"ARY/SwapPro.sol\":3551:3594  cusdt.approve(DEXROUTER, type(uint256).max) */\n  mload(0x40)\n  shl(0xe0, 0x095ea7b3)\n  dup2\n  mstore\n  0x00\n  dup1\n  mload\n  0x20\n  data_bb9835c734ea2ee08b9eb3f6004f5f118e5b999fbe41c94259ac9a08cb0aff12\n  dup4\n  codecopy\n  dup2\n  mload\n  swap2\n  mstore\n  0x04\n  dup3\n  add\n    /* \"#utility.yul\":396:447   */\n  mstore\n  not(0x00)\n    /* \"#utility.yul\":463:481   */\n  0x24\n  dup3\n  add\n    /* \"#utility.yul\":456:490   */\n  mstore\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"ARY/SwapPro.sol\":3551:3556  cusdt */\n  swap1\n  swap2\n  and\n  swap1\n    /* \"ARY/SwapPro.sol\":3551:3564  cusdt.approve */\n  0x095ea7b3\n  swap1\n    /* \"#utility.yul\":369:387   */\n  0x44\n  add\n    /* \"ARY/SwapPro.sol\":3551:3594  cusdt.approve(DEXROUTER, type(uint256).max) */\n  0x20\n  mload(0x40)\n  dup1\n  dup4\n  sub\n  dup2\n  0x00\n  dup8\n  gas\n  call\n  iszero\n  dup1\n  iszero\n  tag_19\n  jumpi\n  returndatasize\n  0x00\n  dup1\n  returndatacopy\n  revert(0x00, returndatasize)\ntag_19:\n  pop\n  pop\n  pop\n  pop\n  mload(0x40)\n  returndatasize\n  not(0x1f)\n  0x1f\n  dup3\n  add\n  and\n  dup3\n  add\n  dup1\n  0x40\n  mstore\n  pop\n  dup2\n  add\n  swap1\n  tag_20\n  swap2\n  swap1\n  tag_16\n  jump\t// in\ntag_20:\n  pop\n    /* \"ARY/SwapPro.sol\":3605:3608  ary */\n  sload(0x0b)\n    /* \"ARY/SwapPro.sol\":3605:3646  ary.approve(DEXROUTER, type(uint256).max) */\n  mload(0x40)\n  shl(0xe0, 0x095ea7b3)\n  dup2\n  mstore\n  0x00\n  dup1\n  mload\n  0x20\n  data_bb9835c734ea2ee08b9eb3f6004f5f118e5b999fbe41c94259ac9a08cb0aff12\n  dup4\n  codecopy\n  dup2\n  mload\n  swap2\n  mstore\n  0x04\n  dup3\n  add\n    /* \"#utility.yul\":396:447   */\n  mstore\n  not(0x00)\n    /* \"#utility.yul\":463:481   */\n  0x24\n  dup3\n  add\n    /* \"#utility.yul\":456:490   */\n  mstore\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"ARY/SwapPro.sol\":3605:3608  ary */\n  swap1\n  swap2\n  and\n  swap1\n    /* \"ARY/SwapPro.sol\":3605:3616  ary.approve */\n  0x095ea7b3\n  swap1\n    /* \"#utility.yul\":369:387   */\n  0x44\n  add\n    /* \"ARY/SwapPro.sol\":3605:3646  ary.approve(DEXROUTER, type(uint256).max) */\n  0x20\n  mload(0x40)\n  dup1\n  dup4\n  sub\n  dup2\n  0x00\n  dup8\n  gas\n  call\n  iszero\n  dup1\n  iszero\n  tag_23\n  jumpi\n  returndatasize\n  0x00\n  dup1\n  returndatacopy\n  revert(0x00, returndatasize)\ntag_23:\n  pop\n  pop\n  pop\n  pop\n  mload(0x40)\n  returndatasize\n  not(0x1f)\n  0x1f\n  dup3\n  add\n  and\n  dup3\n  add\n  dup1\n  0x40\n  mstore\n  pop\n  dup2\n  add\n  swap1\n  tag_24\n  swap2\n  swap1\n  tag_16\n  jump\t// in\ntag_24:\n  pop\n    /* \"ARY/SwapPro.sol\":3657:3661  wcro */\n  sload(0x0d)\n    /* \"ARY/SwapPro.sol\":3657:3699  wcro.approve(DEXROUTER, type(uint256).max) */\n  mload(0x40)\n  shl(0xe0, 0x095ea7b3)\n  dup2\n  mstore\n  0x00\n  dup1\n  mload\n  0x20\n  data_bb9835c734ea2ee08b9eb3f6004f5f118e5b999fbe41c94259ac9a08cb0aff12\n  dup4\n  codecopy\n  dup2\n  mload\n  swap2\n  mstore\n  0x04\n  dup3\n  add\n    /* \"#utility.yul\":396:447   */\n  mstore\n  not(0x00)\n    /* \"#utility.yul\":463:481   */\n  0x24\n  dup3\n  add\n    /* \"#utility.yul\":456:490   */\n  mstore\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"ARY/SwapPro.sol\":3657:3661  wcro */\n  swap1\n  swap2\n  and\n  swap1\n    /* \"ARY/SwapPro.sol\":3657:3669  wcro.approve */\n  0x095ea7b3\n  swap1\n    /* \"#utility.yul\":369:387   */\n  0x44\n  add\n    /* \"ARY/SwapPro.sol\":3657:3699  wcro.approve(DEXROUTER, type(uint256).max) */\n  0x20\n  mload(0x40)\n  dup1\n  dup4\n  sub\n  dup2\n  0x00\n  dup8\n  gas\n  call\n  iszero\n  dup1\n  iszero\n  tag_27\n  jumpi\n  returndatasize\n  0x00\n  dup1\n  returndatacopy\n  revert(0x00, returndatasize)\ntag_27:\n  pop\n  pop\n  pop\n  pop\n  mload(0x40)\n  returndatasize\n  not(0x1f)\n  0x1f\n  dup3\n  add\n  and\n  dup3\n  add\n  dup1\n  0x40\n  mstore\n  pop\n  dup2\n  add\n  swap1\n  tag_28\n  swap2\n  swap1\n  tag_16\n  jump\t// in\ntag_28:\n  pop\n    /* \"ARY/SwapPro.sol\":3710:3714  mery */\n  sload(0x0c)\n    /* \"ARY/SwapPro.sol\":3710:3752  mery.approve(DEXROUTER, type(uint256).max) */\n  mload(0x40)\n  shl(0xe0, 0x095ea7b3)\n  dup2\n  mstore\n  0x00\n  dup1\n  mload\n  0x20\n  data_bb9835c734ea2ee08b9eb3f6004f5f118e5b999fbe41c94259ac9a08cb0aff12\n  dup4\n  codecopy\n  dup2\n  mload\n  swap2\n  mstore\n  0x04\n  dup3\n  add\n    /* \"#utility.yul\":396:447   */\n  mstore\n  not(0x00)\n    /* \"#utility.yul\":463:481   */\n  0x24\n  dup3\n  add\n    /* \"#utility.yul\":456:490   */\n  mstore\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"ARY/SwapPro.sol\":3710:3714  mery */\n  swap1\n  swap2\n  and\n  swap1\n    /* \"ARY/SwapPro.sol\":3710:3722  mery.approve */\n  0x095ea7b3\n  swap1\n    /* \"#utility.yul\":369:387   */\n  0x44\n  add\n    /* \"ARY/SwapPro.sol\":3710:3752  mery.approve(DEXROUTER, type(uint256).max) */\n  0x20\n  mload(0x40)\n  dup1\n  dup4\n  sub\n  dup2\n  0x00\n  dup8\n  gas\n  call\n  iszero\n  dup1\n  iszero\n  tag_31\n  jumpi\n  returndatasize\n  0x00\n  dup1\n  returndatacopy\n  revert(0x00, returndatasize)\ntag_31:\n  pop\n  pop\n  pop\n  pop\n  mload(0x40)\n  returndatasize\n  not(0x1f)\n  0x1f\n  dup3\n  add\n  and\n  dup3\n  add\n  dup1\n  0x40\n  mstore\n  pop\n  dup2\n  add\n  swap1\n  tag_32\n  swap2\n  swap1\n  tag_16\n  jump\t// in\ntag_32:\n  pop\n    /* \"ARY/SwapPro.sol\":2107:10094  contract SwapPro is Ownable {... */\n  jump(tag_35)\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\ntag_9:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2985:3001  address oldOwner */\n  0x00\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3004:3010  _owner */\n  dup1\n  sload\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3020:3037  _owner = newOwner */\n  dup4\n  dup2\n  and\n  not(sub(shl(0xa0, 0x01), 0x01))\n  dup4\n  and\n  dup2\n  or\n  dup5\n  sstore\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n  mload(0x40)\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3004:3010  _owner */\n  swap2\n  swap1\n  swap3\n  and\n  swap3\n  dup4\n  swap2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n  0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n  swap2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2985:3001  address oldOwner */\n  swap1\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n  log3\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2975:3099  {... */\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":501:778   */\ntag_16:\n    /* \"#utility.yul\":568:574   */\n  0x00\n    /* \"#utility.yul\":621:623   */\n  0x20\n    /* \"#utility.yul\":609:618   */\n  dup3\n    /* \"#utility.yul\":600:607   */\n  dup5\n    /* \"#utility.yul\":596:619   */\n  sub\n    /* \"#utility.yul\":592:624   */\n  slt\n    /* \"#utility.yul\":589:641   */\n  iszero\n  tag_39\n  jumpi\n    /* \"#utility.yul\":637:638   */\n  0x00\n    /* \"#utility.yul\":634:635   */\n  dup1\n    /* \"#utility.yul\":627:639   */\n  revert\n    /* \"#utility.yul\":589:641   */\ntag_39:\n    /* \"#utility.yul\":669:678   */\n  dup2\n    /* \"#utility.yul\":663:679   */\n  mload\n    /* \"#utility.yul\":722:727   */\n  dup1\n    /* \"#utility.yul\":715:728   */\n  iszero\n    /* \"#utility.yul\":708:729   */\n  iszero\n    /* \"#utility.yul\":701:706   */\n  dup2\n    /* \"#utility.yul\":698:730   */\n  eq\n    /* \"#utility.yul\":688:748   */\n  tag_40\n  jumpi\n    /* \"#utility.yul\":744:745   */\n  0x00\n    /* \"#utility.yul\":741:742   */\n  dup1\n    /* \"#utility.yul\":734:746   */\n  revert\n    /* \"#utility.yul\":688:748   */\ntag_40:\n    /* \"#utility.yul\":767:772   */\n  swap4\n    /* \"#utility.yul\":501:778   */\n  swap3\n  pop\n  pop\n  pop\n  jump\t// out\ntag_35:\n    /* \"ARY/SwapPro.sol\":2107:10094  contract SwapPro is Ownable {... */\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\ndata_bb9835c734ea2ee08b9eb3f6004f5f118e5b999fbe41c94259ac9a08cb0aff12 000000000000000000000000145863eb42cf62847a6ca784e6416c1682b1b2ae\n\nsub_0: assembly {\n        /* \"ARY/SwapPro.sol\":2107:10094  contract SwapPro is Ownable {... */\n      mstore(0x40, 0x80)\n      jumpi(tag_1, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0xa37b9e7f\n      gt\n      tag_28\n      jumpi\n      dup1\n      0xb3f00674\n      gt\n      tag_29\n      jumpi\n      dup1\n      0xd3e66a9e\n      gt\n      tag_30\n      jumpi\n      dup1\n      0xd3e66a9e\n      eq\n      tag_24\n      jumpi\n      dup1\n      0xd7b7d3f3\n      eq\n      tag_25\n      jumpi\n      dup1\n      0xedf26d9b\n      eq\n      tag_26\n      jumpi\n      dup1\n      0xf2fde38b\n      eq\n      tag_27\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_30:\n      dup1\n      0xb3f00674\n      eq\n      tag_21\n      jumpi\n      dup1\n      0xd0e30db0\n      eq\n      tag_22\n      jumpi\n      dup1\n      0xd16a4010\n      eq\n      tag_23\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_29:\n      dup1\n      0xa37b9e7f\n      eq\n      tag_15\n      jumpi\n      dup1\n      0xa6769ef8\n      eq\n      tag_16\n      jumpi\n      dup1\n      0xac65334f\n      eq\n      tag_17\n      jumpi\n      dup1\n      0xae38a070\n      eq\n      tag_18\n      jumpi\n      dup1\n      0xafe43b94\n      eq\n      tag_19\n      jumpi\n      dup1\n      0xb0befe63\n      eq\n      tag_20\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_28:\n      dup1\n      0x5f0018cd\n      gt\n      tag_31\n      jumpi\n      dup1\n      0x5f0018cd\n      eq\n      tag_9\n      jumpi\n      dup1\n      0x6504fbad\n      eq\n      tag_10\n      jumpi\n      dup1\n      0x715018a6\n      eq\n      tag_11\n      jumpi\n      dup1\n      0x7c6f8fae\n      eq\n      tag_12\n      jumpi\n      dup1\n      0x7fd6f15c\n      eq\n      tag_13\n      jumpi\n      dup1\n      0x8da5cb5b\n      eq\n      tag_14\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_31:\n      dup1\n      0x16214120\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x1d470cb1\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x2e1a7d4d\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x3977d68d\n      eq\n      tag_6\n      jumpi\n      dup1\n      0x39bda01c\n      eq\n      tag_7\n      jumpi\n      dup1\n      0x53ac861e\n      eq\n      tag_8\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      jumpi(tag_2, calldatasize)\n      stop\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"ARY/SwapPro.sol\":8894:9636  function swapTokenForCRO(... */\n    tag_3:\n      callvalue\n      dup1\n      iszero\n      tag_34\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_34:\n      pop\n      tag_35\n      tag_36\n      calldatasize\n      0x04\n      tag_37\n      jump\t// in\n    tag_36:\n      tag_38\n      jump\t// in\n    tag_35:\n      stop\n        /* \"ARY/SwapPro.sol\":2304:2377  address public constant WCRO = 0x5C7F8A570d578ED84E63fdFA7b1eE72dEae1AE23 */\n    tag_4:\n      callvalue\n      dup1\n      iszero\n      tag_39\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_39:\n      pop\n      tag_40\n        /* \"ARY/SwapPro.sol\":2335:2377  0x5C7F8A570d578ED84E63fdFA7b1eE72dEae1AE23 */\n      0x5c7f8a570d578ed84e63fdfa7b1ee72deae1ae23\n        /* \"ARY/SwapPro.sol\":2304:2377  address public constant WCRO = 0x5C7F8A570d578ED84E63fdFA7b1eE72dEae1AE23 */\n      dup2\n      jump\n    tag_40:\n      mload(0x40)\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":683:715   */\n      swap1\n      swap2\n      and\n        /* \"#utility.yul\":665:716   */\n      dup2\n      mstore\n        /* \"#utility.yul\":653:655   */\n      0x20\n        /* \"#utility.yul\":638:656   */\n      add\n        /* \"ARY/SwapPro.sol\":2304:2377  address public constant WCRO = 0x5C7F8A570d578ED84E63fdFA7b1eE72dEae1AE23 */\n    tag_42:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"ARY/SwapPro.sol\":9851:10054  function withdraw (... */\n    tag_5:\n      callvalue\n      dup1\n      iszero\n      tag_44\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_44:\n      pop\n      tag_35\n      tag_46\n      calldatasize\n      0x04\n      tag_47\n      jump\t// in\n    tag_46:\n      tag_48\n      jump\t// in\n        /* \"ARY/SwapPro.sol\":4731:4891  function setFeeData(address _feeReceiver, uint256 _feePercent) public onlyOwner {... */\n    tag_6:\n      callvalue\n      dup1\n      iszero\n      tag_49\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_49:\n      pop\n      tag_35\n      tag_51\n      calldatasize\n      0x04\n      tag_52\n      jump\t// in\n    tag_51:\n      tag_53\n      jump\t// in\n        /* \"ARY/SwapPro.sol\":4222:4472  function clearVolume() public onlyOwner{... */\n    tag_7:\n      callvalue\n      dup1\n      iszero\n      tag_54\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_54:\n      pop\n      tag_35\n      tag_56\n      jump\t// in\n        /* \"ARY/SwapPro.sol\":8047:8842  function swapCROForToken (... */\n    tag_8:\n      tag_35\n      tag_58\n      calldatasize\n      0x04\n      tag_52\n      jump\t// in\n    tag_58:\n      tag_59\n      jump\t// in\n        /* \"ARY/SwapPro.sol\":4480:4570  function stopCompetition() public onlyOwner {... */\n    tag_9:\n      callvalue\n      dup1\n      iszero\n      tag_60\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_60:\n      pop\n      tag_35\n      tag_62\n      jump\t// in\n        /* \"ARY/SwapPro.sol\":2223:2297  address public constant CUSDT = 0x66e428c3f67a68878562e79A0234c1F83c208770 */\n    tag_10:\n      callvalue\n      dup1\n      iszero\n      tag_63\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_63:\n      pop\n      tag_40\n        /* \"ARY/SwapPro.sol\":2255:2297  0x66e428c3f67a68878562e79A0234c1F83c208770 */\n      0x66e428c3f67a68878562e79a0234c1f83c208770\n        /* \"ARY/SwapPro.sol\":2223:2297  address public constant CUSDT = 0x66e428c3f67a68878562e79A0234c1F83c208770 */\n      dup2\n      jump\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2293:2394  function renounceOwnership() public virtual onlyOwner {... */\n    tag_11:\n      callvalue\n      dup1\n      iszero\n      tag_67\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_67:\n      pop\n      tag_35\n      tag_69\n      jump\t// in\n        /* \"ARY/SwapPro.sol\":2637:2725  address public constant DEXFACTORY =... */\n    tag_12:\n      callvalue\n      dup1\n      iszero\n      tag_70\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_70:\n      pop\n      tag_40\n        /* \"ARY/SwapPro.sol\":2683:2725  0x3B44B2a187a7b3824131F8db5a74194D0a42Fc15 */\n      0x3b44b2a187a7b3824131f8db5a74194d0a42fc15\n        /* \"ARY/SwapPro.sol\":2637:2725  address public constant DEXFACTORY =... */\n      dup2\n      jump\n        /* \"ARY/SwapPro.sol\":2765:2790  uint256 public feePercent */\n    tag_13:\n      callvalue\n      dup1\n      iszero\n      tag_74\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_74:\n      pop\n      tag_75\n      sload(0x02)\n      dup2\n      jump\n    tag_75:\n      mload(0x40)\n        /* \"#utility.yul\":1317:1342   */\n      swap1\n      dup2\n      mstore\n        /* \"#utility.yul\":1305:1307   */\n      0x20\n        /* \"#utility.yul\":1290:1308   */\n      add\n        /* \"ARY/SwapPro.sol\":2765:2790  uint256 public feePercent */\n      tag_42\n        /* \"#utility.yul\":1171:1348   */\n      jump\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1638:1723  function owner() public view virtual returns (address) {... */\n    tag_14:\n      callvalue\n      dup1\n      iszero\n      tag_79\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_79:\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1684:1691  address */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1710:1716  _owner */\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1638:1723  function owner() public view virtual returns (address) {... */\n      jump(tag_40)\n        /* \"ARY/SwapPro.sol\":2142:2216  address public constant CUSDC = 0xc21223249CA28397B4B6541dfFaEcC539BfF0c59 */\n    tag_15:\n      callvalue\n      dup1\n      iszero\n      tag_83\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_83:\n      pop\n      tag_40\n        /* \"ARY/SwapPro.sol\":2174:2216  0xc21223249CA28397B4B6541dfFaEcC539BfF0c59 */\n      0xc21223249ca28397b4b6541dffaecc539bff0c59\n        /* \"ARY/SwapPro.sol\":2142:2216  address public constant CUSDC = 0xc21223249CA28397B4B6541dfFaEcC539BfF0c59 */\n      dup2\n      jump\n        /* \"ARY/SwapPro.sol\":2843:2888  mapping(address => uint256) public userVolume */\n    tag_16:\n      callvalue\n      dup1\n      iszero\n      tag_87\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_87:\n      pop\n      tag_75\n      tag_89\n      calldatasize\n      0x04\n      tag_90\n      jump\t// in\n    tag_89:\n      mstore(0x20, 0x04)\n      0x00\n      swap1\n      dup2\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      dup2\n      jump\n        /* \"ARY/SwapPro.sol\":2797:2836  bool public competition_started = false */\n    tag_17:\n      callvalue\n      dup1\n      iszero\n      tag_93\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_93:\n      pop\n      sload(0x03)\n      tag_94\n      swap1\n      0xff\n      and\n      dup2\n      jump\n    tag_94:\n      mload(0x40)\n        /* \"#utility.yul\":1709:1723   */\n      swap1\n      iszero\n        /* \"#utility.yul\":1702:1724   */\n      iszero\n        /* \"#utility.yul\":1684:1725   */\n      dup2\n      mstore\n        /* \"#utility.yul\":1672:1674   */\n      0x20\n        /* \"#utility.yul\":1657:1675   */\n      add\n        /* \"ARY/SwapPro.sol\":2797:2836  bool public competition_started = false */\n      tag_42\n        /* \"#utility.yul\":1544:1731   */\n      jump\n        /* \"ARY/SwapPro.sol\":3809:4174  function getUserVolumes() external view returns (Volume[] memory) {... */\n    tag_18:\n      callvalue\n      dup1\n      iszero\n      tag_98\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_98:\n      pop\n      tag_99\n      tag_100\n      jump\t// in\n    tag_99:\n      mload(0x40)\n      tag_42\n      swap2\n      swap1\n      tag_102\n      jump\t// in\n        /* \"ARY/SwapPro.sol\":2384:2456  address public constant ARY = 0x41bc026dABe978bc2FAfeA1850456511ca4B01bc */\n    tag_19:\n      callvalue\n      dup1\n      iszero\n      tag_103\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_103:\n      pop\n      tag_40\n        /* \"ARY/SwapPro.sol\":2414:2456  0x41bc026dABe978bc2FAfeA1850456511ca4B01bc */\n      0x41bc026dabe978bc2fafea1850456511ca4b01bc\n        /* \"ARY/SwapPro.sol\":2384:2456  address public constant ARY = 0x41bc026dABe978bc2FAfeA1850456511ca4B01bc */\n      dup2\n      jump\n        /* \"ARY/SwapPro.sol\":2463:2536  address public constant MERY = 0x3b41B27E74Dd366CE27cB389dc7877D4e1516d4d */\n    tag_20:\n      callvalue\n      dup1\n      iszero\n      tag_107\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_107:\n      pop\n      tag_40\n        /* \"ARY/SwapPro.sol\":2494:2536  0x3b41B27E74Dd366CE27cB389dc7877D4e1516d4d */\n      0x3b41b27e74dd366ce27cb389dc7877d4e1516d4d\n        /* \"ARY/SwapPro.sol\":2463:2536  address public constant MERY = 0x3b41B27E74Dd366CE27cB389dc7877D4e1516d4d */\n      dup2\n      jump\n        /* \"ARY/SwapPro.sol\":2732:2758  address public feeReceiver */\n    tag_21:\n      callvalue\n      dup1\n      iszero\n      tag_111\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_111:\n      pop\n      sload(0x01)\n      tag_40\n      swap1\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      dup2\n      jump\n        /* \"ARY/SwapPro.sol\":9672:9843  function deposit () public payable {... */\n    tag_22:\n      tag_35\n      tag_116\n      jump\t// in\n        /* \"ARY/SwapPro.sol\":5854:7999  function swapTokenForToken(... */\n    tag_23:\n      callvalue\n      dup1\n      iszero\n      tag_117\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_117:\n      pop\n      tag_35\n      tag_119\n      calldatasize\n      0x04\n      tag_120\n      jump\t// in\n    tag_119:\n      tag_121\n      jump\t// in\n        /* \"ARY/SwapPro.sol\":4576:4666  function startCompetition() public onlyOwner {... */\n    tag_24:\n      callvalue\n      dup1\n      iszero\n      tag_122\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_122:\n      pop\n      tag_35\n      tag_124\n      jump\t// in\n        /* \"ARY/SwapPro.sol\":2543:2630  address public constant DEXROUTER =... */\n    tag_25:\n      callvalue\n      dup1\n      iszero\n      tag_125\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_125:\n      pop\n      tag_40\n        /* \"ARY/SwapPro.sol\":2588:2630  0x145863Eb42Cf62847A6Ca784e6416C1682b1b2Ae */\n      0x145863eb42cf62847a6ca784e6416c1682b1b2ae\n        /* \"ARY/SwapPro.sol\":2543:2630  address public constant DEXROUTER =... */\n      dup2\n      jump\n        /* \"ARY/SwapPro.sol\":2941:2967  address[] public addresses */\n    tag_26:\n      callvalue\n      dup1\n      iszero\n      tag_129\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_129:\n      pop\n      tag_40\n      tag_131\n      calldatasize\n      0x04\n      tag_47\n      jump\t// in\n    tag_131:\n      tag_132\n      jump\t// in\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2543:2758  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_27:\n      callvalue\n      dup1\n      iszero\n      tag_134\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_134:\n      pop\n      tag_35\n      tag_136\n      calldatasize\n      0x04\n      tag_90\n      jump\t// in\n    tag_136:\n      tag_137\n      jump\t// in\n        /* \"ARY/SwapPro.sol\":8894:9636  function swapTokenForCRO(... */\n    tag_38:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"ARY/SwapPro.sol\":9035:9051  fromToken == ARY */\n      dup4\n      and\n        /* \"ARY/SwapPro.sol\":2414:2456  0x41bc026dABe978bc2FAfeA1850456511ca4B01bc */\n      0x41bc026dabe978bc2fafea1850456511ca4b01bc\n        /* \"ARY/SwapPro.sol\":9035:9051  fromToken == ARY */\n      eq\n        /* \"ARY/SwapPro.sol\":9035:9074  fromToken == ARY && competition_started */\n      dup1\n      iszero\n      tag_139\n      jumpi\n      pop\n        /* \"ARY/SwapPro.sol\":9055:9074  competition_started */\n      and(0xff, sload(0x03))\n        /* \"ARY/SwapPro.sol\":9035:9074  fromToken == ARY && competition_started */\n    tag_139:\n        /* \"ARY/SwapPro.sol\":9032:9107  if(fromToken == ARY && competition_started) addVolume(msg.sender, amountIn) */\n      iszero\n      tag_141\n      jumpi\n        /* \"ARY/SwapPro.sol\":9076:9107  addVolume(msg.sender, amountIn) */\n      tag_141\n        /* \"ARY/SwapPro.sol\":9086:9096  msg.sender */\n      caller\n        /* \"ARY/SwapPro.sol\":9098:9106  amountIn */\n      dup4\n        /* \"ARY/SwapPro.sol\":9076:9085  addVolume */\n      tag_142\n        /* \"ARY/SwapPro.sol\":9076:9107  addVolume(msg.sender, amountIn) */\n      jump\t// in\n    tag_141:\n        /* \"ARY/SwapPro.sol\":9118:9185  IERC20(fromToken).transferFrom(msg.sender, address(this), amountIn) */\n      mload(0x40)\n      shl(0xe0, 0x23b872dd)\n      dup2\n      mstore\n        /* \"ARY/SwapPro.sol\":9149:9159  msg.sender */\n      caller\n        /* \"ARY/SwapPro.sol\":9118:9185  IERC20(fromToken).transferFrom(msg.sender, address(this), amountIn) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":3193:3227   */\n      mstore\n        /* \"ARY/SwapPro.sol\":9169:9173  this */\n      address\n        /* \"#utility.yul\":3243:3261   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":3236:3279   */\n      mstore\n        /* \"#utility.yul\":3295:3313   */\n      0x44\n      dup2\n      add\n        /* \"#utility.yul\":3288:3322   */\n      dup4\n      swap1\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"ARY/SwapPro.sol\":9118:9148  IERC20(fromToken).transferFrom */\n      dup5\n      and\n      swap1\n      0x23b872dd\n      swap1\n        /* \"#utility.yul\":3128:3146   */\n      0x64\n      add\n        /* \"ARY/SwapPro.sol\":9118:9185  IERC20(fromToken).transferFrom(msg.sender, address(this), amountIn) */\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_146\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_146:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_147\n      swap2\n      swap1\n      tag_148\n      jump\t// in\n    tag_147:\n      pop\n        /* \"ARY/SwapPro.sol\":9206:9223  uint256 feeAmount */\n      0x00\n        /* \"ARY/SwapPro.sol\":9250:9254  1000 */\n      0x03e8\n        /* \"ARY/SwapPro.sol\":9237:9247  feePercent */\n      sload(0x02)\n        /* \"ARY/SwapPro.sol\":9226:9234  amountIn */\n      dup5\n        /* \"ARY/SwapPro.sol\":9226:9247  amountIn * feePercent */\n      tag_149\n      swap2\n      swap1\n      tag_150\n      jump\t// in\n    tag_149:\n        /* \"ARY/SwapPro.sol\":9226:9254  amountIn * feePercent / 1000 */\n      tag_151\n      swap2\n      swap1\n      tag_152\n      jump\t// in\n    tag_151:\n        /* \"ARY/SwapPro.sol\":9206:9254  uint256 feeAmount = amountIn * feePercent / 1000 */\n      swap1\n      pop\n        /* \"ARY/SwapPro.sol\":9267:9295  getFee(fromToken, feeAmount) */\n      tag_153\n        /* \"ARY/SwapPro.sol\":9274:9283  fromToken */\n      dup5\n        /* \"ARY/SwapPro.sol\":9285:9294  feeAmount */\n      dup3\n        /* \"ARY/SwapPro.sol\":9267:9273  getFee */\n      tag_154\n        /* \"ARY/SwapPro.sol\":9267:9295  getFee(fromToken, feeAmount) */\n      jump\t// in\n    tag_153:\n        /* \"ARY/SwapPro.sol\":9332:9348  new address[](2) */\n      0x40\n      dup1\n      mload\n        /* \"ARY/SwapPro.sol\":9346:9347  2 */\n      0x02\n        /* \"ARY/SwapPro.sol\":9332:9348  new address[](2) */\n      dup1\n      dup3\n      mstore\n      0x60\n      dup3\n      add\n      dup4\n      mstore\n        /* \"ARY/SwapPro.sol\":9308:9329  address[] memory path */\n      0x00\n      swap3\n        /* \"ARY/SwapPro.sol\":9332:9348  new address[](2) */\n      0x20\n      dup4\n      add\n      swap1\n      dup1\n      calldatasize\n      dup4\n      calldatacopy\n      add\n      swap1\n      pop\n      pop\n        /* \"ARY/SwapPro.sol\":9308:9348  address[] memory path = new address[](2) */\n      swap1\n      pop\n        /* \"ARY/SwapPro.sol\":9369:9378  fromToken */\n      dup5\n        /* \"ARY/SwapPro.sol\":9359:9363  path */\n      dup2\n        /* \"ARY/SwapPro.sol\":9364:9365  0 */\n      0x00\n        /* \"ARY/SwapPro.sol\":9359:9366  path[0] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_160\n      jumpi\n      tag_160\n      tag_161\n      jump\t// in\n    tag_160:\n      0x20\n      mul\n      0x20\n      add\n      add\n        /* \"ARY/SwapPro.sol\":9359:9378  path[0] = fromToken */\n      swap1\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      swap1\n      dup2\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      dup2\n      mstore\n      pop\n      pop\n        /* \"ARY/SwapPro.sol\":2335:2377  0x5C7F8A570d578ED84E63fdFA7b1eE72dEae1AE23 */\n      0x5c7f8a570d578ed84e63fdfa7b1ee72deae1ae23\n        /* \"ARY/SwapPro.sol\":9389:9393  path */\n      dup2\n        /* \"ARY/SwapPro.sol\":9394:9395  1 */\n      0x01\n        /* \"ARY/SwapPro.sol\":9389:9396  path[1] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_163\n      jumpi\n      tag_163\n      tag_161\n      jump\t// in\n    tag_163:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"ARY/SwapPro.sol\":9389:9403  path[1] = WCRO */\n      swap3\n      dup4\n      and\n        /* \"ARY/SwapPro.sol\":9389:9396  path[1] */\n      0x20\n      swap2\n      dup3\n      mul\n      swap3\n      swap1\n      swap3\n      add\n      add\n        /* \"ARY/SwapPro.sol\":9389:9403  path[1] = WCRO */\n      mstore\n        /* \"ARY/SwapPro.sol\":9414:9420  router */\n      sload(0x08)\n      and\n        /* \"ARY/SwapPro.sol\":9414:9471  router.swapExactTokensForETHSupportingFeeOnTransferTokens */\n      0x791ac947\n        /* \"ARY/SwapPro.sol\":9486:9506  amountIn - feeAmount */\n      tag_164\n        /* \"ARY/SwapPro.sol\":9497:9506  feeAmount */\n      dup5\n        /* \"ARY/SwapPro.sol\":9486:9494  amountIn */\n      dup8\n        /* \"ARY/SwapPro.sol\":9486:9506  amountIn - feeAmount */\n      tag_165\n      jump\t// in\n    tag_164:\n        /* \"ARY/SwapPro.sol\":9521:9533  amountOutMin */\n      dup6\n        /* \"ARY/SwapPro.sol\":9548:9552  path */\n      dup5\n        /* \"ARY/SwapPro.sol\":9567:9577  msg.sender */\n      caller\n        /* \"ARY/SwapPro.sol\":9592:9617  block.timestamp + 1 hours */\n      tag_166\n        /* \"ARY/SwapPro.sol\":9592:9607  block.timestamp */\n      timestamp\n        /* \"ARY/SwapPro.sol\":9610:9617  1 hours */\n      0x0e10\n        /* \"ARY/SwapPro.sol\":9592:9617  block.timestamp + 1 hours */\n      tag_167\n      jump\t// in\n    tag_166:\n        /* \"ARY/SwapPro.sol\":9414:9628  router.swapExactTokensForETHSupportingFeeOnTransferTokens(... */\n      mload(0x40)\n      dup7\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_168\n      swap6\n      swap5\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_169\n      jump\t// in\n    tag_168:\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_170\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_170:\n      pop\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_172\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_172:\n      pop\n      pop\n      pop\n      pop\n        /* \"ARY/SwapPro.sol\":9019:9636  {... */\n      pop\n      pop\n        /* \"ARY/SwapPro.sol\":8894:9636  function swapTokenForCRO(... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"ARY/SwapPro.sol\":9851:10054  function withdraw (... */\n    tag_48:\n        /* \"ARY/SwapPro.sol\":9917:9921  wcro */\n      sload(0x0d)\n        /* \"ARY/SwapPro.sol\":9917:9966  wcro.transferFrom(msg.sender, address(this), wad) */\n      mload(0x40)\n      shl(0xe0, 0x23b872dd)\n      dup2\n      mstore\n        /* \"ARY/SwapPro.sol\":9935:9945  msg.sender */\n      caller\n        /* \"ARY/SwapPro.sol\":9917:9966  wcro.transferFrom(msg.sender, address(this), wad) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":3193:3227   */\n      mstore\n        /* \"ARY/SwapPro.sol\":9955:9959  this */\n      address\n        /* \"#utility.yul\":3243:3261   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":3236:3279   */\n      mstore\n        /* \"#utility.yul\":3295:3313   */\n      0x44\n      dup2\n      add\n        /* \"#utility.yul\":3288:3322   */\n      dup4\n      swap1\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"ARY/SwapPro.sol\":9917:9921  wcro */\n      swap1\n      swap2\n      and\n      swap1\n        /* \"ARY/SwapPro.sol\":9917:9934  wcro.transferFrom */\n      0x23b872dd\n      swap1\n        /* \"#utility.yul\":3128:3146   */\n      0x64\n      add\n        /* \"ARY/SwapPro.sol\":9917:9966  wcro.transferFrom(msg.sender, address(this), wad) */\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_176\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_176:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_177\n      swap2\n      swap1\n      tag_148\n      jump\t// in\n    tag_177:\n      pop\n        /* \"ARY/SwapPro.sol\":9977:9981  wcro */\n      sload(0x0d)\n        /* \"ARY/SwapPro.sol\":9977:9995  wcro.withdraw(wad) */\n      mload(0x40)\n      shl(0xe0, 0x2e1a7d4d)\n      dup2\n      mstore\n      0x04\n      dup2\n      add\n        /* \"#utility.yul\":1317:1342   */\n      dup4\n      swap1\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"ARY/SwapPro.sol\":9977:9981  wcro */\n      swap1\n      swap2\n      and\n      swap1\n        /* \"ARY/SwapPro.sol\":9977:9990  wcro.withdraw */\n      0x2e1a7d4d\n      swap1\n        /* \"#utility.yul\":1290:1308   */\n      0x24\n      add\n        /* \"ARY/SwapPro.sol\":9977:9995  wcro.withdraw(wad) */\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_179\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_179:\n      pop\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_181\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_181:\n      pop\n      pop\n        /* \"ARY/SwapPro.sol\":10013:10046  payable(msg.sender).transfer(wad) */\n      mload(0x40)\n        /* \"ARY/SwapPro.sol\":10021:10031  msg.sender */\n      caller\n      swap3\n      pop\n        /* \"ARY/SwapPro.sol\":10013:10046  payable(msg.sender).transfer(wad) */\n      dup4\n      iszero\n      0x08fc\n      mul\n      swap2\n      pop\n        /* \"ARY/SwapPro.sol\":10042:10045  wad */\n      dup4\n      swap1\n        /* \"ARY/SwapPro.sol\":10013:10046  payable(msg.sender).transfer(wad) */\n      0x00\n      dup2\n      dup2\n      dup2\n        /* \"ARY/SwapPro.sol\":10042:10045  wad */\n      dup6\n        /* \"ARY/SwapPro.sol\":10021:10031  msg.sender */\n      dup9\n        /* \"ARY/SwapPro.sol\":10013:10046  payable(msg.sender).transfer(wad) */\n      dup9\n      call\n      swap4\n      pop\n      pop\n      pop\n      pop\n      iszero\n      dup1\n      iszero\n      tag_183\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_183:\n      pop\n        /* \"ARY/SwapPro.sol\":9851:10054  function withdraw (... */\n      pop\n      jump\t// out\n        /* \"ARY/SwapPro.sol\":4731:4891  function setFeeData(address _feeReceiver, uint256 _feePercent) public onlyOwner {... */\n    tag_53:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_185\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_186\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_185:\n        /* \"ARY/SwapPro.sol\":4822:4833  feeReceiver */\n      0x01\n        /* \"ARY/SwapPro.sol\":4822:4848  feeReceiver = _feeReceiver */\n      dup1\n      sload\n      not(sub(shl(0xa0, 0x01), 0x01))\n      and\n      sub(shl(0xa0, 0x01), 0x01)\n      swap4\n      swap1\n      swap4\n      and\n      swap3\n      swap1\n      swap3\n      or\n      swap1\n      swap2\n      sstore\n        /* \"ARY/SwapPro.sol\":4859:4869  feePercent */\n      0x02\n        /* \"ARY/SwapPro.sol\":4859:4883  feePercent = _feePercent */\n      sstore\n        /* \"ARY/SwapPro.sol\":4731:4891  function setFeeData(address _feeReceiver, uint256 _feePercent) public onlyOwner {... */\n      jump\t// out\n        /* \"ARY/SwapPro.sol\":4222:4472  function clearVolume() public onlyOwner{... */\n    tag_56:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_189\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_186\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_189:\n        /* \"ARY/SwapPro.sol\":4284:4293  addresses */\n      0x06\n        /* \"ARY/SwapPro.sol\":4284:4300  addresses.length */\n      sload\n        /* \"ARY/SwapPro.sol\":4272:4281  uint256 n */\n      0x00\n        /* \"ARY/SwapPro.sol\":4311:4400  for(uint256 i = 0; i < n; i++) {... */\n    tag_191:\n        /* \"ARY/SwapPro.sol\":4334:4335  n */\n      dup2\n        /* \"ARY/SwapPro.sol\":4330:4331  i */\n      dup2\n        /* \"ARY/SwapPro.sol\":4330:4335  i < n */\n      lt\n        /* \"ARY/SwapPro.sol\":4311:4400  for(uint256 i = 0; i < n; i++) {... */\n      iszero\n      tag_192\n      jumpi\n        /* \"ARY/SwapPro.sol\":4364:4374  userVolume */\n      0x04\n        /* \"ARY/SwapPro.sol\":4364:4388  userVolume[addresses[i]] */\n      0x00\n        /* \"ARY/SwapPro.sol\":4375:4384  addresses */\n      0x06\n        /* \"ARY/SwapPro.sol\":4385:4386  i */\n      dup4\n        /* \"ARY/SwapPro.sol\":4375:4387  addresses[i] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_195\n      jumpi\n      tag_195\n      tag_161\n      jump\t// in\n    tag_195:\n      0x00\n      swap2\n      dup3\n      mstore\n      0x20\n      dup1\n      dup4\n      keccak256\n      swap1\n      swap2\n      add\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n        /* \"ARY/SwapPro.sol\":4364:4388  userVolume[addresses[i]] */\n      dup4\n      mstore\n      dup3\n      add\n      swap3\n      swap1\n      swap3\n      mstore\n      0x40\n      add\n      dup2\n      keccak256\n        /* \"ARY/SwapPro.sol\":4357:4388  delete userVolume[addresses[i]] */\n      sstore\n        /* \"ARY/SwapPro.sol\":4337:4340  i++ */\n      dup1\n      tag_197\n      dup2\n      tag_198\n      jump\t// in\n    tag_197:\n      swap2\n      pop\n      pop\n        /* \"ARY/SwapPro.sol\":4311:4400  for(uint256 i = 0; i < n; i++) {... */\n      jump(tag_191)\n    tag_192:\n      pop\n        /* \"ARY/SwapPro.sol\":4410:4426  delete addresses */\n      tag_199\n        /* \"ARY/SwapPro.sol\":4417:4426  addresses */\n      0x06\n      0x00\n        /* \"ARY/SwapPro.sol\":4410:4426  delete addresses */\n      tag_200\n      jump\t// in\n    tag_199:\n      pop\n        /* \"ARY/SwapPro.sol\":4437:4456  competition_started */\n      0x03\n        /* \"ARY/SwapPro.sol\":4437:4464  competition_started = false */\n      dup1\n      sload\n      not(0xff)\n      and\n      swap1\n      sstore\n        /* \"ARY/SwapPro.sol\":4222:4472  function clearVolume() public onlyOwner{... */\n      jump\t// out\n        /* \"ARY/SwapPro.sol\":8047:8842  function swapCROForToken (... */\n    tag_59:\n        /* \"ARY/SwapPro.sol\":8233:8243  feePercent */\n      sload(0x02)\n        /* \"ARY/SwapPro.sol\":8182:8191  msg.value */\n      callvalue\n      swap1\n        /* \"ARY/SwapPro.sol\":8163:8179  uint256 amountIn */\n      0x00\n      swap1\n        /* \"ARY/SwapPro.sol\":8246:8250  1000 */\n      0x03e8\n      swap1\n        /* \"ARY/SwapPro.sol\":8222:8243  amountIn * feePercent */\n      tag_202\n      swap1\n        /* \"ARY/SwapPro.sol\":8182:8191  msg.value */\n      dup5\n        /* \"ARY/SwapPro.sol\":8222:8243  amountIn * feePercent */\n      tag_150\n      jump\t// in\n    tag_202:\n        /* \"ARY/SwapPro.sol\":8222:8250  amountIn * feePercent / 1000 */\n      tag_203\n      swap2\n      swap1\n      tag_152\n      jump\t// in\n    tag_203:\n        /* \"ARY/SwapPro.sol\":8269:8280  feeReceiver */\n      sload(0x01)\n        /* \"ARY/SwapPro.sol\":8261:8301  payable(feeReceiver).transfer(feeAmount) */\n      mload(0x40)\n        /* \"ARY/SwapPro.sol\":8202:8250  uint256 feeAmount = amountIn * feePercent / 1000 */\n      swap2\n      swap3\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"ARY/SwapPro.sol\":8269:8280  feeReceiver */\n      and\n      swap1\n        /* \"ARY/SwapPro.sol\":8261:8301  payable(feeReceiver).transfer(feeAmount) */\n      dup3\n      iszero\n      0x08fc\n      mul\n      swap1\n        /* \"ARY/SwapPro.sol\":8202:8250  uint256 feeAmount = amountIn * feePercent / 1000 */\n      dup4\n      swap1\n        /* \"ARY/SwapPro.sol\":8269:8280  feeReceiver */\n      0x00\n        /* \"ARY/SwapPro.sol\":8261:8301  payable(feeReceiver).transfer(feeAmount) */\n      dup2\n        /* \"ARY/SwapPro.sol\":8269:8280  feeReceiver */\n      dup2\n        /* \"ARY/SwapPro.sol\":8261:8301  payable(feeReceiver).transfer(feeAmount) */\n      dup2\n        /* \"ARY/SwapPro.sol\":8202:8250  uint256 feeAmount = amountIn * feePercent / 1000 */\n      dup6\n        /* \"ARY/SwapPro.sol\":8269:8280  feeReceiver */\n      dup9\n        /* \"ARY/SwapPro.sol\":8261:8301  payable(feeReceiver).transfer(feeAmount) */\n      dup9\n      call\n      swap4\n      pop\n      pop\n      pop\n      pop\n      iszero\n      dup1\n      iszero\n      tag_205\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_205:\n      pop\n        /* \"ARY/SwapPro.sol\":8338:8354  new address[](2) */\n      0x40\n      dup1\n      mload\n        /* \"ARY/SwapPro.sol\":8352:8353  2 */\n      0x02\n        /* \"ARY/SwapPro.sol\":8338:8354  new address[](2) */\n      dup1\n      dup3\n      mstore\n      0x60\n      dup3\n      add\n      dup4\n      mstore\n        /* \"ARY/SwapPro.sol\":8314:8335  address[] memory path */\n      0x00\n      swap3\n        /* \"ARY/SwapPro.sol\":8338:8354  new address[](2) */\n      0x20\n      dup4\n      add\n      swap1\n      dup1\n      calldatasize\n      dup4\n      calldatacopy\n      add\n      swap1\n      pop\n      pop\n        /* \"ARY/SwapPro.sol\":8314:8354  address[] memory path = new address[](2) */\n      swap1\n      pop\n        /* \"ARY/SwapPro.sol\":2335:2377  0x5C7F8A570d578ED84E63fdFA7b1eE72dEae1AE23 */\n      0x5c7f8a570d578ed84e63fdfa7b1ee72deae1ae23\n        /* \"ARY/SwapPro.sol\":8365:8369  path */\n      dup2\n        /* \"ARY/SwapPro.sol\":8370:8371  0 */\n      0x00\n        /* \"ARY/SwapPro.sol\":8365:8372  path[0] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_210\n      jumpi\n      tag_210\n      tag_161\n      jump\t// in\n    tag_210:\n      0x20\n      mul\n      0x20\n      add\n      add\n        /* \"ARY/SwapPro.sol\":8365:8379  path[0] = WCRO */\n      swap1\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      swap1\n      dup2\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      dup2\n      mstore\n      pop\n      pop\n        /* \"ARY/SwapPro.sol\":8400:8407  toToken */\n      dup5\n        /* \"ARY/SwapPro.sol\":8390:8394  path */\n      dup2\n        /* \"ARY/SwapPro.sol\":8395:8396  1 */\n      0x01\n        /* \"ARY/SwapPro.sol\":8390:8397  path[1] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_212\n      jumpi\n      tag_212\n      tag_161\n      jump\t// in\n    tag_212:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"ARY/SwapPro.sol\":8390:8407  path[1] = toToken */\n      swap3\n      dup4\n      and\n        /* \"ARY/SwapPro.sol\":8390:8397  path[1] */\n      0x20\n      swap2\n      dup3\n      mul\n      swap3\n      swap1\n      swap3\n      add\n      add\n        /* \"ARY/SwapPro.sol\":8390:8407  path[1] = toToken */\n      mstore\n        /* \"ARY/SwapPro.sol\":8450:8456  router */\n      sload(0x08)\n        /* \"ARY/SwapPro.sol\":8420:8447  uint256[] memory amountsOut */\n      0x00\n      swap2\n        /* \"ARY/SwapPro.sol\":8450:8456  router */\n      and\n        /* \"ARY/SwapPro.sol\":8450:8470  router.getAmountsOut */\n      0xd06ca61f\n        /* \"ARY/SwapPro.sol\":8471:8491  amountIn - feeAmount */\n      tag_213\n        /* \"ARY/SwapPro.sol\":8482:8491  feeAmount */\n      dup6\n        /* \"ARY/SwapPro.sol\":8471:8479  amountIn */\n      dup8\n        /* \"ARY/SwapPro.sol\":8471:8491  amountIn - feeAmount */\n      tag_165\n      jump\t// in\n    tag_213:\n        /* \"ARY/SwapPro.sol\":8493:8497  path */\n      dup5\n        /* \"ARY/SwapPro.sol\":8450:8498  router.getAmountsOut(amountIn - feeAmount, path) */\n      mload(0x40)\n      dup4\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_214\n      swap3\n      swap2\n      swap1\n      tag_215\n      jump\t// in\n    tag_214:\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_217\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_217:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      0x00\n      dup3\n      returndatacopy\n      0x1f\n      returndatasize\n      swap1\n      dup2\n      add\n      not(0x1f)\n      and\n      dup3\n      add\n      0x40\n      mstore\n      tag_218\n      swap2\n      swap1\n      dup2\n      add\n      swap1\n      tag_219\n      jump\t// in\n    tag_218:\n        /* \"ARY/SwapPro.sol\":8509:8515  router */\n      sload(0x08)\n        /* \"ARY/SwapPro.sol\":8420:8498  uint256[] memory amountsOut = router.getAmountsOut(amountIn - feeAmount, path) */\n      swap1\n      swap2\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"ARY/SwapPro.sol\":8509:8515  router */\n      and\n        /* \"ARY/SwapPro.sol\":8509:8566  router.swapExactETHForTokensSupportingFeeOnTransferTokens */\n      0xb6f9de95\n        /* \"ARY/SwapPro.sol\":8574:8594  amountIn - feeAmount */\n      tag_220\n        /* \"ARY/SwapPro.sol\":8585:8594  feeAmount */\n      dup6\n        /* \"ARY/SwapPro.sol\":8574:8582  amountIn */\n      dup8\n        /* \"ARY/SwapPro.sol\":8574:8594  amountIn - feeAmount */\n      tag_165\n      jump\t// in\n    tag_220:\n        /* \"ARY/SwapPro.sol\":8610:8622  amountOutMin */\n      dup8\n        /* \"ARY/SwapPro.sol\":8637:8641  path */\n      dup6\n        /* \"ARY/SwapPro.sol\":8656:8666  msg.sender */\n      caller\n        /* \"ARY/SwapPro.sol\":8681:8706  block.timestamp + 1 hours */\n      tag_221\n        /* \"ARY/SwapPro.sol\":8681:8696  block.timestamp */\n      timestamp\n        /* \"ARY/SwapPro.sol\":8699:8706  1 hours */\n      0x0e10\n        /* \"ARY/SwapPro.sol\":8681:8706  block.timestamp + 1 hours */\n      tag_167\n      jump\t// in\n    tag_221:\n        /* \"ARY/SwapPro.sol\":8509:8717  router.swapExactETHForTokensSupportingFeeOnTransferTokens{ value:amountIn - feeAmount}(... */\n      mload(0x40)\n      dup7\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_222\n      swap5\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_223\n      jump\t// in\n    tag_222:\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup6\n      dup9\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_224\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_224:\n      pop\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_226\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_226:\n      pop\n      pop\n      pop\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"ARY/SwapPro.sol\":8733:8747  toToken == ARY */\n      dup8\n      and\n        /* \"ARY/SwapPro.sol\":2414:2456  0x41bc026dABe978bc2FAfeA1850456511ca4B01bc */\n      0x41bc026dabe978bc2fafea1850456511ca4b01bc\n        /* \"ARY/SwapPro.sol\":8733:8747  toToken == ARY */\n      eq\n      swap1\n      pop\n        /* \"ARY/SwapPro.sol\":8733:8770  toToken == ARY && competition_started */\n      dup1\n      iszero\n      tag_227\n      jumpi\n      pop\n        /* \"ARY/SwapPro.sol\":8751:8770  competition_started */\n      and(0xff, sload(0x03))\n        /* \"ARY/SwapPro.sol\":8733:8770  toToken == ARY && competition_started */\n    tag_227:\n        /* \"ARY/SwapPro.sol\":8730:8835  if(toToken == ARY && competition_started) {... */\n      iszero\n      tag_229\n      jumpi\n        /* \"ARY/SwapPro.sol\":8787:8823  addVolume(msg.sender, amountsOut[1]) */\n      tag_229\n        /* \"ARY/SwapPro.sol\":8797:8807  msg.sender */\n      caller\n        /* \"ARY/SwapPro.sol\":8809:8819  amountsOut */\n      dup3\n        /* \"ARY/SwapPro.sol\":8820:8821  1 */\n      0x01\n        /* \"ARY/SwapPro.sol\":8809:8822  amountsOut[1] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_231\n      jumpi\n      tag_231\n      tag_161\n      jump\t// in\n    tag_231:\n      0x20\n      mul\n      0x20\n      add\n      add\n      mload\n        /* \"ARY/SwapPro.sol\":8787:8796  addVolume */\n      tag_142\n        /* \"ARY/SwapPro.sol\":8787:8823  addVolume(msg.sender, amountsOut[1]) */\n      jump\t// in\n    tag_229:\n        /* \"ARY/SwapPro.sol\":8152:8842  {... */\n      pop\n      pop\n      pop\n      pop\n        /* \"ARY/SwapPro.sol\":8047:8842  function swapCROForToken (... */\n      pop\n      pop\n      jump\t// out\n        /* \"ARY/SwapPro.sol\":4480:4570  function stopCompetition() public onlyOwner {... */\n    tag_62:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_233\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_186\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_233:\n        /* \"ARY/SwapPro.sol\":4535:4554  competition_started */\n      0x03\n        /* \"ARY/SwapPro.sol\":4535:4562  competition_started = false */\n      dup1\n      sload\n      not(0xff)\n      and\n      swap1\n      sstore\n        /* \"ARY/SwapPro.sol\":4480:4570  function stopCompetition() public onlyOwner {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2293:2394  function renounceOwnership() public virtual onlyOwner {... */\n    tag_69:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_236\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_186\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_236:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2357:2387  _transferOwnership(address(0)) */\n      tag_238\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2384:2385  0 */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2357:2375  _transferOwnership */\n      tag_239\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2357:2387  _transferOwnership(address(0)) */\n      jump\t// in\n    tag_238:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2293:2394  function renounceOwnership() public virtual onlyOwner {... */\n      jump\t// out\n        /* \"ARY/SwapPro.sol\":3809:4174  function getUserVolumes() external view returns (Volume[] memory) {... */\n    tag_100:\n        /* \"ARY/SwapPro.sol\":3898:3907  addresses */\n      0x06\n        /* \"ARY/SwapPro.sol\":3898:3914  addresses.length */\n      sload\n        /* \"ARY/SwapPro.sol\":3858:3873  Volume[] memory */\n      0x60\n      swap1\n        /* \"ARY/SwapPro.sol\":3886:3895  uint256 n */\n      0x00\n        /* \"ARY/SwapPro.sol\":3898:3914  addresses.length */\n      dup2\n        /* \"ARY/SwapPro.sol\":3951:3966  new Volume[](n) */\n      0xffffffffffffffff\n      dup2\n      gt\n      iszero\n      tag_243\n      jumpi\n      tag_243\n      tag_157\n      jump\t// in\n    tag_243:\n      mload(0x40)\n      swap1\n      dup1\n      dup3\n      mstore\n      dup1\n      0x20\n      mul\n      0x20\n      add\n      dup3\n      add\n      0x40\n      mstore\n      dup1\n      iszero\n      tag_244\n      jumpi\n      dup2\n      0x20\n      add\n    tag_245:\n      0x40\n      dup1\n      mload\n      dup1\n      dup3\n      add\n      swap1\n      swap2\n      mstore\n      0x00\n      dup1\n      dup3\n      mstore\n      0x20\n      dup3\n      add\n      mstore\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      0x01\n      swap1\n      sub\n      swap1\n      dup2\n      tag_245\n      jumpi\n      swap1\n      pop\n    tag_244:\n      pop\n        /* \"ARY/SwapPro.sol\":3925:3966  Volume[] memory volumes = new Volume[](n) */\n      swap1\n      pop\n        /* \"ARY/SwapPro.sol\":4027:4036  uint256 i */\n      0x00\n        /* \"ARY/SwapPro.sol\":4022:4140  for (uint256 i = 0; i < n; i++) {... */\n    tag_248:\n        /* \"ARY/SwapPro.sol\":4046:4047  n */\n      dup3\n        /* \"ARY/SwapPro.sol\":4042:4043  i */\n      dup2\n        /* \"ARY/SwapPro.sol\":4042:4047  i < n */\n      lt\n        /* \"ARY/SwapPro.sol\":4022:4140  for (uint256 i = 0; i < n; i++) {... */\n      iszero\n      tag_249\n      jumpi\n        /* \"ARY/SwapPro.sol\":4082:4128  Volume(addresses[i], userVolume[addresses[i]]) */\n      mload(0x40)\n      dup1\n      0x40\n      add\n      0x40\n      mstore\n      dup1\n        /* \"ARY/SwapPro.sol\":4089:4098  addresses */\n      0x06\n        /* \"ARY/SwapPro.sol\":4099:4100  i */\n      dup4\n        /* \"ARY/SwapPro.sol\":4089:4101  addresses[i] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_252\n      jumpi\n      tag_252\n      tag_161\n      jump\t// in\n    tag_252:\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"ARY/SwapPro.sol\":4082:4128  Volume(addresses[i], userVolume[addresses[i]]) */\n      and\n      dup2\n      mstore\n      0x20\n      add\n        /* \"ARY/SwapPro.sol\":4103:4113  userVolume */\n      0x04\n        /* \"ARY/SwapPro.sol\":4103:4127  userVolume[addresses[i]] */\n      0x00\n        /* \"ARY/SwapPro.sol\":4114:4123  addresses */\n      0x06\n        /* \"ARY/SwapPro.sol\":4124:4125  i */\n      dup6\n        /* \"ARY/SwapPro.sol\":4114:4126  addresses[i] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_255\n      jumpi\n      tag_255\n      tag_161\n      jump\t// in\n    tag_255:\n      0x00\n      swap2\n      dup3\n      mstore\n      0x20\n      dup1\n      dup4\n      keccak256\n      swap1\n      swap2\n      add\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n        /* \"ARY/SwapPro.sol\":4103:4127  userVolume[addresses[i]] */\n      dup4\n      mstore\n      dup3\n      add\n      swap3\n      swap1\n      swap3\n      mstore\n      0x40\n      add\n      swap1\n      keccak256\n      sload\n        /* \"ARY/SwapPro.sol\":4082:4128  Volume(addresses[i], userVolume[addresses[i]]) */\n      swap1\n      mstore\n        /* \"ARY/SwapPro.sol\":4069:4079  volumes[i] */\n      dup3\n      mload\n        /* \"ARY/SwapPro.sol\":4069:4076  volumes */\n      dup4\n      swap1\n        /* \"ARY/SwapPro.sol\":4077:4078  i */\n      dup4\n      swap1\n        /* \"ARY/SwapPro.sol\":4069:4079  volumes[i] */\n      dup2\n      lt\n      tag_258\n      jumpi\n      tag_258\n      tag_161\n      jump\t// in\n    tag_258:\n      0x20\n      mul\n      0x20\n      add\n      add\n        /* \"ARY/SwapPro.sol\":4069:4128  volumes[i] = Volume(addresses[i], userVolume[addresses[i]]) */\n      dup2\n      swap1\n      mstore\n      pop\n        /* \"ARY/SwapPro.sol\":4049:4052  i++ */\n      dup1\n      dup1\n      tag_259\n      swap1\n      tag_198\n      jump\t// in\n    tag_259:\n      swap2\n      pop\n      pop\n        /* \"ARY/SwapPro.sol\":4022:4140  for (uint256 i = 0; i < n; i++) {... */\n      jump(tag_248)\n    tag_249:\n      pop\n        /* \"ARY/SwapPro.sol\":4159:4166  volumes */\n      swap3\n        /* \"ARY/SwapPro.sol\":3809:4174  function getUserVolumes() external view returns (Volume[] memory) {... */\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"ARY/SwapPro.sol\":9672:9843  function deposit () public payable {... */\n    tag_116:\n        /* \"ARY/SwapPro.sol\":9757:9761  wcro */\n      sload(0x0d)\n        /* \"ARY/SwapPro.sol\":9757:9787  wcro.deposit{value:amountIn}() */\n      0x40\n      dup1\n      mload\n      shl(0xe4, 0x0d0e30db)\n      dup2\n      mstore\n      swap1\n      mload\n        /* \"ARY/SwapPro.sol\":9737:9746  msg.value */\n      callvalue\n      swap3\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"ARY/SwapPro.sol\":9757:9761  wcro */\n      and\n      swap2\n        /* \"ARY/SwapPro.sol\":9757:9769  wcro.deposit */\n      0xd0e30db0\n      swap2\n        /* \"ARY/SwapPro.sol\":9737:9746  msg.value */\n      dup5\n      swap2\n        /* \"ARY/SwapPro.sol\":9757:9787  wcro.deposit{value:amountIn}() */\n      0x04\n      dup1\n      dup3\n      add\n      swap3\n        /* \"ARY/SwapPro.sol\":9718:9734  uint256 amountIn */\n      0x00\n      swap3\n        /* \"ARY/SwapPro.sol\":9757:9787  wcro.deposit{value:amountIn}() */\n      swap1\n      swap2\n      swap1\n      dup3\n      swap1\n      sub\n      add\n      dup2\n        /* \"ARY/SwapPro.sol\":9737:9746  msg.value */\n      dup6\n        /* \"ARY/SwapPro.sol\":9757:9761  wcro */\n      dup9\n        /* \"ARY/SwapPro.sol\":9757:9787  wcro.deposit{value:amountIn}() */\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_261\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_261:\n      pop\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_263\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_263:\n      pop\n      pop\n        /* \"ARY/SwapPro.sol\":9798:9802  wcro */\n      sload(0x0d)\n        /* \"ARY/SwapPro.sol\":9798:9835  wcro.transfer( msg.sender, amountIn ) */\n      mload(0x40)\n      shl(0xe0, 0xa9059cbb)\n      dup2\n      mstore\n        /* \"ARY/SwapPro.sol\":9813:9823  msg.sender */\n      caller\n        /* \"ARY/SwapPro.sol\":9798:9835  wcro.transfer( msg.sender, amountIn ) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":7982:8033   */\n      mstore\n        /* \"#utility.yul\":8049:8067   */\n      0x24\n      dup2\n      add\n        /* \"#utility.yul\":8042:8076   */\n      dup7\n      swap1\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"ARY/SwapPro.sol\":9798:9802  wcro */\n      swap1\n      swap2\n      and\n      swap4\n      pop\n        /* \"ARY/SwapPro.sol\":9798:9811  wcro.transfer */\n      0xa9059cbb\n      swap3\n      pop\n        /* \"#utility.yul\":7955:7973   */\n      0x44\n      add\n      swap1\n      pop\n        /* \"ARY/SwapPro.sol\":9798:9835  wcro.transfer( msg.sender, amountIn ) */\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_267\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_267:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_183\n      swap2\n      swap1\n      tag_148\n      jump\t// in\n        /* \"ARY/SwapPro.sol\":5854:7999  function swapTokenForToken(... */\n    tag_121:\n        /* \"ARY/SwapPro.sol\":6018:6085  IERC20(fromToken).transferFrom(msg.sender, address(this), amountIn) */\n      mload(0x40)\n      shl(0xe0, 0x23b872dd)\n      dup2\n      mstore\n        /* \"ARY/SwapPro.sol\":6049:6059  msg.sender */\n      caller\n        /* \"ARY/SwapPro.sol\":6018:6085  IERC20(fromToken).transferFrom(msg.sender, address(this), amountIn) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":3193:3227   */\n      mstore\n        /* \"ARY/SwapPro.sol\":6069:6073  this */\n      address\n        /* \"#utility.yul\":3243:3261   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":3236:3279   */\n      mstore\n        /* \"#utility.yul\":3295:3313   */\n      0x44\n      dup2\n      add\n        /* \"#utility.yul\":3288:3322   */\n      dup4\n      swap1\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"ARY/SwapPro.sol\":6018:6048  IERC20(fromToken).transferFrom */\n      dup6\n      and\n      swap1\n      0x23b872dd\n      swap1\n        /* \"#utility.yul\":3128:3146   */\n      0x64\n      add\n        /* \"ARY/SwapPro.sol\":6018:6085  IERC20(fromToken).transferFrom(msg.sender, address(this), amountIn) */\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_272\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_272:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_273\n      swap2\n      swap1\n      tag_148\n      jump\t// in\n    tag_273:\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"ARY/SwapPro.sol\":6117:6133  fromToken == ARY */\n      dup5\n      and\n        /* \"ARY/SwapPro.sol\":2414:2456  0x41bc026dABe978bc2FAfeA1850456511ca4B01bc */\n      0x41bc026dabe978bc2fafea1850456511ca4b01bc\n        /* \"ARY/SwapPro.sol\":6117:6133  fromToken == ARY */\n      eq\n        /* \"ARY/SwapPro.sol\":6117:6156  fromToken == ARY && competition_started */\n      dup1\n      iszero\n      tag_274\n      jumpi\n      pop\n        /* \"ARY/SwapPro.sol\":6137:6156  competition_started */\n      and(0xff, sload(0x03))\n        /* \"ARY/SwapPro.sol\":6117:6156  fromToken == ARY && competition_started */\n    tag_274:\n        /* \"ARY/SwapPro.sol\":6098:6227  if (... */\n      iszero\n      tag_276\n      jumpi\n        /* \"ARY/SwapPro.sol\":6184:6215  addVolume(msg.sender, amountIn) */\n      tag_276\n        /* \"ARY/SwapPro.sol\":6194:6204  msg.sender */\n      caller\n        /* \"ARY/SwapPro.sol\":6206:6214  amountIn */\n      dup4\n        /* \"ARY/SwapPro.sol\":6184:6193  addVolume */\n      tag_142\n        /* \"ARY/SwapPro.sol\":6184:6215  addVolume(msg.sender, amountIn) */\n      jump\t// in\n    tag_276:\n        /* \"ARY/SwapPro.sol\":6239:6256  uint256 feeAmount */\n      0x00\n        /* \"ARY/SwapPro.sol\":6285:6289  1000 */\n      0x03e8\n        /* \"ARY/SwapPro.sol\":6271:6281  feePercent */\n      sload(0x02)\n        /* \"ARY/SwapPro.sol\":6260:6268  amountIn */\n      dup5\n        /* \"ARY/SwapPro.sol\":6260:6281  amountIn * feePercent */\n      tag_277\n      swap2\n      swap1\n      tag_150\n      jump\t// in\n    tag_277:\n        /* \"ARY/SwapPro.sol\":6259:6289  (amountIn * feePercent) / 1000 */\n      tag_278\n      swap2\n      swap1\n      tag_152\n      jump\t// in\n    tag_278:\n        /* \"ARY/SwapPro.sol\":6239:6289  uint256 feeAmount = (amountIn * feePercent) / 1000 */\n      swap1\n      pop\n        /* \"ARY/SwapPro.sol\":6300:6328  getFee(fromToken, feeAmount) */\n      tag_279\n        /* \"ARY/SwapPro.sol\":6307:6316  fromToken */\n      dup6\n        /* \"ARY/SwapPro.sol\":6318:6327  feeAmount */\n      dup3\n        /* \"ARY/SwapPro.sol\":6300:6306  getFee */\n      tag_154\n        /* \"ARY/SwapPro.sol\":6300:6328  getFee(fromToken, feeAmount) */\n      jump\t// in\n    tag_279:\n        /* \"ARY/SwapPro.sol\":6341:6356  uint256 pathLen */\n      0x00\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"ARY/SwapPro.sol\":6378:6395  fromToken == WCRO */\n      dup7\n      and\n        /* \"ARY/SwapPro.sol\":2335:2377  0x5C7F8A570d578ED84E63fdFA7b1eE72dEae1AE23 */\n      0x5c7f8a570d578ed84e63fdfa7b1ee72deae1ae23\n        /* \"ARY/SwapPro.sol\":6378:6395  fromToken == WCRO */\n      eq\n      dup1\n        /* \"ARY/SwapPro.sol\":6378:6414  fromToken == WCRO || toToken == WCRO */\n      tag_280\n      jumpi\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"ARY/SwapPro.sol\":6399:6414  toToken == WCRO */\n      dup6\n      and\n        /* \"ARY/SwapPro.sol\":2335:2377  0x5C7F8A570d578ED84E63fdFA7b1eE72dEae1AE23 */\n      0x5c7f8a570d578ed84e63fdfa7b1ee72deae1ae23\n        /* \"ARY/SwapPro.sol\":6399:6414  toToken == WCRO */\n      eq\n        /* \"ARY/SwapPro.sol\":6378:6414  fromToken == WCRO || toToken == WCRO */\n    tag_280:\n        /* \"ARY/SwapPro.sol\":6377:6423  (fromToken == WCRO || toToken == WCRO) ? 2 : 3 */\n      tag_281\n      jumpi\n        /* \"ARY/SwapPro.sol\":6422:6423  3 */\n      0x03\n        /* \"ARY/SwapPro.sol\":6377:6423  (fromToken == WCRO || toToken == WCRO) ? 2 : 3 */\n      jump(tag_282)\n    tag_281:\n        /* \"ARY/SwapPro.sol\":6418:6419  2 */\n      0x02\n        /* \"ARY/SwapPro.sol\":6377:6423  (fromToken == WCRO || toToken == WCRO) ? 2 : 3 */\n    tag_282:\n        /* \"ARY/SwapPro.sol\":6367:6423  pathLen = (fromToken == WCRO || toToken == WCRO) ? 2 : 3 */\n      0xff\n      and\n      swap1\n      pop\n        /* \"ARY/SwapPro.sol\":6436:6453  uint256 amountOut */\n      0x00\n        /* \"ARY/SwapPro.sol\":6464:6485  address[] memory path */\n      0x60\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"ARY/SwapPro.sol\":6500:6517  fromToken == WCRO */\n      dup9\n      and\n        /* \"ARY/SwapPro.sol\":2335:2377  0x5C7F8A570d578ED84E63fdFA7b1eE72dEae1AE23 */\n      0x5c7f8a570d578ed84e63fdfa7b1ee72deae1ae23\n        /* \"ARY/SwapPro.sol\":6500:6517  fromToken == WCRO */\n      eq\n      dup1\n        /* \"ARY/SwapPro.sol\":6500:6536  fromToken == WCRO || toToken == WCRO */\n      tag_283\n      jumpi\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"ARY/SwapPro.sol\":6521:6536  toToken == WCRO */\n      dup8\n      and\n        /* \"ARY/SwapPro.sol\":2335:2377  0x5C7F8A570d578ED84E63fdFA7b1eE72dEae1AE23 */\n      0x5c7f8a570d578ed84e63fdfa7b1ee72deae1ae23\n        /* \"ARY/SwapPro.sol\":6521:6536  toToken == WCRO */\n      eq\n        /* \"ARY/SwapPro.sol\":6500:6536  fromToken == WCRO || toToken == WCRO */\n    tag_283:\n        /* \"ARY/SwapPro.sol\":6496:7594  if (fromToken == WCRO || toToken == WCRO) {... */\n      iszero\n      tag_284\n      jumpi\n        /* \"ARY/SwapPro.sol\":6574:6575  2 */\n      0x02\n        /* \"ARY/SwapPro.sol\":6560:6576  new address[](2) */\n    tag_286:\n      mload(0x40)\n      swap1\n      dup1\n      dup3\n      mstore\n      dup1\n      0x20\n      mul\n      0x20\n      add\n      dup3\n      add\n      0x40\n      mstore\n      dup1\n      iszero\n      tag_287\n      jumpi\n      dup2\n      0x20\n      add\n      0x20\n      dup3\n      mul\n      dup1\n      calldatasize\n      dup4\n      calldatacopy\n      add\n      swap1\n      pop\n    tag_287:\n      pop\n        /* \"ARY/SwapPro.sol\":6553:6576  path = new address[](2) */\n      swap1\n      pop\n        /* \"ARY/SwapPro.sol\":6601:6610  fromToken */\n      dup8\n        /* \"ARY/SwapPro.sol\":6591:6595  path */\n      dup2\n        /* \"ARY/SwapPro.sol\":6596:6597  0 */\n      0x00\n        /* \"ARY/SwapPro.sol\":6591:6598  path[0] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_289\n      jumpi\n      tag_289\n      tag_161\n      jump\t// in\n    tag_289:\n      0x20\n      mul\n      0x20\n      add\n      add\n        /* \"ARY/SwapPro.sol\":6591:6610  path[0] = fromToken */\n      swap1\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      swap1\n      dup2\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      dup2\n      mstore\n      pop\n      pop\n        /* \"ARY/SwapPro.sol\":6635:6642  toToken */\n      dup7\n        /* \"ARY/SwapPro.sol\":6625:6629  path */\n      dup2\n        /* \"ARY/SwapPro.sol\":6630:6631  1 */\n      0x01\n        /* \"ARY/SwapPro.sol\":6625:6632  path[1] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_291\n      jumpi\n      tag_291\n      tag_161\n      jump\t// in\n    tag_291:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"ARY/SwapPro.sol\":6625:6642  path[1] = toToken */\n      swap3\n      dup4\n      and\n        /* \"ARY/SwapPro.sol\":6625:6632  path[1] */\n      0x20\n      swap2\n      dup3\n      mul\n      swap3\n      swap1\n      swap3\n      add\n      add\n        /* \"ARY/SwapPro.sol\":6625:6642  path[1] = toToken */\n      mstore\n        /* \"ARY/SwapPro.sol\":6687:6693  router */\n      sload(0x08)\n        /* \"ARY/SwapPro.sol\":6657:6684  uint256[] memory amountsOut */\n      0x00\n      swap2\n        /* \"ARY/SwapPro.sol\":6687:6693  router */\n      and\n        /* \"ARY/SwapPro.sol\":6687:6707  router.getAmountsOut */\n      0xd06ca61f\n        /* \"ARY/SwapPro.sol\":6726:6746  amountIn - feeAmount */\n      tag_292\n        /* \"ARY/SwapPro.sol\":6737:6746  feeAmount */\n      dup8\n        /* \"ARY/SwapPro.sol\":6726:6734  amountIn */\n      dup11\n        /* \"ARY/SwapPro.sol\":6726:6746  amountIn - feeAmount */\n      tag_165\n      jump\t// in\n    tag_292:\n        /* \"ARY/SwapPro.sol\":6765:6769  path */\n      dup5\n        /* \"ARY/SwapPro.sol\":6687:6784  router.getAmountsOut(... */\n      mload(0x40)\n      dup4\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_293\n      swap3\n      swap2\n      swap1\n      tag_215\n      jump\t// in\n    tag_293:\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_295\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_295:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      0x00\n      dup3\n      returndatacopy\n      0x1f\n      returndatasize\n      swap1\n      dup2\n      add\n      not(0x1f)\n      and\n      dup3\n      add\n      0x40\n      mstore\n      tag_296\n      swap2\n      swap1\n      dup2\n      add\n      swap1\n      tag_219\n      jump\t// in\n    tag_296:\n        /* \"ARY/SwapPro.sol\":6657:6784  uint256[] memory amountsOut = router.getAmountsOut(... */\n      swap1\n      pop\n        /* \"ARY/SwapPro.sol\":6811:6821  amountsOut */\n      dup1\n        /* \"ARY/SwapPro.sol\":6822:6823  1 */\n      0x01\n        /* \"ARY/SwapPro.sol\":6811:6824  amountsOut[1] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_298\n      jumpi\n      tag_298\n      tag_161\n      jump\t// in\n    tag_298:\n      0x20\n      mul\n      0x20\n      add\n      add\n      mload\n        /* \"ARY/SwapPro.sol\":6799:6824  amountOut = amountsOut[1] */\n      swap3\n      pop\n        /* \"ARY/SwapPro.sol\":6538:6836  {... */\n      pop\n        /* \"ARY/SwapPro.sol\":6496:7594  if (fromToken == WCRO || toToken == WCRO) {... */\n      jump(tag_318)\n    tag_284:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"ARY/SwapPro.sol\":6861:6877  fromToken == ARY */\n      dup9\n      and\n        /* \"ARY/SwapPro.sol\":2414:2456  0x41bc026dABe978bc2FAfeA1850456511ca4B01bc */\n      0x41bc026dabe978bc2fafea1850456511ca4b01bc\n        /* \"ARY/SwapPro.sol\":6861:6877  fromToken == ARY */\n      eq\n        /* \"ARY/SwapPro.sol\":6861:6896  fromToken == ARY && toToken == MERY */\n      dup1\n      iszero\n      tag_300\n      jumpi\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"ARY/SwapPro.sol\":6881:6896  toToken == MERY */\n      dup8\n      and\n        /* \"ARY/SwapPro.sol\":2494:2536  0x3b41B27E74Dd366CE27cB389dc7877D4e1516d4d */\n      0x3b41b27e74dd366ce27cb389dc7877d4e1516d4d\n        /* \"ARY/SwapPro.sol\":6881:6896  toToken == MERY */\n      eq\n        /* \"ARY/SwapPro.sol\":6861:6896  fromToken == ARY && toToken == MERY */\n    tag_300:\n        /* \"ARY/SwapPro.sol\":6860:6951  (fromToken == ARY && toToken == MERY) ||... */\n      dup1\n      tag_302\n      jumpi\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"ARY/SwapPro.sol\":6915:6932  fromToken == MERY */\n      dup9\n      and\n        /* \"ARY/SwapPro.sol\":2494:2536  0x3b41B27E74Dd366CE27cB389dc7877D4e1516d4d */\n      0x3b41b27e74dd366ce27cb389dc7877d4e1516d4d\n        /* \"ARY/SwapPro.sol\":6915:6932  fromToken == MERY */\n      eq\n        /* \"ARY/SwapPro.sol\":6915:6950  fromToken == MERY && toToken == ARY */\n      dup1\n      iszero\n      tag_302\n      jumpi\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"ARY/SwapPro.sol\":6936:6950  toToken == ARY */\n      dup8\n      and\n        /* \"ARY/SwapPro.sol\":2414:2456  0x41bc026dABe978bc2FAfeA1850456511ca4B01bc */\n      0x41bc026dabe978bc2fafea1850456511ca4b01bc\n        /* \"ARY/SwapPro.sol\":6936:6950  toToken == ARY */\n      eq\n        /* \"ARY/SwapPro.sol\":6915:6950  fromToken == MERY && toToken == ARY */\n    tag_302:\n        /* \"ARY/SwapPro.sol\":6842:7594  if (... */\n      iszero\n      tag_303\n      jumpi\n        /* \"ARY/SwapPro.sol\":6999:7000  2 */\n      0x02\n        /* \"ARY/SwapPro.sol\":6985:7001  new address[](2) */\n      jump(tag_286)\n        /* \"ARY/SwapPro.sol\":6842:7594  if (... */\n    tag_303:\n        /* \"ARY/SwapPro.sol\":7289:7305  new address[](3) */\n      0x40\n      dup1\n      mload\n        /* \"ARY/SwapPro.sol\":7303:7304  3 */\n      0x03\n        /* \"ARY/SwapPro.sol\":7289:7305  new address[](3) */\n      dup1\n      dup3\n      mstore\n      0x80\n      dup3\n      add\n      swap1\n      swap3\n      mstore\n      swap1\n      0x20\n      dup3\n      add\n      0x60\n      dup1\n      calldatasize\n      dup4\n      calldatacopy\n      add\n      swap1\n      pop\n      pop\n        /* \"ARY/SwapPro.sol\":7282:7305  path = new address[](3) */\n      swap1\n      pop\n        /* \"ARY/SwapPro.sol\":7330:7339  fromToken */\n      dup8\n        /* \"ARY/SwapPro.sol\":7320:7324  path */\n      dup2\n        /* \"ARY/SwapPro.sol\":7325:7326  0 */\n      0x00\n        /* \"ARY/SwapPro.sol\":7320:7327  path[0] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_323\n      jumpi\n      tag_323\n      tag_161\n      jump\t// in\n    tag_323:\n      0x20\n      mul\n      0x20\n      add\n      add\n        /* \"ARY/SwapPro.sol\":7320:7339  path[0] = fromToken */\n      swap1\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      swap1\n      dup2\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      dup2\n      mstore\n      pop\n      pop\n        /* \"ARY/SwapPro.sol\":2335:2377  0x5C7F8A570d578ED84E63fdFA7b1eE72dEae1AE23 */\n      0x5c7f8a570d578ed84e63fdfa7b1ee72deae1ae23\n        /* \"ARY/SwapPro.sol\":7354:7358  path */\n      dup2\n        /* \"ARY/SwapPro.sol\":7359:7360  1 */\n      0x01\n        /* \"ARY/SwapPro.sol\":7354:7361  path[1] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_325\n      jumpi\n      tag_325\n      tag_161\n      jump\t// in\n    tag_325:\n      0x20\n      mul\n      0x20\n      add\n      add\n        /* \"ARY/SwapPro.sol\":7354:7368  path[1] = WCRO */\n      swap1\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      swap1\n      dup2\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      dup2\n      mstore\n      pop\n      pop\n        /* \"ARY/SwapPro.sol\":7393:7400  toToken */\n      dup7\n        /* \"ARY/SwapPro.sol\":7383:7387  path */\n      dup2\n        /* \"ARY/SwapPro.sol\":7388:7389  2 */\n      0x02\n        /* \"ARY/SwapPro.sol\":7383:7390  path[2] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_327\n      jumpi\n      tag_327\n      tag_161\n      jump\t// in\n    tag_327:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"ARY/SwapPro.sol\":7383:7400  path[2] = toToken */\n      swap3\n      dup4\n      and\n        /* \"ARY/SwapPro.sol\":7383:7390  path[2] */\n      0x20\n      swap2\n      dup3\n      mul\n      swap3\n      swap1\n      swap3\n      add\n      add\n        /* \"ARY/SwapPro.sol\":7383:7400  path[2] = toToken */\n      mstore\n        /* \"ARY/SwapPro.sol\":7445:7451  router */\n      sload(0x08)\n        /* \"ARY/SwapPro.sol\":7415:7442  uint256[] memory amountsOut */\n      0x00\n      swap2\n        /* \"ARY/SwapPro.sol\":7445:7451  router */\n      and\n        /* \"ARY/SwapPro.sol\":7445:7465  router.getAmountsOut */\n      0xd06ca61f\n        /* \"ARY/SwapPro.sol\":7484:7504  amountIn - feeAmount */\n      tag_328\n        /* \"ARY/SwapPro.sol\":7495:7504  feeAmount */\n      dup8\n        /* \"ARY/SwapPro.sol\":7484:7492  amountIn */\n      dup11\n        /* \"ARY/SwapPro.sol\":7484:7504  amountIn - feeAmount */\n      tag_165\n      jump\t// in\n    tag_328:\n        /* \"ARY/SwapPro.sol\":7523:7527  path */\n      dup5\n        /* \"ARY/SwapPro.sol\":7445:7542  router.getAmountsOut(... */\n      mload(0x40)\n      dup4\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_329\n      swap3\n      swap2\n      swap1\n      tag_215\n      jump\t// in\n    tag_329:\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_331\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_331:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      0x00\n      dup3\n      returndatacopy\n      0x1f\n      returndatasize\n      swap1\n      dup2\n      add\n      not(0x1f)\n      and\n      dup3\n      add\n      0x40\n      mstore\n      tag_332\n      swap2\n      swap1\n      dup2\n      add\n      swap1\n      tag_219\n      jump\t// in\n    tag_332:\n        /* \"ARY/SwapPro.sol\":7415:7542  uint256[] memory amountsOut = router.getAmountsOut(... */\n      swap1\n      pop\n        /* \"ARY/SwapPro.sol\":7569:7579  amountsOut */\n      dup1\n        /* \"ARY/SwapPro.sol\":7580:7581  2 */\n      0x02\n        /* \"ARY/SwapPro.sol\":7569:7582  amountsOut[2] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_334\n      jumpi\n      tag_334\n      tag_161\n      jump\t// in\n    tag_334:\n      0x20\n      mul\n      0x20\n      add\n      add\n      mload\n        /* \"ARY/SwapPro.sol\":7557:7582  amountOut = amountsOut[2] */\n      swap3\n      pop\n        /* \"ARY/SwapPro.sol\":7267:7594  {... */\n      pop\n        /* \"ARY/SwapPro.sol\":6842:7594  if (... */\n    tag_318:\n        /* \"ARY/SwapPro.sol\":7610:7616  router */\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0x08))\n        /* \"ARY/SwapPro.sol\":7610:7670  router.swapExactTokensForTokensSupportingFeeOnTransferTokens */\n      0x5c11d795\n        /* \"ARY/SwapPro.sol\":7689:7709  amountIn - feeAmount */\n      tag_335\n        /* \"ARY/SwapPro.sol\":7700:7709  feeAmount */\n      dup7\n        /* \"ARY/SwapPro.sol\":7689:7697  amountIn */\n      dup10\n        /* \"ARY/SwapPro.sol\":7689:7709  amountIn - feeAmount */\n      tag_165\n      jump\t// in\n    tag_335:\n        /* \"ARY/SwapPro.sol\":7728:7740  amountOutMin */\n      dup8\n        /* \"ARY/SwapPro.sol\":7759:7763  path */\n      dup5\n        /* \"ARY/SwapPro.sol\":7782:7792  msg.sender */\n      caller\n        /* \"ARY/SwapPro.sol\":7811:7836  block.timestamp + 1 hours */\n      tag_336\n        /* \"ARY/SwapPro.sol\":7811:7826  block.timestamp */\n      timestamp\n        /* \"ARY/SwapPro.sol\":7829:7836  1 hours */\n      0x0e10\n        /* \"ARY/SwapPro.sol\":7811:7836  block.timestamp + 1 hours */\n      tag_167\n      jump\t// in\n    tag_336:\n        /* \"ARY/SwapPro.sol\":7610:7851  router.swapExactTokensForTokensSupportingFeeOnTransferTokens(... */\n      mload(0x40)\n      dup7\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_337\n      swap6\n      swap5\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_169\n      jump\t// in\n    tag_337:\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_338\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_338:\n      pop\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_340\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_340:\n      pop\n      pop\n      pop\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"ARY/SwapPro.sol\":7883:7897  toToken == ARY */\n      dup8\n      and\n        /* \"ARY/SwapPro.sol\":2414:2456  0x41bc026dABe978bc2FAfeA1850456511ca4B01bc */\n      0x41bc026dabe978bc2fafea1850456511ca4b01bc\n        /* \"ARY/SwapPro.sol\":7883:7897  toToken == ARY */\n      eq\n        /* \"ARY/SwapPro.sol\":7883:7920  toToken == ARY && competition_started */\n      dup1\n      iszero\n      tag_341\n      jumpi\n      pop\n        /* \"ARY/SwapPro.sol\":7901:7920  competition_started */\n      and(0xff, sload(0x03))\n        /* \"ARY/SwapPro.sol\":7883:7920  toToken == ARY && competition_started */\n    tag_341:\n        /* \"ARY/SwapPro.sol\":7864:7992  if (... */\n      iszero\n      tag_343\n      jumpi\n        /* \"ARY/SwapPro.sol\":7948:7980  addVolume(msg.sender, amountOut) */\n      tag_343\n        /* \"ARY/SwapPro.sol\":7958:7968  msg.sender */\n      caller\n        /* \"ARY/SwapPro.sol\":7970:7979  amountOut */\n      dup4\n        /* \"ARY/SwapPro.sol\":7948:7957  addVolume */\n      tag_142\n        /* \"ARY/SwapPro.sol\":7948:7980  addVolume(msg.sender, amountOut) */\n      jump\t// in\n    tag_343:\n        /* \"ARY/SwapPro.sol\":6007:7999  {... */\n      pop\n      pop\n      pop\n      pop\n        /* \"ARY/SwapPro.sol\":5854:7999  function swapTokenForToken(... */\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"ARY/SwapPro.sol\":4576:4666  function startCompetition() public onlyOwner {... */\n    tag_124:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_345\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_186\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_345:\n        /* \"ARY/SwapPro.sol\":4632:4651  competition_started */\n      0x03\n        /* \"ARY/SwapPro.sol\":4632:4658  competition_started = true */\n      dup1\n      sload\n      not(0xff)\n      and\n        /* \"ARY/SwapPro.sol\":4654:4658  true */\n      0x01\n        /* \"ARY/SwapPro.sol\":4632:4658  competition_started = true */\n      or\n      swap1\n      sstore\n        /* \"ARY/SwapPro.sol\":4576:4666  function startCompetition() public onlyOwner {... */\n      jump\t// out\n        /* \"ARY/SwapPro.sol\":2941:2967  address[] public addresses */\n    tag_132:\n      0x06\n      dup2\n      dup2\n      sload\n      dup2\n      lt\n      tag_347\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_347:\n      0x00\n      swap2\n      dup3\n      mstore\n      0x20\n      swap1\n      swap2\n      keccak256\n      add\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      swap1\n      pop\n      dup2\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2543:2758  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_137:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_350\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_186\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_350:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2627:2649  newOwner == address(0) */\n      dup2\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2623:2714  if (newOwner == address(0)) {... */\n      tag_352\n      jumpi\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2672:2703  OwnableInvalidOwner(address(0)) */\n      mload(0x40)\n      shl(0xe0, 0x1e4fbdf7)\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2700:2701  0 */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2672:2703  OwnableInvalidOwner(address(0)) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":665:716   */\n      mstore\n        /* \"#utility.yul\":638:656   */\n      0x24\n      add\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2672:2703  OwnableInvalidOwner(address(0)) */\n    tag_353:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2623:2714  if (newOwner == address(0)) {... */\n    tag_352:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2723:2751  _transferOwnership(newOwner) */\n      tag_354\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2742:2750  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2723:2741  _transferOwnership */\n      tag_239\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2723:2751  _transferOwnership(newOwner) */\n      jump\t// in\n    tag_354:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2543:2758  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"ARY/SwapPro.sol\":5541:5805  function addVolume (... */\n    tag_142:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"ARY/SwapPro.sol\":5639:5659  isExistAddress[user] */\n      dup3\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"ARY/SwapPro.sol\":5639:5653  isExistAddress */\n      0x05\n        /* \"ARY/SwapPro.sol\":5639:5659  isExistAddress[user] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      0xff\n      and\n        /* \"ARY/SwapPro.sol\":5635:5750  if(!isExistAddress[user]) {... */\n      tag_356\n      jumpi\n        /* \"ARY/SwapPro.sol\":5676:5685  addresses */\n      0x06\n        /* \"ARY/SwapPro.sol\":5676:5696  addresses.push(user) */\n      dup1\n      sload\n      0x01\n      dup1\n      dup3\n      add\n      swap1\n      swap3\n      sstore\n      0xf652222313e28459528d920b65115c16c04f3efc82aaedc97be59f3f377c0d3f\n      add\n      dup1\n      sload\n      not(sub(shl(0xa0, 0x01), 0x01))\n      and\n      sub(shl(0xa0, 0x01), 0x01)\n      dup6\n      and\n      swap1\n      dup2\n      or\n      swap1\n      swap2\n      sstore\n      0x00\n        /* \"ARY/SwapPro.sol\":5711:5731  isExistAddress[user] */\n      swap1\n      dup2\n      mstore\n        /* \"ARY/SwapPro.sol\":5711:5725  isExistAddress */\n      0x05\n        /* \"ARY/SwapPro.sol\":5676:5696  addresses.push(user) */\n      0x20\n        /* \"ARY/SwapPro.sol\":5711:5731  isExistAddress[user] */\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"ARY/SwapPro.sol\":5711:5738  isExistAddress[user] = true */\n      dup1\n      sload\n      not(0xff)\n      and\n      swap1\n      swap2\n      or\n      swap1\n      sstore\n        /* \"ARY/SwapPro.sol\":5635:5750  if(!isExistAddress[user]) {... */\n    tag_356:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"ARY/SwapPro.sol\":5771:5787  userVolume[user] */\n      dup3\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"ARY/SwapPro.sol\":5771:5781  userVolume */\n      0x04\n        /* \"ARY/SwapPro.sol\":5771:5787  userVolume[user] */\n      0x20\n      mstore\n      0x40\n      dup2\n      keccak256\n        /* \"ARY/SwapPro.sol\":5771:5797  userVolume[user] += volume */\n      dup1\n      sload\n        /* \"ARY/SwapPro.sol\":5791:5797  volume */\n      dup4\n      swap3\n        /* \"ARY/SwapPro.sol\":5771:5787  userVolume[user] */\n      swap1\n        /* \"ARY/SwapPro.sol\":5771:5797  userVolume[user] += volume */\n      tag_358\n      swap1\n        /* \"ARY/SwapPro.sol\":5791:5797  volume */\n      dup5\n      swap1\n        /* \"ARY/SwapPro.sol\":5771:5797  userVolume[user] += volume */\n      tag_167\n      jump\t// in\n    tag_358:\n      swap1\n      swap2\n      sstore\n      pop\n      pop\n      pop\n      pop\n        /* \"ARY/SwapPro.sol\":5541:5805  function addVolume (... */\n      jump\t// out\n        /* \"ARY/SwapPro.sol\":4940:5533  function getFee(address fromToken, uint256 feeAmount) private {... */\n    tag_154:\n        /* \"ARY/SwapPro.sol\":5013:5028  uint256 pathLen */\n      0x00\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"ARY/SwapPro.sol\":5031:5048  fromToken == WCRO */\n      dup4\n      and\n        /* \"ARY/SwapPro.sol\":2335:2377  0x5C7F8A570d578ED84E63fdFA7b1eE72dEae1AE23 */\n      0x5c7f8a570d578ed84e63fdfa7b1ee72deae1ae23\n        /* \"ARY/SwapPro.sol\":5031:5048  fromToken == WCRO */\n      eq\n        /* \"ARY/SwapPro.sol\":5031:5056  fromToken == WCRO ? 1 : 2 */\n      tag_360\n      jumpi\n        /* \"ARY/SwapPro.sol\":5055:5056  2 */\n      0x02\n        /* \"ARY/SwapPro.sol\":5031:5056  fromToken == WCRO ? 1 : 2 */\n      jump(tag_361)\n    tag_360:\n        /* \"ARY/SwapPro.sol\":5051:5052  1 */\n      0x01\n        /* \"ARY/SwapPro.sol\":5031:5056  fromToken == WCRO ? 1 : 2 */\n    tag_361:\n        /* \"ARY/SwapPro.sol\":5013:5056  uint256 pathLen = fromToken == WCRO ? 1 : 2 */\n      0xff\n      and\n      swap1\n      pop\n        /* \"ARY/SwapPro.sol\":5070:5077  pathLen */\n      dup1\n        /* \"ARY/SwapPro.sol\":5081:5082  1 */\n      0x01\n        /* \"ARY/SwapPro.sol\":5070:5082  pathLen == 1 */\n      sub\n        /* \"ARY/SwapPro.sol\":5067:5526  if(pathLen == 1){... */\n      tag_362\n      jumpi\n        /* \"ARY/SwapPro.sol\":5098:5102  wcro */\n      sload(0x0d)\n      0x01\n        /* \"ARY/SwapPro.sol\":5112:5123  feeReceiver */\n      sload\n        /* \"ARY/SwapPro.sol\":5098:5135  wcro.transfer(feeReceiver, feeAmount) */\n      mload(0x40)\n      shl(0xe0, 0xa9059cbb)\n      dup2\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"ARY/SwapPro.sol\":5112:5123  feeReceiver */\n      swap2\n      dup3\n      and\n        /* \"ARY/SwapPro.sol\":5098:5135  wcro.transfer(feeReceiver, feeAmount) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":7982:8033   */\n      mstore\n        /* \"#utility.yul\":8049:8067   */\n      0x24\n      dup2\n      add\n        /* \"#utility.yul\":8042:8076   */\n      dup6\n      swap1\n      mstore\n        /* \"ARY/SwapPro.sol\":5098:5102  wcro */\n      swap2\n      and\n      swap1\n        /* \"ARY/SwapPro.sol\":5098:5111  wcro.transfer */\n      0xa9059cbb\n      swap1\n        /* \"#utility.yul\":7955:7973   */\n      0x44\n      add\n        /* \"ARY/SwapPro.sol\":5098:5135  wcro.transfer(feeReceiver, feeAmount) */\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_365\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_365:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_366\n      swap2\n      swap1\n      tag_148\n      jump\t// in\n    tag_366:\n      pop\n        /* \"ARY/SwapPro.sol\":5002:5533  {... */\n      pop\n        /* \"ARY/SwapPro.sol\":4940:5533  function getFee(address fromToken, uint256 feeAmount) private {... */\n      pop\n      pop\n      jump\t// out\n        /* \"ARY/SwapPro.sol\":5067:5526  if(pathLen == 1){... */\n    tag_362:\n        /* \"ARY/SwapPro.sol\":5168:5189  address[] memory path */\n      0x00\n        /* \"ARY/SwapPro.sol\":5206:5213  pathLen */\n      dup2\n        /* \"ARY/SwapPro.sol\":5192:5214  new address[](pathLen) */\n      0xffffffffffffffff\n      dup2\n      gt\n      iszero\n      tag_369\n      jumpi\n      tag_369\n      tag_157\n      jump\t// in\n    tag_369:\n      mload(0x40)\n      swap1\n      dup1\n      dup3\n      mstore\n      dup1\n      0x20\n      mul\n      0x20\n      add\n      dup3\n      add\n      0x40\n      mstore\n      dup1\n      iszero\n      tag_370\n      jumpi\n      dup2\n      0x20\n      add\n      0x20\n      dup3\n      mul\n      dup1\n      calldatasize\n      dup4\n      calldatacopy\n      add\n      swap1\n      pop\n    tag_370:\n      pop\n        /* \"ARY/SwapPro.sol\":5168:5214  address[] memory path = new address[](pathLen) */\n      swap1\n      pop\n        /* \"ARY/SwapPro.sol\":5239:5248  fromToken */\n      dup4\n        /* \"ARY/SwapPro.sol\":5229:5233  path */\n      dup2\n        /* \"ARY/SwapPro.sol\":5234:5235  0 */\n      0x00\n        /* \"ARY/SwapPro.sol\":5229:5236  path[0] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_372\n      jumpi\n      tag_372\n      tag_161\n      jump\t// in\n    tag_372:\n      0x20\n      mul\n      0x20\n      add\n      add\n        /* \"ARY/SwapPro.sol\":5229:5248  path[0] = fromToken */\n      swap1\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      swap1\n      dup2\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      dup2\n      mstore\n      pop\n      pop\n        /* \"ARY/SwapPro.sol\":2335:2377  0x5C7F8A570d578ED84E63fdFA7b1eE72dEae1AE23 */\n      0x5c7f8a570d578ed84e63fdfa7b1ee72deae1ae23\n        /* \"ARY/SwapPro.sol\":5263:5267  path */\n      dup2\n        /* \"ARY/SwapPro.sol\":5268:5269  1 */\n      0x01\n        /* \"ARY/SwapPro.sol\":5263:5270  path[1] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_374\n      jumpi\n      tag_374\n      tag_161\n      jump\t// in\n    tag_374:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"ARY/SwapPro.sol\":5263:5277  path[1] = WCRO */\n      swap3\n      dup4\n      and\n        /* \"ARY/SwapPro.sol\":5263:5270  path[1] */\n      0x20\n      swap2\n      dup3\n      mul\n      swap3\n      swap1\n      swap3\n      add\n      add\n        /* \"ARY/SwapPro.sol\":5263:5277  path[1] = WCRO */\n      mstore\n        /* \"ARY/SwapPro.sol\":5294:5300  router */\n      sload(0x08)\n      0x01\n        /* \"ARY/SwapPro.sol\":5444:5455  feeReceiver */\n      sload\n        /* \"ARY/SwapPro.sol\":5294:5300  router */\n      swap1\n      dup3\n      and\n      swap2\n        /* \"ARY/SwapPro.sol\":5294:5354  router.swapExactTokensForTokensSupportingFeeOnTransferTokens */\n      0x5c11d795\n      swap2\n        /* \"ARY/SwapPro.sol\":5373:5382  feeAmount */\n      dup7\n      swap2\n        /* \"ARY/SwapPro.sol\":5294:5300  router */\n      0x00\n      swap2\n        /* \"ARY/SwapPro.sol\":5421:5425  path */\n      dup7\n      swap2\n        /* \"ARY/SwapPro.sol\":5444:5455  feeReceiver */\n      and\n        /* \"ARY/SwapPro.sol\":5474:5499  block.timestamp + 1 hours */\n      tag_375\n        /* \"ARY/SwapPro.sol\":5474:5489  block.timestamp */\n      timestamp\n        /* \"ARY/SwapPro.sol\":5492:5499  1 hours */\n      0x0e10\n        /* \"ARY/SwapPro.sol\":5474:5499  block.timestamp + 1 hours */\n      tag_167\n      jump\t// in\n    tag_375:\n        /* \"ARY/SwapPro.sol\":5294:5514  router.swapExactTokensForTokensSupportingFeeOnTransferTokens(... */\n      mload(0x40)\n      dup7\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_376\n      swap6\n      swap5\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_169\n      jump\t// in\n    tag_376:\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_378\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_378:\n      pop\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_343\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1796:1958  function _checkOwner() internal view virtual {... */\n    tag_186:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1684:1691  address */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1710:1716  _owner */\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n        /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1878  owner() != _msgSender() */\n      eq\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1851:1952  if (owner() != _msgSender()) {... */\n      tag_238\n      jumpi\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1901:1941  OwnableUnauthorizedAccount(_msgSender()) */\n      mload(0x40)\n      shl(0xe0, 0x118cdaa7)\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1901:1941  OwnableUnauthorizedAccount(_msgSender()) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":665:716   */\n      mstore\n        /* \"#utility.yul\":638:656   */\n      0x24\n      add\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1901:1941  OwnableUnauthorizedAccount(_msgSender()) */\n      tag_353\n        /* \"#utility.yul\":519:722   */\n      jump\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\n    tag_239:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2985:3001  address oldOwner */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3004:3010  _owner */\n      dup1\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3020:3037  _owner = newOwner */\n      dup4\n      dup2\n      and\n      not(sub(shl(0xa0, 0x01), 0x01))\n      dup4\n      and\n      dup2\n      or\n      dup5\n      sstore\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n      mload(0x40)\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3004:3010  _owner */\n      swap2\n      swap1\n      swap3\n      and\n      swap3\n      dup4\n      swap2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n      0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n      swap2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2985:3001  address oldOwner */\n      swap1\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n      log3\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2975:3099  {... */\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\n      pop\n      jump\t// out\n    tag_200:\n      pop\n      dup1\n      sload\n      0x00\n      dup3\n      sstore\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n      dup2\n      add\n      swap1\n      tag_354\n      swap2\n      swap1\n    tag_393:\n      dup1\n      dup3\n      gt\n      iszero\n      tag_394\n      jumpi\n      0x00\n      dup2\n      sstore\n      0x01\n      add\n      jump(tag_393)\n    tag_394:\n      pop\n      swap1\n      jump\t// out\n        /* \"#utility.yul\":14:187   */\n    tag_395:\n        /* \"#utility.yul\":82:102   */\n      dup1\n      calldataload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":131:162   */\n      dup2\n      and\n        /* \"#utility.yul\":121:163   */\n      dup2\n      eq\n        /* \"#utility.yul\":111:181   */\n      tag_400\n      jumpi\n        /* \"#utility.yul\":177:178   */\n      0x00\n        /* \"#utility.yul\":174:175   */\n      dup1\n        /* \"#utility.yul\":167:179   */\n      revert\n        /* \"#utility.yul\":111:181   */\n    tag_400:\n        /* \"#utility.yul\":14:187   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":192:514   */\n    tag_37:\n        /* \"#utility.yul\":269:275   */\n      0x00\n        /* \"#utility.yul\":277:283   */\n      dup1\n        /* \"#utility.yul\":285:291   */\n      0x00\n        /* \"#utility.yul\":338:340   */\n      0x60\n        /* \"#utility.yul\":326:335   */\n      dup5\n        /* \"#utility.yul\":317:324   */\n      dup7\n        /* \"#utility.yul\":313:336   */\n      sub\n        /* \"#utility.yul\":309:341   */\n      slt\n        /* \"#utility.yul\":306:358   */\n      iszero\n      tag_402\n      jumpi\n        /* \"#utility.yul\":354:355   */\n      0x00\n        /* \"#utility.yul\":351:352   */\n      dup1\n        /* \"#utility.yul\":344:356   */\n      revert\n        /* \"#utility.yul\":306:358   */\n    tag_402:\n        /* \"#utility.yul\":377:406   */\n      tag_403\n        /* \"#utility.yul\":396:405   */\n      dup5\n        /* \"#utility.yul\":377:406   */\n      tag_395\n      jump\t// in\n    tag_403:\n        /* \"#utility.yul\":367:406   */\n      swap6\n        /* \"#utility.yul\":453:455   */\n      0x20\n        /* \"#utility.yul\":438:456   */\n      dup6\n      add\n        /* \"#utility.yul\":425:457   */\n      calldataload\n      swap6\n      pop\n        /* \"#utility.yul\":504:506   */\n      0x40\n        /* \"#utility.yul\":489:507   */\n      swap1\n      swap5\n      add\n        /* \"#utility.yul\":476:508   */\n      calldataload\n      swap4\n        /* \"#utility.yul\":192:514   */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":727:907   */\n    tag_47:\n        /* \"#utility.yul\":786:792   */\n      0x00\n        /* \"#utility.yul\":839:841   */\n      0x20\n        /* \"#utility.yul\":827:836   */\n      dup3\n        /* \"#utility.yul\":818:825   */\n      dup5\n        /* \"#utility.yul\":814:837   */\n      sub\n        /* \"#utility.yul\":810:842   */\n      slt\n        /* \"#utility.yul\":807:859   */\n      iszero\n      tag_406\n      jumpi\n        /* \"#utility.yul\":855:856   */\n      0x00\n        /* \"#utility.yul\":852:853   */\n      dup1\n        /* \"#utility.yul\":845:857   */\n      revert\n        /* \"#utility.yul\":807:859   */\n    tag_406:\n      pop\n        /* \"#utility.yul\":878:901   */\n      calldataload\n      swap2\n        /* \"#utility.yul\":727:907   */\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":912:1166   */\n    tag_52:\n        /* \"#utility.yul\":980:986   */\n      0x00\n        /* \"#utility.yul\":988:994   */\n      dup1\n        /* \"#utility.yul\":1041:1043   */\n      0x40\n        /* \"#utility.yul\":1029:1038   */\n      dup4\n        /* \"#utility.yul\":1020:1027   */\n      dup6\n        /* \"#utility.yul\":1016:1039   */\n      sub\n        /* \"#utility.yul\":1012:1044   */\n      slt\n        /* \"#utility.yul\":1009:1061   */\n      iszero\n      tag_408\n      jumpi\n        /* \"#utility.yul\":1057:1058   */\n      0x00\n        /* \"#utility.yul\":1054:1055   */\n      dup1\n        /* \"#utility.yul\":1047:1059   */\n      revert\n        /* \"#utility.yul\":1009:1061   */\n    tag_408:\n        /* \"#utility.yul\":1080:1109   */\n      tag_409\n        /* \"#utility.yul\":1099:1108   */\n      dup4\n        /* \"#utility.yul\":1080:1109   */\n      tag_395\n      jump\t// in\n    tag_409:\n        /* \"#utility.yul\":1070:1109   */\n      swap5\n        /* \"#utility.yul\":1156:1158   */\n      0x20\n        /* \"#utility.yul\":1141:1159   */\n      swap4\n      swap1\n      swap4\n      add\n        /* \"#utility.yul\":1128:1160   */\n      calldataload\n      swap4\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":912:1166   */\n      jump\t// out\n        /* \"#utility.yul\":1353:1539   */\n    tag_90:\n        /* \"#utility.yul\":1412:1418   */\n      0x00\n        /* \"#utility.yul\":1465:1467   */\n      0x20\n        /* \"#utility.yul\":1453:1462   */\n      dup3\n        /* \"#utility.yul\":1444:1451   */\n      dup5\n        /* \"#utility.yul\":1440:1463   */\n      sub\n        /* \"#utility.yul\":1436:1468   */\n      slt\n        /* \"#utility.yul\":1433:1485   */\n      iszero\n      tag_412\n      jumpi\n        /* \"#utility.yul\":1481:1482   */\n      0x00\n        /* \"#utility.yul\":1478:1479   */\n      dup1\n        /* \"#utility.yul\":1471:1483   */\n      revert\n        /* \"#utility.yul\":1433:1485   */\n    tag_412:\n        /* \"#utility.yul\":1504:1533   */\n      tag_413\n        /* \"#utility.yul\":1523:1532   */\n      dup3\n        /* \"#utility.yul\":1504:1533   */\n      tag_395\n      jump\t// in\n    tag_413:\n        /* \"#utility.yul\":1494:1533   */\n      swap4\n        /* \"#utility.yul\":1353:1539   */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1736:2546   */\n    tag_102:\n        /* \"#utility.yul\":1953:1955   */\n      0x20\n        /* \"#utility.yul\":2005:2026   */\n      dup1\n      dup3\n      mstore\n        /* \"#utility.yul\":2075:2088   */\n      dup3\n      mload\n        /* \"#utility.yul\":1978:1996   */\n      dup3\n      dup3\n      add\n        /* \"#utility.yul\":2097:2119   */\n      dup2\n      swap1\n      mstore\n        /* \"#utility.yul\":1924:1928   */\n      0x00\n      swap2\n        /* \"#utility.yul\":1953:1955   */\n      swap1\n        /* \"#utility.yul\":2138:2140   */\n      0x40\n      swap1\n        /* \"#utility.yul\":2156:2174   */\n      dup2\n      dup6\n      add\n      swap1\n        /* \"#utility.yul\":2197:2212   */\n      dup7\n      dup5\n      add\n        /* \"#utility.yul\":1924:1928   */\n      dup6\n        /* \"#utility.yul\":2240:2520   */\n    tag_416:\n        /* \"#utility.yul\":2254:2260   */\n      dup3\n        /* \"#utility.yul\":2251:2252   */\n      dup2\n        /* \"#utility.yul\":2248:2261   */\n      lt\n        /* \"#utility.yul\":2240:2520   */\n      iszero\n      tag_418\n      jumpi\n        /* \"#utility.yul\":2313:2326   */\n      dup2\n      mload\n        /* \"#utility.yul\":2355:2364   */\n      dup1\n      mload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":2351:2386   */\n      and\n        /* \"#utility.yul\":2339:2387   */\n      dup6\n      mstore\n        /* \"#utility.yul\":2427:2438   */\n      dup7\n      add\n        /* \"#utility.yul\":2421:2439   */\n      mload\n        /* \"#utility.yul\":2407:2419   */\n      dup7\n      dup6\n      add\n        /* \"#utility.yul\":2400:2440   */\n      mstore\n        /* \"#utility.yul\":2460:2472   */\n      swap3\n      dup5\n      add\n      swap3\n        /* \"#utility.yul\":2495:2510   */\n      swap1\n      dup6\n      add\n      swap1\n        /* \"#utility.yul\":2383:2384   */\n      0x01\n        /* \"#utility.yul\":2269:2278   */\n      add\n        /* \"#utility.yul\":2240:2520   */\n      jump(tag_416)\n    tag_418:\n      pop\n        /* \"#utility.yul\":2537:2540   */\n      swap2\n      swap8\n        /* \"#utility.yul\":1736:2546   */\n      swap7\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2551:2948   */\n    tag_120:\n        /* \"#utility.yul\":2637:2643   */\n      0x00\n        /* \"#utility.yul\":2645:2651   */\n      dup1\n        /* \"#utility.yul\":2653:2659   */\n      0x00\n        /* \"#utility.yul\":2661:2667   */\n      dup1\n        /* \"#utility.yul\":2714:2717   */\n      0x80\n        /* \"#utility.yul\":2702:2711   */\n      dup6\n        /* \"#utility.yul\":2693:2700   */\n      dup8\n        /* \"#utility.yul\":2689:2712   */\n      sub\n        /* \"#utility.yul\":2685:2718   */\n      slt\n        /* \"#utility.yul\":2682:2735   */\n      iszero\n      tag_420\n      jumpi\n        /* \"#utility.yul\":2731:2732   */\n      0x00\n        /* \"#utility.yul\":2728:2729   */\n      dup1\n        /* \"#utility.yul\":2721:2733   */\n      revert\n        /* \"#utility.yul\":2682:2735   */\n    tag_420:\n        /* \"#utility.yul\":2754:2783   */\n      tag_421\n        /* \"#utility.yul\":2773:2782   */\n      dup6\n        /* \"#utility.yul\":2754:2783   */\n      tag_395\n      jump\t// in\n    tag_421:\n        /* \"#utility.yul\":2744:2783   */\n      swap4\n      pop\n        /* \"#utility.yul\":2802:2840   */\n      tag_422\n        /* \"#utility.yul\":2836:2838   */\n      0x20\n        /* \"#utility.yul\":2825:2834   */\n      dup7\n        /* \"#utility.yul\":2821:2839   */\n      add\n        /* \"#utility.yul\":2802:2840   */\n      tag_395\n      jump\t// in\n    tag_422:\n        /* \"#utility.yul\":2551:2948   */\n      swap4\n      swap7\n        /* \"#utility.yul\":2792:2840   */\n      swap4\n      swap6\n      pop\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":2887:2889   */\n      0x40\n        /* \"#utility.yul\":2872:2890   */\n      dup3\n      add\n        /* \"#utility.yul\":2859:2891   */\n      calldataload\n      swap2\n        /* \"#utility.yul\":2938:2940   */\n      0x60\n        /* \"#utility.yul\":2923:2941   */\n      add\n        /* \"#utility.yul\":2910:2942   */\n      calldataload\n      swap1\n        /* \"#utility.yul\":2551:2948   */\n      jump\t// out\n        /* \"#utility.yul\":3333:3610   */\n    tag_148:\n        /* \"#utility.yul\":3400:3406   */\n      0x00\n        /* \"#utility.yul\":3453:3455   */\n      0x20\n        /* \"#utility.yul\":3441:3450   */\n      dup3\n        /* \"#utility.yul\":3432:3439   */\n      dup5\n        /* \"#utility.yul\":3428:3451   */\n      sub\n        /* \"#utility.yul\":3424:3456   */\n      slt\n        /* \"#utility.yul\":3421:3473   */\n      iszero\n      tag_425\n      jumpi\n        /* \"#utility.yul\":3469:3470   */\n      0x00\n        /* \"#utility.yul\":3466:3467   */\n      dup1\n        /* \"#utility.yul\":3459:3471   */\n      revert\n        /* \"#utility.yul\":3421:3473   */\n    tag_425:\n        /* \"#utility.yul\":3501:3510   */\n      dup2\n        /* \"#utility.yul\":3495:3511   */\n      mload\n        /* \"#utility.yul\":3554:3559   */\n      dup1\n        /* \"#utility.yul\":3547:3560   */\n      iszero\n        /* \"#utility.yul\":3540:3561   */\n      iszero\n        /* \"#utility.yul\":3533:3538   */\n      dup2\n        /* \"#utility.yul\":3530:3562   */\n      eq\n        /* \"#utility.yul\":3520:3580   */\n      tag_413\n      jumpi\n        /* \"#utility.yul\":3576:3577   */\n      0x00\n        /* \"#utility.yul\":3573:3574   */\n      dup1\n        /* \"#utility.yul\":3566:3578   */\n      revert\n        /* \"#utility.yul\":3615:3742   */\n    tag_396:\n        /* \"#utility.yul\":3676:3686   */\n      0x4e487b71\n        /* \"#utility.yul\":3671:3674   */\n      0xe0\n        /* \"#utility.yul\":3667:3687   */\n      shl\n        /* \"#utility.yul\":3664:3665   */\n      0x00\n        /* \"#utility.yul\":3657:3688   */\n      mstore\n        /* \"#utility.yul\":3707:3711   */\n      0x11\n        /* \"#utility.yul\":3704:3705   */\n      0x04\n        /* \"#utility.yul\":3697:3712   */\n      mstore\n        /* \"#utility.yul\":3731:3735   */\n      0x24\n        /* \"#utility.yul\":3728:3729   */\n      0x00\n        /* \"#utility.yul\":3721:3736   */\n      revert\n        /* \"#utility.yul\":3747:3915   */\n    tag_150:\n        /* \"#utility.yul\":3820:3829   */\n      dup1\n      dup3\n      mul\n        /* \"#utility.yul\":3851:3860   */\n      dup2\n      iszero\n        /* \"#utility.yul\":3868:3883   */\n      dup3\n      dup3\n      div\n        /* \"#utility.yul\":3862:3884   */\n      dup5\n      eq\n        /* \"#utility.yul\":3848:3885   */\n      or\n        /* \"#utility.yul\":3838:3909   */\n      tag_430\n      jumpi\n        /* \"#utility.yul\":3889:3907   */\n      tag_430\n      tag_396\n      jump\t// in\n    tag_430:\n        /* \"#utility.yul\":3747:3915   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3920:4137   */\n    tag_152:\n        /* \"#utility.yul\":3960:3961   */\n      0x00\n        /* \"#utility.yul\":3986:3987   */\n      dup3\n        /* \"#utility.yul\":3976:4108   */\n      tag_432\n      jumpi\n        /* \"#utility.yul\":4030:4040   */\n      0x4e487b71\n        /* \"#utility.yul\":4025:4028   */\n      0xe0\n        /* \"#utility.yul\":4021:4041   */\n      shl\n        /* \"#utility.yul\":4018:4019   */\n      0x00\n        /* \"#utility.yul\":4011:4042   */\n      mstore\n        /* \"#utility.yul\":4065:4069   */\n      0x12\n        /* \"#utility.yul\":4062:4063   */\n      0x04\n        /* \"#utility.yul\":4055:4070   */\n      mstore\n        /* \"#utility.yul\":4093:4097   */\n      0x24\n        /* \"#utility.yul\":4090:4091   */\n      0x00\n        /* \"#utility.yul\":4083:4098   */\n      revert\n        /* \"#utility.yul\":3976:4108   */\n    tag_432:\n      pop\n        /* \"#utility.yul\":4122:4131   */\n      div\n      swap1\n        /* \"#utility.yul\":3920:4137   */\n      jump\t// out\n        /* \"#utility.yul\":4142:4269   */\n    tag_157:\n        /* \"#utility.yul\":4203:4213   */\n      0x4e487b71\n        /* \"#utility.yul\":4198:4201   */\n      0xe0\n        /* \"#utility.yul\":4194:4214   */\n      shl\n        /* \"#utility.yul\":4191:4192   */\n      0x00\n        /* \"#utility.yul\":4184:4215   */\n      mstore\n        /* \"#utility.yul\":4234:4238   */\n      0x41\n        /* \"#utility.yul\":4231:4232   */\n      0x04\n        /* \"#utility.yul\":4224:4239   */\n      mstore\n        /* \"#utility.yul\":4258:4262   */\n      0x24\n        /* \"#utility.yul\":4255:4256   */\n      0x00\n        /* \"#utility.yul\":4248:4263   */\n      revert\n        /* \"#utility.yul\":4274:4401   */\n    tag_161:\n        /* \"#utility.yul\":4335:4345   */\n      0x4e487b71\n        /* \"#utility.yul\":4330:4333   */\n      0xe0\n        /* \"#utility.yul\":4326:4346   */\n      shl\n        /* \"#utility.yul\":4323:4324   */\n      0x00\n        /* \"#utility.yul\":4316:4347   */\n      mstore\n        /* \"#utility.yul\":4366:4370   */\n      0x32\n        /* \"#utility.yul\":4363:4364   */\n      0x04\n        /* \"#utility.yul\":4356:4371   */\n      mstore\n        /* \"#utility.yul\":4390:4394   */\n      0x24\n        /* \"#utility.yul\":4387:4388   */\n      0x00\n        /* \"#utility.yul\":4380:4395   */\n      revert\n        /* \"#utility.yul\":4406:4534   */\n    tag_165:\n        /* \"#utility.yul\":4473:4482   */\n      dup2\n      dup2\n      sub\n        /* \"#utility.yul\":4494:4505   */\n      dup2\n      dup2\n      gt\n        /* \"#utility.yul\":4491:4528   */\n      iszero\n      tag_430\n      jumpi\n        /* \"#utility.yul\":4508:4526   */\n      tag_430\n      tag_396\n      jump\t// in\n        /* \"#utility.yul\":4539:4664   */\n    tag_167:\n        /* \"#utility.yul\":4604:4613   */\n      dup1\n      dup3\n      add\n        /* \"#utility.yul\":4625:4635   */\n      dup1\n      dup3\n      gt\n        /* \"#utility.yul\":4622:4658   */\n      iszero\n      tag_430\n      jumpi\n        /* \"#utility.yul\":4638:4656   */\n      tag_430\n      tag_396\n      jump\t// in\n        /* \"#utility.yul\":4669:5130   */\n    tag_397:\n        /* \"#utility.yul\":4722:4725   */\n      0x00\n        /* \"#utility.yul\":4760:4765   */\n      dup2\n        /* \"#utility.yul\":4754:4766   */\n      mload\n        /* \"#utility.yul\":4787:4793   */\n      dup1\n        /* \"#utility.yul\":4782:4785   */\n      dup5\n        /* \"#utility.yul\":4775:4794   */\n      mstore\n        /* \"#utility.yul\":4813:4817   */\n      0x20\n        /* \"#utility.yul\":4842:4844   */\n      dup1\n        /* \"#utility.yul\":4837:4840   */\n      dup6\n        /* \"#utility.yul\":4833:4845   */\n      add\n        /* \"#utility.yul\":4826:4845   */\n      swap5\n      pop\n        /* \"#utility.yul\":4879:4881   */\n      dup1\n        /* \"#utility.yul\":4872:4877   */\n      dup5\n        /* \"#utility.yul\":4868:4882   */\n      add\n        /* \"#utility.yul\":4900:4901   */\n      0x00\n        /* \"#utility.yul\":4910:5105   */\n    tag_442:\n        /* \"#utility.yul\":4924:4930   */\n      dup4\n        /* \"#utility.yul\":4921:4922   */\n      dup2\n        /* \"#utility.yul\":4918:4931   */\n      lt\n        /* \"#utility.yul\":4910:5105   */\n      iszero\n      tag_444\n      jumpi\n        /* \"#utility.yul\":4989:5002   */\n      dup2\n      mload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":4985:5024   */\n      and\n        /* \"#utility.yul\":4973:5025   */\n      dup8\n      mstore\n        /* \"#utility.yul\":5045:5057   */\n      swap6\n      dup3\n      add\n      swap6\n        /* \"#utility.yul\":5080:5095   */\n      swap1\n      dup3\n      add\n      swap1\n        /* \"#utility.yul\":5021:5022   */\n      0x01\n        /* \"#utility.yul\":4939:4948   */\n      add\n        /* \"#utility.yul\":4910:5105   */\n      jump(tag_442)\n    tag_444:\n      pop\n        /* \"#utility.yul\":5121:5124   */\n      swap5\n      swap6\n        /* \"#utility.yul\":4669:5130   */\n      swap5\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5135:5709   */\n    tag_169:\n        /* \"#utility.yul\":5426:5432   */\n      dup6\n        /* \"#utility.yul\":5415:5424   */\n      dup2\n        /* \"#utility.yul\":5408:5433   */\n      mstore\n        /* \"#utility.yul\":5469:5475   */\n      dup5\n        /* \"#utility.yul\":5464:5466   */\n      0x20\n        /* \"#utility.yul\":5453:5462   */\n      dup3\n        /* \"#utility.yul\":5449:5467   */\n      add\n        /* \"#utility.yul\":5442:5476   */\n      mstore\n        /* \"#utility.yul\":5512:5515   */\n      0xa0\n        /* \"#utility.yul\":5507:5509   */\n      0x40\n        /* \"#utility.yul\":5496:5505   */\n      dup3\n        /* \"#utility.yul\":5492:5510   */\n      add\n        /* \"#utility.yul\":5485:5516   */\n      mstore\n        /* \"#utility.yul\":5389:5393   */\n      0x00\n        /* \"#utility.yul\":5533:5590   */\n      tag_446\n        /* \"#utility.yul\":5585:5588   */\n      0xa0\n        /* \"#utility.yul\":5574:5583   */\n      dup4\n        /* \"#utility.yul\":5570:5589   */\n      add\n        /* \"#utility.yul\":5562:5568   */\n      dup7\n        /* \"#utility.yul\":5533:5590   */\n      tag_397\n      jump\t// in\n    tag_446:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":5626:5658   */\n      swap5\n      swap1\n      swap5\n      and\n        /* \"#utility.yul\":5621:5623   */\n      0x60\n        /* \"#utility.yul\":5606:5624   */\n      dup4\n      add\n        /* \"#utility.yul\":5599:5659   */\n      mstore\n      pop\n        /* \"#utility.yul\":5690:5693   */\n      0x80\n        /* \"#utility.yul\":5675:5694   */\n      add\n        /* \"#utility.yul\":5668:5703   */\n      mstore\n        /* \"#utility.yul\":5525:5590   */\n      swap4\n        /* \"#utility.yul\":5135:5709   */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5714:5849   */\n    tag_198:\n        /* \"#utility.yul\":5753:5756   */\n      0x00\n        /* \"#utility.yul\":5774:5791   */\n      0x01\n      dup3\n      add\n        /* \"#utility.yul\":5771:5814   */\n      tag_449\n      jumpi\n        /* \"#utility.yul\":5794:5812   */\n      tag_449\n      tag_396\n      jump\t// in\n    tag_449:\n      pop\n        /* \"#utility.yul\":5841:5842   */\n      0x01\n        /* \"#utility.yul\":5830:5843   */\n      add\n      swap1\n        /* \"#utility.yul\":5714:5849   */\n      jump\t// out\n        /* \"#utility.yul\":5854:6186   */\n    tag_215:\n        /* \"#utility.yul\":6061:6067   */\n      dup3\n        /* \"#utility.yul\":6050:6059   */\n      dup2\n        /* \"#utility.yul\":6043:6068   */\n      mstore\n        /* \"#utility.yul\":6104:6106   */\n      0x40\n        /* \"#utility.yul\":6099:6101   */\n      0x20\n        /* \"#utility.yul\":6088:6097   */\n      dup3\n        /* \"#utility.yul\":6084:6102   */\n      add\n        /* \"#utility.yul\":6077:6107   */\n      mstore\n        /* \"#utility.yul\":6024:6028   */\n      0x00\n        /* \"#utility.yul\":6124:6180   */\n      tag_451\n        /* \"#utility.yul\":6176:6178   */\n      0x40\n        /* \"#utility.yul\":6165:6174   */\n      dup4\n        /* \"#utility.yul\":6161:6179   */\n      add\n        /* \"#utility.yul\":6153:6159   */\n      dup5\n        /* \"#utility.yul\":6124:6180   */\n      tag_397\n      jump\t// in\n    tag_451:\n        /* \"#utility.yul\":6116:6180   */\n      swap5\n        /* \"#utility.yul\":5854:6186   */\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6191:7296   */\n    tag_219:\n        /* \"#utility.yul\":6286:6292   */\n      0x00\n        /* \"#utility.yul\":6317:6319   */\n      0x20\n        /* \"#utility.yul\":6360:6362   */\n      dup1\n        /* \"#utility.yul\":6348:6357   */\n      dup4\n        /* \"#utility.yul\":6339:6346   */\n      dup6\n        /* \"#utility.yul\":6335:6358   */\n      sub\n        /* \"#utility.yul\":6331:6363   */\n      slt\n        /* \"#utility.yul\":6328:6380   */\n      iszero\n      tag_453\n      jumpi\n        /* \"#utility.yul\":6376:6377   */\n      0x00\n        /* \"#utility.yul\":6373:6374   */\n      dup1\n        /* \"#utility.yul\":6366:6378   */\n      revert\n        /* \"#utility.yul\":6328:6380   */\n    tag_453:\n        /* \"#utility.yul\":6409:6418   */\n      dup3\n        /* \"#utility.yul\":6403:6419   */\n      mload\n        /* \"#utility.yul\":6438:6456   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":6479:6481   */\n      dup1\n        /* \"#utility.yul\":6471:6477   */\n      dup3\n        /* \"#utility.yul\":6468:6482   */\n      gt\n        /* \"#utility.yul\":6465:6499   */\n      iszero\n      tag_454\n      jumpi\n        /* \"#utility.yul\":6495:6496   */\n      0x00\n        /* \"#utility.yul\":6492:6493   */\n      dup1\n        /* \"#utility.yul\":6485:6497   */\n      revert\n        /* \"#utility.yul\":6465:6499   */\n    tag_454:\n        /* \"#utility.yul\":6533:6539   */\n      dup2\n        /* \"#utility.yul\":6522:6531   */\n      dup6\n        /* \"#utility.yul\":6518:6540   */\n      add\n        /* \"#utility.yul\":6508:6540   */\n      swap2\n      pop\n        /* \"#utility.yul\":6578:6585   */\n      dup6\n        /* \"#utility.yul\":6571:6575   */\n      0x1f\n        /* \"#utility.yul\":6567:6569   */\n      dup4\n        /* \"#utility.yul\":6563:6576   */\n      add\n        /* \"#utility.yul\":6559:6586   */\n      slt\n        /* \"#utility.yul\":6549:6604   */\n      tag_455\n      jumpi\n        /* \"#utility.yul\":6600:6601   */\n      0x00\n        /* \"#utility.yul\":6597:6598   */\n      dup1\n        /* \"#utility.yul\":6590:6602   */\n      revert\n        /* \"#utility.yul\":6549:6604   */\n    tag_455:\n        /* \"#utility.yul\":6629:6631   */\n      dup2\n        /* \"#utility.yul\":6623:6632   */\n      mload\n        /* \"#utility.yul\":6651:6653   */\n      dup2\n        /* \"#utility.yul\":6647:6649   */\n      dup2\n        /* \"#utility.yul\":6644:6654   */\n      gt\n        /* \"#utility.yul\":6641:6677   */\n      iszero\n      tag_457\n      jumpi\n        /* \"#utility.yul\":6657:6675   */\n      tag_457\n      tag_157\n      jump\t// in\n    tag_457:\n        /* \"#utility.yul\":6703:6705   */\n      dup1\n        /* \"#utility.yul\":6700:6701   */\n      0x05\n        /* \"#utility.yul\":6696:6706   */\n      shl\n        /* \"#utility.yul\":6735:6737   */\n      0x40\n        /* \"#utility.yul\":6729:6738   */\n      mload\n        /* \"#utility.yul\":6798:6800   */\n      0x1f\n        /* \"#utility.yul\":6794:6801   */\n      not\n        /* \"#utility.yul\":6789:6791   */\n      0x3f\n        /* \"#utility.yul\":6785:6787   */\n      dup4\n        /* \"#utility.yul\":6781:6792   */\n      add\n        /* \"#utility.yul\":6777:6802   */\n      and\n        /* \"#utility.yul\":6769:6775   */\n      dup2\n        /* \"#utility.yul\":6765:6803   */\n      add\n        /* \"#utility.yul\":6853:6859   */\n      dup2\n        /* \"#utility.yul\":6841:6851   */\n      dup2\n        /* \"#utility.yul\":6838:6860   */\n      lt\n        /* \"#utility.yul\":6833:6835   */\n      dup6\n        /* \"#utility.yul\":6821:6831   */\n      dup3\n        /* \"#utility.yul\":6818:6836   */\n      gt\n        /* \"#utility.yul\":6815:6861   */\n      or\n        /* \"#utility.yul\":6812:6884   */\n      iszero\n      tag_459\n      jumpi\n        /* \"#utility.yul\":6864:6882   */\n      tag_459\n      tag_157\n      jump\t// in\n    tag_459:\n        /* \"#utility.yul\":6900:6902   */\n      0x40\n        /* \"#utility.yul\":6893:6915   */\n      mstore\n        /* \"#utility.yul\":6950:6968   */\n      swap2\n      dup3\n      mstore\n        /* \"#utility.yul\":6984:6999   */\n      dup5\n      dup3\n      add\n      swap3\n      pop\n        /* \"#utility.yul\":7026:7037   */\n      dup4\n      dup2\n      add\n        /* \"#utility.yul\":7022:7042   */\n      dup6\n      add\n      swap2\n        /* \"#utility.yul\":7054:7073   */\n      dup9\n      dup4\n      gt\n        /* \"#utility.yul\":7051:7090   */\n      iszero\n      tag_460\n      jumpi\n        /* \"#utility.yul\":7086:7087   */\n      0x00\n        /* \"#utility.yul\":7083:7084   */\n      dup1\n        /* \"#utility.yul\":7076:7088   */\n      revert\n        /* \"#utility.yul\":7051:7090   */\n    tag_460:\n        /* \"#utility.yul\":7110:7121   */\n      swap4\n      dup6\n      add\n      swap4\n        /* \"#utility.yul\":7130:7265   */\n    tag_461:\n        /* \"#utility.yul\":7146:7152   */\n      dup3\n        /* \"#utility.yul\":7141:7144   */\n      dup6\n        /* \"#utility.yul\":7138:7153   */\n      lt\n        /* \"#utility.yul\":7130:7265   */\n      iszero\n      tag_463\n      jumpi\n        /* \"#utility.yul\":7212:7222   */\n      dup5\n      mload\n        /* \"#utility.yul\":7200:7223   */\n      dup5\n      mstore\n        /* \"#utility.yul\":7163:7175   */\n      swap4\n      dup6\n      add\n      swap4\n        /* \"#utility.yul\":7243:7255   */\n      swap3\n      dup6\n      add\n      swap3\n        /* \"#utility.yul\":7130:7265   */\n      jump(tag_461)\n    tag_463:\n        /* \"#utility.yul\":7284:7290   */\n      swap9\n        /* \"#utility.yul\":6191:7296   */\n      swap8\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7301:7803   */\n    tag_223:\n        /* \"#utility.yul\":7564:7570   */\n      dup5\n        /* \"#utility.yul\":7553:7562   */\n      dup2\n        /* \"#utility.yul\":7546:7571   */\n      mstore\n        /* \"#utility.yul\":7607:7610   */\n      0x80\n        /* \"#utility.yul\":7602:7604   */\n      0x20\n        /* \"#utility.yul\":7591:7600   */\n      dup3\n        /* \"#utility.yul\":7587:7605   */\n      add\n        /* \"#utility.yul\":7580:7611   */\n      mstore\n        /* \"#utility.yul\":7527:7531   */\n      0x00\n        /* \"#utility.yul\":7628:7685   */\n      tag_465\n        /* \"#utility.yul\":7680:7683   */\n      0x80\n        /* \"#utility.yul\":7669:7678   */\n      dup4\n        /* \"#utility.yul\":7665:7684   */\n      add\n        /* \"#utility.yul\":7657:7663   */\n      dup7\n        /* \"#utility.yul\":7628:7685   */\n      tag_397\n      jump\t// in\n    tag_465:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":7721:7753   */\n      swap5\n      swap1\n      swap5\n      and\n        /* \"#utility.yul\":7716:7718   */\n      0x40\n        /* \"#utility.yul\":7701:7719   */\n      dup4\n      add\n        /* \"#utility.yul\":7694:7754   */\n      mstore\n      pop\n        /* \"#utility.yul\":7785:7787   */\n      0x60\n        /* \"#utility.yul\":7770:7788   */\n      add\n        /* \"#utility.yul\":7763:7797   */\n      mstore\n        /* \"#utility.yul\":7620:7685   */\n      swap3\n        /* \"#utility.yul\":7301:7803   */\n      swap2\n      pop\n      pop\n      jump\t// out\n\n    auxdata: 0xa264697066735822122099f52f70626d33c76cd5e9c0c8515a1b004e3b9f039b27ed0abd8ecbd8c6ae8264736f6c63430008140033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_50": {
									"entryPoint": null,
									"id": 50,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_574": {
									"entryPoint": null,
									"id": 574,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_transferOwnership_146": {
									"entryPoint": 972,
									"id": 146,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"abi_decode_tuple_t_bool_fromMemory": {
									"entryPoint": 1051,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:780:4",
										"statements": [
											{
												"nodeType": "YulBlock",
												"src": "6:3:4",
												"statements": []
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "115:102:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "125:26:4",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "137:9:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "148:2:4",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "133:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "133:18:4"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "125:4:4"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "167:9:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "182:6:4"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "198:3:4",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "203:1:4",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nodeType": "YulIdentifier",
																							"src": "194:3:4"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "194:11:4"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "207:1:4",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nodeType": "YulIdentifier",
																					"src": "190:3:4"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "190:19:4"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "178:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "178:32:4"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "160:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "160:51:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "160:51:4"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "84:9:4",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "95:6:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "106:4:4",
														"type": ""
													}
												],
												"src": "14:203:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "351:145:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "361:26:4",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "373:9:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "384:2:4",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "369:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "369:18:4"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "361:4:4"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "403:9:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "418:6:4"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "434:3:4",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "439:1:4",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nodeType": "YulIdentifier",
																							"src": "430:3:4"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "430:11:4"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "443:1:4",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nodeType": "YulIdentifier",
																					"src": "426:3:4"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "426:19:4"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "414:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "414:32:4"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "396:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "396:51:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "396:51:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "467:9:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "478:2:4",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "463:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "463:18:4"
																	},
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "483:6:4"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "456:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "456:34:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "456:34:4"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "312:9:4",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "323:6:4",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "331:6:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "342:4:4",
														"type": ""
													}
												],
												"src": "222:274:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "579:199:4",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "625:16:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "634:1:4",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "637:1:4",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "627:6:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "627:12:4"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "627:12:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "600:7:4"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "609:9:4"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "596:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "596:23:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "621:2:4",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "592:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "592:32:4"
															},
															"nodeType": "YulIf",
															"src": "589:52:4"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "650:29:4",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "669:9:4"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "663:5:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "663:16:4"
															},
															"variables": [
																{
																	"name": "value",
																	"nodeType": "YulTypedName",
																	"src": "654:5:4",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "732:16:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "741:1:4",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "744:1:4",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "734:6:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "734:12:4"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "734:12:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "701:5:4"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "value",
																								"nodeType": "YulIdentifier",
																								"src": "722:5:4"
																							}
																						],
																						"functionName": {
																							"name": "iszero",
																							"nodeType": "YulIdentifier",
																							"src": "715:6:4"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "715:13:4"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nodeType": "YulIdentifier",
																					"src": "708:6:4"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "708:21:4"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "698:2:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "698:32:4"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "691:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "691:40:4"
															},
															"nodeType": "YulIf",
															"src": "688:60:4"
														},
														{
															"nodeType": "YulAssignment",
															"src": "757:15:4",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "767:5:4"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "757:6:4"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bool_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "545:9:4",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "556:7:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "568:6:4",
														"type": ""
													}
												],
												"src": "501:277:4"
											}
										]
									},
									"contents": "{\n    { }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 32), value1)\n    }\n    function abi_decode_tuple_t_bool_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := mload(headStart)\n        if iszero(eq(value, iszero(iszero(value)))) { revert(0, 0) }\n        value0 := value\n    }\n}",
									"id": 4,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "60806040526003805460ff191690553480156200001a575f80fd5b5033806200004157604051631e4fbdf760e01b81525f600482015260240160405180910390fd5b6200004c81620003cc565b50600780546001600160a01b0319908116733b44b2a187a7b3824131f8db5a74194d0a42fc15179091556008805482165f8051602062001dbc83398151915290811790915560098054831673c21223249ca28397b4b6541dffaecc539bff0c59908117909155600a805484167366e428c3f67a68878562e79a0234c1f83c208770179055600b805484167341bc026dabe978bc2fafea1850456511ca4b01bc179055600c80548416733b41b27e74dd366ce27cb389dc7877d4e1516d4d179055600d80548416735c7f8a570d578ed84e63fdfa7b1ee72deae1ae23179055600180549093163317909255600360025560405163095ea7b360e01b815263095ea7b39162000172915f19906004016001600160a01b03929092168252602082015260400190565b6020604051808303815f875af11580156200018f573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190620001b591906200041b565b50600a5460405163095ea7b360e01b81525f8051602062001dbc83398151915260048201525f1960248201526001600160a01b039091169063095ea7b3906044016020604051808303815f875af115801562000213573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906200023991906200041b565b50600b5460405163095ea7b360e01b81525f8051602062001dbc83398151915260048201525f1960248201526001600160a01b039091169063095ea7b3906044016020604051808303815f875af115801562000297573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190620002bd91906200041b565b50600d5460405163095ea7b360e01b81525f8051602062001dbc83398151915260048201525f1960248201526001600160a01b039091169063095ea7b3906044016020604051808303815f875af11580156200031b573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906200034191906200041b565b50600c5460405163095ea7b360e01b81525f8051602062001dbc83398151915260048201525f1960248201526001600160a01b039091169063095ea7b3906044016020604051808303815f875af11580156200039f573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190620003c591906200041b565b5062000443565b5f80546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b5f602082840312156200042c575f80fd5b815180151581146200043c575f80fd5b9392505050565b61196b80620004515f395ff3fe608060405260043610610164575f3560e01c8063a37b9e7f116100cd578063b3f0067411610087578063d3e66a9e11610062578063d3e66a9e1461041e578063d7b7d3f314610432578063edf26d9b14610459578063f2fde38b14610478575f80fd5b8063b3f00674146103d8578063d0e30db0146103f7578063d16a4010146103ff575f80fd5b8063a37b9e7f146102ee578063a6769ef814610315578063ac65334f14610340578063ae38a07014610369578063afe43b941461038a578063b0befe63146103b1575f80fd5b80635f0018cd1161011e5780635f0018cd146102395780636504fbad1461024d578063715018a6146102745780637c6f8fae146102885780637fd6f15c146102af5780638da5cb5b146102d2575f80fd5b8063162141201461016f5780631d470cb1146101905780632e1a7d4d146101d45780633977d68d146101f357806339bda01c1461021257806353ac861e14610226575f80fd5b3661016b57005b5f80fd5b34801561017a575f80fd5b5061018e6101893660046115b1565b610497565b005b34801561019b575f80fd5b506101b7735c7f8a570d578ed84e63fdfa7b1ee72deae1ae2381565b6040516001600160a01b0390911681526020015b60405180910390f35b3480156101df575f80fd5b5061018e6101ee3660046115e1565b610678565b3480156101fe575f80fd5b5061018e61020d3660046115f8565b610778565b34801561021d575f80fd5b5061018e6107a6565b61018e6102343660046115f8565b610820565b348015610244575f80fd5b5061018e610a57565b348015610258575f80fd5b506101b77366e428c3f67a68878562e79a0234c1f83c20877081565b34801561027f575f80fd5b5061018e610a6b565b348015610293575f80fd5b506101b7733b44b2a187a7b3824131f8db5a74194d0a42fc1581565b3480156102ba575f80fd5b506102c460025481565b6040519081526020016101cb565b3480156102dd575f80fd5b505f546001600160a01b03166101b7565b3480156102f9575f80fd5b506101b773c21223249ca28397b4b6541dffaecc539bff0c5981565b348015610320575f80fd5b506102c461032f366004611620565b60046020525f908152604090205481565b34801561034b575f80fd5b506003546103599060ff1681565b60405190151581526020016101cb565b348015610374575f80fd5b5061037d610a7e565b6040516101cb9190611640565b348015610395575f80fd5b506101b77341bc026dabe978bc2fafea1850456511ca4b01bc81565b3480156103bc575f80fd5b506101b7733b41b27e74dd366ce27cb389dc7877d4e1516d4d81565b3480156103e3575f80fd5b506001546101b7906001600160a01b031681565b61018e610bab565b34801561040a575f80fd5b5061018e610419366004611697565b610c7b565b348015610429575f80fd5b5061018e6111df565b34801561043d575f80fd5b506101b773145863eb42cf62847a6ca784e6416c1682b1b2ae81565b348015610464575f80fd5b506101b76104733660046115e1565b6111f6565b348015610483575f80fd5b5061018e610492366004611620565b61121e565b6001600160a01b0383167341bc026dabe978bc2fafea1850456511ca4b01bc1480156104c5575060035460ff165b156104d4576104d43383611260565b6040516323b872dd60e01b8152336004820152306024820152604481018390526001600160a01b038416906323b872dd906064016020604051808303815f875af1158015610524573d5f803e3d5ffd5b505050506040513d601f19601f8201168201806040525081019061054891906116d6565b505f6103e86002548461055b9190611709565b6105659190611726565b90506105718482611312565b6040805160028082526060820183525f9260208301908036833701905050905084815f815181106105a4576105a4611759565b60200260200101906001600160a01b031690816001600160a01b031681525050735c7f8a570d578ed84e63fdfa7b1ee72deae1ae23816001815181106105ec576105ec611759565b6001600160a01b0392831660209182029290920101526008541663791ac947610615848761176d565b85843361062442610e10611780565b6040518663ffffffff1660e01b81526004016106449594939291906117d5565b5f604051808303815f87803b15801561065b575f80fd5b505af115801561066d573d5f803e3d5ffd5b505050505050505050565b600d546040516323b872dd60e01b8152336004820152306024820152604481018390526001600160a01b03909116906323b872dd906064016020604051808303815f875af11580156106cc573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906106f091906116d6565b50600d54604051632e1a7d4d60e01b8152600481018390526001600160a01b0390911690632e1a7d4d906024015f604051808303815f87803b158015610734575f80fd5b505af1158015610746573d5f803e3d5ffd5b505060405133925083156108fc02915083905f818181858888f19350505050158015610774573d5f803e3d5ffd5b5050565b6107806114ed565b600180546001600160a01b0319166001600160a01b039390931692909217909155600255565b6107ae6114ed565b6006545f5b818110156108075760045f600683815481106107d1576107d1611759565b5f9182526020808320909101546001600160a01b03168352820192909252604001812055806107ff81611810565b9150506107b3565b5061081360065f611568565b506003805460ff19169055565b60025434905f906103e8906108359084611709565b61083f9190611726565b6001546040519192506001600160a01b03169082156108fc029083905f818181858888f19350505050158015610877573d5f803e3d5ffd5b506040805160028082526060820183525f92602083019080368337019050509050735c7f8a570d578ed84e63fdfa7b1ee72deae1ae23815f815181106108bf576108bf611759565b60200260200101906001600160a01b031690816001600160a01b03168152505084816001815181106108f3576108f3611759565b6001600160a01b0392831660209182029290920101526008545f911663d06ca61f61091e858761176d565b846040518363ffffffff1660e01b815260040161093c929190611828565b5f60405180830381865afa158015610956573d5f803e3d5ffd5b505050506040513d5f823e601f3d908101601f1916820160405261097d9190810190611848565b6008549091506001600160a01b031663b6f9de9561099b858761176d565b8785336109aa42610e10611780565b6040518663ffffffff1660e01b81526004016109c99493929190611901565b5f604051808303818588803b1580156109e0575f80fd5b505af11580156109f2573d5f803e3d5ffd5b505050506001600160a01b0387167341bc026dabe978bc2fafea1850456511ca4b01bc1490508015610a26575060035460ff165b15610a4f57610a4f3382600181518110610a4257610a42611759565b6020026020010151611260565b505050505050565b610a5f6114ed565b6003805460ff19169055565b610a736114ed565b610a7c5f611519565b565b6006546060905f8167ffffffffffffffff811115610a9e57610a9e611745565b604051908082528060200260200182016040528015610ae257816020015b604080518082019091525f8082526020820152815260200190600190039081610abc5790505b5090505f5b82811015610ba457604051806040016040528060068381548110610b0d57610b0d611759565b905f5260205f20015f9054906101000a90046001600160a01b03166001600160a01b0316815260200160045f60068581548110610b4c57610b4c611759565b5f9182526020808320909101546001600160a01b0316835282019290925260400190205490528251839083908110610b8657610b86611759565b60200260200101819052508080610b9c90611810565b915050610ae7565b5092915050565b600d5460408051630d0e30db60e41b8152905134926001600160a01b03169163d0e30db09184916004808201925f9290919082900301818588803b158015610bf1575f80fd5b505af1158015610c03573d5f803e3d5ffd5b5050600d5460405163a9059cbb60e01b8152336004820152602481018690526001600160a01b03909116935063a9059cbb925060440190506020604051808303815f875af1158015610c57573d5f803e3d5ffd5b505050506040513d601f19601f8201168201806040525081019061077491906116d6565b6040516323b872dd60e01b8152336004820152306024820152604481018390526001600160a01b038516906323b872dd906064016020604051808303815f875af1158015610ccb573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190610cef91906116d6565b506001600160a01b0384167341bc026dabe978bc2fafea1850456511ca4b01bc148015610d1e575060035460ff165b15610d2d57610d2d3383611260565b5f6103e860025484610d3f9190611709565b610d499190611726565b9050610d558582611312565b5f6001600160a01b038616735c7f8a570d578ed84e63fdfa7b1ee72deae1ae231480610d9d57506001600160a01b038516735c7f8a570d578ed84e63fdfa7b1ee72deae1ae23145b610da8576003610dab565b60025b60ff1690505f60606001600160a01b038816735c7f8a570d578ed84e63fdfa7b1ee72deae1ae231480610dfa57506001600160a01b038716735c7f8a570d578ed84e63fdfa7b1ee72deae1ae23145b15610f245760025b604051908082528060200260200182016040528015610e2b578160200160208202803683370190505b50905087815f81518110610e4157610e41611759565b60200260200101906001600160a01b031690816001600160a01b0316815250508681600181518110610e7557610e75611759565b6001600160a01b0392831660209182029290920101526008545f911663d06ca61f610ea0878a61176d565b846040518363ffffffff1660e01b8152600401610ebe929190611828565b5f60405180830381865afa158015610ed8573d5f803e3d5ffd5b505050506040513d5f823e601f3d908101601f19168201604052610eff9190810190611848565b905080600181518110610f1457610f14611759565b6020026020010151925050611121565b6001600160a01b0388167341bc026dabe978bc2fafea1850456511ca4b01bc148015610f6c57506001600160a01b038716733b41b27e74dd366ce27cb389dc7877d4e1516d4d145b80610fba57506001600160a01b038816733b41b27e74dd366ce27cb389dc7877d4e1516d4d148015610fba57506001600160a01b0387167341bc026dabe978bc2fafea1850456511ca4b01bc145b15610fc6576002610e02565b60408051600380825260808201909252906020820160608036833701905050905087815f81518110610ffa57610ffa611759565b60200260200101906001600160a01b031690816001600160a01b031681525050735c7f8a570d578ed84e63fdfa7b1ee72deae1ae238160018151811061104257611042611759565b60200260200101906001600160a01b031690816001600160a01b031681525050868160028151811061107657611076611759565b6001600160a01b0392831660209182029290920101526008545f911663d06ca61f6110a1878a61176d565b846040518363ffffffff1660e01b81526004016110bf929190611828565b5f60405180830381865afa1580156110d9573d5f803e3d5ffd5b505050506040513d5f823e601f3d908101601f191682016040526111009190810190611848565b90508060028151811061111557611115611759565b60200260200101519250505b6008546001600160a01b0316635c11d79561113c868961176d565b87843361114b42610e10611780565b6040518663ffffffff1660e01b815260040161116b9594939291906117d5565b5f604051808303815f87803b158015611182575f80fd5b505af1158015611194573d5f803e3d5ffd5b505050506001600160a01b0387167341bc026dabe978bc2fafea1850456511ca4b01bc1480156111c6575060035460ff165b156111d5576111d53383611260565b5050505050505050565b6111e76114ed565b6003805460ff19166001179055565b60068181548110611205575f80fd5b5f918252602090912001546001600160a01b0316905081565b6112266114ed565b6001600160a01b03811661125457604051631e4fbdf760e01b81525f60048201526024015b60405180910390fd5b61125d81611519565b50565b6001600160a01b0382165f9081526005602052604090205460ff166112e2576006805460018082019092557ff652222313e28459528d920b65115c16c04f3efc82aaedc97be59f3f377c0d3f0180546001600160a01b0319166001600160a01b0385169081179091555f908152600560205260409020805460ff191690911790555b6001600160a01b0382165f9081526004602052604081208054839290611309908490611780565b90915550505050565b5f6001600160a01b038316735c7f8a570d578ed84e63fdfa7b1ee72deae1ae231461133e576002611341565b60015b60ff169050806001036113ca57600d5460015460405163a9059cbb60e01b81526001600160a01b0391821660048201526024810185905291169063a9059cbb906044016020604051808303815f875af11580156113a0573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906113c491906116d6565b50505050565b5f8167ffffffffffffffff8111156113e4576113e4611745565b60405190808252806020026020018201604052801561140d578160200160208202803683370190505b50905083815f8151811061142357611423611759565b60200260200101906001600160a01b031690816001600160a01b031681525050735c7f8a570d578ed84e63fdfa7b1ee72deae1ae238160018151811061146b5761146b611759565b6001600160a01b03928316602091820292909201015260085460015490821691635c11d7959186915f918691166114a442610e10611780565b6040518663ffffffff1660e01b81526004016114c49594939291906117d5565b5f604051808303815f87803b1580156114db575f80fd5b505af11580156111d5573d5f803e3d5ffd5b5f546001600160a01b03163314610a7c5760405163118cdaa760e01b815233600482015260240161124b565b5f80546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b5080545f8255905f5260205f209081019061125d91905b80821115611592575f815560010161157f565b5090565b80356001600160a01b03811681146115ac575f80fd5b919050565b5f805f606084860312156115c3575f80fd5b6115cc84611596565b95602085013595506040909401359392505050565b5f602082840312156115f1575f80fd5b5035919050565b5f8060408385031215611609575f80fd5b61161283611596565b946020939093013593505050565b5f60208284031215611630575f80fd5b61163982611596565b9392505050565b602080825282518282018190525f919060409081850190868401855b8281101561168a57815180516001600160a01b0316855286015186850152928401929085019060010161165c565b5091979650505050505050565b5f805f80608085870312156116aa575f80fd5b6116b385611596565b93506116c160208601611596565b93969395505050506040820135916060013590565b5f602082840312156116e6575f80fd5b81518015158114611639575f80fd5b634e487b7160e01b5f52601160045260245ffd5b8082028115828204841417611720576117206116f5565b92915050565b5f8261174057634e487b7160e01b5f52601260045260245ffd5b500490565b634e487b7160e01b5f52604160045260245ffd5b634e487b7160e01b5f52603260045260245ffd5b81810381811115611720576117206116f5565b80820180821115611720576117206116f5565b5f8151808452602080850194508084015f5b838110156117ca5781516001600160a01b0316875295820195908201906001016117a5565b509495945050505050565b85815284602082015260a060408201525f6117f360a0830186611793565b6001600160a01b0394909416606083015250608001529392505050565b5f60018201611821576118216116f5565b5060010190565b828152604060208201525f6118406040830184611793565b949350505050565b5f6020808385031215611859575f80fd5b825167ffffffffffffffff80821115611870575f80fd5b818501915085601f830112611883575f80fd5b81518181111561189557611895611745565b8060051b604051601f19603f830116810181811085821117156118ba576118ba611745565b6040529182528482019250838101850191888311156118d7575f80fd5b938501935b828510156118f5578451845293850193928501926118dc565b98975050505050505050565b848152608060208201525f6119196080830186611793565b6001600160a01b0394909416604083015250606001529291505056fea264697066735822122099f52f70626d33c76cd5e9c0c8515a1b004e3b9f039b27ed0abd8ecbd8c6ae8264736f6c63430008140033000000000000000000000000145863eb42cf62847a6ca784e6416c1682b1b2ae",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x3 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE CALLVALUE DUP1 ISZERO PUSH3 0x1A JUMPI PUSH0 DUP1 REVERT JUMPDEST POP CALLER DUP1 PUSH3 0x41 JUMPI PUSH1 0x40 MLOAD PUSH4 0x1E4FBDF7 PUSH1 0xE0 SHL DUP2 MSTORE PUSH0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH3 0x4C DUP2 PUSH3 0x3CC JUMP JUMPDEST POP PUSH1 0x7 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT SWAP1 DUP2 AND PUSH20 0x3B44B2A187A7B3824131F8DB5A74194D0A42FC15 OR SWAP1 SWAP2 SSTORE PUSH1 0x8 DUP1 SLOAD DUP3 AND PUSH0 DUP1 MLOAD PUSH1 0x20 PUSH3 0x1DBC DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE PUSH1 0x9 DUP1 SLOAD DUP4 AND PUSH20 0xC21223249CA28397B4B6541DFFAECC539BFF0C59 SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE PUSH1 0xA DUP1 SLOAD DUP5 AND PUSH20 0x66E428C3F67A68878562E79A0234C1F83C208770 OR SWAP1 SSTORE PUSH1 0xB DUP1 SLOAD DUP5 AND PUSH20 0x41BC026DABE978BC2FAFEA1850456511CA4B01BC OR SWAP1 SSTORE PUSH1 0xC DUP1 SLOAD DUP5 AND PUSH20 0x3B41B27E74DD366CE27CB389DC7877D4E1516D4D OR SWAP1 SSTORE PUSH1 0xD DUP1 SLOAD DUP5 AND PUSH20 0x5C7F8A570D578ED84E63FDFA7B1EE72DEAE1AE23 OR SWAP1 SSTORE PUSH1 0x1 DUP1 SLOAD SWAP1 SWAP4 AND CALLER OR SWAP1 SWAP3 SSTORE PUSH1 0x3 PUSH1 0x2 SSTORE PUSH1 0x40 MLOAD PUSH4 0x95EA7B3 PUSH1 0xE0 SHL DUP2 MSTORE PUSH4 0x95EA7B3 SWAP2 PUSH3 0x172 SWAP2 PUSH0 NOT SWAP1 PUSH1 0x4 ADD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND DUP3 MSTORE PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH3 0x18F JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH3 0x1B5 SWAP2 SWAP1 PUSH3 0x41B JUMP JUMPDEST POP PUSH1 0xA SLOAD PUSH1 0x40 MLOAD PUSH4 0x95EA7B3 PUSH1 0xE0 SHL DUP2 MSTORE PUSH0 DUP1 MLOAD PUSH1 0x20 PUSH3 0x1DBC DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x4 DUP3 ADD MSTORE PUSH0 NOT PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH4 0x95EA7B3 SWAP1 PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH3 0x213 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH3 0x239 SWAP2 SWAP1 PUSH3 0x41B JUMP JUMPDEST POP PUSH1 0xB SLOAD PUSH1 0x40 MLOAD PUSH4 0x95EA7B3 PUSH1 0xE0 SHL DUP2 MSTORE PUSH0 DUP1 MLOAD PUSH1 0x20 PUSH3 0x1DBC DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x4 DUP3 ADD MSTORE PUSH0 NOT PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH4 0x95EA7B3 SWAP1 PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH3 0x297 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH3 0x2BD SWAP2 SWAP1 PUSH3 0x41B JUMP JUMPDEST POP PUSH1 0xD SLOAD PUSH1 0x40 MLOAD PUSH4 0x95EA7B3 PUSH1 0xE0 SHL DUP2 MSTORE PUSH0 DUP1 MLOAD PUSH1 0x20 PUSH3 0x1DBC DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x4 DUP3 ADD MSTORE PUSH0 NOT PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH4 0x95EA7B3 SWAP1 PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH3 0x31B JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH3 0x341 SWAP2 SWAP1 PUSH3 0x41B JUMP JUMPDEST POP PUSH1 0xC SLOAD PUSH1 0x40 MLOAD PUSH4 0x95EA7B3 PUSH1 0xE0 SHL DUP2 MSTORE PUSH0 DUP1 MLOAD PUSH1 0x20 PUSH3 0x1DBC DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x4 DUP3 ADD MSTORE PUSH0 NOT PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH4 0x95EA7B3 SWAP1 PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH3 0x39F JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH3 0x3C5 SWAP2 SWAP1 PUSH3 0x41B JUMP JUMPDEST POP PUSH3 0x443 JUMP JUMPDEST PUSH0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR DUP5 SSTORE PUSH1 0x40 MLOAD SWAP2 SWAP1 SWAP3 AND SWAP3 DUP4 SWAP2 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP2 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH3 0x42C JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP2 MLOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH3 0x43C JUMPI PUSH0 DUP1 REVERT JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH2 0x196B DUP1 PUSH3 0x451 PUSH0 CODECOPY PUSH0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x164 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0xA37B9E7F GT PUSH2 0xCD JUMPI DUP1 PUSH4 0xB3F00674 GT PUSH2 0x87 JUMPI DUP1 PUSH4 0xD3E66A9E GT PUSH2 0x62 JUMPI DUP1 PUSH4 0xD3E66A9E EQ PUSH2 0x41E JUMPI DUP1 PUSH4 0xD7B7D3F3 EQ PUSH2 0x432 JUMPI DUP1 PUSH4 0xEDF26D9B EQ PUSH2 0x459 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x478 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0xB3F00674 EQ PUSH2 0x3D8 JUMPI DUP1 PUSH4 0xD0E30DB0 EQ PUSH2 0x3F7 JUMPI DUP1 PUSH4 0xD16A4010 EQ PUSH2 0x3FF JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0xA37B9E7F EQ PUSH2 0x2EE JUMPI DUP1 PUSH4 0xA6769EF8 EQ PUSH2 0x315 JUMPI DUP1 PUSH4 0xAC65334F EQ PUSH2 0x340 JUMPI DUP1 PUSH4 0xAE38A070 EQ PUSH2 0x369 JUMPI DUP1 PUSH4 0xAFE43B94 EQ PUSH2 0x38A JUMPI DUP1 PUSH4 0xB0BEFE63 EQ PUSH2 0x3B1 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x5F0018CD GT PUSH2 0x11E JUMPI DUP1 PUSH4 0x5F0018CD EQ PUSH2 0x239 JUMPI DUP1 PUSH4 0x6504FBAD EQ PUSH2 0x24D JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x274 JUMPI DUP1 PUSH4 0x7C6F8FAE EQ PUSH2 0x288 JUMPI DUP1 PUSH4 0x7FD6F15C EQ PUSH2 0x2AF JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x2D2 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x16214120 EQ PUSH2 0x16F JUMPI DUP1 PUSH4 0x1D470CB1 EQ PUSH2 0x190 JUMPI DUP1 PUSH4 0x2E1A7D4D EQ PUSH2 0x1D4 JUMPI DUP1 PUSH4 0x3977D68D EQ PUSH2 0x1F3 JUMPI DUP1 PUSH4 0x39BDA01C EQ PUSH2 0x212 JUMPI DUP1 PUSH4 0x53AC861E EQ PUSH2 0x226 JUMPI PUSH0 DUP1 REVERT JUMPDEST CALLDATASIZE PUSH2 0x16B JUMPI STOP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x17A JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x18E PUSH2 0x189 CALLDATASIZE PUSH1 0x4 PUSH2 0x15B1 JUMP JUMPDEST PUSH2 0x497 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x19B JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x1B7 PUSH20 0x5C7F8A570D578ED84E63FDFA7B1EE72DEAE1AE23 DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1DF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x18E PUSH2 0x1EE CALLDATASIZE PUSH1 0x4 PUSH2 0x15E1 JUMP JUMPDEST PUSH2 0x678 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1FE JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x18E PUSH2 0x20D CALLDATASIZE PUSH1 0x4 PUSH2 0x15F8 JUMP JUMPDEST PUSH2 0x778 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x21D JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x18E PUSH2 0x7A6 JUMP JUMPDEST PUSH2 0x18E PUSH2 0x234 CALLDATASIZE PUSH1 0x4 PUSH2 0x15F8 JUMP JUMPDEST PUSH2 0x820 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x244 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x18E PUSH2 0xA57 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x258 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x1B7 PUSH20 0x66E428C3F67A68878562E79A0234C1F83C208770 DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x27F JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x18E PUSH2 0xA6B JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x293 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x1B7 PUSH20 0x3B44B2A187A7B3824131F8DB5A74194D0A42FC15 DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2BA JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x2C4 PUSH1 0x2 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x1CB JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2DD JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x1B7 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2F9 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x1B7 PUSH20 0xC21223249CA28397B4B6541DFFAECC539BFF0C59 DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x320 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x2C4 PUSH2 0x32F CALLDATASIZE PUSH1 0x4 PUSH2 0x1620 JUMP JUMPDEST PUSH1 0x4 PUSH1 0x20 MSTORE PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x34B JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x3 SLOAD PUSH2 0x359 SWAP1 PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x1CB JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x374 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x37D PUSH2 0xA7E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1CB SWAP2 SWAP1 PUSH2 0x1640 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x395 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x1B7 PUSH20 0x41BC026DABE978BC2FAFEA1850456511CA4B01BC DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3BC JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x1B7 PUSH20 0x3B41B27E74DD366CE27CB389DC7877D4E1516D4D DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3E3 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 SLOAD PUSH2 0x1B7 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH2 0x18E PUSH2 0xBAB JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x40A JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x18E PUSH2 0x419 CALLDATASIZE PUSH1 0x4 PUSH2 0x1697 JUMP JUMPDEST PUSH2 0xC7B JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x429 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x18E PUSH2 0x11DF JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x43D JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x1B7 PUSH20 0x145863EB42CF62847A6CA784E6416C1682B1B2AE DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x464 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x1B7 PUSH2 0x473 CALLDATASIZE PUSH1 0x4 PUSH2 0x15E1 JUMP JUMPDEST PUSH2 0x11F6 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x483 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x18E PUSH2 0x492 CALLDATASIZE PUSH1 0x4 PUSH2 0x1620 JUMP JUMPDEST PUSH2 0x121E JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH20 0x41BC026DABE978BC2FAFEA1850456511CA4B01BC EQ DUP1 ISZERO PUSH2 0x4C5 JUMPI POP PUSH1 0x3 SLOAD PUSH1 0xFF AND JUMPDEST ISZERO PUSH2 0x4D4 JUMPI PUSH2 0x4D4 CALLER DUP4 PUSH2 0x1260 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x23B872DD PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE ADDRESS PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND SWAP1 PUSH4 0x23B872DD SWAP1 PUSH1 0x64 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x524 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x548 SWAP2 SWAP1 PUSH2 0x16D6 JUMP JUMPDEST POP PUSH0 PUSH2 0x3E8 PUSH1 0x2 SLOAD DUP5 PUSH2 0x55B SWAP2 SWAP1 PUSH2 0x1709 JUMP JUMPDEST PUSH2 0x565 SWAP2 SWAP1 PUSH2 0x1726 JUMP JUMPDEST SWAP1 POP PUSH2 0x571 DUP5 DUP3 PUSH2 0x1312 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x2 DUP1 DUP3 MSTORE PUSH1 0x60 DUP3 ADD DUP4 MSTORE PUSH0 SWAP3 PUSH1 0x20 DUP4 ADD SWAP1 DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP POP SWAP1 POP DUP5 DUP2 PUSH0 DUP2 MLOAD DUP2 LT PUSH2 0x5A4 JUMPI PUSH2 0x5A4 PUSH2 0x1759 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE POP POP PUSH20 0x5C7F8A570D578ED84E63FDFA7B1EE72DEAE1AE23 DUP2 PUSH1 0x1 DUP2 MLOAD DUP2 LT PUSH2 0x5EC JUMPI PUSH2 0x5EC PUSH2 0x1759 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 DUP4 AND PUSH1 0x20 SWAP2 DUP3 MUL SWAP3 SWAP1 SWAP3 ADD ADD MSTORE PUSH1 0x8 SLOAD AND PUSH4 0x791AC947 PUSH2 0x615 DUP5 DUP8 PUSH2 0x176D JUMP JUMPDEST DUP6 DUP5 CALLER PUSH2 0x624 TIMESTAMP PUSH2 0xE10 PUSH2 0x1780 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP7 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x644 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x17D5 JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x65B JUMPI PUSH0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x66D JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0xD SLOAD PUSH1 0x40 MLOAD PUSH4 0x23B872DD PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE ADDRESS PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH4 0x23B872DD SWAP1 PUSH1 0x64 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x6CC JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x6F0 SWAP2 SWAP1 PUSH2 0x16D6 JUMP JUMPDEST POP PUSH1 0xD SLOAD PUSH1 0x40 MLOAD PUSH4 0x2E1A7D4D PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH4 0x2E1A7D4D SWAP1 PUSH1 0x24 ADD PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x734 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x746 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP PUSH1 0x40 MLOAD CALLER SWAP3 POP DUP4 ISZERO PUSH2 0x8FC MUL SWAP2 POP DUP4 SWAP1 PUSH0 DUP2 DUP2 DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0x774 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP JUMP JUMPDEST PUSH2 0x780 PUSH2 0x14ED JUMP JUMPDEST PUSH1 0x1 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP4 SWAP1 SWAP4 AND SWAP3 SWAP1 SWAP3 OR SWAP1 SWAP2 SSTORE PUSH1 0x2 SSTORE JUMP JUMPDEST PUSH2 0x7AE PUSH2 0x14ED JUMP JUMPDEST PUSH1 0x6 SLOAD PUSH0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x807 JUMPI PUSH1 0x4 PUSH0 PUSH1 0x6 DUP4 DUP2 SLOAD DUP2 LT PUSH2 0x7D1 JUMPI PUSH2 0x7D1 PUSH2 0x1759 JUMP JUMPDEST PUSH0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 KECCAK256 SWAP1 SWAP2 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 MSTORE DUP3 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x40 ADD DUP2 KECCAK256 SSTORE DUP1 PUSH2 0x7FF DUP2 PUSH2 0x1810 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x7B3 JUMP JUMPDEST POP PUSH2 0x813 PUSH1 0x6 PUSH0 PUSH2 0x1568 JUMP JUMPDEST POP PUSH1 0x3 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x2 SLOAD CALLVALUE SWAP1 PUSH0 SWAP1 PUSH2 0x3E8 SWAP1 PUSH2 0x835 SWAP1 DUP5 PUSH2 0x1709 JUMP JUMPDEST PUSH2 0x83F SWAP2 SWAP1 PUSH2 0x1726 JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x40 MLOAD SWAP2 SWAP3 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 DUP3 ISZERO PUSH2 0x8FC MUL SWAP1 DUP4 SWAP1 PUSH0 DUP2 DUP2 DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0x877 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x2 DUP1 DUP3 MSTORE PUSH1 0x60 DUP3 ADD DUP4 MSTORE PUSH0 SWAP3 PUSH1 0x20 DUP4 ADD SWAP1 DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP POP SWAP1 POP PUSH20 0x5C7F8A570D578ED84E63FDFA7B1EE72DEAE1AE23 DUP2 PUSH0 DUP2 MLOAD DUP2 LT PUSH2 0x8BF JUMPI PUSH2 0x8BF PUSH2 0x1759 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE POP POP DUP5 DUP2 PUSH1 0x1 DUP2 MLOAD DUP2 LT PUSH2 0x8F3 JUMPI PUSH2 0x8F3 PUSH2 0x1759 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 DUP4 AND PUSH1 0x20 SWAP2 DUP3 MUL SWAP3 SWAP1 SWAP3 ADD ADD MSTORE PUSH1 0x8 SLOAD PUSH0 SWAP2 AND PUSH4 0xD06CA61F PUSH2 0x91E DUP6 DUP8 PUSH2 0x176D JUMP JUMPDEST DUP5 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x93C SWAP3 SWAP2 SWAP1 PUSH2 0x1828 JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x956 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH0 DUP3 RETURNDATACOPY PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH1 0x1F NOT AND DUP3 ADD PUSH1 0x40 MSTORE PUSH2 0x97D SWAP2 SWAP1 DUP2 ADD SWAP1 PUSH2 0x1848 JUMP JUMPDEST PUSH1 0x8 SLOAD SWAP1 SWAP2 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xB6F9DE95 PUSH2 0x99B DUP6 DUP8 PUSH2 0x176D JUMP JUMPDEST DUP8 DUP6 CALLER PUSH2 0x9AA TIMESTAMP PUSH2 0xE10 PUSH2 0x1780 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP7 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x9C9 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1901 JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x9E0 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x9F2 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND PUSH20 0x41BC026DABE978BC2FAFEA1850456511CA4B01BC EQ SWAP1 POP DUP1 ISZERO PUSH2 0xA26 JUMPI POP PUSH1 0x3 SLOAD PUSH1 0xFF AND JUMPDEST ISZERO PUSH2 0xA4F JUMPI PUSH2 0xA4F CALLER DUP3 PUSH1 0x1 DUP2 MLOAD DUP2 LT PUSH2 0xA42 JUMPI PUSH2 0xA42 PUSH2 0x1759 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH2 0x1260 JUMP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0xA5F PUSH2 0x14ED JUMP JUMPDEST PUSH1 0x3 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE JUMP JUMPDEST PUSH2 0xA73 PUSH2 0x14ED JUMP JUMPDEST PUSH2 0xA7C PUSH0 PUSH2 0x1519 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x6 SLOAD PUSH1 0x60 SWAP1 PUSH0 DUP2 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xA9E JUMPI PUSH2 0xA9E PUSH2 0x1745 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0xAE2 JUMPI DUP2 PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD SWAP1 SWAP2 MSTORE PUSH0 DUP1 DUP3 MSTORE PUSH1 0x20 DUP3 ADD MSTORE DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 SWAP1 SUB SWAP1 DUP2 PUSH2 0xABC JUMPI SWAP1 POP JUMPDEST POP SWAP1 POP PUSH0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0xBA4 JUMPI PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x6 DUP4 DUP2 SLOAD DUP2 LT PUSH2 0xB0D JUMPI PUSH2 0xB0D PUSH2 0x1759 JUMP JUMPDEST SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x4 PUSH0 PUSH1 0x6 DUP6 DUP2 SLOAD DUP2 LT PUSH2 0xB4C JUMPI PUSH2 0xB4C PUSH2 0x1759 JUMP JUMPDEST PUSH0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 KECCAK256 SWAP1 SWAP2 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 MSTORE DUP3 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x40 ADD SWAP1 KECCAK256 SLOAD SWAP1 MSTORE DUP3 MLOAD DUP4 SWAP1 DUP4 SWAP1 DUP2 LT PUSH2 0xB86 JUMPI PUSH2 0xB86 PUSH2 0x1759 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP2 SWAP1 MSTORE POP DUP1 DUP1 PUSH2 0xB9C SWAP1 PUSH2 0x1810 JUMP JUMPDEST SWAP2 POP POP PUSH2 0xAE7 JUMP JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0xD SLOAD PUSH1 0x40 DUP1 MLOAD PUSH4 0xD0E30DB PUSH1 0xE4 SHL DUP2 MSTORE SWAP1 MLOAD CALLVALUE SWAP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP2 PUSH4 0xD0E30DB0 SWAP2 DUP5 SWAP2 PUSH1 0x4 DUP1 DUP3 ADD SWAP3 PUSH0 SWAP3 SWAP1 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP6 DUP9 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xBF1 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0xC03 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP PUSH1 0xD SLOAD PUSH1 0x40 MLOAD PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP7 SWAP1 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP4 POP PUSH4 0xA9059CBB SWAP3 POP PUSH1 0x44 ADD SWAP1 POP PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0xC57 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x774 SWAP2 SWAP1 PUSH2 0x16D6 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x23B872DD PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE ADDRESS PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND SWAP1 PUSH4 0x23B872DD SWAP1 PUSH1 0x64 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0xCCB JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xCEF SWAP2 SWAP1 PUSH2 0x16D6 JUMP JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH20 0x41BC026DABE978BC2FAFEA1850456511CA4B01BC EQ DUP1 ISZERO PUSH2 0xD1E JUMPI POP PUSH1 0x3 SLOAD PUSH1 0xFF AND JUMPDEST ISZERO PUSH2 0xD2D JUMPI PUSH2 0xD2D CALLER DUP4 PUSH2 0x1260 JUMP JUMPDEST PUSH0 PUSH2 0x3E8 PUSH1 0x2 SLOAD DUP5 PUSH2 0xD3F SWAP2 SWAP1 PUSH2 0x1709 JUMP JUMPDEST PUSH2 0xD49 SWAP2 SWAP1 PUSH2 0x1726 JUMP JUMPDEST SWAP1 POP PUSH2 0xD55 DUP6 DUP3 PUSH2 0x1312 JUMP JUMPDEST PUSH0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND PUSH20 0x5C7F8A570D578ED84E63FDFA7B1EE72DEAE1AE23 EQ DUP1 PUSH2 0xD9D JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH20 0x5C7F8A570D578ED84E63FDFA7B1EE72DEAE1AE23 EQ JUMPDEST PUSH2 0xDA8 JUMPI PUSH1 0x3 PUSH2 0xDAB JUMP JUMPDEST PUSH1 0x2 JUMPDEST PUSH1 0xFF AND SWAP1 POP PUSH0 PUSH1 0x60 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP9 AND PUSH20 0x5C7F8A570D578ED84E63FDFA7B1EE72DEAE1AE23 EQ DUP1 PUSH2 0xDFA JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND PUSH20 0x5C7F8A570D578ED84E63FDFA7B1EE72DEAE1AE23 EQ JUMPDEST ISZERO PUSH2 0xF24 JUMPI PUSH1 0x2 JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0xE2B JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP SWAP1 POP DUP8 DUP2 PUSH0 DUP2 MLOAD DUP2 LT PUSH2 0xE41 JUMPI PUSH2 0xE41 PUSH2 0x1759 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE POP POP DUP7 DUP2 PUSH1 0x1 DUP2 MLOAD DUP2 LT PUSH2 0xE75 JUMPI PUSH2 0xE75 PUSH2 0x1759 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 DUP4 AND PUSH1 0x20 SWAP2 DUP3 MUL SWAP3 SWAP1 SWAP3 ADD ADD MSTORE PUSH1 0x8 SLOAD PUSH0 SWAP2 AND PUSH4 0xD06CA61F PUSH2 0xEA0 DUP8 DUP11 PUSH2 0x176D JUMP JUMPDEST DUP5 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xEBE SWAP3 SWAP2 SWAP1 PUSH2 0x1828 JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xED8 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH0 DUP3 RETURNDATACOPY PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH1 0x1F NOT AND DUP3 ADD PUSH1 0x40 MSTORE PUSH2 0xEFF SWAP2 SWAP1 DUP2 ADD SWAP1 PUSH2 0x1848 JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0x1 DUP2 MLOAD DUP2 LT PUSH2 0xF14 JUMPI PUSH2 0xF14 PUSH2 0x1759 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD SWAP3 POP POP PUSH2 0x1121 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP9 AND PUSH20 0x41BC026DABE978BC2FAFEA1850456511CA4B01BC EQ DUP1 ISZERO PUSH2 0xF6C JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND PUSH20 0x3B41B27E74DD366CE27CB389DC7877D4E1516D4D EQ JUMPDEST DUP1 PUSH2 0xFBA JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP9 AND PUSH20 0x3B41B27E74DD366CE27CB389DC7877D4E1516D4D EQ DUP1 ISZERO PUSH2 0xFBA JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND PUSH20 0x41BC026DABE978BC2FAFEA1850456511CA4B01BC EQ JUMPDEST ISZERO PUSH2 0xFC6 JUMPI PUSH1 0x2 PUSH2 0xE02 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x3 DUP1 DUP3 MSTORE PUSH1 0x80 DUP3 ADD SWAP1 SWAP3 MSTORE SWAP1 PUSH1 0x20 DUP3 ADD PUSH1 0x60 DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP POP SWAP1 POP DUP8 DUP2 PUSH0 DUP2 MLOAD DUP2 LT PUSH2 0xFFA JUMPI PUSH2 0xFFA PUSH2 0x1759 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE POP POP PUSH20 0x5C7F8A570D578ED84E63FDFA7B1EE72DEAE1AE23 DUP2 PUSH1 0x1 DUP2 MLOAD DUP2 LT PUSH2 0x1042 JUMPI PUSH2 0x1042 PUSH2 0x1759 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE POP POP DUP7 DUP2 PUSH1 0x2 DUP2 MLOAD DUP2 LT PUSH2 0x1076 JUMPI PUSH2 0x1076 PUSH2 0x1759 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 DUP4 AND PUSH1 0x20 SWAP2 DUP3 MUL SWAP3 SWAP1 SWAP3 ADD ADD MSTORE PUSH1 0x8 SLOAD PUSH0 SWAP2 AND PUSH4 0xD06CA61F PUSH2 0x10A1 DUP8 DUP11 PUSH2 0x176D JUMP JUMPDEST DUP5 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x10BF SWAP3 SWAP2 SWAP1 PUSH2 0x1828 JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x10D9 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH0 DUP3 RETURNDATACOPY PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH1 0x1F NOT AND DUP3 ADD PUSH1 0x40 MSTORE PUSH2 0x1100 SWAP2 SWAP1 DUP2 ADD SWAP1 PUSH2 0x1848 JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0x2 DUP2 MLOAD DUP2 LT PUSH2 0x1115 JUMPI PUSH2 0x1115 PUSH2 0x1759 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD SWAP3 POP POP JUMPDEST PUSH1 0x8 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x5C11D795 PUSH2 0x113C DUP7 DUP10 PUSH2 0x176D JUMP JUMPDEST DUP8 DUP5 CALLER PUSH2 0x114B TIMESTAMP PUSH2 0xE10 PUSH2 0x1780 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP7 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x116B SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x17D5 JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1182 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x1194 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND PUSH20 0x41BC026DABE978BC2FAFEA1850456511CA4B01BC EQ DUP1 ISZERO PUSH2 0x11C6 JUMPI POP PUSH1 0x3 SLOAD PUSH1 0xFF AND JUMPDEST ISZERO PUSH2 0x11D5 JUMPI PUSH2 0x11D5 CALLER DUP4 PUSH2 0x1260 JUMP JUMPDEST POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0x11E7 PUSH2 0x14ED JUMP JUMPDEST PUSH1 0x3 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x6 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x1205 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 POP DUP2 JUMP JUMPDEST PUSH2 0x1226 PUSH2 0x14ED JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x1254 JUMPI PUSH1 0x40 MLOAD PUSH4 0x1E4FBDF7 PUSH1 0xE0 SHL DUP2 MSTORE PUSH0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x125D DUP2 PUSH2 0x1519 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND PUSH2 0x12E2 JUMPI PUSH1 0x6 DUP1 SLOAD PUSH1 0x1 DUP1 DUP3 ADD SWAP1 SWAP3 SSTORE PUSH32 0xF652222313E28459528D920B65115C16C04F3EFC82AAEDC97BE59F3F377C0D3F ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SWAP2 OR SWAP1 SSTORE JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD DUP4 SWAP3 SWAP1 PUSH2 0x1309 SWAP1 DUP5 SWAP1 PUSH2 0x1780 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH20 0x5C7F8A570D578ED84E63FDFA7B1EE72DEAE1AE23 EQ PUSH2 0x133E JUMPI PUSH1 0x2 PUSH2 0x1341 JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH1 0xFF AND SWAP1 POP DUP1 PUSH1 0x1 SUB PUSH2 0x13CA JUMPI PUSH1 0xD SLOAD PUSH1 0x1 SLOAD PUSH1 0x40 MLOAD PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP6 SWAP1 MSTORE SWAP2 AND SWAP1 PUSH4 0xA9059CBB SWAP1 PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x13A0 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x13C4 SWAP2 SWAP1 PUSH2 0x16D6 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 DUP2 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x13E4 JUMPI PUSH2 0x13E4 PUSH2 0x1745 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x140D JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP SWAP1 POP DUP4 DUP2 PUSH0 DUP2 MLOAD DUP2 LT PUSH2 0x1423 JUMPI PUSH2 0x1423 PUSH2 0x1759 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE POP POP PUSH20 0x5C7F8A570D578ED84E63FDFA7B1EE72DEAE1AE23 DUP2 PUSH1 0x1 DUP2 MLOAD DUP2 LT PUSH2 0x146B JUMPI PUSH2 0x146B PUSH2 0x1759 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 DUP4 AND PUSH1 0x20 SWAP2 DUP3 MUL SWAP3 SWAP1 SWAP3 ADD ADD MSTORE PUSH1 0x8 SLOAD PUSH1 0x1 SLOAD SWAP1 DUP3 AND SWAP2 PUSH4 0x5C11D795 SWAP2 DUP7 SWAP2 PUSH0 SWAP2 DUP7 SWAP2 AND PUSH2 0x14A4 TIMESTAMP PUSH2 0xE10 PUSH2 0x1780 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP7 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x14C4 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x17D5 JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x14DB JUMPI PUSH0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x11D5 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST PUSH0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0xA7C JUMPI PUSH1 0x40 MLOAD PUSH4 0x118CDAA7 PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x124B JUMP JUMPDEST PUSH0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR DUP5 SSTORE PUSH1 0x40 MLOAD SWAP2 SWAP1 SWAP3 AND SWAP3 DUP4 SWAP2 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP2 SWAP1 LOG3 POP POP JUMP JUMPDEST POP DUP1 SLOAD PUSH0 DUP3 SSTORE SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 DUP2 ADD SWAP1 PUSH2 0x125D SWAP2 SWAP1 JUMPDEST DUP1 DUP3 GT ISZERO PUSH2 0x1592 JUMPI PUSH0 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0x157F JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x15AC JUMPI PUSH0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x15C3 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x15CC DUP5 PUSH2 0x1596 JUMP JUMPDEST SWAP6 PUSH1 0x20 DUP6 ADD CALLDATALOAD SWAP6 POP PUSH1 0x40 SWAP1 SWAP5 ADD CALLDATALOAD SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x15F1 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1609 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x1612 DUP4 PUSH2 0x1596 JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1630 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x1639 DUP3 PUSH2 0x1596 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE DUP3 MLOAD DUP3 DUP3 ADD DUP2 SWAP1 MSTORE PUSH0 SWAP2 SWAP1 PUSH1 0x40 SWAP1 DUP2 DUP6 ADD SWAP1 DUP7 DUP5 ADD DUP6 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x168A JUMPI DUP2 MLOAD DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP6 MSTORE DUP7 ADD MLOAD DUP7 DUP6 ADD MSTORE SWAP3 DUP5 ADD SWAP3 SWAP1 DUP6 ADD SWAP1 PUSH1 0x1 ADD PUSH2 0x165C JUMP JUMPDEST POP SWAP2 SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x16AA JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x16B3 DUP6 PUSH2 0x1596 JUMP JUMPDEST SWAP4 POP PUSH2 0x16C1 PUSH1 0x20 DUP7 ADD PUSH2 0x1596 JUMP JUMPDEST SWAP4 SWAP7 SWAP4 SWAP6 POP POP POP POP PUSH1 0x40 DUP3 ADD CALLDATALOAD SWAP2 PUSH1 0x60 ADD CALLDATALOAD SWAP1 JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x16E6 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP2 MLOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0x1639 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST DUP1 DUP3 MUL DUP2 ISZERO DUP3 DUP3 DIV DUP5 EQ OR PUSH2 0x1720 JUMPI PUSH2 0x1720 PUSH2 0x16F5 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP3 PUSH2 0x1740 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST POP DIV SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST DUP2 DUP2 SUB DUP2 DUP2 GT ISZERO PUSH2 0x1720 JUMPI PUSH2 0x1720 PUSH2 0x16F5 JUMP JUMPDEST DUP1 DUP3 ADD DUP1 DUP3 GT ISZERO PUSH2 0x1720 JUMPI PUSH2 0x1720 PUSH2 0x16F5 JUMP JUMPDEST PUSH0 DUP2 MLOAD DUP1 DUP5 MSTORE PUSH1 0x20 DUP1 DUP6 ADD SWAP5 POP DUP1 DUP5 ADD PUSH0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x17CA JUMPI DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP8 MSTORE SWAP6 DUP3 ADD SWAP6 SWAP1 DUP3 ADD SWAP1 PUSH1 0x1 ADD PUSH2 0x17A5 JUMP JUMPDEST POP SWAP5 SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST DUP6 DUP2 MSTORE DUP5 PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0xA0 PUSH1 0x40 DUP3 ADD MSTORE PUSH0 PUSH2 0x17F3 PUSH1 0xA0 DUP4 ADD DUP7 PUSH2 0x1793 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP5 SWAP1 SWAP5 AND PUSH1 0x60 DUP4 ADD MSTORE POP PUSH1 0x80 ADD MSTORE SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x1 DUP3 ADD PUSH2 0x1821 JUMPI PUSH2 0x1821 PUSH2 0x16F5 JUMP JUMPDEST POP PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST DUP3 DUP2 MSTORE PUSH1 0x40 PUSH1 0x20 DUP3 ADD MSTORE PUSH0 PUSH2 0x1840 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x1793 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP1 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1859 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP3 MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x1870 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP2 DUP6 ADD SWAP2 POP DUP6 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x1883 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP2 MLOAD DUP2 DUP2 GT ISZERO PUSH2 0x1895 JUMPI PUSH2 0x1895 PUSH2 0x1745 JUMP JUMPDEST DUP1 PUSH1 0x5 SHL PUSH1 0x40 MLOAD PUSH1 0x1F NOT PUSH1 0x3F DUP4 ADD AND DUP2 ADD DUP2 DUP2 LT DUP6 DUP3 GT OR ISZERO PUSH2 0x18BA JUMPI PUSH2 0x18BA PUSH2 0x1745 JUMP JUMPDEST PUSH1 0x40 MSTORE SWAP2 DUP3 MSTORE DUP5 DUP3 ADD SWAP3 POP DUP4 DUP2 ADD DUP6 ADD SWAP2 DUP9 DUP4 GT ISZERO PUSH2 0x18D7 JUMPI PUSH0 DUP1 REVERT JUMPDEST SWAP4 DUP6 ADD SWAP4 JUMPDEST DUP3 DUP6 LT ISZERO PUSH2 0x18F5 JUMPI DUP5 MLOAD DUP5 MSTORE SWAP4 DUP6 ADD SWAP4 SWAP3 DUP6 ADD SWAP3 PUSH2 0x18DC JUMP JUMPDEST SWAP9 SWAP8 POP POP POP POP POP POP POP POP JUMP JUMPDEST DUP5 DUP2 MSTORE PUSH1 0x80 PUSH1 0x20 DUP3 ADD MSTORE PUSH0 PUSH2 0x1919 PUSH1 0x80 DUP4 ADD DUP7 PUSH2 0x1793 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP5 SWAP1 SWAP5 AND PUSH1 0x40 DUP4 ADD MSTORE POP PUSH1 0x60 ADD MSTORE SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP10 CREATE2 0x2F PUSH17 0x626D33C76CD5E9C0C8515A1B004E3B9F03 SWAP12 0x27 0xED EXP 0xBD DUP15 0xCB 0xD8 0xC6 0xAE DUP3 PUSH5 0x736F6C6343 STOP ADDMOD EQ STOP CALLER STOP STOP STOP STOP STOP STOP STOP STOP STOP STOP STOP STOP EQ PC PUSH4 0xEB42CF62 DUP5 PUSH27 0x6CA784E6416C1682B1B2AE00000000000000000000000000000000 ",
							"sourceMap": "2107:7987:3:-:0;;;2797:39;;;-1:-1:-1;;2797:39:3;;;3118:642;;;;;;;;;-1:-1:-1;3140:10:3;;1269:95:0;;1322:31;;-1:-1:-1;;;1322:31:0;;1350:1;1322:31;;;160:51:4;133:18;;1322:31:0;;;;;;;1269:95;1373:32;1392:12;1373:18;:32::i;:::-;-1:-1:-1;3163:7:3::1;:33:::0;;-1:-1:-1;;;;;;3163:33:3;;::::1;2683:42;3163:33;::::0;;;3207:6:::1;:30:::0;;;::::1;-1:-1:-1::0;;;;;;;;;;;3207:30:3;;::::1;::::0;;;3248:5:::1;:21:::0;;;::::1;2174:42;3248:21:::0;;::::1;::::0;;;3280:5:::1;:21:::0;;;::::1;2255:42;3280:21;::::0;;3312:3:::1;:17:::0;;;::::1;2414:42;3312:17;::::0;;3340:4:::1;:19:::0;;;::::1;2494:42;3340:19;::::0;;3370:4:::1;:18:::0;;;::::1;2335:42;3370:18;::::0;;3163:33;3399:24;;;;::::1;3413:10;3399:24;::::0;;;3447:1:::1;3434:10;:14:::0;3497:43:::1;::::0;-1:-1:-1;;;3497:43:3;;:13:::1;::::0;:43:::1;::::0;-1:-1:-1;;;3497:43:3::1;;-1:-1:-1::0;;;;;414:32:4;;;;396:51;;478:2;463:18;;456:34;384:2;369:18;;222:274;3497:43:3::1;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1::0;3551:5:3::1;::::0;:43:::1;::::0;-1:-1:-1;;;3551:43:3;;-1:-1:-1;;;;;;;;;;;3551:43:3::1;::::0;::::1;396:51:4::0;-1:-1:-1;;463:18:4;;;456:34;-1:-1:-1;;;;;3551:5:3;;::::1;::::0;:13:::1;::::0;369:18:4;;3551:43:3::1;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1::0;3605:3:3::1;::::0;:41:::1;::::0;-1:-1:-1;;;3605:41:3;;-1:-1:-1;;;;;;;;;;;3605:41:3::1;::::0;::::1;396:51:4::0;-1:-1:-1;;463:18:4;;;456:34;-1:-1:-1;;;;;3605:3:3;;::::1;::::0;:11:::1;::::0;369:18:4;;3605:41:3::1;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1::0;3657:4:3::1;::::0;:42:::1;::::0;-1:-1:-1;;;3657:42:3;;-1:-1:-1;;;;;;;;;;;3657:42:3::1;::::0;::::1;396:51:4::0;-1:-1:-1;;463:18:4;;;456:34;-1:-1:-1;;;;;3657:4:3;;::::1;::::0;:12:::1;::::0;369:18:4;;3657:42:3::1;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1::0;3710:4:3::1;::::0;:42:::1;::::0;-1:-1:-1;;;3710:42:3;;-1:-1:-1;;;;;;;;;;;3710:42:3::1;::::0;::::1;396:51:4::0;-1:-1:-1;;463:18:4;;;456:34;-1:-1:-1;;;;;3710:4:3;;::::1;::::0;:12:::1;::::0;369:18:4;;3710:42:3::1;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;2107:7987:::0;;2912:187:0;2985:16;3004:6;;-1:-1:-1;;;;;3020:17:0;;;-1:-1:-1;;;;;;3020:17:0;;;;;;3052:40;;3004:6;;;;;;;3052:40;;2985:16;3052:40;2975:124;2912:187;:::o;501:277:4:-;568:6;621:2;609:9;600:7;596:23;592:32;589:52;;;637:1;634;627:12;589:52;669:9;663:16;722:5;715:13;708:21;701:5;698:32;688:60;;744:1;741;734:12;688:60;767:5;501:277;-1:-1:-1;;;501:277:4:o;:::-;2107:7987:3;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@ARY_412": {
									"entryPoint": null,
									"id": 412,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@CUSDC_403": {
									"entryPoint": null,
									"id": 403,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@CUSDT_406": {
									"entryPoint": null,
									"id": 406,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@DEXFACTORY_421": {
									"entryPoint": null,
									"id": 421,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@DEXROUTER_418": {
									"entryPoint": null,
									"id": 418,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@MERY_415": {
									"entryPoint": null,
									"id": 415,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@WCRO_409": {
									"entryPoint": null,
									"id": 409,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_1307": {
									"entryPoint": null,
									"id": 1307,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_checkOwner_84": {
									"entryPoint": 5357,
									"id": 84,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_msgSender_237": {
									"entryPoint": null,
									"id": 237,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_transferOwnership_146": {
									"entryPoint": 5401,
									"id": 146,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@addVolume_801": {
									"entryPoint": 4704,
									"id": 801,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@addresses_439": {
									"entryPoint": 4598,
									"id": 439,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@clearVolume_665": {
									"entryPoint": 1958,
									"id": 665,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@competition_started_428": {
									"entryPoint": null,
									"id": 428,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@deposit_1270": {
									"entryPoint": 2987,
									"id": 1270,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@feePercent_425": {
									"entryPoint": null,
									"id": 425,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@feeReceiver_423": {
									"entryPoint": null,
									"id": 423,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@getFee_769": {
									"entryPoint": 4882,
									"id": 769,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@getUserVolumes_628": {
									"entryPoint": 2686,
									"id": 628,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@owner_67": {
									"entryPoint": null,
									"id": 67,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@renounceOwnership_98": {
									"entryPoint": 2667,
									"id": 98,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@setFeeData_703": {
									"entryPoint": 1912,
									"id": 703,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@startCompetition_685": {
									"entryPoint": 4575,
									"id": 685,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@stopCompetition_675": {
									"entryPoint": 2647,
									"id": 675,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@swapCROForToken_1159": {
									"entryPoint": 2080,
									"id": 1159,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@swapTokenForCRO_1246": {
									"entryPoint": 1175,
									"id": 1246,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@swapTokenForToken_1062": {
									"entryPoint": 3195,
									"id": 1062,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@transferOwnership_126": {
									"entryPoint": 4638,
									"id": 126,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@userVolume_432": {
									"entryPoint": null,
									"id": 432,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@withdraw_1303": {
									"entryPoint": 1656,
									"id": 1303,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"abi_decode_address": {
									"entryPoint": 5526,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 5664,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_addresst_uint256t_uint256": {
									"entryPoint": 5783,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 4
								},
								"abi_decode_tuple_t_addresst_uint256": {
									"entryPoint": 5624,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_addresst_uint256t_uint256": {
									"entryPoint": 5553,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"abi_decode_tuple_t_array$_t_uint256_$dyn_memory_ptr_fromMemory": {
									"entryPoint": 6216,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_bool_fromMemory": {
									"entryPoint": 5846,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256": {
									"entryPoint": 5601,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_array_address_dyn": {
									"entryPoint": 6035,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_array$_t_struct$_Volume_$398_memory_ptr_$dyn_memory_ptr__to_t_array$_t_struct$_Volume_$398_memory_ptr_$dyn_memory_ptr__fromStack_reversed": {
									"entryPoint": 5696,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256_t_array$_t_address_$dyn_memory_ptr__to_t_uint256_t_array$_t_address_$dyn_memory_ptr__fromStack_reversed": {
									"entryPoint": 6184,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256_t_array$_t_address_$dyn_memory_ptr_t_address_t_uint256__to_t_uint256_t_array$_t_address_$dyn_memory_ptr_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": 6401,
									"id": null,
									"parameterSlots": 5,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256_t_rational_0_by_1_t_array$_t_address_$dyn_memory_ptr_t_address_t_uint256__to_t_uint256_t_uint256_t_array$_t_address_$dyn_memory_ptr_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 6,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256_t_uint256_t_array$_t_address_$dyn_memory_ptr_t_address_t_uint256__to_t_uint256_t_uint256_t_array$_t_address_$dyn_memory_ptr_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": 6101,
									"id": null,
									"parameterSlots": 6,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 6016,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_div_t_uint256": {
									"entryPoint": 5926,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_mul_t_uint256": {
									"entryPoint": 5897,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_sub_t_uint256": {
									"entryPoint": 5997,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"increment_t_uint256": {
									"entryPoint": 6160,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 5877,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x32": {
									"entryPoint": 5977,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x41": {
									"entryPoint": 5957,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:8671:4",
										"statements": [
											{
												"nodeType": "YulBlock",
												"src": "6:3:4",
												"statements": []
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "63:124:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "73:29:4",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "95:6:4"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "82:12:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "82:20:4"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "73:5:4"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "165:16:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "174:1:4",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "177:1:4",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "167:6:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "167:12:4"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "167:12:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "124:5:4"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "135:5:4"
																					},
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "150:3:4",
																										"type": "",
																										"value": "160"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "155:1:4",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "shl",
																									"nodeType": "YulIdentifier",
																									"src": "146:3:4"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "146:11:4"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "159:1:4",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nodeType": "YulIdentifier",
																							"src": "142:3:4"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "142:19:4"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "131:3:4"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "131:31:4"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "121:2:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "121:42:4"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "114:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "114:50:4"
															},
															"nodeType": "YulIf",
															"src": "111:70:4"
														}
													]
												},
												"name": "abi_decode_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "42:6:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "53:5:4",
														"type": ""
													}
												],
												"src": "14:173:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "296:218:4",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "342:16:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "351:1:4",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "354:1:4",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "344:6:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "344:12:4"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "344:12:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "317:7:4"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "326:9:4"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "313:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "313:23:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "338:2:4",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "309:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "309:32:4"
															},
															"nodeType": "YulIf",
															"src": "306:52:4"
														},
														{
															"nodeType": "YulAssignment",
															"src": "367:39:4",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "396:9:4"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "377:18:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "377:29:4"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "367:6:4"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "415:42:4",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "442:9:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "453:2:4",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "438:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "438:18:4"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "425:12:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "425:32:4"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "415:6:4"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "466:42:4",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "493:9:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "504:2:4",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "489:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "489:18:4"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "476:12:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "476:32:4"
															},
															"variableNames": [
																{
																	"name": "value2",
																	"nodeType": "YulIdentifier",
																	"src": "466:6:4"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint256t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "246:9:4",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "257:7:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "269:6:4",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "277:6:4",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "285:6:4",
														"type": ""
													}
												],
												"src": "192:322:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "620:102:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "630:26:4",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "642:9:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "653:2:4",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "638:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "638:18:4"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "630:4:4"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "672:9:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "687:6:4"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "703:3:4",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "708:1:4",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nodeType": "YulIdentifier",
																							"src": "699:3:4"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "699:11:4"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "712:1:4",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nodeType": "YulIdentifier",
																					"src": "695:3:4"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "695:19:4"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "683:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "683:32:4"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "665:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "665:51:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "665:51:4"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "589:9:4",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "600:6:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "611:4:4",
														"type": ""
													}
												],
												"src": "519:203:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "797:110:4",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "843:16:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "852:1:4",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "855:1:4",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "845:6:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "845:12:4"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "845:12:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "818:7:4"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "827:9:4"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "814:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "814:23:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "839:2:4",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "810:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "810:32:4"
															},
															"nodeType": "YulIf",
															"src": "807:52:4"
														},
														{
															"nodeType": "YulAssignment",
															"src": "868:33:4",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "891:9:4"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "878:12:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "878:23:4"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "868:6:4"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "763:9:4",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "774:7:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "786:6:4",
														"type": ""
													}
												],
												"src": "727:180:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "999:167:4",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1045:16:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1054:1:4",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1057:1:4",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1047:6:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1047:12:4"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1047:12:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1020:7:4"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1029:9:4"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1016:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1016:23:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1041:2:4",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "1012:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "1012:32:4"
															},
															"nodeType": "YulIf",
															"src": "1009:52:4"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1070:39:4",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1099:9:4"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "1080:18:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "1080:29:4"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "1070:6:4"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "1118:42:4",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1145:9:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1156:2:4",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1141:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1141:18:4"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "1128:12:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "1128:32:4"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "1118:6:4"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "957:9:4",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "968:7:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "980:6:4",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "988:6:4",
														"type": ""
													}
												],
												"src": "912:254:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1272:76:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1282:26:4",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1294:9:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1305:2:4",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1290:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "1290:18:4"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1282:4:4"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1324:9:4"
																	},
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "1335:6:4"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1317:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "1317:25:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1317:25:4"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1241:9:4",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1252:6:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1263:4:4",
														"type": ""
													}
												],
												"src": "1171:177:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1423:116:4",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1469:16:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1478:1:4",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1481:1:4",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1471:6:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1471:12:4"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1471:12:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1444:7:4"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1453:9:4"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1440:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1440:23:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1465:2:4",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "1436:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "1436:32:4"
															},
															"nodeType": "YulIf",
															"src": "1433:52:4"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1494:39:4",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1523:9:4"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "1504:18:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "1504:29:4"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "1494:6:4"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1389:9:4",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "1400:7:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1412:6:4",
														"type": ""
													}
												],
												"src": "1353:186:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1639:92:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1649:26:4",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1661:9:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1672:2:4",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1657:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "1657:18:4"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1649:4:4"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1691:9:4"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value0",
																						"nodeType": "YulIdentifier",
																						"src": "1716:6:4"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nodeType": "YulIdentifier",
																					"src": "1709:6:4"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1709:14:4"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "1702:6:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1702:22:4"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1684:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "1684:41:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1684:41:4"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1608:9:4",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1619:6:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1630:4:4",
														"type": ""
													}
												],
												"src": "1544:187:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1933:613:4",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1943:12:4",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "1953:2:4",
																"type": "",
																"value": "32"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "1947:2:4",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1964:32:4",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1982:9:4"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "1993:2:4"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1978:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "1978:18:4"
															},
															"variables": [
																{
																	"name": "tail_1",
																	"nodeType": "YulTypedName",
																	"src": "1968:6:4",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2012:9:4"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "2023:2:4"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2005:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "2005:21:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2005:21:4"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2035:17:4",
															"value": {
																"name": "tail_1",
																"nodeType": "YulIdentifier",
																"src": "2046:6:4"
															},
															"variables": [
																{
																	"name": "pos",
																	"nodeType": "YulTypedName",
																	"src": "2039:3:4",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2061:27:4",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "2081:6:4"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "2075:5:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "2075:13:4"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "2065:6:4",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "tail_1",
																		"nodeType": "YulIdentifier",
																		"src": "2104:6:4"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "2112:6:4"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2097:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "2097:22:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2097:22:4"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2128:12:4",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "2138:2:4",
																"type": "",
																"value": "64"
															},
															"variables": [
																{
																	"name": "_2",
																	"nodeType": "YulTypedName",
																	"src": "2132:2:4",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "2149:25:4",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2160:9:4"
																	},
																	{
																		"name": "_2",
																		"nodeType": "YulIdentifier",
																		"src": "2171:2:4"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2156:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "2156:18:4"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "2149:3:4"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2183:29:4",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "2201:6:4"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "2209:2:4"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2197:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "2197:15:4"
															},
															"variables": [
																{
																	"name": "srcPtr",
																	"nodeType": "YulTypedName",
																	"src": "2187:6:4",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2221:10:4",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "2230:1:4",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nodeType": "YulTypedName",
																	"src": "2225:1:4",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2289:231:4",
																"statements": [
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "2303:23:4",
																		"value": {
																			"arguments": [
																				{
																					"name": "srcPtr",
																					"nodeType": "YulIdentifier",
																					"src": "2319:6:4"
																				}
																			],
																			"functionName": {
																				"name": "mload",
																				"nodeType": "YulIdentifier",
																				"src": "2313:5:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2313:13:4"
																		},
																		"variables": [
																			{
																				"name": "_3",
																				"nodeType": "YulTypedName",
																				"src": "2307:2:4",
																				"type": ""
																			}
																		]
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "pos",
																					"nodeType": "YulIdentifier",
																					"src": "2346:3:4"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "_3",
																									"nodeType": "YulIdentifier",
																									"src": "2361:2:4"
																								}
																							],
																							"functionName": {
																								"name": "mload",
																								"nodeType": "YulIdentifier",
																								"src": "2355:5:4"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "2355:9:4"
																						},
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"kind": "number",
																											"nodeType": "YulLiteral",
																											"src": "2374:3:4",
																											"type": "",
																											"value": "160"
																										},
																										{
																											"kind": "number",
																											"nodeType": "YulLiteral",
																											"src": "2379:1:4",
																											"type": "",
																											"value": "1"
																										}
																									],
																									"functionName": {
																										"name": "shl",
																										"nodeType": "YulIdentifier",
																										"src": "2370:3:4"
																									},
																									"nodeType": "YulFunctionCall",
																									"src": "2370:11:4"
																								},
																								{
																									"kind": "number",
																									"nodeType": "YulLiteral",
																									"src": "2383:1:4",
																									"type": "",
																									"value": "1"
																								}
																							],
																							"functionName": {
																								"name": "sub",
																								"nodeType": "YulIdentifier",
																								"src": "2366:3:4"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "2366:19:4"
																						}
																					],
																					"functionName": {
																						"name": "and",
																						"nodeType": "YulIdentifier",
																						"src": "2351:3:4"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "2351:35:4"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "2339:6:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2339:48:4"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2339:48:4"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "pos",
																							"nodeType": "YulIdentifier",
																							"src": "2411:3:4"
																						},
																						{
																							"name": "_1",
																							"nodeType": "YulIdentifier",
																							"src": "2416:2:4"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "2407:3:4"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "2407:12:4"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "_3",
																									"nodeType": "YulIdentifier",
																									"src": "2431:2:4"
																								},
																								{
																									"name": "_1",
																									"nodeType": "YulIdentifier",
																									"src": "2435:2:4"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "2427:3:4"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "2427:11:4"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nodeType": "YulIdentifier",
																						"src": "2421:5:4"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "2421:18:4"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "2400:6:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2400:40:4"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2400:40:4"
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "2453:19:4",
																		"value": {
																			"arguments": [
																				{
																					"name": "pos",
																					"nodeType": "YulIdentifier",
																					"src": "2464:3:4"
																				},
																				{
																					"name": "_2",
																					"nodeType": "YulIdentifier",
																					"src": "2469:2:4"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "2460:3:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2460:12:4"
																		},
																		"variableNames": [
																			{
																				"name": "pos",
																				"nodeType": "YulIdentifier",
																				"src": "2453:3:4"
																			}
																		]
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "2485:25:4",
																		"value": {
																			"arguments": [
																				{
																					"name": "srcPtr",
																					"nodeType": "YulIdentifier",
																					"src": "2499:6:4"
																				},
																				{
																					"name": "_1",
																					"nodeType": "YulIdentifier",
																					"src": "2507:2:4"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "2495:3:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2495:15:4"
																		},
																		"variableNames": [
																			{
																				"name": "srcPtr",
																				"nodeType": "YulIdentifier",
																				"src": "2485:6:4"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "2251:1:4"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "2254:6:4"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "2248:2:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "2248:13:4"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "2262:18:4",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "2264:14:4",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nodeType": "YulIdentifier",
																					"src": "2273:1:4"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2276:1:4",
																					"type": "",
																					"value": "1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "2269:3:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2269:9:4"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nodeType": "YulIdentifier",
																				"src": "2264:1:4"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "2244:3:4",
																"statements": []
															},
															"src": "2240:280:4"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2529:11:4",
															"value": {
																"name": "pos",
																"nodeType": "YulIdentifier",
																"src": "2537:3:4"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "2529:4:4"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_array$_t_struct$_Volume_$398_memory_ptr_$dyn_memory_ptr__to_t_array$_t_struct$_Volume_$398_memory_ptr_$dyn_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1902:9:4",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1913:6:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1924:4:4",
														"type": ""
													}
												],
												"src": "1736:810:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2672:276:4",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2719:16:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2728:1:4",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2731:1:4",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2721:6:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2721:12:4"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2721:12:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2693:7:4"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2702:9:4"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "2689:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2689:23:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2714:3:4",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "2685:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "2685:33:4"
															},
															"nodeType": "YulIf",
															"src": "2682:53:4"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2744:39:4",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2773:9:4"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "2754:18:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "2754:29:4"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "2744:6:4"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "2792:48:4",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2825:9:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2836:2:4",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2821:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2821:18:4"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "2802:18:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "2802:38:4"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "2792:6:4"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "2849:42:4",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2876:9:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2887:2:4",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2872:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2872:18:4"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "2859:12:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "2859:32:4"
															},
															"variableNames": [
																{
																	"name": "value2",
																	"nodeType": "YulIdentifier",
																	"src": "2849:6:4"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "2900:42:4",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2927:9:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2938:2:4",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2923:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2923:18:4"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "2910:12:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "2910:32:4"
															},
															"variableNames": [
																{
																	"name": "value3",
																	"nodeType": "YulIdentifier",
																	"src": "2900:6:4"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_uint256t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2614:9:4",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "2625:7:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2637:6:4",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "2645:6:4",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "2653:6:4",
														"type": ""
													},
													{
														"name": "value3",
														"nodeType": "YulTypedName",
														"src": "2661:6:4",
														"type": ""
													}
												],
												"src": "2551:397:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3110:218:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3120:26:4",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3132:9:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3143:2:4",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3128:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "3128:18:4"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "3120:4:4"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3155:29:4",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3173:3:4",
																				"type": "",
																				"value": "160"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3178:1:4",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "3169:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3169:11:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3182:1:4",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "3165:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "3165:19:4"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "3159:2:4",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3200:9:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "3215:6:4"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "3223:2:4"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "3211:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3211:15:4"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3193:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "3193:34:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3193:34:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3247:9:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3258:2:4",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3243:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3243:18:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value1",
																				"nodeType": "YulIdentifier",
																				"src": "3267:6:4"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "3275:2:4"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "3263:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3263:15:4"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3236:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "3236:43:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3236:43:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3299:9:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3310:2:4",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3295:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3295:18:4"
																	},
																	{
																		"name": "value2",
																		"nodeType": "YulIdentifier",
																		"src": "3315:6:4"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3288:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "3288:34:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3288:34:4"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3063:9:4",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "3074:6:4",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "3082:6:4",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "3090:6:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "3101:4:4",
														"type": ""
													}
												],
												"src": "2953:375:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3411:199:4",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3457:16:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3466:1:4",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3469:1:4",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "3459:6:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3459:12:4"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3459:12:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "3432:7:4"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3441:9:4"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "3428:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3428:23:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3453:2:4",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "3424:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "3424:32:4"
															},
															"nodeType": "YulIf",
															"src": "3421:52:4"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3482:29:4",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3501:9:4"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "3495:5:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "3495:16:4"
															},
															"variables": [
																{
																	"name": "value",
																	"nodeType": "YulTypedName",
																	"src": "3486:5:4",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3564:16:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3573:1:4",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3576:1:4",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "3566:6:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3566:12:4"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3566:12:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "3533:5:4"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "value",
																								"nodeType": "YulIdentifier",
																								"src": "3554:5:4"
																							}
																						],
																						"functionName": {
																							"name": "iszero",
																							"nodeType": "YulIdentifier",
																							"src": "3547:6:4"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "3547:13:4"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nodeType": "YulIdentifier",
																					"src": "3540:6:4"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3540:21:4"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "3530:2:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3530:32:4"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "3523:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "3523:40:4"
															},
															"nodeType": "YulIf",
															"src": "3520:60:4"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3589:15:4",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "3599:5:4"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "3589:6:4"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bool_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3377:9:4",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "3388:7:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "3400:6:4",
														"type": ""
													}
												],
												"src": "3333:277:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3647:95:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3664:1:4",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3671:3:4",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3676:10:4",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "3667:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3667:20:4"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3657:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "3657:31:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3657:31:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3704:1:4",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3707:4:4",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3697:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "3697:15:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3697:15:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3728:1:4",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3731:4:4",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "3721:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "3721:15:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3721:15:4"
														}
													]
												},
												"name": "panic_error_0x11",
												"nodeType": "YulFunctionDefinition",
												"src": "3615:127:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3799:116:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3809:20:4",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "3824:1:4"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "3827:1:4"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nodeType": "YulIdentifier",
																	"src": "3820:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "3820:9:4"
															},
															"variableNames": [
																{
																	"name": "product",
																	"nodeType": "YulIdentifier",
																	"src": "3809:7:4"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3887:22:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "3889:16:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3889:18:4"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3889:18:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "x",
																						"nodeType": "YulIdentifier",
																						"src": "3858:1:4"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nodeType": "YulIdentifier",
																					"src": "3851:6:4"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3851:9:4"
																			},
																			{
																				"arguments": [
																					{
																						"name": "y",
																						"nodeType": "YulIdentifier",
																						"src": "3865:1:4"
																					},
																					{
																						"arguments": [
																							{
																								"name": "product",
																								"nodeType": "YulIdentifier",
																								"src": "3872:7:4"
																							},
																							{
																								"name": "x",
																								"nodeType": "YulIdentifier",
																								"src": "3881:1:4"
																							}
																						],
																						"functionName": {
																							"name": "div",
																							"nodeType": "YulIdentifier",
																							"src": "3868:3:4"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "3868:15:4"
																					}
																				],
																				"functionName": {
																					"name": "eq",
																					"nodeType": "YulIdentifier",
																					"src": "3862:2:4"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3862:22:4"
																			}
																		],
																		"functionName": {
																			"name": "or",
																			"nodeType": "YulIdentifier",
																			"src": "3848:2:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3848:37:4"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "3841:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "3841:45:4"
															},
															"nodeType": "YulIf",
															"src": "3838:71:4"
														}
													]
												},
												"name": "checked_mul_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "3778:1:4",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "3781:1:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "product",
														"nodeType": "YulTypedName",
														"src": "3787:7:4",
														"type": ""
													}
												],
												"src": "3747:168:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3966:171:4",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3997:111:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4018:1:4",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "4025:3:4",
																							"type": "",
																							"value": "224"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "4030:10:4",
																							"type": "",
																							"value": "0x4e487b71"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nodeType": "YulIdentifier",
																						"src": "4021:3:4"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "4021:20:4"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "4011:6:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4011:31:4"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4011:31:4"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4062:1:4",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4065:4:4",
																					"type": "",
																					"value": "0x12"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "4055:6:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4055:15:4"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4055:15:4"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4090:1:4",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4093:4:4",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "4083:6:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4083:15:4"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4083:15:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "3986:1:4"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "3979:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "3979:9:4"
															},
															"nodeType": "YulIf",
															"src": "3976:132:4"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4117:14:4",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "4126:1:4"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "4129:1:4"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nodeType": "YulIdentifier",
																	"src": "4122:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "4122:9:4"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nodeType": "YulIdentifier",
																	"src": "4117:1:4"
																}
															]
														}
													]
												},
												"name": "checked_div_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "3951:1:4",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "3954:1:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "r",
														"nodeType": "YulTypedName",
														"src": "3960:1:4",
														"type": ""
													}
												],
												"src": "3920:217:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4174:95:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4191:1:4",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4198:3:4",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4203:10:4",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "4194:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4194:20:4"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4184:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "4184:31:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4184:31:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4231:1:4",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4234:4:4",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4224:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "4224:15:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4224:15:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4255:1:4",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4258:4:4",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "4248:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "4248:15:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4248:15:4"
														}
													]
												},
												"name": "panic_error_0x41",
												"nodeType": "YulFunctionDefinition",
												"src": "4142:127:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4306:95:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4323:1:4",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4330:3:4",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4335:10:4",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "4326:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4326:20:4"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4316:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "4316:31:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4316:31:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4363:1:4",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4366:4:4",
																		"type": "",
																		"value": "0x32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4356:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "4356:15:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4356:15:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4387:1:4",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4390:4:4",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "4380:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "4380:15:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4380:15:4"
														}
													]
												},
												"name": "panic_error_0x32",
												"nodeType": "YulFunctionDefinition",
												"src": "4274:127:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4455:79:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4465:17:4",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "4477:1:4"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "4480:1:4"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "4473:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "4473:9:4"
															},
															"variableNames": [
																{
																	"name": "diff",
																	"nodeType": "YulIdentifier",
																	"src": "4465:4:4"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4506:22:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "4508:16:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4508:18:4"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4508:18:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "diff",
																		"nodeType": "YulIdentifier",
																		"src": "4497:4:4"
																	},
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "4503:1:4"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "4494:2:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "4494:11:4"
															},
															"nodeType": "YulIf",
															"src": "4491:37:4"
														}
													]
												},
												"name": "checked_sub_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "4437:1:4",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "4440:1:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "diff",
														"nodeType": "YulTypedName",
														"src": "4446:4:4",
														"type": ""
													}
												],
												"src": "4406:128:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4587:77:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4597:16:4",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "4608:1:4"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "4611:1:4"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4604:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "4604:9:4"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nodeType": "YulIdentifier",
																	"src": "4597:3:4"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4636:22:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "4638:16:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4638:18:4"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4638:18:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "4628:1:4"
																	},
																	{
																		"name": "sum",
																		"nodeType": "YulIdentifier",
																		"src": "4631:3:4"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "4625:2:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "4625:10:4"
															},
															"nodeType": "YulIf",
															"src": "4622:36:4"
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "4570:1:4",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "4573:1:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nodeType": "YulTypedName",
														"src": "4579:3:4",
														"type": ""
													}
												],
												"src": "4539:125:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4730:400:4",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "4740:26:4",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "4760:5:4"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "4754:5:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "4754:12:4"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "4744:6:4",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "4782:3:4"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "4787:6:4"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4775:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "4775:19:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4775:19:4"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "4803:14:4",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "4813:4:4",
																"type": "",
																"value": "0x20"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "4807:2:4",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "4826:19:4",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "4837:3:4"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "4842:2:4"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4833:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "4833:12:4"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "4826:3:4"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "4854:28:4",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "4872:5:4"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "4879:2:4"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4868:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "4868:14:4"
															},
															"variables": [
																{
																	"name": "srcPtr",
																	"nodeType": "YulTypedName",
																	"src": "4858:6:4",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "4891:10:4",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "4900:1:4",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nodeType": "YulTypedName",
																	"src": "4895:1:4",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4959:146:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "pos",
																					"nodeType": "YulIdentifier",
																					"src": "4980:3:4"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "srcPtr",
																									"nodeType": "YulIdentifier",
																									"src": "4995:6:4"
																								}
																							],
																							"functionName": {
																								"name": "mload",
																								"nodeType": "YulIdentifier",
																								"src": "4989:5:4"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "4989:13:4"
																						},
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"kind": "number",
																											"nodeType": "YulLiteral",
																											"src": "5012:3:4",
																											"type": "",
																											"value": "160"
																										},
																										{
																											"kind": "number",
																											"nodeType": "YulLiteral",
																											"src": "5017:1:4",
																											"type": "",
																											"value": "1"
																										}
																									],
																									"functionName": {
																										"name": "shl",
																										"nodeType": "YulIdentifier",
																										"src": "5008:3:4"
																									},
																									"nodeType": "YulFunctionCall",
																									"src": "5008:11:4"
																								},
																								{
																									"kind": "number",
																									"nodeType": "YulLiteral",
																									"src": "5021:1:4",
																									"type": "",
																									"value": "1"
																								}
																							],
																							"functionName": {
																								"name": "sub",
																								"nodeType": "YulIdentifier",
																								"src": "5004:3:4"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "5004:19:4"
																						}
																					],
																					"functionName": {
																						"name": "and",
																						"nodeType": "YulIdentifier",
																						"src": "4985:3:4"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "4985:39:4"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "4973:6:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4973:52:4"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4973:52:4"
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "5038:19:4",
																		"value": {
																			"arguments": [
																				{
																					"name": "pos",
																					"nodeType": "YulIdentifier",
																					"src": "5049:3:4"
																				},
																				{
																					"name": "_1",
																					"nodeType": "YulIdentifier",
																					"src": "5054:2:4"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "5045:3:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5045:12:4"
																		},
																		"variableNames": [
																			{
																				"name": "pos",
																				"nodeType": "YulIdentifier",
																				"src": "5038:3:4"
																			}
																		]
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "5070:25:4",
																		"value": {
																			"arguments": [
																				{
																					"name": "srcPtr",
																					"nodeType": "YulIdentifier",
																					"src": "5084:6:4"
																				},
																				{
																					"name": "_1",
																					"nodeType": "YulIdentifier",
																					"src": "5092:2:4"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "5080:3:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5080:15:4"
																		},
																		"variableNames": [
																			{
																				"name": "srcPtr",
																				"nodeType": "YulIdentifier",
																				"src": "5070:6:4"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "4921:1:4"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "4924:6:4"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "4918:2:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "4918:13:4"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "4932:18:4",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "4934:14:4",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nodeType": "YulIdentifier",
																					"src": "4943:1:4"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4946:1:4",
																					"type": "",
																					"value": "1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "4939:3:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4939:9:4"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nodeType": "YulIdentifier",
																				"src": "4934:1:4"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "4914:3:4",
																"statements": []
															},
															"src": "4910:195:4"
														},
														{
															"nodeType": "YulAssignment",
															"src": "5114:10:4",
															"value": {
																"name": "pos",
																"nodeType": "YulIdentifier",
																"src": "5121:3:4"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "5114:3:4"
																}
															]
														}
													]
												},
												"name": "abi_encode_array_address_dyn",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "4707:5:4",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "4714:3:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "4722:3:4",
														"type": ""
													}
												],
												"src": "4669:461:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5398:311:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5415:9:4"
																	},
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "5426:6:4"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5408:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "5408:25:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5408:25:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5453:9:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5464:2:4",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5449:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5449:18:4"
																	},
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "5469:6:4"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5442:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "5442:34:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5442:34:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5496:9:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5507:2:4",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5492:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5492:18:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5512:3:4",
																		"type": "",
																		"value": "160"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5485:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "5485:31:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5485:31:4"
														},
														{
															"nodeType": "YulAssignment",
															"src": "5525:65:4",
															"value": {
																"arguments": [
																	{
																		"name": "value2",
																		"nodeType": "YulIdentifier",
																		"src": "5562:6:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5574:9:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5585:3:4",
																				"type": "",
																				"value": "160"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5570:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5570:19:4"
																	}
																],
																"functionName": {
																	"name": "abi_encode_array_address_dyn",
																	"nodeType": "YulIdentifier",
																	"src": "5533:28:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "5533:57:4"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "5525:4:4"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5610:9:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5621:2:4",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5606:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5606:18:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value3",
																				"nodeType": "YulIdentifier",
																				"src": "5630:6:4"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "5646:3:4",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "5651:1:4",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nodeType": "YulIdentifier",
																							"src": "5642:3:4"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "5642:11:4"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "5655:1:4",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nodeType": "YulIdentifier",
																					"src": "5638:3:4"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "5638:19:4"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "5626:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5626:32:4"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5599:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "5599:60:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5599:60:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5679:9:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5690:3:4",
																				"type": "",
																				"value": "128"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5675:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5675:19:4"
																	},
																	{
																		"name": "value4",
																		"nodeType": "YulIdentifier",
																		"src": "5696:6:4"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5668:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "5668:35:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5668:35:4"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256_t_uint256_t_array$_t_address_$dyn_memory_ptr_t_address_t_uint256__to_t_uint256_t_uint256_t_array$_t_address_$dyn_memory_ptr_t_address_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5335:9:4",
														"type": ""
													},
													{
														"name": "value4",
														"nodeType": "YulTypedName",
														"src": "5346:6:4",
														"type": ""
													},
													{
														"name": "value3",
														"nodeType": "YulTypedName",
														"src": "5354:6:4",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "5362:6:4",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "5370:6:4",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "5378:6:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "5389:4:4",
														"type": ""
													}
												],
												"src": "5135:574:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5761:88:4",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "5792:22:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "5794:16:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5794:18:4"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5794:18:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "5777:5:4"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5788:1:4",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nodeType": "YulIdentifier",
																			"src": "5784:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5784:6:4"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nodeType": "YulIdentifier",
																	"src": "5774:2:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "5774:17:4"
															},
															"nodeType": "YulIf",
															"src": "5771:43:4"
														},
														{
															"nodeType": "YulAssignment",
															"src": "5823:20:4",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "5834:5:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5841:1:4",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5830:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "5830:13:4"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nodeType": "YulIdentifier",
																	"src": "5823:3:4"
																}
															]
														}
													]
												},
												"name": "increment_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "5743:5:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nodeType": "YulTypedName",
														"src": "5753:3:4",
														"type": ""
													}
												],
												"src": "5714:135:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6033:153:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6050:9:4"
																	},
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "6061:6:4"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6043:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "6043:25:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6043:25:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6088:9:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6099:2:4",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6084:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6084:18:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6104:2:4",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6077:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "6077:30:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6077:30:4"
														},
														{
															"nodeType": "YulAssignment",
															"src": "6116:64:4",
															"value": {
																"arguments": [
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "6153:6:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6165:9:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6176:2:4",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6161:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6161:18:4"
																	}
																],
																"functionName": {
																	"name": "abi_encode_array_address_dyn",
																	"nodeType": "YulIdentifier",
																	"src": "6124:28:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "6124:56:4"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "6116:4:4"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256_t_array$_t_address_$dyn_memory_ptr__to_t_uint256_t_array$_t_address_$dyn_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5994:9:4",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "6005:6:4",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "6013:6:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "6024:4:4",
														"type": ""
													}
												],
												"src": "5854:332:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6297:999:4",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "6307:12:4",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "6317:2:4",
																"type": "",
																"value": "32"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "6311:2:4",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "6364:16:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "6373:1:4",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "6376:1:4",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "6366:6:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6366:12:4"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "6366:12:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "6339:7:4"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6348:9:4"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "6335:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6335:23:4"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "6360:2:4"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "6331:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "6331:32:4"
															},
															"nodeType": "YulIf",
															"src": "6328:52:4"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "6389:30:4",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6409:9:4"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "6403:5:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "6403:16:4"
															},
															"variables": [
																{
																	"name": "offset",
																	"nodeType": "YulTypedName",
																	"src": "6393:6:4",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "6428:28:4",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "6438:18:4",
																"type": "",
																"value": "0xffffffffffffffff"
															},
															"variables": [
																{
																	"name": "_2",
																	"nodeType": "YulTypedName",
																	"src": "6432:2:4",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "6483:16:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "6492:1:4",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "6495:1:4",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "6485:6:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6485:12:4"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "6485:12:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "6471:6:4"
																	},
																	{
																		"name": "_2",
																		"nodeType": "YulIdentifier",
																		"src": "6479:2:4"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "6468:2:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "6468:14:4"
															},
															"nodeType": "YulIf",
															"src": "6465:34:4"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "6508:32:4",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6522:9:4"
																	},
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "6533:6:4"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6518:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "6518:22:4"
															},
															"variables": [
																{
																	"name": "_3",
																	"nodeType": "YulTypedName",
																	"src": "6512:2:4",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "6588:16:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "6597:1:4",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "6600:1:4",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "6590:6:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6590:12:4"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "6590:12:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "_3",
																						"nodeType": "YulIdentifier",
																						"src": "6567:2:4"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "6571:4:4",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "6563:3:4"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "6563:13:4"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "6578:7:4"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nodeType": "YulIdentifier",
																			"src": "6559:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6559:27:4"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "6552:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "6552:35:4"
															},
															"nodeType": "YulIf",
															"src": "6549:55:4"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "6613:19:4",
															"value": {
																"arguments": [
																	{
																		"name": "_3",
																		"nodeType": "YulIdentifier",
																		"src": "6629:2:4"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "6623:5:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "6623:9:4"
															},
															"variables": [
																{
																	"name": "_4",
																	"nodeType": "YulTypedName",
																	"src": "6617:2:4",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "6655:22:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "6657:16:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6657:18:4"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "6657:18:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "_4",
																		"nodeType": "YulIdentifier",
																		"src": "6647:2:4"
																	},
																	{
																		"name": "_2",
																		"nodeType": "YulIdentifier",
																		"src": "6651:2:4"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "6644:2:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "6644:10:4"
															},
															"nodeType": "YulIf",
															"src": "6641:36:4"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "6686:20:4",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6700:1:4",
																		"type": "",
																		"value": "5"
																	},
																	{
																		"name": "_4",
																		"nodeType": "YulIdentifier",
																		"src": "6703:2:4"
																	}
																],
																"functionName": {
																	"name": "shl",
																	"nodeType": "YulIdentifier",
																	"src": "6696:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "6696:10:4"
															},
															"variables": [
																{
																	"name": "_5",
																	"nodeType": "YulTypedName",
																	"src": "6690:2:4",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "6715:23:4",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6735:2:4",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "6729:5:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "6729:9:4"
															},
															"variables": [
																{
																	"name": "memPtr",
																	"nodeType": "YulTypedName",
																	"src": "6719:6:4",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "6747:56:4",
															"value": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "6769:6:4"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "_5",
																						"nodeType": "YulIdentifier",
																						"src": "6785:2:4"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "6789:2:4",
																						"type": "",
																						"value": "63"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "6781:3:4"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "6781:11:4"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "6798:2:4",
																						"type": "",
																						"value": "31"
																					}
																				],
																				"functionName": {
																					"name": "not",
																					"nodeType": "YulIdentifier",
																					"src": "6794:3:4"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "6794:7:4"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "6777:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6777:25:4"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6765:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "6765:38:4"
															},
															"variables": [
																{
																	"name": "newFreePtr",
																	"nodeType": "YulTypedName",
																	"src": "6751:10:4",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "6862:22:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "6864:16:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6864:18:4"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "6864:18:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "6821:10:4"
																			},
																			{
																				"name": "_2",
																				"nodeType": "YulIdentifier",
																				"src": "6833:2:4"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "6818:2:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6818:18:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "6841:10:4"
																			},
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "6853:6:4"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "6838:2:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6838:22:4"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "6815:2:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "6815:46:4"
															},
															"nodeType": "YulIf",
															"src": "6812:72:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6900:2:4",
																		"type": "",
																		"value": "64"
																	},
																	{
																		"name": "newFreePtr",
																		"nodeType": "YulIdentifier",
																		"src": "6904:10:4"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6893:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "6893:22:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6893:22:4"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "6924:17:4",
															"value": {
																"name": "memPtr",
																"nodeType": "YulIdentifier",
																"src": "6935:6:4"
															},
															"variables": [
																{
																	"name": "dst",
																	"nodeType": "YulTypedName",
																	"src": "6928:3:4",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "6957:6:4"
																	},
																	{
																		"name": "_4",
																		"nodeType": "YulIdentifier",
																		"src": "6965:2:4"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6950:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "6950:18:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6950:18:4"
														},
														{
															"nodeType": "YulAssignment",
															"src": "6977:22:4",
															"value": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "6988:6:4"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "6996:2:4"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6984:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "6984:15:4"
															},
															"variableNames": [
																{
																	"name": "dst",
																	"nodeType": "YulIdentifier",
																	"src": "6977:3:4"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "7008:34:4",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "_3",
																				"nodeType": "YulIdentifier",
																				"src": "7030:2:4"
																			},
																			{
																				"name": "_5",
																				"nodeType": "YulIdentifier",
																				"src": "7034:2:4"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7026:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7026:11:4"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "7039:2:4"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "7022:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "7022:20:4"
															},
															"variables": [
																{
																	"name": "srcEnd",
																	"nodeType": "YulTypedName",
																	"src": "7012:6:4",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "7074:16:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "7083:1:4",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "7086:1:4",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "7076:6:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "7076:12:4"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "7076:12:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "srcEnd",
																		"nodeType": "YulIdentifier",
																		"src": "7057:6:4"
																	},
																	{
																		"name": "dataEnd",
																		"nodeType": "YulIdentifier",
																		"src": "7065:7:4"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "7054:2:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "7054:19:4"
															},
															"nodeType": "YulIf",
															"src": "7051:39:4"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "7099:22:4",
															"value": {
																"arguments": [
																	{
																		"name": "_3",
																		"nodeType": "YulIdentifier",
																		"src": "7114:2:4"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "7118:2:4"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "7110:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "7110:11:4"
															},
															"variables": [
																{
																	"name": "src",
																	"nodeType": "YulTypedName",
																	"src": "7103:3:4",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "7186:79:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "dst",
																					"nodeType": "YulIdentifier",
																					"src": "7207:3:4"
																				},
																				{
																					"arguments": [
																						{
																							"name": "src",
																							"nodeType": "YulIdentifier",
																							"src": "7218:3:4"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nodeType": "YulIdentifier",
																						"src": "7212:5:4"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "7212:10:4"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "7200:6:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "7200:23:4"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "7200:23:4"
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "7236:19:4",
																		"value": {
																			"arguments": [
																				{
																					"name": "dst",
																					"nodeType": "YulIdentifier",
																					"src": "7247:3:4"
																				},
																				{
																					"name": "_1",
																					"nodeType": "YulIdentifier",
																					"src": "7252:2:4"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "7243:3:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "7243:12:4"
																		},
																		"variableNames": [
																			{
																				"name": "dst",
																				"nodeType": "YulIdentifier",
																				"src": "7236:3:4"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "src",
																		"nodeType": "YulIdentifier",
																		"src": "7141:3:4"
																	},
																	{
																		"name": "srcEnd",
																		"nodeType": "YulIdentifier",
																		"src": "7146:6:4"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "7138:2:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "7138:15:4"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "7154:23:4",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "7156:19:4",
																		"value": {
																			"arguments": [
																				{
																					"name": "src",
																					"nodeType": "YulIdentifier",
																					"src": "7167:3:4"
																				},
																				{
																					"name": "_1",
																					"nodeType": "YulIdentifier",
																					"src": "7172:2:4"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "7163:3:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "7163:12:4"
																		},
																		"variableNames": [
																			{
																				"name": "src",
																				"nodeType": "YulIdentifier",
																				"src": "7156:3:4"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "7134:3:4",
																"statements": []
															},
															"src": "7130:135:4"
														},
														{
															"nodeType": "YulAssignment",
															"src": "7274:16:4",
															"value": {
																"name": "memPtr",
																"nodeType": "YulIdentifier",
																"src": "7284:6:4"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "7274:6:4"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_array$_t_uint256_$dyn_memory_ptr_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "6263:9:4",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "6274:7:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "6286:6:4",
														"type": ""
													}
												],
												"src": "6191:1105:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7536:267:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "7553:9:4"
																	},
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "7564:6:4"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7546:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "7546:25:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7546:25:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7591:9:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7602:2:4",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7587:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7587:18:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7607:3:4",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7580:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "7580:31:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7580:31:4"
														},
														{
															"nodeType": "YulAssignment",
															"src": "7620:65:4",
															"value": {
																"arguments": [
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "7657:6:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7669:9:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7680:3:4",
																				"type": "",
																				"value": "128"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7665:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7665:19:4"
																	}
																],
																"functionName": {
																	"name": "abi_encode_array_address_dyn",
																	"nodeType": "YulIdentifier",
																	"src": "7628:28:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "7628:57:4"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "7620:4:4"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7705:9:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7716:2:4",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7701:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7701:18:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value2",
																				"nodeType": "YulIdentifier",
																				"src": "7725:6:4"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "7741:3:4",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "7746:1:4",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nodeType": "YulIdentifier",
																							"src": "7737:3:4"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "7737:11:4"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "7750:1:4",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nodeType": "YulIdentifier",
																					"src": "7733:3:4"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "7733:19:4"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "7721:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7721:32:4"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7694:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "7694:60:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7694:60:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7774:9:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7785:2:4",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7770:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7770:18:4"
																	},
																	{
																		"name": "value3",
																		"nodeType": "YulIdentifier",
																		"src": "7790:6:4"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7763:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "7763:34:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7763:34:4"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256_t_array$_t_address_$dyn_memory_ptr_t_address_t_uint256__to_t_uint256_t_array$_t_address_$dyn_memory_ptr_t_address_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "7481:9:4",
														"type": ""
													},
													{
														"name": "value3",
														"nodeType": "YulTypedName",
														"src": "7492:6:4",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "7500:6:4",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "7508:6:4",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "7516:6:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "7527:4:4",
														"type": ""
													}
												],
												"src": "7301:502:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7937:145:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "7947:26:4",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "7959:9:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7970:2:4",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "7955:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "7955:18:4"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "7947:4:4"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "7989:9:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "8004:6:4"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "8020:3:4",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "8025:1:4",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nodeType": "YulIdentifier",
																							"src": "8016:3:4"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "8016:11:4"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "8029:1:4",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nodeType": "YulIdentifier",
																					"src": "8012:3:4"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "8012:19:4"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "8000:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8000:32:4"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7982:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "7982:51:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7982:51:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8053:9:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8064:2:4",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8049:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8049:18:4"
																	},
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "8069:6:4"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8042:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "8042:34:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8042:34:4"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "7898:9:4",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "7909:6:4",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "7917:6:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "7928:4:4",
														"type": ""
													}
												],
												"src": "7808:274:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8358:311:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "8375:9:4"
																	},
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "8386:6:4"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8368:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "8368:25:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8368:25:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8413:9:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8424:2:4",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8409:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8409:18:4"
																	},
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "8429:6:4"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8402:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "8402:34:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8402:34:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8456:9:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8467:2:4",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8452:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8452:18:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8472:3:4",
																		"type": "",
																		"value": "160"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8445:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "8445:31:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8445:31:4"
														},
														{
															"nodeType": "YulAssignment",
															"src": "8485:65:4",
															"value": {
																"arguments": [
																	{
																		"name": "value2",
																		"nodeType": "YulIdentifier",
																		"src": "8522:6:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8534:9:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8545:3:4",
																				"type": "",
																				"value": "160"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8530:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8530:19:4"
																	}
																],
																"functionName": {
																	"name": "abi_encode_array_address_dyn",
																	"nodeType": "YulIdentifier",
																	"src": "8493:28:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "8493:57:4"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "8485:4:4"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8570:9:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8581:2:4",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8566:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8566:18:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value3",
																				"nodeType": "YulIdentifier",
																				"src": "8590:6:4"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "8606:3:4",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "8611:1:4",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nodeType": "YulIdentifier",
																							"src": "8602:3:4"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "8602:11:4"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "8615:1:4",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nodeType": "YulIdentifier",
																					"src": "8598:3:4"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "8598:19:4"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "8586:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8586:32:4"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8559:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "8559:60:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8559:60:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8639:9:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8650:3:4",
																				"type": "",
																				"value": "128"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8635:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8635:19:4"
																	},
																	{
																		"name": "value4",
																		"nodeType": "YulIdentifier",
																		"src": "8656:6:4"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8628:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "8628:35:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8628:35:4"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256_t_rational_0_by_1_t_array$_t_address_$dyn_memory_ptr_t_address_t_uint256__to_t_uint256_t_uint256_t_array$_t_address_$dyn_memory_ptr_t_address_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "8295:9:4",
														"type": ""
													},
													{
														"name": "value4",
														"nodeType": "YulTypedName",
														"src": "8306:6:4",
														"type": ""
													},
													{
														"name": "value3",
														"nodeType": "YulTypedName",
														"src": "8314:6:4",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "8322:6:4",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "8330:6:4",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "8338:6:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "8349:4:4",
														"type": ""
													}
												],
												"src": "8087:582:4"
											}
										]
									},
									"contents": "{\n    { }\n    function abi_decode_address(offset) -> value\n    {\n        value := calldataload(offset)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_addresst_uint256t_uint256(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := calldataload(add(headStart, 32))\n        value2 := calldataload(add(headStart, 64))\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := calldataload(headStart)\n    }\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := calldataload(add(headStart, 32))\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n    }\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, iszero(iszero(value0)))\n    }\n    function abi_encode_tuple_t_array$_t_struct$_Volume_$398_memory_ptr_$dyn_memory_ptr__to_t_array$_t_struct$_Volume_$398_memory_ptr_$dyn_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        let _1 := 32\n        let tail_1 := add(headStart, _1)\n        mstore(headStart, _1)\n        let pos := tail_1\n        let length := mload(value0)\n        mstore(tail_1, length)\n        let _2 := 64\n        pos := add(headStart, _2)\n        let srcPtr := add(value0, _1)\n        let i := 0\n        for { } lt(i, length) { i := add(i, 1) }\n        {\n            let _3 := mload(srcPtr)\n            mstore(pos, and(mload(_3), sub(shl(160, 1), 1)))\n            mstore(add(pos, _1), mload(add(_3, _1)))\n            pos := add(pos, _2)\n            srcPtr := add(srcPtr, _1)\n        }\n        tail := pos\n    }\n    function abi_decode_tuple_t_addresst_addresst_uint256t_uint256(headStart, dataEnd) -> value0, value1, value2, value3\n    {\n        if slt(sub(dataEnd, headStart), 128) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n        value2 := calldataload(add(headStart, 64))\n        value3 := calldataload(add(headStart, 96))\n    }\n    function abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed(headStart, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 96)\n        let _1 := sub(shl(160, 1), 1)\n        mstore(headStart, and(value0, _1))\n        mstore(add(headStart, 32), and(value1, _1))\n        mstore(add(headStart, 64), value2)\n    }\n    function abi_decode_tuple_t_bool_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := mload(headStart)\n        if iszero(eq(value, iszero(iszero(value)))) { revert(0, 0) }\n        value0 := value\n    }\n    function panic_error_0x11()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n    function checked_mul_t_uint256(x, y) -> product\n    {\n        product := mul(x, y)\n        if iszero(or(iszero(x), eq(y, div(product, x)))) { panic_error_0x11() }\n    }\n    function checked_div_t_uint256(x, y) -> r\n    {\n        if iszero(y)\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x12)\n            revert(0, 0x24)\n        }\n        r := div(x, y)\n    }\n    function panic_error_0x41()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n    function panic_error_0x32()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x32)\n        revert(0, 0x24)\n    }\n    function checked_sub_t_uint256(x, y) -> diff\n    {\n        diff := sub(x, y)\n        if gt(diff, x) { panic_error_0x11() }\n    }\n    function checked_add_t_uint256(x, y) -> sum\n    {\n        sum := add(x, y)\n        if gt(x, sum) { panic_error_0x11() }\n    }\n    function abi_encode_array_address_dyn(value, pos) -> end\n    {\n        let length := mload(value)\n        mstore(pos, length)\n        let _1 := 0x20\n        pos := add(pos, _1)\n        let srcPtr := add(value, _1)\n        let i := 0\n        for { } lt(i, length) { i := add(i, 1) }\n        {\n            mstore(pos, and(mload(srcPtr), sub(shl(160, 1), 1)))\n            pos := add(pos, _1)\n            srcPtr := add(srcPtr, _1)\n        }\n        end := pos\n    }\n    function abi_encode_tuple_t_uint256_t_uint256_t_array$_t_address_$dyn_memory_ptr_t_address_t_uint256__to_t_uint256_t_uint256_t_array$_t_address_$dyn_memory_ptr_t_address_t_uint256__fromStack_reversed(headStart, value4, value3, value2, value1, value0) -> tail\n    {\n        mstore(headStart, value0)\n        mstore(add(headStart, 32), value1)\n        mstore(add(headStart, 64), 160)\n        tail := abi_encode_array_address_dyn(value2, add(headStart, 160))\n        mstore(add(headStart, 96), and(value3, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 128), value4)\n    }\n    function increment_t_uint256(value) -> ret\n    {\n        if eq(value, not(0)) { panic_error_0x11() }\n        ret := add(value, 1)\n    }\n    function abi_encode_tuple_t_uint256_t_array$_t_address_$dyn_memory_ptr__to_t_uint256_t_array$_t_address_$dyn_memory_ptr__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        mstore(headStart, value0)\n        mstore(add(headStart, 32), 64)\n        tail := abi_encode_array_address_dyn(value1, add(headStart, 64))\n    }\n    function abi_decode_tuple_t_array$_t_uint256_$dyn_memory_ptr_fromMemory(headStart, dataEnd) -> value0\n    {\n        let _1 := 32\n        if slt(sub(dataEnd, headStart), _1) { revert(0, 0) }\n        let offset := mload(headStart)\n        let _2 := 0xffffffffffffffff\n        if gt(offset, _2) { revert(0, 0) }\n        let _3 := add(headStart, offset)\n        if iszero(slt(add(_3, 0x1f), dataEnd)) { revert(0, 0) }\n        let _4 := mload(_3)\n        if gt(_4, _2) { panic_error_0x41() }\n        let _5 := shl(5, _4)\n        let memPtr := mload(64)\n        let newFreePtr := add(memPtr, and(add(_5, 63), not(31)))\n        if or(gt(newFreePtr, _2), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n        let dst := memPtr\n        mstore(memPtr, _4)\n        dst := add(memPtr, _1)\n        let srcEnd := add(add(_3, _5), _1)\n        if gt(srcEnd, dataEnd) { revert(0, 0) }\n        let src := add(_3, _1)\n        for { } lt(src, srcEnd) { src := add(src, _1) }\n        {\n            mstore(dst, mload(src))\n            dst := add(dst, _1)\n        }\n        value0 := memPtr\n    }\n    function abi_encode_tuple_t_uint256_t_array$_t_address_$dyn_memory_ptr_t_address_t_uint256__to_t_uint256_t_array$_t_address_$dyn_memory_ptr_t_address_t_uint256__fromStack_reversed(headStart, value3, value2, value1, value0) -> tail\n    {\n        mstore(headStart, value0)\n        mstore(add(headStart, 32), 128)\n        tail := abi_encode_array_address_dyn(value1, add(headStart, 128))\n        mstore(add(headStart, 64), and(value2, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 96), value3)\n    }\n    function abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 32), value1)\n    }\n    function abi_encode_tuple_t_uint256_t_rational_0_by_1_t_array$_t_address_$dyn_memory_ptr_t_address_t_uint256__to_t_uint256_t_uint256_t_array$_t_address_$dyn_memory_ptr_t_address_t_uint256__fromStack_reversed(headStart, value4, value3, value2, value1, value0) -> tail\n    {\n        mstore(headStart, value0)\n        mstore(add(headStart, 32), value1)\n        mstore(add(headStart, 64), 160)\n        tail := abi_encode_array_address_dyn(value2, add(headStart, 160))\n        mstore(add(headStart, 96), and(value3, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 128), value4)\n    }\n}",
									"id": 4,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405260043610610164575f3560e01c8063a37b9e7f116100cd578063b3f0067411610087578063d3e66a9e11610062578063d3e66a9e1461041e578063d7b7d3f314610432578063edf26d9b14610459578063f2fde38b14610478575f80fd5b8063b3f00674146103d8578063d0e30db0146103f7578063d16a4010146103ff575f80fd5b8063a37b9e7f146102ee578063a6769ef814610315578063ac65334f14610340578063ae38a07014610369578063afe43b941461038a578063b0befe63146103b1575f80fd5b80635f0018cd1161011e5780635f0018cd146102395780636504fbad1461024d578063715018a6146102745780637c6f8fae146102885780637fd6f15c146102af5780638da5cb5b146102d2575f80fd5b8063162141201461016f5780631d470cb1146101905780632e1a7d4d146101d45780633977d68d146101f357806339bda01c1461021257806353ac861e14610226575f80fd5b3661016b57005b5f80fd5b34801561017a575f80fd5b5061018e6101893660046115b1565b610497565b005b34801561019b575f80fd5b506101b7735c7f8a570d578ed84e63fdfa7b1ee72deae1ae2381565b6040516001600160a01b0390911681526020015b60405180910390f35b3480156101df575f80fd5b5061018e6101ee3660046115e1565b610678565b3480156101fe575f80fd5b5061018e61020d3660046115f8565b610778565b34801561021d575f80fd5b5061018e6107a6565b61018e6102343660046115f8565b610820565b348015610244575f80fd5b5061018e610a57565b348015610258575f80fd5b506101b77366e428c3f67a68878562e79a0234c1f83c20877081565b34801561027f575f80fd5b5061018e610a6b565b348015610293575f80fd5b506101b7733b44b2a187a7b3824131f8db5a74194d0a42fc1581565b3480156102ba575f80fd5b506102c460025481565b6040519081526020016101cb565b3480156102dd575f80fd5b505f546001600160a01b03166101b7565b3480156102f9575f80fd5b506101b773c21223249ca28397b4b6541dffaecc539bff0c5981565b348015610320575f80fd5b506102c461032f366004611620565b60046020525f908152604090205481565b34801561034b575f80fd5b506003546103599060ff1681565b60405190151581526020016101cb565b348015610374575f80fd5b5061037d610a7e565b6040516101cb9190611640565b348015610395575f80fd5b506101b77341bc026dabe978bc2fafea1850456511ca4b01bc81565b3480156103bc575f80fd5b506101b7733b41b27e74dd366ce27cb389dc7877d4e1516d4d81565b3480156103e3575f80fd5b506001546101b7906001600160a01b031681565b61018e610bab565b34801561040a575f80fd5b5061018e610419366004611697565b610c7b565b348015610429575f80fd5b5061018e6111df565b34801561043d575f80fd5b506101b773145863eb42cf62847a6ca784e6416c1682b1b2ae81565b348015610464575f80fd5b506101b76104733660046115e1565b6111f6565b348015610483575f80fd5b5061018e610492366004611620565b61121e565b6001600160a01b0383167341bc026dabe978bc2fafea1850456511ca4b01bc1480156104c5575060035460ff165b156104d4576104d43383611260565b6040516323b872dd60e01b8152336004820152306024820152604481018390526001600160a01b038416906323b872dd906064016020604051808303815f875af1158015610524573d5f803e3d5ffd5b505050506040513d601f19601f8201168201806040525081019061054891906116d6565b505f6103e86002548461055b9190611709565b6105659190611726565b90506105718482611312565b6040805160028082526060820183525f9260208301908036833701905050905084815f815181106105a4576105a4611759565b60200260200101906001600160a01b031690816001600160a01b031681525050735c7f8a570d578ed84e63fdfa7b1ee72deae1ae23816001815181106105ec576105ec611759565b6001600160a01b0392831660209182029290920101526008541663791ac947610615848761176d565b85843361062442610e10611780565b6040518663ffffffff1660e01b81526004016106449594939291906117d5565b5f604051808303815f87803b15801561065b575f80fd5b505af115801561066d573d5f803e3d5ffd5b505050505050505050565b600d546040516323b872dd60e01b8152336004820152306024820152604481018390526001600160a01b03909116906323b872dd906064016020604051808303815f875af11580156106cc573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906106f091906116d6565b50600d54604051632e1a7d4d60e01b8152600481018390526001600160a01b0390911690632e1a7d4d906024015f604051808303815f87803b158015610734575f80fd5b505af1158015610746573d5f803e3d5ffd5b505060405133925083156108fc02915083905f818181858888f19350505050158015610774573d5f803e3d5ffd5b5050565b6107806114ed565b600180546001600160a01b0319166001600160a01b039390931692909217909155600255565b6107ae6114ed565b6006545f5b818110156108075760045f600683815481106107d1576107d1611759565b5f9182526020808320909101546001600160a01b03168352820192909252604001812055806107ff81611810565b9150506107b3565b5061081360065f611568565b506003805460ff19169055565b60025434905f906103e8906108359084611709565b61083f9190611726565b6001546040519192506001600160a01b03169082156108fc029083905f818181858888f19350505050158015610877573d5f803e3d5ffd5b506040805160028082526060820183525f92602083019080368337019050509050735c7f8a570d578ed84e63fdfa7b1ee72deae1ae23815f815181106108bf576108bf611759565b60200260200101906001600160a01b031690816001600160a01b03168152505084816001815181106108f3576108f3611759565b6001600160a01b0392831660209182029290920101526008545f911663d06ca61f61091e858761176d565b846040518363ffffffff1660e01b815260040161093c929190611828565b5f60405180830381865afa158015610956573d5f803e3d5ffd5b505050506040513d5f823e601f3d908101601f1916820160405261097d9190810190611848565b6008549091506001600160a01b031663b6f9de9561099b858761176d565b8785336109aa42610e10611780565b6040518663ffffffff1660e01b81526004016109c99493929190611901565b5f604051808303818588803b1580156109e0575f80fd5b505af11580156109f2573d5f803e3d5ffd5b505050506001600160a01b0387167341bc026dabe978bc2fafea1850456511ca4b01bc1490508015610a26575060035460ff165b15610a4f57610a4f3382600181518110610a4257610a42611759565b6020026020010151611260565b505050505050565b610a5f6114ed565b6003805460ff19169055565b610a736114ed565b610a7c5f611519565b565b6006546060905f8167ffffffffffffffff811115610a9e57610a9e611745565b604051908082528060200260200182016040528015610ae257816020015b604080518082019091525f8082526020820152815260200190600190039081610abc5790505b5090505f5b82811015610ba457604051806040016040528060068381548110610b0d57610b0d611759565b905f5260205f20015f9054906101000a90046001600160a01b03166001600160a01b0316815260200160045f60068581548110610b4c57610b4c611759565b5f9182526020808320909101546001600160a01b0316835282019290925260400190205490528251839083908110610b8657610b86611759565b60200260200101819052508080610b9c90611810565b915050610ae7565b5092915050565b600d5460408051630d0e30db60e41b8152905134926001600160a01b03169163d0e30db09184916004808201925f9290919082900301818588803b158015610bf1575f80fd5b505af1158015610c03573d5f803e3d5ffd5b5050600d5460405163a9059cbb60e01b8152336004820152602481018690526001600160a01b03909116935063a9059cbb925060440190506020604051808303815f875af1158015610c57573d5f803e3d5ffd5b505050506040513d601f19601f8201168201806040525081019061077491906116d6565b6040516323b872dd60e01b8152336004820152306024820152604481018390526001600160a01b038516906323b872dd906064016020604051808303815f875af1158015610ccb573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190610cef91906116d6565b506001600160a01b0384167341bc026dabe978bc2fafea1850456511ca4b01bc148015610d1e575060035460ff165b15610d2d57610d2d3383611260565b5f6103e860025484610d3f9190611709565b610d499190611726565b9050610d558582611312565b5f6001600160a01b038616735c7f8a570d578ed84e63fdfa7b1ee72deae1ae231480610d9d57506001600160a01b038516735c7f8a570d578ed84e63fdfa7b1ee72deae1ae23145b610da8576003610dab565b60025b60ff1690505f60606001600160a01b038816735c7f8a570d578ed84e63fdfa7b1ee72deae1ae231480610dfa57506001600160a01b038716735c7f8a570d578ed84e63fdfa7b1ee72deae1ae23145b15610f245760025b604051908082528060200260200182016040528015610e2b578160200160208202803683370190505b50905087815f81518110610e4157610e41611759565b60200260200101906001600160a01b031690816001600160a01b0316815250508681600181518110610e7557610e75611759565b6001600160a01b0392831660209182029290920101526008545f911663d06ca61f610ea0878a61176d565b846040518363ffffffff1660e01b8152600401610ebe929190611828565b5f60405180830381865afa158015610ed8573d5f803e3d5ffd5b505050506040513d5f823e601f3d908101601f19168201604052610eff9190810190611848565b905080600181518110610f1457610f14611759565b6020026020010151925050611121565b6001600160a01b0388167341bc026dabe978bc2fafea1850456511ca4b01bc148015610f6c57506001600160a01b038716733b41b27e74dd366ce27cb389dc7877d4e1516d4d145b80610fba57506001600160a01b038816733b41b27e74dd366ce27cb389dc7877d4e1516d4d148015610fba57506001600160a01b0387167341bc026dabe978bc2fafea1850456511ca4b01bc145b15610fc6576002610e02565b60408051600380825260808201909252906020820160608036833701905050905087815f81518110610ffa57610ffa611759565b60200260200101906001600160a01b031690816001600160a01b031681525050735c7f8a570d578ed84e63fdfa7b1ee72deae1ae238160018151811061104257611042611759565b60200260200101906001600160a01b031690816001600160a01b031681525050868160028151811061107657611076611759565b6001600160a01b0392831660209182029290920101526008545f911663d06ca61f6110a1878a61176d565b846040518363ffffffff1660e01b81526004016110bf929190611828565b5f60405180830381865afa1580156110d9573d5f803e3d5ffd5b505050506040513d5f823e601f3d908101601f191682016040526111009190810190611848565b90508060028151811061111557611115611759565b60200260200101519250505b6008546001600160a01b0316635c11d79561113c868961176d565b87843361114b42610e10611780565b6040518663ffffffff1660e01b815260040161116b9594939291906117d5565b5f604051808303815f87803b158015611182575f80fd5b505af1158015611194573d5f803e3d5ffd5b505050506001600160a01b0387167341bc026dabe978bc2fafea1850456511ca4b01bc1480156111c6575060035460ff165b156111d5576111d53383611260565b5050505050505050565b6111e76114ed565b6003805460ff19166001179055565b60068181548110611205575f80fd5b5f918252602090912001546001600160a01b0316905081565b6112266114ed565b6001600160a01b03811661125457604051631e4fbdf760e01b81525f60048201526024015b60405180910390fd5b61125d81611519565b50565b6001600160a01b0382165f9081526005602052604090205460ff166112e2576006805460018082019092557ff652222313e28459528d920b65115c16c04f3efc82aaedc97be59f3f377c0d3f0180546001600160a01b0319166001600160a01b0385169081179091555f908152600560205260409020805460ff191690911790555b6001600160a01b0382165f9081526004602052604081208054839290611309908490611780565b90915550505050565b5f6001600160a01b038316735c7f8a570d578ed84e63fdfa7b1ee72deae1ae231461133e576002611341565b60015b60ff169050806001036113ca57600d5460015460405163a9059cbb60e01b81526001600160a01b0391821660048201526024810185905291169063a9059cbb906044016020604051808303815f875af11580156113a0573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906113c491906116d6565b50505050565b5f8167ffffffffffffffff8111156113e4576113e4611745565b60405190808252806020026020018201604052801561140d578160200160208202803683370190505b50905083815f8151811061142357611423611759565b60200260200101906001600160a01b031690816001600160a01b031681525050735c7f8a570d578ed84e63fdfa7b1ee72deae1ae238160018151811061146b5761146b611759565b6001600160a01b03928316602091820292909201015260085460015490821691635c11d7959186915f918691166114a442610e10611780565b6040518663ffffffff1660e01b81526004016114c49594939291906117d5565b5f604051808303815f87803b1580156114db575f80fd5b505af11580156111d5573d5f803e3d5ffd5b5f546001600160a01b03163314610a7c5760405163118cdaa760e01b815233600482015260240161124b565b5f80546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b5080545f8255905f5260205f209081019061125d91905b80821115611592575f815560010161157f565b5090565b80356001600160a01b03811681146115ac575f80fd5b919050565b5f805f606084860312156115c3575f80fd5b6115cc84611596565b95602085013595506040909401359392505050565b5f602082840312156115f1575f80fd5b5035919050565b5f8060408385031215611609575f80fd5b61161283611596565b946020939093013593505050565b5f60208284031215611630575f80fd5b61163982611596565b9392505050565b602080825282518282018190525f919060409081850190868401855b8281101561168a57815180516001600160a01b0316855286015186850152928401929085019060010161165c565b5091979650505050505050565b5f805f80608085870312156116aa575f80fd5b6116b385611596565b93506116c160208601611596565b93969395505050506040820135916060013590565b5f602082840312156116e6575f80fd5b81518015158114611639575f80fd5b634e487b7160e01b5f52601160045260245ffd5b8082028115828204841417611720576117206116f5565b92915050565b5f8261174057634e487b7160e01b5f52601260045260245ffd5b500490565b634e487b7160e01b5f52604160045260245ffd5b634e487b7160e01b5f52603260045260245ffd5b81810381811115611720576117206116f5565b80820180821115611720576117206116f5565b5f8151808452602080850194508084015f5b838110156117ca5781516001600160a01b0316875295820195908201906001016117a5565b509495945050505050565b85815284602082015260a060408201525f6117f360a0830186611793565b6001600160a01b0394909416606083015250608001529392505050565b5f60018201611821576118216116f5565b5060010190565b828152604060208201525f6118406040830184611793565b949350505050565b5f6020808385031215611859575f80fd5b825167ffffffffffffffff80821115611870575f80fd5b818501915085601f830112611883575f80fd5b81518181111561189557611895611745565b8060051b604051601f19603f830116810181811085821117156118ba576118ba611745565b6040529182528482019250838101850191888311156118d7575f80fd5b938501935b828510156118f5578451845293850193928501926118dc565b98975050505050505050565b848152608060208201525f6119196080830186611793565b6001600160a01b0394909416604083015250606001529291505056fea264697066735822122099f52f70626d33c76cd5e9c0c8515a1b004e3b9f039b27ed0abd8ecbd8c6ae8264736f6c63430008140033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x164 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0xA37B9E7F GT PUSH2 0xCD JUMPI DUP1 PUSH4 0xB3F00674 GT PUSH2 0x87 JUMPI DUP1 PUSH4 0xD3E66A9E GT PUSH2 0x62 JUMPI DUP1 PUSH4 0xD3E66A9E EQ PUSH2 0x41E JUMPI DUP1 PUSH4 0xD7B7D3F3 EQ PUSH2 0x432 JUMPI DUP1 PUSH4 0xEDF26D9B EQ PUSH2 0x459 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x478 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0xB3F00674 EQ PUSH2 0x3D8 JUMPI DUP1 PUSH4 0xD0E30DB0 EQ PUSH2 0x3F7 JUMPI DUP1 PUSH4 0xD16A4010 EQ PUSH2 0x3FF JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0xA37B9E7F EQ PUSH2 0x2EE JUMPI DUP1 PUSH4 0xA6769EF8 EQ PUSH2 0x315 JUMPI DUP1 PUSH4 0xAC65334F EQ PUSH2 0x340 JUMPI DUP1 PUSH4 0xAE38A070 EQ PUSH2 0x369 JUMPI DUP1 PUSH4 0xAFE43B94 EQ PUSH2 0x38A JUMPI DUP1 PUSH4 0xB0BEFE63 EQ PUSH2 0x3B1 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x5F0018CD GT PUSH2 0x11E JUMPI DUP1 PUSH4 0x5F0018CD EQ PUSH2 0x239 JUMPI DUP1 PUSH4 0x6504FBAD EQ PUSH2 0x24D JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x274 JUMPI DUP1 PUSH4 0x7C6F8FAE EQ PUSH2 0x288 JUMPI DUP1 PUSH4 0x7FD6F15C EQ PUSH2 0x2AF JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x2D2 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x16214120 EQ PUSH2 0x16F JUMPI DUP1 PUSH4 0x1D470CB1 EQ PUSH2 0x190 JUMPI DUP1 PUSH4 0x2E1A7D4D EQ PUSH2 0x1D4 JUMPI DUP1 PUSH4 0x3977D68D EQ PUSH2 0x1F3 JUMPI DUP1 PUSH4 0x39BDA01C EQ PUSH2 0x212 JUMPI DUP1 PUSH4 0x53AC861E EQ PUSH2 0x226 JUMPI PUSH0 DUP1 REVERT JUMPDEST CALLDATASIZE PUSH2 0x16B JUMPI STOP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x17A JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x18E PUSH2 0x189 CALLDATASIZE PUSH1 0x4 PUSH2 0x15B1 JUMP JUMPDEST PUSH2 0x497 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x19B JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x1B7 PUSH20 0x5C7F8A570D578ED84E63FDFA7B1EE72DEAE1AE23 DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1DF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x18E PUSH2 0x1EE CALLDATASIZE PUSH1 0x4 PUSH2 0x15E1 JUMP JUMPDEST PUSH2 0x678 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1FE JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x18E PUSH2 0x20D CALLDATASIZE PUSH1 0x4 PUSH2 0x15F8 JUMP JUMPDEST PUSH2 0x778 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x21D JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x18E PUSH2 0x7A6 JUMP JUMPDEST PUSH2 0x18E PUSH2 0x234 CALLDATASIZE PUSH1 0x4 PUSH2 0x15F8 JUMP JUMPDEST PUSH2 0x820 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x244 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x18E PUSH2 0xA57 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x258 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x1B7 PUSH20 0x66E428C3F67A68878562E79A0234C1F83C208770 DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x27F JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x18E PUSH2 0xA6B JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x293 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x1B7 PUSH20 0x3B44B2A187A7B3824131F8DB5A74194D0A42FC15 DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2BA JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x2C4 PUSH1 0x2 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x1CB JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2DD JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x1B7 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2F9 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x1B7 PUSH20 0xC21223249CA28397B4B6541DFFAECC539BFF0C59 DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x320 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x2C4 PUSH2 0x32F CALLDATASIZE PUSH1 0x4 PUSH2 0x1620 JUMP JUMPDEST PUSH1 0x4 PUSH1 0x20 MSTORE PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x34B JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x3 SLOAD PUSH2 0x359 SWAP1 PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x1CB JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x374 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x37D PUSH2 0xA7E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1CB SWAP2 SWAP1 PUSH2 0x1640 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x395 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x1B7 PUSH20 0x41BC026DABE978BC2FAFEA1850456511CA4B01BC DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3BC JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x1B7 PUSH20 0x3B41B27E74DD366CE27CB389DC7877D4E1516D4D DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3E3 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 SLOAD PUSH2 0x1B7 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH2 0x18E PUSH2 0xBAB JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x40A JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x18E PUSH2 0x419 CALLDATASIZE PUSH1 0x4 PUSH2 0x1697 JUMP JUMPDEST PUSH2 0xC7B JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x429 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x18E PUSH2 0x11DF JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x43D JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x1B7 PUSH20 0x145863EB42CF62847A6CA784E6416C1682B1B2AE DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x464 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x1B7 PUSH2 0x473 CALLDATASIZE PUSH1 0x4 PUSH2 0x15E1 JUMP JUMPDEST PUSH2 0x11F6 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x483 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x18E PUSH2 0x492 CALLDATASIZE PUSH1 0x4 PUSH2 0x1620 JUMP JUMPDEST PUSH2 0x121E JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH20 0x41BC026DABE978BC2FAFEA1850456511CA4B01BC EQ DUP1 ISZERO PUSH2 0x4C5 JUMPI POP PUSH1 0x3 SLOAD PUSH1 0xFF AND JUMPDEST ISZERO PUSH2 0x4D4 JUMPI PUSH2 0x4D4 CALLER DUP4 PUSH2 0x1260 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x23B872DD PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE ADDRESS PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND SWAP1 PUSH4 0x23B872DD SWAP1 PUSH1 0x64 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x524 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x548 SWAP2 SWAP1 PUSH2 0x16D6 JUMP JUMPDEST POP PUSH0 PUSH2 0x3E8 PUSH1 0x2 SLOAD DUP5 PUSH2 0x55B SWAP2 SWAP1 PUSH2 0x1709 JUMP JUMPDEST PUSH2 0x565 SWAP2 SWAP1 PUSH2 0x1726 JUMP JUMPDEST SWAP1 POP PUSH2 0x571 DUP5 DUP3 PUSH2 0x1312 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x2 DUP1 DUP3 MSTORE PUSH1 0x60 DUP3 ADD DUP4 MSTORE PUSH0 SWAP3 PUSH1 0x20 DUP4 ADD SWAP1 DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP POP SWAP1 POP DUP5 DUP2 PUSH0 DUP2 MLOAD DUP2 LT PUSH2 0x5A4 JUMPI PUSH2 0x5A4 PUSH2 0x1759 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE POP POP PUSH20 0x5C7F8A570D578ED84E63FDFA7B1EE72DEAE1AE23 DUP2 PUSH1 0x1 DUP2 MLOAD DUP2 LT PUSH2 0x5EC JUMPI PUSH2 0x5EC PUSH2 0x1759 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 DUP4 AND PUSH1 0x20 SWAP2 DUP3 MUL SWAP3 SWAP1 SWAP3 ADD ADD MSTORE PUSH1 0x8 SLOAD AND PUSH4 0x791AC947 PUSH2 0x615 DUP5 DUP8 PUSH2 0x176D JUMP JUMPDEST DUP6 DUP5 CALLER PUSH2 0x624 TIMESTAMP PUSH2 0xE10 PUSH2 0x1780 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP7 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x644 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x17D5 JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x65B JUMPI PUSH0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x66D JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0xD SLOAD PUSH1 0x40 MLOAD PUSH4 0x23B872DD PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE ADDRESS PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH4 0x23B872DD SWAP1 PUSH1 0x64 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x6CC JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x6F0 SWAP2 SWAP1 PUSH2 0x16D6 JUMP JUMPDEST POP PUSH1 0xD SLOAD PUSH1 0x40 MLOAD PUSH4 0x2E1A7D4D PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH4 0x2E1A7D4D SWAP1 PUSH1 0x24 ADD PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x734 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x746 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP PUSH1 0x40 MLOAD CALLER SWAP3 POP DUP4 ISZERO PUSH2 0x8FC MUL SWAP2 POP DUP4 SWAP1 PUSH0 DUP2 DUP2 DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0x774 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP JUMP JUMPDEST PUSH2 0x780 PUSH2 0x14ED JUMP JUMPDEST PUSH1 0x1 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP4 SWAP1 SWAP4 AND SWAP3 SWAP1 SWAP3 OR SWAP1 SWAP2 SSTORE PUSH1 0x2 SSTORE JUMP JUMPDEST PUSH2 0x7AE PUSH2 0x14ED JUMP JUMPDEST PUSH1 0x6 SLOAD PUSH0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x807 JUMPI PUSH1 0x4 PUSH0 PUSH1 0x6 DUP4 DUP2 SLOAD DUP2 LT PUSH2 0x7D1 JUMPI PUSH2 0x7D1 PUSH2 0x1759 JUMP JUMPDEST PUSH0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 KECCAK256 SWAP1 SWAP2 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 MSTORE DUP3 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x40 ADD DUP2 KECCAK256 SSTORE DUP1 PUSH2 0x7FF DUP2 PUSH2 0x1810 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x7B3 JUMP JUMPDEST POP PUSH2 0x813 PUSH1 0x6 PUSH0 PUSH2 0x1568 JUMP JUMPDEST POP PUSH1 0x3 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x2 SLOAD CALLVALUE SWAP1 PUSH0 SWAP1 PUSH2 0x3E8 SWAP1 PUSH2 0x835 SWAP1 DUP5 PUSH2 0x1709 JUMP JUMPDEST PUSH2 0x83F SWAP2 SWAP1 PUSH2 0x1726 JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x40 MLOAD SWAP2 SWAP3 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 DUP3 ISZERO PUSH2 0x8FC MUL SWAP1 DUP4 SWAP1 PUSH0 DUP2 DUP2 DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0x877 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x2 DUP1 DUP3 MSTORE PUSH1 0x60 DUP3 ADD DUP4 MSTORE PUSH0 SWAP3 PUSH1 0x20 DUP4 ADD SWAP1 DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP POP SWAP1 POP PUSH20 0x5C7F8A570D578ED84E63FDFA7B1EE72DEAE1AE23 DUP2 PUSH0 DUP2 MLOAD DUP2 LT PUSH2 0x8BF JUMPI PUSH2 0x8BF PUSH2 0x1759 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE POP POP DUP5 DUP2 PUSH1 0x1 DUP2 MLOAD DUP2 LT PUSH2 0x8F3 JUMPI PUSH2 0x8F3 PUSH2 0x1759 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 DUP4 AND PUSH1 0x20 SWAP2 DUP3 MUL SWAP3 SWAP1 SWAP3 ADD ADD MSTORE PUSH1 0x8 SLOAD PUSH0 SWAP2 AND PUSH4 0xD06CA61F PUSH2 0x91E DUP6 DUP8 PUSH2 0x176D JUMP JUMPDEST DUP5 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x93C SWAP3 SWAP2 SWAP1 PUSH2 0x1828 JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x956 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH0 DUP3 RETURNDATACOPY PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH1 0x1F NOT AND DUP3 ADD PUSH1 0x40 MSTORE PUSH2 0x97D SWAP2 SWAP1 DUP2 ADD SWAP1 PUSH2 0x1848 JUMP JUMPDEST PUSH1 0x8 SLOAD SWAP1 SWAP2 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xB6F9DE95 PUSH2 0x99B DUP6 DUP8 PUSH2 0x176D JUMP JUMPDEST DUP8 DUP6 CALLER PUSH2 0x9AA TIMESTAMP PUSH2 0xE10 PUSH2 0x1780 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP7 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x9C9 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1901 JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x9E0 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x9F2 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND PUSH20 0x41BC026DABE978BC2FAFEA1850456511CA4B01BC EQ SWAP1 POP DUP1 ISZERO PUSH2 0xA26 JUMPI POP PUSH1 0x3 SLOAD PUSH1 0xFF AND JUMPDEST ISZERO PUSH2 0xA4F JUMPI PUSH2 0xA4F CALLER DUP3 PUSH1 0x1 DUP2 MLOAD DUP2 LT PUSH2 0xA42 JUMPI PUSH2 0xA42 PUSH2 0x1759 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH2 0x1260 JUMP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0xA5F PUSH2 0x14ED JUMP JUMPDEST PUSH1 0x3 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE JUMP JUMPDEST PUSH2 0xA73 PUSH2 0x14ED JUMP JUMPDEST PUSH2 0xA7C PUSH0 PUSH2 0x1519 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x6 SLOAD PUSH1 0x60 SWAP1 PUSH0 DUP2 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xA9E JUMPI PUSH2 0xA9E PUSH2 0x1745 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0xAE2 JUMPI DUP2 PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD SWAP1 SWAP2 MSTORE PUSH0 DUP1 DUP3 MSTORE PUSH1 0x20 DUP3 ADD MSTORE DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 SWAP1 SUB SWAP1 DUP2 PUSH2 0xABC JUMPI SWAP1 POP JUMPDEST POP SWAP1 POP PUSH0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0xBA4 JUMPI PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x6 DUP4 DUP2 SLOAD DUP2 LT PUSH2 0xB0D JUMPI PUSH2 0xB0D PUSH2 0x1759 JUMP JUMPDEST SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x4 PUSH0 PUSH1 0x6 DUP6 DUP2 SLOAD DUP2 LT PUSH2 0xB4C JUMPI PUSH2 0xB4C PUSH2 0x1759 JUMP JUMPDEST PUSH0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 KECCAK256 SWAP1 SWAP2 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 MSTORE DUP3 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x40 ADD SWAP1 KECCAK256 SLOAD SWAP1 MSTORE DUP3 MLOAD DUP4 SWAP1 DUP4 SWAP1 DUP2 LT PUSH2 0xB86 JUMPI PUSH2 0xB86 PUSH2 0x1759 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP2 SWAP1 MSTORE POP DUP1 DUP1 PUSH2 0xB9C SWAP1 PUSH2 0x1810 JUMP JUMPDEST SWAP2 POP POP PUSH2 0xAE7 JUMP JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0xD SLOAD PUSH1 0x40 DUP1 MLOAD PUSH4 0xD0E30DB PUSH1 0xE4 SHL DUP2 MSTORE SWAP1 MLOAD CALLVALUE SWAP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP2 PUSH4 0xD0E30DB0 SWAP2 DUP5 SWAP2 PUSH1 0x4 DUP1 DUP3 ADD SWAP3 PUSH0 SWAP3 SWAP1 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP6 DUP9 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xBF1 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0xC03 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP PUSH1 0xD SLOAD PUSH1 0x40 MLOAD PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP7 SWAP1 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP4 POP PUSH4 0xA9059CBB SWAP3 POP PUSH1 0x44 ADD SWAP1 POP PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0xC57 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x774 SWAP2 SWAP1 PUSH2 0x16D6 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x23B872DD PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE ADDRESS PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND SWAP1 PUSH4 0x23B872DD SWAP1 PUSH1 0x64 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0xCCB JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xCEF SWAP2 SWAP1 PUSH2 0x16D6 JUMP JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH20 0x41BC026DABE978BC2FAFEA1850456511CA4B01BC EQ DUP1 ISZERO PUSH2 0xD1E JUMPI POP PUSH1 0x3 SLOAD PUSH1 0xFF AND JUMPDEST ISZERO PUSH2 0xD2D JUMPI PUSH2 0xD2D CALLER DUP4 PUSH2 0x1260 JUMP JUMPDEST PUSH0 PUSH2 0x3E8 PUSH1 0x2 SLOAD DUP5 PUSH2 0xD3F SWAP2 SWAP1 PUSH2 0x1709 JUMP JUMPDEST PUSH2 0xD49 SWAP2 SWAP1 PUSH2 0x1726 JUMP JUMPDEST SWAP1 POP PUSH2 0xD55 DUP6 DUP3 PUSH2 0x1312 JUMP JUMPDEST PUSH0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND PUSH20 0x5C7F8A570D578ED84E63FDFA7B1EE72DEAE1AE23 EQ DUP1 PUSH2 0xD9D JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH20 0x5C7F8A570D578ED84E63FDFA7B1EE72DEAE1AE23 EQ JUMPDEST PUSH2 0xDA8 JUMPI PUSH1 0x3 PUSH2 0xDAB JUMP JUMPDEST PUSH1 0x2 JUMPDEST PUSH1 0xFF AND SWAP1 POP PUSH0 PUSH1 0x60 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP9 AND PUSH20 0x5C7F8A570D578ED84E63FDFA7B1EE72DEAE1AE23 EQ DUP1 PUSH2 0xDFA JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND PUSH20 0x5C7F8A570D578ED84E63FDFA7B1EE72DEAE1AE23 EQ JUMPDEST ISZERO PUSH2 0xF24 JUMPI PUSH1 0x2 JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0xE2B JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP SWAP1 POP DUP8 DUP2 PUSH0 DUP2 MLOAD DUP2 LT PUSH2 0xE41 JUMPI PUSH2 0xE41 PUSH2 0x1759 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE POP POP DUP7 DUP2 PUSH1 0x1 DUP2 MLOAD DUP2 LT PUSH2 0xE75 JUMPI PUSH2 0xE75 PUSH2 0x1759 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 DUP4 AND PUSH1 0x20 SWAP2 DUP3 MUL SWAP3 SWAP1 SWAP3 ADD ADD MSTORE PUSH1 0x8 SLOAD PUSH0 SWAP2 AND PUSH4 0xD06CA61F PUSH2 0xEA0 DUP8 DUP11 PUSH2 0x176D JUMP JUMPDEST DUP5 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xEBE SWAP3 SWAP2 SWAP1 PUSH2 0x1828 JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xED8 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH0 DUP3 RETURNDATACOPY PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH1 0x1F NOT AND DUP3 ADD PUSH1 0x40 MSTORE PUSH2 0xEFF SWAP2 SWAP1 DUP2 ADD SWAP1 PUSH2 0x1848 JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0x1 DUP2 MLOAD DUP2 LT PUSH2 0xF14 JUMPI PUSH2 0xF14 PUSH2 0x1759 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD SWAP3 POP POP PUSH2 0x1121 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP9 AND PUSH20 0x41BC026DABE978BC2FAFEA1850456511CA4B01BC EQ DUP1 ISZERO PUSH2 0xF6C JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND PUSH20 0x3B41B27E74DD366CE27CB389DC7877D4E1516D4D EQ JUMPDEST DUP1 PUSH2 0xFBA JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP9 AND PUSH20 0x3B41B27E74DD366CE27CB389DC7877D4E1516D4D EQ DUP1 ISZERO PUSH2 0xFBA JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND PUSH20 0x41BC026DABE978BC2FAFEA1850456511CA4B01BC EQ JUMPDEST ISZERO PUSH2 0xFC6 JUMPI PUSH1 0x2 PUSH2 0xE02 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x3 DUP1 DUP3 MSTORE PUSH1 0x80 DUP3 ADD SWAP1 SWAP3 MSTORE SWAP1 PUSH1 0x20 DUP3 ADD PUSH1 0x60 DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP POP SWAP1 POP DUP8 DUP2 PUSH0 DUP2 MLOAD DUP2 LT PUSH2 0xFFA JUMPI PUSH2 0xFFA PUSH2 0x1759 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE POP POP PUSH20 0x5C7F8A570D578ED84E63FDFA7B1EE72DEAE1AE23 DUP2 PUSH1 0x1 DUP2 MLOAD DUP2 LT PUSH2 0x1042 JUMPI PUSH2 0x1042 PUSH2 0x1759 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE POP POP DUP7 DUP2 PUSH1 0x2 DUP2 MLOAD DUP2 LT PUSH2 0x1076 JUMPI PUSH2 0x1076 PUSH2 0x1759 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 DUP4 AND PUSH1 0x20 SWAP2 DUP3 MUL SWAP3 SWAP1 SWAP3 ADD ADD MSTORE PUSH1 0x8 SLOAD PUSH0 SWAP2 AND PUSH4 0xD06CA61F PUSH2 0x10A1 DUP8 DUP11 PUSH2 0x176D JUMP JUMPDEST DUP5 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x10BF SWAP3 SWAP2 SWAP1 PUSH2 0x1828 JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x10D9 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH0 DUP3 RETURNDATACOPY PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH1 0x1F NOT AND DUP3 ADD PUSH1 0x40 MSTORE PUSH2 0x1100 SWAP2 SWAP1 DUP2 ADD SWAP1 PUSH2 0x1848 JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0x2 DUP2 MLOAD DUP2 LT PUSH2 0x1115 JUMPI PUSH2 0x1115 PUSH2 0x1759 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD SWAP3 POP POP JUMPDEST PUSH1 0x8 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x5C11D795 PUSH2 0x113C DUP7 DUP10 PUSH2 0x176D JUMP JUMPDEST DUP8 DUP5 CALLER PUSH2 0x114B TIMESTAMP PUSH2 0xE10 PUSH2 0x1780 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP7 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x116B SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x17D5 JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1182 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x1194 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND PUSH20 0x41BC026DABE978BC2FAFEA1850456511CA4B01BC EQ DUP1 ISZERO PUSH2 0x11C6 JUMPI POP PUSH1 0x3 SLOAD PUSH1 0xFF AND JUMPDEST ISZERO PUSH2 0x11D5 JUMPI PUSH2 0x11D5 CALLER DUP4 PUSH2 0x1260 JUMP JUMPDEST POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0x11E7 PUSH2 0x14ED JUMP JUMPDEST PUSH1 0x3 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x6 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x1205 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 POP DUP2 JUMP JUMPDEST PUSH2 0x1226 PUSH2 0x14ED JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x1254 JUMPI PUSH1 0x40 MLOAD PUSH4 0x1E4FBDF7 PUSH1 0xE0 SHL DUP2 MSTORE PUSH0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x125D DUP2 PUSH2 0x1519 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND PUSH2 0x12E2 JUMPI PUSH1 0x6 DUP1 SLOAD PUSH1 0x1 DUP1 DUP3 ADD SWAP1 SWAP3 SSTORE PUSH32 0xF652222313E28459528D920B65115C16C04F3EFC82AAEDC97BE59F3F377C0D3F ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SWAP2 OR SWAP1 SSTORE JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD DUP4 SWAP3 SWAP1 PUSH2 0x1309 SWAP1 DUP5 SWAP1 PUSH2 0x1780 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH20 0x5C7F8A570D578ED84E63FDFA7B1EE72DEAE1AE23 EQ PUSH2 0x133E JUMPI PUSH1 0x2 PUSH2 0x1341 JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH1 0xFF AND SWAP1 POP DUP1 PUSH1 0x1 SUB PUSH2 0x13CA JUMPI PUSH1 0xD SLOAD PUSH1 0x1 SLOAD PUSH1 0x40 MLOAD PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP6 SWAP1 MSTORE SWAP2 AND SWAP1 PUSH4 0xA9059CBB SWAP1 PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x13A0 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x13C4 SWAP2 SWAP1 PUSH2 0x16D6 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 DUP2 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x13E4 JUMPI PUSH2 0x13E4 PUSH2 0x1745 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x140D JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP SWAP1 POP DUP4 DUP2 PUSH0 DUP2 MLOAD DUP2 LT PUSH2 0x1423 JUMPI PUSH2 0x1423 PUSH2 0x1759 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE POP POP PUSH20 0x5C7F8A570D578ED84E63FDFA7B1EE72DEAE1AE23 DUP2 PUSH1 0x1 DUP2 MLOAD DUP2 LT PUSH2 0x146B JUMPI PUSH2 0x146B PUSH2 0x1759 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 DUP4 AND PUSH1 0x20 SWAP2 DUP3 MUL SWAP3 SWAP1 SWAP3 ADD ADD MSTORE PUSH1 0x8 SLOAD PUSH1 0x1 SLOAD SWAP1 DUP3 AND SWAP2 PUSH4 0x5C11D795 SWAP2 DUP7 SWAP2 PUSH0 SWAP2 DUP7 SWAP2 AND PUSH2 0x14A4 TIMESTAMP PUSH2 0xE10 PUSH2 0x1780 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP7 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x14C4 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x17D5 JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x14DB JUMPI PUSH0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x11D5 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST PUSH0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0xA7C JUMPI PUSH1 0x40 MLOAD PUSH4 0x118CDAA7 PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x124B JUMP JUMPDEST PUSH0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR DUP5 SSTORE PUSH1 0x40 MLOAD SWAP2 SWAP1 SWAP3 AND SWAP3 DUP4 SWAP2 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP2 SWAP1 LOG3 POP POP JUMP JUMPDEST POP DUP1 SLOAD PUSH0 DUP3 SSTORE SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 DUP2 ADD SWAP1 PUSH2 0x125D SWAP2 SWAP1 JUMPDEST DUP1 DUP3 GT ISZERO PUSH2 0x1592 JUMPI PUSH0 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0x157F JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x15AC JUMPI PUSH0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x15C3 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x15CC DUP5 PUSH2 0x1596 JUMP JUMPDEST SWAP6 PUSH1 0x20 DUP6 ADD CALLDATALOAD SWAP6 POP PUSH1 0x40 SWAP1 SWAP5 ADD CALLDATALOAD SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x15F1 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1609 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x1612 DUP4 PUSH2 0x1596 JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1630 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x1639 DUP3 PUSH2 0x1596 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE DUP3 MLOAD DUP3 DUP3 ADD DUP2 SWAP1 MSTORE PUSH0 SWAP2 SWAP1 PUSH1 0x40 SWAP1 DUP2 DUP6 ADD SWAP1 DUP7 DUP5 ADD DUP6 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x168A JUMPI DUP2 MLOAD DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP6 MSTORE DUP7 ADD MLOAD DUP7 DUP6 ADD MSTORE SWAP3 DUP5 ADD SWAP3 SWAP1 DUP6 ADD SWAP1 PUSH1 0x1 ADD PUSH2 0x165C JUMP JUMPDEST POP SWAP2 SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x16AA JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x16B3 DUP6 PUSH2 0x1596 JUMP JUMPDEST SWAP4 POP PUSH2 0x16C1 PUSH1 0x20 DUP7 ADD PUSH2 0x1596 JUMP JUMPDEST SWAP4 SWAP7 SWAP4 SWAP6 POP POP POP POP PUSH1 0x40 DUP3 ADD CALLDATALOAD SWAP2 PUSH1 0x60 ADD CALLDATALOAD SWAP1 JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x16E6 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP2 MLOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0x1639 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST DUP1 DUP3 MUL DUP2 ISZERO DUP3 DUP3 DIV DUP5 EQ OR PUSH2 0x1720 JUMPI PUSH2 0x1720 PUSH2 0x16F5 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP3 PUSH2 0x1740 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST POP DIV SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST DUP2 DUP2 SUB DUP2 DUP2 GT ISZERO PUSH2 0x1720 JUMPI PUSH2 0x1720 PUSH2 0x16F5 JUMP JUMPDEST DUP1 DUP3 ADD DUP1 DUP3 GT ISZERO PUSH2 0x1720 JUMPI PUSH2 0x1720 PUSH2 0x16F5 JUMP JUMPDEST PUSH0 DUP2 MLOAD DUP1 DUP5 MSTORE PUSH1 0x20 DUP1 DUP6 ADD SWAP5 POP DUP1 DUP5 ADD PUSH0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x17CA JUMPI DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP8 MSTORE SWAP6 DUP3 ADD SWAP6 SWAP1 DUP3 ADD SWAP1 PUSH1 0x1 ADD PUSH2 0x17A5 JUMP JUMPDEST POP SWAP5 SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST DUP6 DUP2 MSTORE DUP5 PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0xA0 PUSH1 0x40 DUP3 ADD MSTORE PUSH0 PUSH2 0x17F3 PUSH1 0xA0 DUP4 ADD DUP7 PUSH2 0x1793 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP5 SWAP1 SWAP5 AND PUSH1 0x60 DUP4 ADD MSTORE POP PUSH1 0x80 ADD MSTORE SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x1 DUP3 ADD PUSH2 0x1821 JUMPI PUSH2 0x1821 PUSH2 0x16F5 JUMP JUMPDEST POP PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST DUP3 DUP2 MSTORE PUSH1 0x40 PUSH1 0x20 DUP3 ADD MSTORE PUSH0 PUSH2 0x1840 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x1793 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP1 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1859 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP3 MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x1870 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP2 DUP6 ADD SWAP2 POP DUP6 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x1883 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP2 MLOAD DUP2 DUP2 GT ISZERO PUSH2 0x1895 JUMPI PUSH2 0x1895 PUSH2 0x1745 JUMP JUMPDEST DUP1 PUSH1 0x5 SHL PUSH1 0x40 MLOAD PUSH1 0x1F NOT PUSH1 0x3F DUP4 ADD AND DUP2 ADD DUP2 DUP2 LT DUP6 DUP3 GT OR ISZERO PUSH2 0x18BA JUMPI PUSH2 0x18BA PUSH2 0x1745 JUMP JUMPDEST PUSH1 0x40 MSTORE SWAP2 DUP3 MSTORE DUP5 DUP3 ADD SWAP3 POP DUP4 DUP2 ADD DUP6 ADD SWAP2 DUP9 DUP4 GT ISZERO PUSH2 0x18D7 JUMPI PUSH0 DUP1 REVERT JUMPDEST SWAP4 DUP6 ADD SWAP4 JUMPDEST DUP3 DUP6 LT ISZERO PUSH2 0x18F5 JUMPI DUP5 MLOAD DUP5 MSTORE SWAP4 DUP6 ADD SWAP4 SWAP3 DUP6 ADD SWAP3 PUSH2 0x18DC JUMP JUMPDEST SWAP9 SWAP8 POP POP POP POP POP POP POP POP JUMP JUMPDEST DUP5 DUP2 MSTORE PUSH1 0x80 PUSH1 0x20 DUP3 ADD MSTORE PUSH0 PUSH2 0x1919 PUSH1 0x80 DUP4 ADD DUP7 PUSH2 0x1793 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP5 SWAP1 SWAP5 AND PUSH1 0x40 DUP4 ADD MSTORE POP PUSH1 0x60 ADD MSTORE SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP10 CREATE2 0x2F PUSH17 0x626D33C76CD5E9C0C8515A1B004E3B9F03 SWAP12 0x27 0xED EXP 0xBD DUP15 0xCB 0xD8 0xC6 0xAE DUP3 PUSH5 0x736F6C6343 STOP ADDMOD EQ STOP CALLER ",
							"sourceMap": "2107:7987:3:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8894:742;;;;;;;;;;-1:-1:-1;8894:742:3;;;;;:::i;:::-;;:::i;:::-;;2304:73;;;;;;;;;;;;2335:42;2304:73;;;;;-1:-1:-1;;;;;683:32:4;;;665:51;;653:2;638:18;2304:73:3;;;;;;;;9851:203;;;;;;;;;;-1:-1:-1;9851:203:3;;;;;:::i;:::-;;:::i;4731:160::-;;;;;;;;;;-1:-1:-1;4731:160:3;;;;;:::i;:::-;;:::i;4222:250::-;;;;;;;;;;;;;:::i;8047:795::-;;;;;;:::i;:::-;;:::i;4480:90::-;;;;;;;;;;;;;:::i;2223:74::-;;;;;;;;;;;;2255:42;2223:74;;2293:101:0;;;;;;;;;;;;;:::i;2637:88:3:-;;;;;;;;;;;;2683:42;2637:88;;2765:25;;;;;;;;;;;;;;;;;;;1317::4;;;1305:2;1290:18;2765:25:3;1171:177:4;1638:85:0;;;;;;;;;;-1:-1:-1;1684:7:0;1710:6;-1:-1:-1;;;;;1710:6:0;1638:85;;2142:74:3;;;;;;;;;;;;2174:42;2142:74;;2843:45;;;;;;;;;;-1:-1:-1;2843:45:3;;;;;:::i;:::-;;;;;;;;;;;;;;2797:39;;;;;;;;;;-1:-1:-1;2797:39:3;;;;;;;;;;;1709:14:4;;1702:22;1684:41;;1672:2;1657:18;2797:39:3;1544:187:4;3809:365:3;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;2384:72::-;;;;;;;;;;;;2414:42;2384:72;;2463:73;;;;;;;;;;;;2494:42;2463:73;;2732:26;;;;;;;;;;-1:-1:-1;2732:26:3;;;;-1:-1:-1;;;;;2732:26:3;;;9672:171;;;:::i;5854:2145::-;;;;;;;;;;-1:-1:-1;5854:2145:3;;;;;:::i;:::-;;:::i;4576:90::-;;;;;;;;;;;;;:::i;2543:87::-;;;;;;;;;;;;2588:42;2543:87;;2941:26;;;;;;;;;;-1:-1:-1;2941:26:3;;;;;:::i;:::-;;:::i;2543:215:0:-;;;;;;;;;;-1:-1:-1;2543:215:0;;;;;:::i;:::-;;:::i;8894:742:3:-;-1:-1:-1;;;;;9035:16:3;;2414:42;9035:16;:39;;;;-1:-1:-1;9055:19:3;;;;9035:39;9032:75;;;9076:31;9086:10;9098:8;9076:9;:31::i;:::-;9118:67;;-1:-1:-1;;;9118:67:3;;9149:10;9118:67;;;3193:34:4;9169:4:3;3243:18:4;;;3236:43;3295:18;;;3288:34;;;-1:-1:-1;;;;;9118:30:3;;;;;3128:18:4;;9118:67:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;9206:17;9250:4;9237:10;;9226:8;:21;;;;:::i;:::-;:28;;;;:::i;:::-;9206:48;;9267:28;9274:9;9285;9267:6;:28::i;:::-;9332:16;;;9346:1;9332:16;;;;;;;;9308:21;;9332:16;;;;;;;;;;-1:-1:-1;9332:16:3;9308:40;;9369:9;9359:4;9364:1;9359:7;;;;;;;;:::i;:::-;;;;;;:19;-1:-1:-1;;;;;9359:19:3;;;-1:-1:-1;;;;;9359:19:3;;;;;2335:42;9389:4;9394:1;9389:7;;;;;;;;:::i;:::-;-1:-1:-1;;;;;9389:14:3;;;:7;;;;;;;;;:14;9414:6;;;:57;9486:20;9497:9;9486:8;:20;:::i;:::-;9521:12;9548:4;9567:10;9592:25;:15;9610:7;9592:25;:::i;:::-;9414:214;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;9019:617;;8894:742;;;:::o;9851:203::-;9917:4;;:49;;-1:-1:-1;;;9917:49:3;;9935:10;9917:49;;;3193:34:4;9955:4:3;3243:18:4;;;3236:43;3295:18;;;3288:34;;;-1:-1:-1;;;;;9917:4:3;;;;:17;;3128:18:4;;9917:49:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;9977:4:3;;:18;;-1:-1:-1;;;9977:18:3;;;;;1317:25:4;;;-1:-1:-1;;;;;9977:4:3;;;;:13;;1290:18:4;;9977::3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;10013:33:3;;10021:10;;-1:-1:-1;10013:33:3;;;;;-1:-1:-1;10042:3:3;;10013:33;;;;10042:3;10021:10;10013:33;;;;;;;;;;;;;;;;;;;;;9851:203;:::o;4731:160::-;1531:13:0;:11;:13::i;:::-;4822:11:3::1;:26:::0;;-1:-1:-1;;;;;;4822:26:3::1;-1:-1:-1::0;;;;;4822:26:3;;;::::1;::::0;;;::::1;::::0;;;4859:10:::1;:24:::0;4731:160::o;4222:250::-;1531:13:0;:11;:13::i;:::-;4284:9:3::1;:16:::0;4272:9:::1;4311:89;4334:1;4330;:5;4311:89;;;4364:10;:24;4375:9;4385:1;4375:12;;;;;;;;:::i;:::-;;::::0;;;::::1;::::0;;;;;::::1;::::0;-1:-1:-1;;;;;4375:12:3::1;4364:24:::0;;;::::1;::::0;;;;;;;;4357:31;4337:3;::::1;::::0;::::1;:::i;:::-;;;;4311:89;;;-1:-1:-1::0;4410:16:3::1;4417:9;;4410:16;:::i;:::-;-1:-1:-1::0;4437:19:3::1;:27:::0;;-1:-1:-1;;4437:27:3::1;::::0;;4222:250::o;8047:795::-;8233:10;;8182:9;;8163:16;;8246:4;;8222:21;;8182:9;8222:21;:::i;:::-;:28;;;;:::i;:::-;8269:11;;8261:40;;8202:48;;-1:-1:-1;;;;;;8269:11:3;;8261:40;;;;;8202:48;;8269:11;8261:40;8269:11;8261:40;8202:48;8269:11;8261:40;;;;;;;;;;;;;;;;;;;;-1:-1:-1;8338:16:3;;;8352:1;8338:16;;;;;;;;8314:21;;8338:16;;;;;;;;;;-1:-1:-1;8338:16:3;8314:40;;2335:42;8365:4;8370:1;8365:7;;;;;;;;:::i;:::-;;;;;;:14;-1:-1:-1;;;;;8365:14:3;;;-1:-1:-1;;;;;8365:14:3;;;;;8400:7;8390:4;8395:1;8390:7;;;;;;;;:::i;:::-;-1:-1:-1;;;;;8390:17:3;;;:7;;;;;;;;;:17;8450:6;;8420:27;;8450:6;:20;8471;8482:9;8471:8;:20;:::i;:::-;8493:4;8450:48;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;8450:48:3;;;;;;;;;;;;:::i;:::-;8509:6;;8420:78;;-1:-1:-1;;;;;;8509:6:3;:57;8574:20;8585:9;8574:8;:20;:::i;:::-;8610:12;8637:4;8656:10;8681:25;:15;8699:7;8681:25;:::i;:::-;8509:208;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;8733:14:3;;2414:42;8733:14;;-1:-1:-1;8733:37:3;;;;-1:-1:-1;8751:19:3;;;;8733:37;8730:105;;;8787:36;8797:10;8809;8820:1;8809:13;;;;;;;;:::i;:::-;;;;;;;8787:9;:36::i;:::-;8152:690;;;;8047:795;;:::o;4480:90::-;1531:13:0;:11;:13::i;:::-;4535:19:3::1;:27:::0;;-1:-1:-1;;4535:27:3::1;::::0;;4480:90::o;2293:101:0:-;1531:13;:11;:13::i;:::-;2357:30:::1;2384:1;2357:18;:30::i;:::-;2293:101::o:0;3809:365:3:-;3898:9;:16;3858:15;;3886:9;3898:16;3951:15;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;;;;;;;3951:15:3;;;;;;;;;;;;;;;;3925:41;;4027:9;4022:118;4046:1;4042;:5;4022:118;;;4082:46;;;;;;;;4089:9;4099:1;4089:12;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;-1:-1:-1;;;;;4089:12:3;-1:-1:-1;;;;;4082:46:3;;;;;4103:10;:24;4114:9;4124:1;4114:12;;;;;;;;:::i;:::-;;;;;;;;;;;;;-1:-1:-1;;;;;4114:12:3;4103:24;;;;;;;;;;;;;4082:46;;4069:10;;:7;;4077:1;;4069:10;;;;;;:::i;:::-;;;;;;:59;;;;4049:3;;;;;:::i;:::-;;;;4022:118;;;-1:-1:-1;4159:7:3;3809:365;-1:-1:-1;;3809:365:3:o;9672:171::-;9757:4;;:30;;;-1:-1:-1;;;9757:30:3;;;;9737:9;;-1:-1:-1;;;;;9757:4:3;;:12;;9737:9;;9757:30;;;;;9718:16;;9757:30;;;;;;;;9737:9;9757:4;:30;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;9798:4:3;;:37;;-1:-1:-1;;;9798:37:3;;9813:10;9798:37;;;7982:51:4;8049:18;;;8042:34;;;-1:-1:-1;;;;;9798:4:3;;;;-1:-1:-1;9798:13:3;;-1:-1:-1;7955:18:4;;;-1:-1:-1;9798:37:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;5854:2145::-;6018:67;;-1:-1:-1;;;6018:67:3;;6049:10;6018:67;;;3193:34:4;6069:4:3;3243:18:4;;;3236:43;3295:18;;;3288:34;;;-1:-1:-1;;;;;6018:30:3;;;;;3128:18:4;;6018:67:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;;6117:16:3;;2414:42;6117:16;:39;;;;-1:-1:-1;6137:19:3;;;;6117:39;6098:129;;;6184:31;6194:10;6206:8;6184:9;:31::i;:::-;6239:17;6285:4;6271:10;;6260:8;:21;;;;:::i;:::-;6259:30;;;;:::i;:::-;6239:50;;6300:28;6307:9;6318;6300:6;:28::i;:::-;6341:15;-1:-1:-1;;;;;6378:17:3;;2335:42;6378:17;;:36;;-1:-1:-1;;;;;;6399:15:3;;2335:42;6399:15;6378:36;6377:46;;6422:1;6377:46;;;6418:1;6377:46;6367:56;;;-1:-1:-1;6436:17:3;6464:21;-1:-1:-1;;;;;6500:17:3;;2335:42;6500:17;;:36;;-1:-1:-1;;;;;;6521:15:3;;2335:42;6521:15;6500:36;6496:1098;;;6574:1;6560:16;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;6560:16:3;;6553:23;;6601:9;6591:4;6596:1;6591:7;;;;;;;;:::i;:::-;;;;;;:19;-1:-1:-1;;;;;6591:19:3;;;-1:-1:-1;;;;;6591:19:3;;;;;6635:7;6625:4;6630:1;6625:7;;;;;;;;:::i;:::-;-1:-1:-1;;;;;6625:17:3;;;:7;;;;;;;;;:17;6687:6;;6657:27;;6687:6;:20;6726;6737:9;6726:8;:20;:::i;:::-;6765:4;6687:97;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;6687:97:3;;;;;;;;;;;;:::i;:::-;6657:127;;6811:10;6822:1;6811:13;;;;;;;;:::i;:::-;;;;;;;6799:25;;6538:298;6496:1098;;;-1:-1:-1;;;;;6861:16:3;;2414:42;6861:16;:35;;;;-1:-1:-1;;;;;;6881:15:3;;2494:42;6881:15;6861:35;6860:91;;;-1:-1:-1;;;;;;6915:17:3;;2494:42;6915:17;:35;;;;-1:-1:-1;;;;;;6936:14:3;;2414:42;6936:14;6915:35;6842:752;;;6999:1;6985:16;;6842:752;7289:16;;;7303:1;7289:16;;;;;;;;;;;;;;;;;;;;-1:-1:-1;7289:16:3;7282:23;;7330:9;7320:4;7325:1;7320:7;;;;;;;;:::i;:::-;;;;;;:19;-1:-1:-1;;;;;7320:19:3;;;-1:-1:-1;;;;;7320:19:3;;;;;2335:42;7354:4;7359:1;7354:7;;;;;;;;:::i;:::-;;;;;;:14;-1:-1:-1;;;;;7354:14:3;;;-1:-1:-1;;;;;7354:14:3;;;;;7393:7;7383:4;7388:1;7383:7;;;;;;;;:::i;:::-;-1:-1:-1;;;;;7383:17:3;;;:7;;;;;;;;;:17;7445:6;;7415:27;;7445:6;:20;7484;7495:9;7484:8;:20;:::i;:::-;7523:4;7445:97;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;7445:97:3;;;;;;;;;;;;:::i;:::-;7415:127;;7569:10;7580:1;7569:13;;;;;;;;:::i;:::-;;;;;;;7557:25;;7267:327;6842:752;7610:6;;-1:-1:-1;;;;;7610:6:3;:60;7689:20;7700:9;7689:8;:20;:::i;:::-;7728:12;7759:4;7782:10;7811:25;:15;7829:7;7811:25;:::i;:::-;7610:241;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;7883:14:3;;2414:42;7883:14;:37;;;;-1:-1:-1;7901:19:3;;;;7883:37;7864:128;;;7948:32;7958:10;7970:9;7948;:32::i;:::-;6007:1992;;;;5854:2145;;;;:::o;4576:90::-;1531:13:0;:11;:13::i;:::-;4632:19:3::1;:26:::0;;-1:-1:-1;;4632:26:3::1;4654:4;4632:26;::::0;;4576:90::o;2941:26::-;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;2941:26:3;;-1:-1:-1;2941:26:3;:::o;2543:215:0:-;1531:13;:11;:13::i;:::-;-1:-1:-1;;;;;2627:22:0;::::1;2623:91;;2672:31;::::0;-1:-1:-1;;;2672:31:0;;2700:1:::1;2672:31;::::0;::::1;665:51:4::0;638:18;;2672:31:0::1;;;;;;;;2623:91;2723:28;2742:8;2723:18;:28::i;:::-;2543:215:::0;:::o;5541:264:3:-;-1:-1:-1;;;;;5639:20:3;;;;;;:14;:20;;;;;;;;5635:115;;5676:9;:20;;;;;;;;;;;;;-1:-1:-1;;;;;;5676:20:3;-1:-1:-1;;;;;5676:20:3;;;;;;;;-1:-1:-1;5711:20:3;;;:14;5676:20;5711;;;;:27;;-1:-1:-1;;5711:27:3;;;;;;5635:115;-1:-1:-1;;;;;5771:16:3;;;;;;:10;:16;;;;;:26;;5791:6;;5771:16;:26;;5791:6;;5771:26;:::i;:::-;;;;-1:-1:-1;;;;5541:264:3:o;4940:593::-;5013:15;-1:-1:-1;;;;;5031:17:3;;2335:42;5031:17;:25;;5055:1;5031:25;;;5051:1;5031:25;5013:43;;;;5070:7;5081:1;5070:12;5067:459;;5098:4;;;5112:11;5098:37;;-1:-1:-1;;;5098:37:3;;-1:-1:-1;;;;;5112:11:3;;;5098:37;;;7982:51:4;8049:18;;;8042:34;;;5098:4:3;;;:13;;7955:18:4;;5098:37:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;5002:531;4940:593;;:::o;5067:459::-;5168:21;5206:7;5192:22;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;5192:22:3;;5168:46;;5239:9;5229:4;5234:1;5229:7;;;;;;;;:::i;:::-;;;;;;:19;-1:-1:-1;;;;;5229:19:3;;;-1:-1:-1;;;;;5229:19:3;;;;;2335:42;5263:4;5268:1;5263:7;;;;;;;;:::i;:::-;-1:-1:-1;;;;;5263:14:3;;;:7;;;;;;;;;:14;5294:6;;;5444:11;5294:6;;;;:60;;5373:9;;5294:6;;5421:4;;5444:11;5474:25;:15;5492:7;5474:25;:::i;:::-;5294:220;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1796:162:0;1684:7;1710:6;-1:-1:-1;;;;;1710:6:0;735:10:2;1855:23:0;1851:101;;1901:40;;-1:-1:-1;;;1901:40:0;;735:10:2;1901:40:0;;;665:51:4;638:18;;1901:40:0;519:203:4;2912:187:0;2985:16;3004:6;;-1:-1:-1;;;;;3020:17:0;;;-1:-1:-1;;;;;;3020:17:0;;;;;;3052:40;;3004:6;;;;;;;3052:40;;2985:16;3052:40;2975:124;2912:187;:::o;-1:-1:-1:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;14:173:4:-;82:20;;-1:-1:-1;;;;;131:31:4;;121:42;;111:70;;177:1;174;167:12;111:70;14:173;;;:::o;192:322::-;269:6;277;285;338:2;326:9;317:7;313:23;309:32;306:52;;;354:1;351;344:12;306:52;377:29;396:9;377:29;:::i;:::-;367:39;453:2;438:18;;425:32;;-1:-1:-1;504:2:4;489:18;;;476:32;;192:322;-1:-1:-1;;;192:322:4:o;727:180::-;786:6;839:2;827:9;818:7;814:23;810:32;807:52;;;855:1;852;845:12;807:52;-1:-1:-1;878:23:4;;727:180;-1:-1:-1;727:180:4:o;912:254::-;980:6;988;1041:2;1029:9;1020:7;1016:23;1012:32;1009:52;;;1057:1;1054;1047:12;1009:52;1080:29;1099:9;1080:29;:::i;:::-;1070:39;1156:2;1141:18;;;;1128:32;;-1:-1:-1;;;912:254:4:o;1353:186::-;1412:6;1465:2;1453:9;1444:7;1440:23;1436:32;1433:52;;;1481:1;1478;1471:12;1433:52;1504:29;1523:9;1504:29;:::i;:::-;1494:39;1353:186;-1:-1:-1;;;1353:186:4:o;1736:810::-;1953:2;2005:21;;;2075:13;;1978:18;;;2097:22;;;1924:4;;1953:2;2138;;2156:18;;;;2197:15;;;1924:4;2240:280;2254:6;2251:1;2248:13;2240:280;;;2313:13;;2355:9;;-1:-1:-1;;;;;2351:35:4;2339:48;;2427:11;;2421:18;2407:12;;;2400:40;2460:12;;;;2495:15;;;;2383:1;2269:9;2240:280;;;-1:-1:-1;2537:3:4;;1736:810;-1:-1:-1;;;;;;;1736:810:4:o;2551:397::-;2637:6;2645;2653;2661;2714:3;2702:9;2693:7;2689:23;2685:33;2682:53;;;2731:1;2728;2721:12;2682:53;2754:29;2773:9;2754:29;:::i;:::-;2744:39;;2802:38;2836:2;2825:9;2821:18;2802:38;:::i;:::-;2551:397;;2792:48;;-1:-1:-1;;;;2887:2:4;2872:18;;2859:32;;2938:2;2923:18;2910:32;;2551:397::o;3333:277::-;3400:6;3453:2;3441:9;3432:7;3428:23;3424:32;3421:52;;;3469:1;3466;3459:12;3421:52;3501:9;3495:16;3554:5;3547:13;3540:21;3533:5;3530:32;3520:60;;3576:1;3573;3566:12;3615:127;3676:10;3671:3;3667:20;3664:1;3657:31;3707:4;3704:1;3697:15;3731:4;3728:1;3721:15;3747:168;3820:9;;;3851;;3868:15;;;3862:22;;3848:37;3838:71;;3889:18;;:::i;:::-;3747:168;;;;:::o;3920:217::-;3960:1;3986;3976:132;;4030:10;4025:3;4021:20;4018:1;4011:31;4065:4;4062:1;4055:15;4093:4;4090:1;4083:15;3976:132;-1:-1:-1;4122:9:4;;3920:217::o;4142:127::-;4203:10;4198:3;4194:20;4191:1;4184:31;4234:4;4231:1;4224:15;4258:4;4255:1;4248:15;4274:127;4335:10;4330:3;4326:20;4323:1;4316:31;4366:4;4363:1;4356:15;4390:4;4387:1;4380:15;4406:128;4473:9;;;4494:11;;;4491:37;;;4508:18;;:::i;4539:125::-;4604:9;;;4625:10;;;4622:36;;;4638:18;;:::i;4669:461::-;4722:3;4760:5;4754:12;4787:6;4782:3;4775:19;4813:4;4842:2;4837:3;4833:12;4826:19;;4879:2;4872:5;4868:14;4900:1;4910:195;4924:6;4921:1;4918:13;4910:195;;;4989:13;;-1:-1:-1;;;;;4985:39:4;4973:52;;5045:12;;;;5080:15;;;;5021:1;4939:9;4910:195;;;-1:-1:-1;5121:3:4;;4669:461;-1:-1:-1;;;;;4669:461:4:o;5135:574::-;5426:6;5415:9;5408:25;5469:6;5464:2;5453:9;5449:18;5442:34;5512:3;5507:2;5496:9;5492:18;5485:31;5389:4;5533:57;5585:3;5574:9;5570:19;5562:6;5533:57;:::i;:::-;-1:-1:-1;;;;;5626:32:4;;;;5621:2;5606:18;;5599:60;-1:-1:-1;5690:3:4;5675:19;5668:35;5525:65;5135:574;-1:-1:-1;;;5135:574:4:o;5714:135::-;5753:3;5774:17;;;5771:43;;5794:18;;:::i;:::-;-1:-1:-1;5841:1:4;5830:13;;5714:135::o;5854:332::-;6061:6;6050:9;6043:25;6104:2;6099;6088:9;6084:18;6077:30;6024:4;6124:56;6176:2;6165:9;6161:18;6153:6;6124:56;:::i;:::-;6116:64;5854:332;-1:-1:-1;;;;5854:332:4:o;6191:1105::-;6286:6;6317:2;6360;6348:9;6339:7;6335:23;6331:32;6328:52;;;6376:1;6373;6366:12;6328:52;6409:9;6403:16;6438:18;6479:2;6471:6;6468:14;6465:34;;;6495:1;6492;6485:12;6465:34;6533:6;6522:9;6518:22;6508:32;;6578:7;6571:4;6567:2;6563:13;6559:27;6549:55;;6600:1;6597;6590:12;6549:55;6629:2;6623:9;6651:2;6647;6644:10;6641:36;;;6657:18;;:::i;:::-;6703:2;6700:1;6696:10;6735:2;6729:9;6798:2;6794:7;6789:2;6785;6781:11;6777:25;6769:6;6765:38;6853:6;6841:10;6838:22;6833:2;6821:10;6818:18;6815:46;6812:72;;;6864:18;;:::i;:::-;6900:2;6893:22;6950:18;;;6984:15;;;;-1:-1:-1;7026:11:4;;;7022:20;;;7054:19;;;7051:39;;;7086:1;7083;7076:12;7051:39;7110:11;;;;7130:135;7146:6;7141:3;7138:15;7130:135;;;7212:10;;7200:23;;7163:12;;;;7243;;;;7130:135;;;7284:6;6191:1105;-1:-1:-1;;;;;;;;6191:1105:4:o;7301:502::-;7564:6;7553:9;7546:25;7607:3;7602:2;7591:9;7587:18;7580:31;7527:4;7628:57;7680:3;7669:9;7665:19;7657:6;7628:57;:::i;:::-;-1:-1:-1;;;;;7721:32:4;;;;7716:2;7701:18;;7694:60;-1:-1:-1;7785:2:4;7770:18;7763:34;7620:65;7301:502;-1:-1:-1;;7301:502:4:o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "1301400",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"ARY()": "315",
								"CUSDC()": "227",
								"CUSDT()": "249",
								"DEXFACTORY()": "293",
								"DEXROUTER()": "270",
								"MERY()": "337",
								"WCRO()": "250",
								"addresses(uint256)": "4688",
								"clearVolume()": "infinite",
								"competition_started()": "2376",
								"deposit()": "infinite",
								"feePercent()": "2405",
								"feeReceiver()": "2370",
								"getUserVolumes()": "infinite",
								"owner()": "2451",
								"renounceOwnership()": "infinite",
								"setFeeData(address,uint256)": "48949",
								"startCompetition()": "26574",
								"stopCompetition()": "26547",
								"swapCROForToken(address,uint256)": "infinite",
								"swapTokenForCRO(address,uint256,uint256)": "infinite",
								"swapTokenForToken(address,address,uint256,uint256)": "infinite",
								"transferOwnership(address)": "28439",
								"userVolume(address)": "2561",
								"withdraw(uint256)": "infinite"
							},
							"internal": {
								"addVolume(address,uint256)": "99399",
								"getFee(address,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 2107,
									"end": 10094,
									"name": "PUSH",
									"source": 3,
									"value": "80"
								},
								{
									"begin": 2107,
									"end": 10094,
									"name": "PUSH",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 2107,
									"end": 10094,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 2797,
									"end": 2836,
									"name": "PUSH",
									"source": 3,
									"value": "3"
								},
								{
									"begin": 2797,
									"end": 2836,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 2797,
									"end": 2836,
									"name": "SLOAD",
									"source": 3
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "FF"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 2797,
									"end": 2836,
									"name": "AND",
									"source": 3
								},
								{
									"begin": 2797,
									"end": 2836,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 2797,
									"end": 2836,
									"name": "SSTORE",
									"source": 3
								},
								{
									"begin": 3118,
									"end": 3760,
									"name": "CALLVALUE",
									"source": 3
								},
								{
									"begin": 3118,
									"end": 3760,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 3118,
									"end": 3760,
									"name": "ISZERO",
									"source": 3
								},
								{
									"begin": 3118,
									"end": 3760,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "1"
								},
								{
									"begin": 3118,
									"end": 3760,
									"name": "JUMPI",
									"source": 3
								},
								{
									"begin": 3118,
									"end": 3760,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 3118,
									"end": 3760,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 3118,
									"end": 3760,
									"name": "REVERT",
									"source": 3
								},
								{
									"begin": 3118,
									"end": 3760,
									"name": "tag",
									"source": 3,
									"value": "1"
								},
								{
									"begin": 3118,
									"end": 3760,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 3140,
									"end": 3150,
									"name": "CALLER",
									"source": 3
								},
								{
									"begin": 3140,
									"end": 3150,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "5"
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1E4FBDF7"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 1350,
									"end": 1351,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 160,
									"end": 211,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 133,
									"end": 151,
									"name": "PUSH",
									"source": 4,
									"value": "24"
								},
								{
									"begin": 133,
									"end": 151,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "tag",
									"source": 0,
									"value": "5"
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "8"
								},
								{
									"begin": 1392,
									"end": 1404,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1391,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "9"
								},
								{
									"begin": 1373,
									"end": 1405,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "tag",
									"source": 0,
									"value": "8"
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 3163,
									"end": 3170,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 3,
									"value": "7"
								},
								{
									"begin": 3163,
									"end": 3196,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 3163,
									"end": 3196,
									"name": "SLOAD",
									"source": 3
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 3163,
									"end": 3196,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 3163,
									"end": 3196,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 3163,
									"end": 3196,
									"modifierDepth": 1,
									"name": "AND",
									"source": 3
								},
								{
									"begin": 2683,
									"end": 2725,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 3,
									"value": "3B44B2A187A7B3824131F8DB5A74194D0A42FC15"
								},
								{
									"begin": 3163,
									"end": 3196,
									"modifierDepth": 1,
									"name": "OR",
									"source": 3
								},
								{
									"begin": 3163,
									"end": 3196,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 3163,
									"end": 3196,
									"name": "SWAP2",
									"source": 3
								},
								{
									"begin": 3163,
									"end": 3196,
									"name": "SSTORE",
									"source": 3
								},
								{
									"begin": 3207,
									"end": 3213,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 3,
									"value": "8"
								},
								{
									"begin": 3207,
									"end": 3237,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 3207,
									"end": 3237,
									"name": "SLOAD",
									"source": 3
								},
								{
									"begin": 3207,
									"end": 3237,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 3207,
									"end": 3237,
									"modifierDepth": 1,
									"name": "AND",
									"source": 3
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "DUP1",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "MLOAD",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "20"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH data",
									"source": -1,
									"value": "BB9835C734EA2EE08B9EB3F6004F5F118E5B999FBE41C94259AC9A08CB0AFF12"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "DUP4",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "CODECOPY",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "DUP2",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "MLOAD",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SWAP2",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "MSTORE",
									"source": -1
								},
								{
									"begin": 3207,
									"end": 3237,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 3207,
									"end": 3237,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 3207,
									"end": 3237,
									"modifierDepth": 1,
									"name": "OR",
									"source": 3
								},
								{
									"begin": 3207,
									"end": 3237,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 3207,
									"end": 3237,
									"name": "SWAP2",
									"source": 3
								},
								{
									"begin": 3207,
									"end": 3237,
									"name": "SSTORE",
									"source": 3
								},
								{
									"begin": 3248,
									"end": 3253,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 3,
									"value": "9"
								},
								{
									"begin": 3248,
									"end": 3269,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 3248,
									"end": 3269,
									"name": "SLOAD",
									"source": 3
								},
								{
									"begin": 3248,
									"end": 3269,
									"name": "DUP4",
									"source": 3
								},
								{
									"begin": 3248,
									"end": 3269,
									"modifierDepth": 1,
									"name": "AND",
									"source": 3
								},
								{
									"begin": 2174,
									"end": 2216,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 3,
									"value": "C21223249CA28397B4B6541DFFAECC539BFF0C59"
								},
								{
									"begin": 3248,
									"end": 3269,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 3248,
									"end": 3269,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 3248,
									"end": 3269,
									"modifierDepth": 1,
									"name": "OR",
									"source": 3
								},
								{
									"begin": 3248,
									"end": 3269,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 3248,
									"end": 3269,
									"name": "SWAP2",
									"source": 3
								},
								{
									"begin": 3248,
									"end": 3269,
									"name": "SSTORE",
									"source": 3
								},
								{
									"begin": 3280,
									"end": 3285,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 3,
									"value": "A"
								},
								{
									"begin": 3280,
									"end": 3301,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 3280,
									"end": 3301,
									"name": "SLOAD",
									"source": 3
								},
								{
									"begin": 3280,
									"end": 3301,
									"name": "DUP5",
									"source": 3
								},
								{
									"begin": 3280,
									"end": 3301,
									"modifierDepth": 1,
									"name": "AND",
									"source": 3
								},
								{
									"begin": 2255,
									"end": 2297,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 3,
									"value": "66E428C3F67A68878562E79A0234C1F83C208770"
								},
								{
									"begin": 3280,
									"end": 3301,
									"modifierDepth": 1,
									"name": "OR",
									"source": 3
								},
								{
									"begin": 3280,
									"end": 3301,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 3280,
									"end": 3301,
									"name": "SSTORE",
									"source": 3
								},
								{
									"begin": 3312,
									"end": 3315,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 3,
									"value": "B"
								},
								{
									"begin": 3312,
									"end": 3329,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 3312,
									"end": 3329,
									"name": "SLOAD",
									"source": 3
								},
								{
									"begin": 3312,
									"end": 3329,
									"name": "DUP5",
									"source": 3
								},
								{
									"begin": 3312,
									"end": 3329,
									"modifierDepth": 1,
									"name": "AND",
									"source": 3
								},
								{
									"begin": 2414,
									"end": 2456,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 3,
									"value": "41BC026DABE978BC2FAFEA1850456511CA4B01BC"
								},
								{
									"begin": 3312,
									"end": 3329,
									"modifierDepth": 1,
									"name": "OR",
									"source": 3
								},
								{
									"begin": 3312,
									"end": 3329,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 3312,
									"end": 3329,
									"name": "SSTORE",
									"source": 3
								},
								{
									"begin": 3340,
									"end": 3344,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 3,
									"value": "C"
								},
								{
									"begin": 3340,
									"end": 3359,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 3340,
									"end": 3359,
									"name": "SLOAD",
									"source": 3
								},
								{
									"begin": 3340,
									"end": 3359,
									"name": "DUP5",
									"source": 3
								},
								{
									"begin": 3340,
									"end": 3359,
									"modifierDepth": 1,
									"name": "AND",
									"source": 3
								},
								{
									"begin": 2494,
									"end": 2536,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 3,
									"value": "3B41B27E74DD366CE27CB389DC7877D4E1516D4D"
								},
								{
									"begin": 3340,
									"end": 3359,
									"modifierDepth": 1,
									"name": "OR",
									"source": 3
								},
								{
									"begin": 3340,
									"end": 3359,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 3340,
									"end": 3359,
									"name": "SSTORE",
									"source": 3
								},
								{
									"begin": 3370,
									"end": 3374,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 3,
									"value": "D"
								},
								{
									"begin": 3370,
									"end": 3388,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 3370,
									"end": 3388,
									"name": "SLOAD",
									"source": 3
								},
								{
									"begin": 3370,
									"end": 3388,
									"name": "DUP5",
									"source": 3
								},
								{
									"begin": 3370,
									"end": 3388,
									"modifierDepth": 1,
									"name": "AND",
									"source": 3
								},
								{
									"begin": 2335,
									"end": 2377,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 3,
									"value": "5C7F8A570D578ED84E63FDFA7B1EE72DEAE1AE23"
								},
								{
									"begin": 3370,
									"end": 3388,
									"modifierDepth": 1,
									"name": "OR",
									"source": 3
								},
								{
									"begin": 3370,
									"end": 3388,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 3370,
									"end": 3388,
									"name": "SSTORE",
									"source": 3
								},
								{
									"begin": 3163,
									"end": 3196,
									"name": "PUSH",
									"source": 3,
									"value": "1"
								},
								{
									"begin": 3399,
									"end": 3423,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 3399,
									"end": 3423,
									"name": "SLOAD",
									"source": 3
								},
								{
									"begin": 3399,
									"end": 3423,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 3399,
									"end": 3423,
									"name": "SWAP4",
									"source": 3
								},
								{
									"begin": 3399,
									"end": 3423,
									"modifierDepth": 1,
									"name": "AND",
									"source": 3
								},
								{
									"begin": 3413,
									"end": 3423,
									"modifierDepth": 1,
									"name": "CALLER",
									"source": 3
								},
								{
									"begin": 3399,
									"end": 3423,
									"modifierDepth": 1,
									"name": "OR",
									"source": 3
								},
								{
									"begin": 3399,
									"end": 3423,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 3399,
									"end": 3423,
									"name": "SWAP3",
									"source": 3
								},
								{
									"begin": 3399,
									"end": 3423,
									"name": "SSTORE",
									"source": 3
								},
								{
									"begin": 3447,
									"end": 3448,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 3,
									"value": "3"
								},
								{
									"begin": 3434,
									"end": 3444,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 3,
									"value": "2"
								},
								{
									"begin": 3434,
									"end": 3448,
									"name": "SSTORE",
									"source": 3
								},
								{
									"begin": 3497,
									"end": 3540,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 3497,
									"end": 3540,
									"name": "MLOAD",
									"source": 3
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "95EA7B3"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 3497,
									"end": 3540,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 3497,
									"end": 3540,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 3497,
									"end": 3510,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 3,
									"value": "95EA7B3"
								},
								{
									"begin": 3497,
									"end": 3510,
									"name": "SWAP2",
									"source": 3
								},
								{
									"begin": 3497,
									"end": 3540,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "11"
								},
								{
									"begin": 3497,
									"end": 3540,
									"name": "SWAP2",
									"source": 3
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SWAP1",
									"source": -1
								},
								{
									"begin": 3497,
									"end": 3540,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 3,
									"value": "4"
								},
								{
									"begin": 3497,
									"end": 3540,
									"modifierDepth": 1,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 414,
									"end": 446,
									"name": "SWAP3",
									"source": 4
								},
								{
									"begin": 414,
									"end": 446,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 414,
									"end": 446,
									"name": "SWAP3",
									"source": 4
								},
								{
									"begin": 414,
									"end": 446,
									"name": "AND",
									"source": 4
								},
								{
									"begin": 396,
									"end": 447,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 396,
									"end": 447,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 478,
									"end": 480,
									"name": "PUSH",
									"source": 4,
									"value": "20"
								},
								{
									"begin": 463,
									"end": 481,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 463,
									"end": 481,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 456,
									"end": 490,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 384,
									"end": 386,
									"name": "PUSH",
									"source": 4,
									"value": "40"
								},
								{
									"begin": 369,
									"end": 387,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 369,
									"end": 387,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 222,
									"end": 496,
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 3497,
									"end": 3540,
									"modifierDepth": 1,
									"name": "tag",
									"source": 3,
									"value": "11"
								},
								{
									"begin": 3497,
									"end": 3540,
									"modifierDepth": 1,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 3497,
									"end": 3540,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 3,
									"value": "20"
								},
								{
									"begin": 3497,
									"end": 3540,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 3497,
									"end": 3540,
									"modifierDepth": 1,
									"name": "MLOAD",
									"source": 3
								},
								{
									"begin": 3497,
									"end": 3540,
									"modifierDepth": 1,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 3497,
									"end": 3540,
									"modifierDepth": 1,
									"name": "DUP4",
									"source": 3
								},
								{
									"begin": 3497,
									"end": 3540,
									"modifierDepth": 1,
									"name": "SUB",
									"source": 3
								},
								{
									"begin": 3497,
									"end": 3540,
									"modifierDepth": 1,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 3497,
									"end": 3540,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 3497,
									"end": 3540,
									"modifierDepth": 1,
									"name": "DUP8",
									"source": 3
								},
								{
									"begin": 3497,
									"end": 3540,
									"modifierDepth": 1,
									"name": "GAS",
									"source": 3
								},
								{
									"begin": 3497,
									"end": 3540,
									"modifierDepth": 1,
									"name": "CALL",
									"source": 3
								},
								{
									"begin": 3497,
									"end": 3540,
									"modifierDepth": 1,
									"name": "ISZERO",
									"source": 3
								},
								{
									"begin": 3497,
									"end": 3540,
									"modifierDepth": 1,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 3497,
									"end": 3540,
									"modifierDepth": 1,
									"name": "ISZERO",
									"source": 3
								},
								{
									"begin": 3497,
									"end": 3540,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "14"
								},
								{
									"begin": 3497,
									"end": 3540,
									"modifierDepth": 1,
									"name": "JUMPI",
									"source": 3
								},
								{
									"begin": 3497,
									"end": 3540,
									"modifierDepth": 1,
									"name": "RETURNDATASIZE",
									"source": 3
								},
								{
									"begin": 3497,
									"end": 3540,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 3497,
									"end": 3540,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 3497,
									"end": 3540,
									"modifierDepth": 1,
									"name": "RETURNDATACOPY",
									"source": 3
								},
								{
									"begin": 3497,
									"end": 3540,
									"modifierDepth": 1,
									"name": "RETURNDATASIZE",
									"source": 3
								},
								{
									"begin": 3497,
									"end": 3540,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 3497,
									"end": 3540,
									"modifierDepth": 1,
									"name": "REVERT",
									"source": 3
								},
								{
									"begin": 3497,
									"end": 3540,
									"modifierDepth": 1,
									"name": "tag",
									"source": 3,
									"value": "14"
								},
								{
									"begin": 3497,
									"end": 3540,
									"modifierDepth": 1,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 3497,
									"end": 3540,
									"modifierDepth": 1,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 3497,
									"end": 3540,
									"modifierDepth": 1,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 3497,
									"end": 3540,
									"modifierDepth": 1,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 3497,
									"end": 3540,
									"modifierDepth": 1,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 3497,
									"end": 3540,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 3497,
									"end": 3540,
									"modifierDepth": 1,
									"name": "MLOAD",
									"source": 3
								},
								{
									"begin": 3497,
									"end": 3540,
									"modifierDepth": 1,
									"name": "RETURNDATASIZE",
									"source": 3
								},
								{
									"begin": 3497,
									"end": 3540,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 3,
									"value": "1F"
								},
								{
									"begin": 3497,
									"end": 3540,
									"modifierDepth": 1,
									"name": "NOT",
									"source": 3
								},
								{
									"begin": 3497,
									"end": 3540,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 3,
									"value": "1F"
								},
								{
									"begin": 3497,
									"end": 3540,
									"modifierDepth": 1,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 3497,
									"end": 3540,
									"modifierDepth": 1,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 3497,
									"end": 3540,
									"modifierDepth": 1,
									"name": "AND",
									"source": 3
								},
								{
									"begin": 3497,
									"end": 3540,
									"modifierDepth": 1,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 3497,
									"end": 3540,
									"modifierDepth": 1,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 3497,
									"end": 3540,
									"modifierDepth": 1,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 3497,
									"end": 3540,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 3497,
									"end": 3540,
									"modifierDepth": 1,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 3497,
									"end": 3540,
									"modifierDepth": 1,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 3497,
									"end": 3540,
									"modifierDepth": 1,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 3497,
									"end": 3540,
									"modifierDepth": 1,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 3497,
									"end": 3540,
									"modifierDepth": 1,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 3497,
									"end": 3540,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "15"
								},
								{
									"begin": 3497,
									"end": 3540,
									"modifierDepth": 1,
									"name": "SWAP2",
									"source": 3
								},
								{
									"begin": 3497,
									"end": 3540,
									"modifierDepth": 1,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 3497,
									"end": 3540,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "16"
								},
								{
									"begin": 3497,
									"end": 3540,
									"jumpType": "[in]",
									"modifierDepth": 1,
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 3497,
									"end": 3540,
									"modifierDepth": 1,
									"name": "tag",
									"source": 3,
									"value": "15"
								},
								{
									"begin": 3497,
									"end": 3540,
									"modifierDepth": 1,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 3551,
									"end": 3556,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 3,
									"value": "A"
								},
								{
									"begin": 3551,
									"end": 3556,
									"name": "SLOAD",
									"source": 3
								},
								{
									"begin": 3551,
									"end": 3594,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 3551,
									"end": 3594,
									"name": "MLOAD",
									"source": 3
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "95EA7B3"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 3551,
									"end": 3594,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 3551,
									"end": 3594,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "DUP1",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "MLOAD",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "20"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH data",
									"source": -1,
									"value": "BB9835C734EA2EE08B9EB3F6004F5F118E5B999FBE41C94259AC9A08CB0AFF12"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "DUP4",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "CODECOPY",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "DUP2",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "MLOAD",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SWAP2",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "MSTORE",
									"source": -1
								},
								{
									"begin": 3551,
									"end": 3594,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 3,
									"value": "4"
								},
								{
									"begin": 3551,
									"end": 3594,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 3551,
									"end": 3594,
									"modifierDepth": 1,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 396,
									"end": 447,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 463,
									"end": 481,
									"name": "PUSH",
									"source": 4,
									"value": "24"
								},
								{
									"begin": 463,
									"end": 481,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 463,
									"end": 481,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 456,
									"end": 490,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 3551,
									"end": 3556,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 3551,
									"end": 3556,
									"name": "SWAP2",
									"source": 3
								},
								{
									"begin": 3551,
									"end": 3556,
									"modifierDepth": 1,
									"name": "AND",
									"source": 3
								},
								{
									"begin": 3551,
									"end": 3556,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 3551,
									"end": 3564,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 3,
									"value": "95EA7B3"
								},
								{
									"begin": 3551,
									"end": 3564,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 369,
									"end": 387,
									"name": "PUSH",
									"source": 4,
									"value": "44"
								},
								{
									"begin": 369,
									"end": 387,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 3551,
									"end": 3594,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 3,
									"value": "20"
								},
								{
									"begin": 3551,
									"end": 3594,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 3551,
									"end": 3594,
									"modifierDepth": 1,
									"name": "MLOAD",
									"source": 3
								},
								{
									"begin": 3551,
									"end": 3594,
									"modifierDepth": 1,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 3551,
									"end": 3594,
									"modifierDepth": 1,
									"name": "DUP4",
									"source": 3
								},
								{
									"begin": 3551,
									"end": 3594,
									"modifierDepth": 1,
									"name": "SUB",
									"source": 3
								},
								{
									"begin": 3551,
									"end": 3594,
									"modifierDepth": 1,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 3551,
									"end": 3594,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 3551,
									"end": 3594,
									"modifierDepth": 1,
									"name": "DUP8",
									"source": 3
								},
								{
									"begin": 3551,
									"end": 3594,
									"modifierDepth": 1,
									"name": "GAS",
									"source": 3
								},
								{
									"begin": 3551,
									"end": 3594,
									"modifierDepth": 1,
									"name": "CALL",
									"source": 3
								},
								{
									"begin": 3551,
									"end": 3594,
									"modifierDepth": 1,
									"name": "ISZERO",
									"source": 3
								},
								{
									"begin": 3551,
									"end": 3594,
									"modifierDepth": 1,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 3551,
									"end": 3594,
									"modifierDepth": 1,
									"name": "ISZERO",
									"source": 3
								},
								{
									"begin": 3551,
									"end": 3594,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "19"
								},
								{
									"begin": 3551,
									"end": 3594,
									"modifierDepth": 1,
									"name": "JUMPI",
									"source": 3
								},
								{
									"begin": 3551,
									"end": 3594,
									"modifierDepth": 1,
									"name": "RETURNDATASIZE",
									"source": 3
								},
								{
									"begin": 3551,
									"end": 3594,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 3551,
									"end": 3594,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 3551,
									"end": 3594,
									"modifierDepth": 1,
									"name": "RETURNDATACOPY",
									"source": 3
								},
								{
									"begin": 3551,
									"end": 3594,
									"modifierDepth": 1,
									"name": "RETURNDATASIZE",
									"source": 3
								},
								{
									"begin": 3551,
									"end": 3594,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 3551,
									"end": 3594,
									"modifierDepth": 1,
									"name": "REVERT",
									"source": 3
								},
								{
									"begin": 3551,
									"end": 3594,
									"modifierDepth": 1,
									"name": "tag",
									"source": 3,
									"value": "19"
								},
								{
									"begin": 3551,
									"end": 3594,
									"modifierDepth": 1,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 3551,
									"end": 3594,
									"modifierDepth": 1,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 3551,
									"end": 3594,
									"modifierDepth": 1,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 3551,
									"end": 3594,
									"modifierDepth": 1,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 3551,
									"end": 3594,
									"modifierDepth": 1,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 3551,
									"end": 3594,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 3551,
									"end": 3594,
									"modifierDepth": 1,
									"name": "MLOAD",
									"source": 3
								},
								{
									"begin": 3551,
									"end": 3594,
									"modifierDepth": 1,
									"name": "RETURNDATASIZE",
									"source": 3
								},
								{
									"begin": 3551,
									"end": 3594,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 3,
									"value": "1F"
								},
								{
									"begin": 3551,
									"end": 3594,
									"modifierDepth": 1,
									"name": "NOT",
									"source": 3
								},
								{
									"begin": 3551,
									"end": 3594,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 3,
									"value": "1F"
								},
								{
									"begin": 3551,
									"end": 3594,
									"modifierDepth": 1,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 3551,
									"end": 3594,
									"modifierDepth": 1,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 3551,
									"end": 3594,
									"modifierDepth": 1,
									"name": "AND",
									"source": 3
								},
								{
									"begin": 3551,
									"end": 3594,
									"modifierDepth": 1,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 3551,
									"end": 3594,
									"modifierDepth": 1,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 3551,
									"end": 3594,
									"modifierDepth": 1,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 3551,
									"end": 3594,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 3551,
									"end": 3594,
									"modifierDepth": 1,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 3551,
									"end": 3594,
									"modifierDepth": 1,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 3551,
									"end": 3594,
									"modifierDepth": 1,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 3551,
									"end": 3594,
									"modifierDepth": 1,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 3551,
									"end": 3594,
									"modifierDepth": 1,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 3551,
									"end": 3594,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "20"
								},
								{
									"begin": 3551,
									"end": 3594,
									"modifierDepth": 1,
									"name": "SWAP2",
									"source": 3
								},
								{
									"begin": 3551,
									"end": 3594,
									"modifierDepth": 1,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 3551,
									"end": 3594,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "16"
								},
								{
									"begin": 3551,
									"end": 3594,
									"jumpType": "[in]",
									"modifierDepth": 1,
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 3551,
									"end": 3594,
									"modifierDepth": 1,
									"name": "tag",
									"source": 3,
									"value": "20"
								},
								{
									"begin": 3551,
									"end": 3594,
									"modifierDepth": 1,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 3605,
									"end": 3608,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 3,
									"value": "B"
								},
								{
									"begin": 3605,
									"end": 3608,
									"name": "SLOAD",
									"source": 3
								},
								{
									"begin": 3605,
									"end": 3646,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 3605,
									"end": 3646,
									"name": "MLOAD",
									"source": 3
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "95EA7B3"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 3605,
									"end": 3646,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 3605,
									"end": 3646,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "DUP1",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "MLOAD",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "20"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH data",
									"source": -1,
									"value": "BB9835C734EA2EE08B9EB3F6004F5F118E5B999FBE41C94259AC9A08CB0AFF12"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "DUP4",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "CODECOPY",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "DUP2",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "MLOAD",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SWAP2",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "MSTORE",
									"source": -1
								},
								{
									"begin": 3605,
									"end": 3646,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 3,
									"value": "4"
								},
								{
									"begin": 3605,
									"end": 3646,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 3605,
									"end": 3646,
									"modifierDepth": 1,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 396,
									"end": 447,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 463,
									"end": 481,
									"name": "PUSH",
									"source": 4,
									"value": "24"
								},
								{
									"begin": 463,
									"end": 481,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 463,
									"end": 481,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 456,
									"end": 490,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 3605,
									"end": 3608,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 3605,
									"end": 3608,
									"name": "SWAP2",
									"source": 3
								},
								{
									"begin": 3605,
									"end": 3608,
									"modifierDepth": 1,
									"name": "AND",
									"source": 3
								},
								{
									"begin": 3605,
									"end": 3608,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 3605,
									"end": 3616,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 3,
									"value": "95EA7B3"
								},
								{
									"begin": 3605,
									"end": 3616,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 369,
									"end": 387,
									"name": "PUSH",
									"source": 4,
									"value": "44"
								},
								{
									"begin": 369,
									"end": 387,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 3605,
									"end": 3646,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 3,
									"value": "20"
								},
								{
									"begin": 3605,
									"end": 3646,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 3605,
									"end": 3646,
									"modifierDepth": 1,
									"name": "MLOAD",
									"source": 3
								},
								{
									"begin": 3605,
									"end": 3646,
									"modifierDepth": 1,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 3605,
									"end": 3646,
									"modifierDepth": 1,
									"name": "DUP4",
									"source": 3
								},
								{
									"begin": 3605,
									"end": 3646,
									"modifierDepth": 1,
									"name": "SUB",
									"source": 3
								},
								{
									"begin": 3605,
									"end": 3646,
									"modifierDepth": 1,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 3605,
									"end": 3646,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 3605,
									"end": 3646,
									"modifierDepth": 1,
									"name": "DUP8",
									"source": 3
								},
								{
									"begin": 3605,
									"end": 3646,
									"modifierDepth": 1,
									"name": "GAS",
									"source": 3
								},
								{
									"begin": 3605,
									"end": 3646,
									"modifierDepth": 1,
									"name": "CALL",
									"source": 3
								},
								{
									"begin": 3605,
									"end": 3646,
									"modifierDepth": 1,
									"name": "ISZERO",
									"source": 3
								},
								{
									"begin": 3605,
									"end": 3646,
									"modifierDepth": 1,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 3605,
									"end": 3646,
									"modifierDepth": 1,
									"name": "ISZERO",
									"source": 3
								},
								{
									"begin": 3605,
									"end": 3646,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "23"
								},
								{
									"begin": 3605,
									"end": 3646,
									"modifierDepth": 1,
									"name": "JUMPI",
									"source": 3
								},
								{
									"begin": 3605,
									"end": 3646,
									"modifierDepth": 1,
									"name": "RETURNDATASIZE",
									"source": 3
								},
								{
									"begin": 3605,
									"end": 3646,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 3605,
									"end": 3646,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 3605,
									"end": 3646,
									"modifierDepth": 1,
									"name": "RETURNDATACOPY",
									"source": 3
								},
								{
									"begin": 3605,
									"end": 3646,
									"modifierDepth": 1,
									"name": "RETURNDATASIZE",
									"source": 3
								},
								{
									"begin": 3605,
									"end": 3646,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 3605,
									"end": 3646,
									"modifierDepth": 1,
									"name": "REVERT",
									"source": 3
								},
								{
									"begin": 3605,
									"end": 3646,
									"modifierDepth": 1,
									"name": "tag",
									"source": 3,
									"value": "23"
								},
								{
									"begin": 3605,
									"end": 3646,
									"modifierDepth": 1,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 3605,
									"end": 3646,
									"modifierDepth": 1,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 3605,
									"end": 3646,
									"modifierDepth": 1,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 3605,
									"end": 3646,
									"modifierDepth": 1,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 3605,
									"end": 3646,
									"modifierDepth": 1,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 3605,
									"end": 3646,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 3605,
									"end": 3646,
									"modifierDepth": 1,
									"name": "MLOAD",
									"source": 3
								},
								{
									"begin": 3605,
									"end": 3646,
									"modifierDepth": 1,
									"name": "RETURNDATASIZE",
									"source": 3
								},
								{
									"begin": 3605,
									"end": 3646,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 3,
									"value": "1F"
								},
								{
									"begin": 3605,
									"end": 3646,
									"modifierDepth": 1,
									"name": "NOT",
									"source": 3
								},
								{
									"begin": 3605,
									"end": 3646,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 3,
									"value": "1F"
								},
								{
									"begin": 3605,
									"end": 3646,
									"modifierDepth": 1,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 3605,
									"end": 3646,
									"modifierDepth": 1,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 3605,
									"end": 3646,
									"modifierDepth": 1,
									"name": "AND",
									"source": 3
								},
								{
									"begin": 3605,
									"end": 3646,
									"modifierDepth": 1,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 3605,
									"end": 3646,
									"modifierDepth": 1,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 3605,
									"end": 3646,
									"modifierDepth": 1,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 3605,
									"end": 3646,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 3605,
									"end": 3646,
									"modifierDepth": 1,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 3605,
									"end": 3646,
									"modifierDepth": 1,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 3605,
									"end": 3646,
									"modifierDepth": 1,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 3605,
									"end": 3646,
									"modifierDepth": 1,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 3605,
									"end": 3646,
									"modifierDepth": 1,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 3605,
									"end": 3646,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "24"
								},
								{
									"begin": 3605,
									"end": 3646,
									"modifierDepth": 1,
									"name": "SWAP2",
									"source": 3
								},
								{
									"begin": 3605,
									"end": 3646,
									"modifierDepth": 1,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 3605,
									"end": 3646,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "16"
								},
								{
									"begin": 3605,
									"end": 3646,
									"jumpType": "[in]",
									"modifierDepth": 1,
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 3605,
									"end": 3646,
									"modifierDepth": 1,
									"name": "tag",
									"source": 3,
									"value": "24"
								},
								{
									"begin": 3605,
									"end": 3646,
									"modifierDepth": 1,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 3657,
									"end": 3661,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 3,
									"value": "D"
								},
								{
									"begin": 3657,
									"end": 3661,
									"name": "SLOAD",
									"source": 3
								},
								{
									"begin": 3657,
									"end": 3699,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 3657,
									"end": 3699,
									"name": "MLOAD",
									"source": 3
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "95EA7B3"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 3657,
									"end": 3699,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 3657,
									"end": 3699,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "DUP1",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "MLOAD",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "20"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH data",
									"source": -1,
									"value": "BB9835C734EA2EE08B9EB3F6004F5F118E5B999FBE41C94259AC9A08CB0AFF12"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "DUP4",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "CODECOPY",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "DUP2",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "MLOAD",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SWAP2",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "MSTORE",
									"source": -1
								},
								{
									"begin": 3657,
									"end": 3699,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 3,
									"value": "4"
								},
								{
									"begin": 3657,
									"end": 3699,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 3657,
									"end": 3699,
									"modifierDepth": 1,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 396,
									"end": 447,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 463,
									"end": 481,
									"name": "PUSH",
									"source": 4,
									"value": "24"
								},
								{
									"begin": 463,
									"end": 481,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 463,
									"end": 481,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 456,
									"end": 490,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 3657,
									"end": 3661,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 3657,
									"end": 3661,
									"name": "SWAP2",
									"source": 3
								},
								{
									"begin": 3657,
									"end": 3661,
									"modifierDepth": 1,
									"name": "AND",
									"source": 3
								},
								{
									"begin": 3657,
									"end": 3661,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 3657,
									"end": 3669,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 3,
									"value": "95EA7B3"
								},
								{
									"begin": 3657,
									"end": 3669,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 369,
									"end": 387,
									"name": "PUSH",
									"source": 4,
									"value": "44"
								},
								{
									"begin": 369,
									"end": 387,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 3657,
									"end": 3699,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 3,
									"value": "20"
								},
								{
									"begin": 3657,
									"end": 3699,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 3657,
									"end": 3699,
									"modifierDepth": 1,
									"name": "MLOAD",
									"source": 3
								},
								{
									"begin": 3657,
									"end": 3699,
									"modifierDepth": 1,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 3657,
									"end": 3699,
									"modifierDepth": 1,
									"name": "DUP4",
									"source": 3
								},
								{
									"begin": 3657,
									"end": 3699,
									"modifierDepth": 1,
									"name": "SUB",
									"source": 3
								},
								{
									"begin": 3657,
									"end": 3699,
									"modifierDepth": 1,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 3657,
									"end": 3699,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 3657,
									"end": 3699,
									"modifierDepth": 1,
									"name": "DUP8",
									"source": 3
								},
								{
									"begin": 3657,
									"end": 3699,
									"modifierDepth": 1,
									"name": "GAS",
									"source": 3
								},
								{
									"begin": 3657,
									"end": 3699,
									"modifierDepth": 1,
									"name": "CALL",
									"source": 3
								},
								{
									"begin": 3657,
									"end": 3699,
									"modifierDepth": 1,
									"name": "ISZERO",
									"source": 3
								},
								{
									"begin": 3657,
									"end": 3699,
									"modifierDepth": 1,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 3657,
									"end": 3699,
									"modifierDepth": 1,
									"name": "ISZERO",
									"source": 3
								},
								{
									"begin": 3657,
									"end": 3699,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "27"
								},
								{
									"begin": 3657,
									"end": 3699,
									"modifierDepth": 1,
									"name": "JUMPI",
									"source": 3
								},
								{
									"begin": 3657,
									"end": 3699,
									"modifierDepth": 1,
									"name": "RETURNDATASIZE",
									"source": 3
								},
								{
									"begin": 3657,
									"end": 3699,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 3657,
									"end": 3699,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 3657,
									"end": 3699,
									"modifierDepth": 1,
									"name": "RETURNDATACOPY",
									"source": 3
								},
								{
									"begin": 3657,
									"end": 3699,
									"modifierDepth": 1,
									"name": "RETURNDATASIZE",
									"source": 3
								},
								{
									"begin": 3657,
									"end": 3699,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 3657,
									"end": 3699,
									"modifierDepth": 1,
									"name": "REVERT",
									"source": 3
								},
								{
									"begin": 3657,
									"end": 3699,
									"modifierDepth": 1,
									"name": "tag",
									"source": 3,
									"value": "27"
								},
								{
									"begin": 3657,
									"end": 3699,
									"modifierDepth": 1,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 3657,
									"end": 3699,
									"modifierDepth": 1,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 3657,
									"end": 3699,
									"modifierDepth": 1,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 3657,
									"end": 3699,
									"modifierDepth": 1,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 3657,
									"end": 3699,
									"modifierDepth": 1,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 3657,
									"end": 3699,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 3657,
									"end": 3699,
									"modifierDepth": 1,
									"name": "MLOAD",
									"source": 3
								},
								{
									"begin": 3657,
									"end": 3699,
									"modifierDepth": 1,
									"name": "RETURNDATASIZE",
									"source": 3
								},
								{
									"begin": 3657,
									"end": 3699,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 3,
									"value": "1F"
								},
								{
									"begin": 3657,
									"end": 3699,
									"modifierDepth": 1,
									"name": "NOT",
									"source": 3
								},
								{
									"begin": 3657,
									"end": 3699,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 3,
									"value": "1F"
								},
								{
									"begin": 3657,
									"end": 3699,
									"modifierDepth": 1,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 3657,
									"end": 3699,
									"modifierDepth": 1,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 3657,
									"end": 3699,
									"modifierDepth": 1,
									"name": "AND",
									"source": 3
								},
								{
									"begin": 3657,
									"end": 3699,
									"modifierDepth": 1,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 3657,
									"end": 3699,
									"modifierDepth": 1,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 3657,
									"end": 3699,
									"modifierDepth": 1,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 3657,
									"end": 3699,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 3657,
									"end": 3699,
									"modifierDepth": 1,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 3657,
									"end": 3699,
									"modifierDepth": 1,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 3657,
									"end": 3699,
									"modifierDepth": 1,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 3657,
									"end": 3699,
									"modifierDepth": 1,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 3657,
									"end": 3699,
									"modifierDepth": 1,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 3657,
									"end": 3699,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "28"
								},
								{
									"begin": 3657,
									"end": 3699,
									"modifierDepth": 1,
									"name": "SWAP2",
									"source": 3
								},
								{
									"begin": 3657,
									"end": 3699,
									"modifierDepth": 1,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 3657,
									"end": 3699,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "16"
								},
								{
									"begin": 3657,
									"end": 3699,
									"jumpType": "[in]",
									"modifierDepth": 1,
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 3657,
									"end": 3699,
									"modifierDepth": 1,
									"name": "tag",
									"source": 3,
									"value": "28"
								},
								{
									"begin": 3657,
									"end": 3699,
									"modifierDepth": 1,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 3710,
									"end": 3714,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 3,
									"value": "C"
								},
								{
									"begin": 3710,
									"end": 3714,
									"name": "SLOAD",
									"source": 3
								},
								{
									"begin": 3710,
									"end": 3752,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 3710,
									"end": 3752,
									"name": "MLOAD",
									"source": 3
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "95EA7B3"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 3710,
									"end": 3752,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 3710,
									"end": 3752,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "DUP1",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "MLOAD",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "20"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH data",
									"source": -1,
									"value": "BB9835C734EA2EE08B9EB3F6004F5F118E5B999FBE41C94259AC9A08CB0AFF12"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "DUP4",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "CODECOPY",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "DUP2",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "MLOAD",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SWAP2",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "MSTORE",
									"source": -1
								},
								{
									"begin": 3710,
									"end": 3752,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 3,
									"value": "4"
								},
								{
									"begin": 3710,
									"end": 3752,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 3710,
									"end": 3752,
									"modifierDepth": 1,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 396,
									"end": 447,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 463,
									"end": 481,
									"name": "PUSH",
									"source": 4,
									"value": "24"
								},
								{
									"begin": 463,
									"end": 481,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 463,
									"end": 481,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 456,
									"end": 490,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 3710,
									"end": 3714,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 3710,
									"end": 3714,
									"name": "SWAP2",
									"source": 3
								},
								{
									"begin": 3710,
									"end": 3714,
									"modifierDepth": 1,
									"name": "AND",
									"source": 3
								},
								{
									"begin": 3710,
									"end": 3714,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 3710,
									"end": 3722,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 3,
									"value": "95EA7B3"
								},
								{
									"begin": 3710,
									"end": 3722,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 369,
									"end": 387,
									"name": "PUSH",
									"source": 4,
									"value": "44"
								},
								{
									"begin": 369,
									"end": 387,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 3710,
									"end": 3752,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 3,
									"value": "20"
								},
								{
									"begin": 3710,
									"end": 3752,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 3710,
									"end": 3752,
									"modifierDepth": 1,
									"name": "MLOAD",
									"source": 3
								},
								{
									"begin": 3710,
									"end": 3752,
									"modifierDepth": 1,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 3710,
									"end": 3752,
									"modifierDepth": 1,
									"name": "DUP4",
									"source": 3
								},
								{
									"begin": 3710,
									"end": 3752,
									"modifierDepth": 1,
									"name": "SUB",
									"source": 3
								},
								{
									"begin": 3710,
									"end": 3752,
									"modifierDepth": 1,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 3710,
									"end": 3752,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 3710,
									"end": 3752,
									"modifierDepth": 1,
									"name": "DUP8",
									"source": 3
								},
								{
									"begin": 3710,
									"end": 3752,
									"modifierDepth": 1,
									"name": "GAS",
									"source": 3
								},
								{
									"begin": 3710,
									"end": 3752,
									"modifierDepth": 1,
									"name": "CALL",
									"source": 3
								},
								{
									"begin": 3710,
									"end": 3752,
									"modifierDepth": 1,
									"name": "ISZERO",
									"source": 3
								},
								{
									"begin": 3710,
									"end": 3752,
									"modifierDepth": 1,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 3710,
									"end": 3752,
									"modifierDepth": 1,
									"name": "ISZERO",
									"source": 3
								},
								{
									"begin": 3710,
									"end": 3752,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "31"
								},
								{
									"begin": 3710,
									"end": 3752,
									"modifierDepth": 1,
									"name": "JUMPI",
									"source": 3
								},
								{
									"begin": 3710,
									"end": 3752,
									"modifierDepth": 1,
									"name": "RETURNDATASIZE",
									"source": 3
								},
								{
									"begin": 3710,
									"end": 3752,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 3710,
									"end": 3752,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 3710,
									"end": 3752,
									"modifierDepth": 1,
									"name": "RETURNDATACOPY",
									"source": 3
								},
								{
									"begin": 3710,
									"end": 3752,
									"modifierDepth": 1,
									"name": "RETURNDATASIZE",
									"source": 3
								},
								{
									"begin": 3710,
									"end": 3752,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 3710,
									"end": 3752,
									"modifierDepth": 1,
									"name": "REVERT",
									"source": 3
								},
								{
									"begin": 3710,
									"end": 3752,
									"modifierDepth": 1,
									"name": "tag",
									"source": 3,
									"value": "31"
								},
								{
									"begin": 3710,
									"end": 3752,
									"modifierDepth": 1,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 3710,
									"end": 3752,
									"modifierDepth": 1,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 3710,
									"end": 3752,
									"modifierDepth": 1,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 3710,
									"end": 3752,
									"modifierDepth": 1,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 3710,
									"end": 3752,
									"modifierDepth": 1,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 3710,
									"end": 3752,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 3710,
									"end": 3752,
									"modifierDepth": 1,
									"name": "MLOAD",
									"source": 3
								},
								{
									"begin": 3710,
									"end": 3752,
									"modifierDepth": 1,
									"name": "RETURNDATASIZE",
									"source": 3
								},
								{
									"begin": 3710,
									"end": 3752,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 3,
									"value": "1F"
								},
								{
									"begin": 3710,
									"end": 3752,
									"modifierDepth": 1,
									"name": "NOT",
									"source": 3
								},
								{
									"begin": 3710,
									"end": 3752,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 3,
									"value": "1F"
								},
								{
									"begin": 3710,
									"end": 3752,
									"modifierDepth": 1,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 3710,
									"end": 3752,
									"modifierDepth": 1,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 3710,
									"end": 3752,
									"modifierDepth": 1,
									"name": "AND",
									"source": 3
								},
								{
									"begin": 3710,
									"end": 3752,
									"modifierDepth": 1,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 3710,
									"end": 3752,
									"modifierDepth": 1,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 3710,
									"end": 3752,
									"modifierDepth": 1,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 3710,
									"end": 3752,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 3710,
									"end": 3752,
									"modifierDepth": 1,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 3710,
									"end": 3752,
									"modifierDepth": 1,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 3710,
									"end": 3752,
									"modifierDepth": 1,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 3710,
									"end": 3752,
									"modifierDepth": 1,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 3710,
									"end": 3752,
									"modifierDepth": 1,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 3710,
									"end": 3752,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "32"
								},
								{
									"begin": 3710,
									"end": 3752,
									"modifierDepth": 1,
									"name": "SWAP2",
									"source": 3
								},
								{
									"begin": 3710,
									"end": 3752,
									"modifierDepth": 1,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 3710,
									"end": 3752,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "16"
								},
								{
									"begin": 3710,
									"end": 3752,
									"jumpType": "[in]",
									"modifierDepth": 1,
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 3710,
									"end": 3752,
									"modifierDepth": 1,
									"name": "tag",
									"source": 3,
									"value": "32"
								},
								{
									"begin": 3710,
									"end": 3752,
									"modifierDepth": 1,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 3710,
									"end": 3752,
									"modifierDepth": 1,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 2107,
									"end": 10094,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "35"
								},
								{
									"begin": 2107,
									"end": 10094,
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 2912,
									"end": 3099,
									"name": "tag",
									"source": 0,
									"value": "9"
								},
								{
									"begin": 2912,
									"end": 3099,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 2985,
									"end": 3001,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "AND",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "DUP5",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SWAP3",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SWAP3",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 0,
									"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 2985,
									"end": 3001,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "LOG3",
									"source": 0
								},
								{
									"begin": 2975,
									"end": 3099,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2912,
									"end": 3099,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2912,
									"end": 3099,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 501,
									"end": 778,
									"name": "tag",
									"source": 4,
									"value": "16"
								},
								{
									"begin": 501,
									"end": 778,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 568,
									"end": 574,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 621,
									"end": 623,
									"name": "PUSH",
									"source": 4,
									"value": "20"
								},
								{
									"begin": 609,
									"end": 618,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 600,
									"end": 607,
									"name": "DUP5",
									"source": 4
								},
								{
									"begin": 596,
									"end": 619,
									"name": "SUB",
									"source": 4
								},
								{
									"begin": 592,
									"end": 624,
									"name": "SLT",
									"source": 4
								},
								{
									"begin": 589,
									"end": 641,
									"name": "ISZERO",
									"source": 4
								},
								{
									"begin": 589,
									"end": 641,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "39"
								},
								{
									"begin": 589,
									"end": 641,
									"name": "JUMPI",
									"source": 4
								},
								{
									"begin": 637,
									"end": 638,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 634,
									"end": 635,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 627,
									"end": 639,
									"name": "REVERT",
									"source": 4
								},
								{
									"begin": 589,
									"end": 641,
									"name": "tag",
									"source": 4,
									"value": "39"
								},
								{
									"begin": 589,
									"end": 641,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 669,
									"end": 678,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 663,
									"end": 679,
									"name": "MLOAD",
									"source": 4
								},
								{
									"begin": 722,
									"end": 727,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 715,
									"end": 728,
									"name": "ISZERO",
									"source": 4
								},
								{
									"begin": 708,
									"end": 729,
									"name": "ISZERO",
									"source": 4
								},
								{
									"begin": 701,
									"end": 706,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 698,
									"end": 730,
									"name": "EQ",
									"source": 4
								},
								{
									"begin": 688,
									"end": 748,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "40"
								},
								{
									"begin": 688,
									"end": 748,
									"name": "JUMPI",
									"source": 4
								},
								{
									"begin": 744,
									"end": 745,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 741,
									"end": 742,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 734,
									"end": 746,
									"name": "REVERT",
									"source": 4
								},
								{
									"begin": 688,
									"end": 748,
									"name": "tag",
									"source": 4,
									"value": "40"
								},
								{
									"begin": 688,
									"end": 748,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 767,
									"end": 772,
									"name": "SWAP4",
									"source": 4
								},
								{
									"begin": 501,
									"end": 778,
									"name": "SWAP3",
									"source": 4
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 501,
									"end": 778,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 501,
									"end": 778,
									"name": "tag",
									"source": 4,
									"value": "35"
								},
								{
									"begin": 501,
									"end": 778,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 2107,
									"end": 10094,
									"name": "PUSH #[$]",
									"source": 3,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 2107,
									"end": 10094,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 2107,
									"end": 10094,
									"name": "PUSH [$]",
									"source": 3,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 2107,
									"end": 10094,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 2107,
									"end": 10094,
									"name": "CODECOPY",
									"source": 3
								},
								{
									"begin": 2107,
									"end": 10094,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 2107,
									"end": 10094,
									"name": "RETURN",
									"source": 3
								}
							],
							".data": {
								"0": {
									".auxdata": "a264697066735822122099f52f70626d33c76cd5e9c0c8515a1b004e3b9f039b27ed0abd8ecbd8c6ae8264736f6c63430008140033",
									".code": [
										{
											"begin": 2107,
											"end": 10094,
											"name": "PUSH",
											"source": 3,
											"value": "80"
										},
										{
											"begin": 2107,
											"end": 10094,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2107,
											"end": 10094,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2107,
											"end": 10094,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 2107,
											"end": 10094,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": 2107,
											"end": 10094,
											"name": "LT",
											"source": 3
										},
										{
											"begin": 2107,
											"end": 10094,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 2107,
											"end": 10094,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 2107,
											"end": 10094,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2107,
											"end": 10094,
											"name": "CALLDATALOAD",
											"source": 3
										},
										{
											"begin": 2107,
											"end": 10094,
											"name": "PUSH",
											"source": 3,
											"value": "E0"
										},
										{
											"begin": 2107,
											"end": 10094,
											"name": "SHR",
											"source": 3
										},
										{
											"begin": 2107,
											"end": 10094,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2107,
											"end": 10094,
											"name": "PUSH",
											"source": 3,
											"value": "A37B9E7F"
										},
										{
											"begin": 2107,
											"end": 10094,
											"name": "GT",
											"source": 3
										},
										{
											"begin": 2107,
											"end": 10094,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "28"
										},
										{
											"begin": 2107,
											"end": 10094,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 2107,
											"end": 10094,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2107,
											"end": 10094,
											"name": "PUSH",
											"source": 3,
											"value": "B3F00674"
										},
										{
											"begin": 2107,
											"end": 10094,
											"name": "GT",
											"source": 3
										},
										{
											"begin": 2107,
											"end": 10094,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "29"
										},
										{
											"begin": 2107,
											"end": 10094,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 2107,
											"end": 10094,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2107,
											"end": 10094,
											"name": "PUSH",
											"source": 3,
											"value": "D3E66A9E"
										},
										{
											"begin": 2107,
											"end": 10094,
											"name": "GT",
											"source": 3
										},
										{
											"begin": 2107,
											"end": 10094,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "30"
										},
										{
											"begin": 2107,
											"end": 10094,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 2107,
											"end": 10094,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2107,
											"end": 10094,
											"name": "PUSH",
											"source": 3,
											"value": "D3E66A9E"
										},
										{
											"begin": 2107,
											"end": 10094,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 2107,
											"end": 10094,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "24"
										},
										{
											"begin": 2107,
											"end": 10094,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 2107,
											"end": 10094,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2107,
											"end": 10094,
											"name": "PUSH",
											"source": 3,
											"value": "D7B7D3F3"
										},
										{
											"begin": 2107,
											"end": 10094,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 2107,
											"end": 10094,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "25"
										},
										{
											"begin": 2107,
											"end": 10094,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 2107,
											"end": 10094,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2107,
											"end": 10094,
											"name": "PUSH",
											"source": 3,
											"value": "EDF26D9B"
										},
										{
											"begin": 2107,
											"end": 10094,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 2107,
											"end": 10094,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "26"
										},
										{
											"begin": 2107,
											"end": 10094,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 2107,
											"end": 10094,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2107,
											"end": 10094,
											"name": "PUSH",
											"source": 3,
											"value": "F2FDE38B"
										},
										{
											"begin": 2107,
											"end": 10094,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 2107,
											"end": 10094,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "27"
										},
										{
											"begin": 2107,
											"end": 10094,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 2107,
											"end": 10094,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2107,
											"end": 10094,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2107,
											"end": 10094,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 2107,
											"end": 10094,
											"name": "tag",
											"source": 3,
											"value": "30"
										},
										{
											"begin": 2107,
											"end": 10094,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2107,
											"end": 10094,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2107,
											"end": 10094,
											"name": "PUSH",
											"source": 3,
											"value": "B3F00674"
										},
										{
											"begin": 2107,
											"end": 10094,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 2107,
											"end": 10094,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "21"
										},
										{
											"begin": 2107,
											"end": 10094,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 2107,
											"end": 10094,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2107,
											"end": 10094,
											"name": "PUSH",
											"source": 3,
											"value": "D0E30DB0"
										},
										{
											"begin": 2107,
											"end": 10094,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 2107,
											"end": 10094,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "22"
										},
										{
											"begin": 2107,
											"end": 10094,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 2107,
											"end": 10094,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2107,
											"end": 10094,
											"name": "PUSH",
											"source": 3,
											"value": "D16A4010"
										},
										{
											"begin": 2107,
											"end": 10094,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 2107,
											"end": 10094,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "23"
										},
										{
											"begin": 2107,
											"end": 10094,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 2107,
											"end": 10094,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2107,
											"end": 10094,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2107,
											"end": 10094,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 2107,
											"end": 10094,
											"name": "tag",
											"source": 3,
											"value": "29"
										},
										{
											"begin": 2107,
											"end": 10094,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2107,
											"end": 10094,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2107,
											"end": 10094,
											"name": "PUSH",
											"source": 3,
											"value": "A37B9E7F"
										},
										{
											"begin": 2107,
											"end": 10094,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 2107,
											"end": 10094,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "15"
										},
										{
											"begin": 2107,
											"end": 10094,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 2107,
											"end": 10094,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2107,
											"end": 10094,
											"name": "PUSH",
											"source": 3,
											"value": "A6769EF8"
										},
										{
											"begin": 2107,
											"end": 10094,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 2107,
											"end": 10094,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "16"
										},
										{
											"begin": 2107,
											"end": 10094,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 2107,
											"end": 10094,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2107,
											"end": 10094,
											"name": "PUSH",
											"source": 3,
											"value": "AC65334F"
										},
										{
											"begin": 2107,
											"end": 10094,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 2107,
											"end": 10094,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "17"
										},
										{
											"begin": 2107,
											"end": 10094,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 2107,
											"end": 10094,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2107,
											"end": 10094,
											"name": "PUSH",
											"source": 3,
											"value": "AE38A070"
										},
										{
											"begin": 2107,
											"end": 10094,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 2107,
											"end": 10094,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "18"
										},
										{
											"begin": 2107,
											"end": 10094,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 2107,
											"end": 10094,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2107,
											"end": 10094,
											"name": "PUSH",
											"source": 3,
											"value": "AFE43B94"
										},
										{
											"begin": 2107,
											"end": 10094,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 2107,
											"end": 10094,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "19"
										},
										{
											"begin": 2107,
											"end": 10094,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 2107,
											"end": 10094,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2107,
											"end": 10094,
											"name": "PUSH",
											"source": 3,
											"value": "B0BEFE63"
										},
										{
											"begin": 2107,
											"end": 10094,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 2107,
											"end": 10094,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2107,
											"end": 10094,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 2107,
											"end": 10094,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2107,
											"end": 10094,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2107,
											"end": 10094,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 2107,
											"end": 10094,
											"name": "tag",
											"source": 3,
											"value": "28"
										},
										{
											"begin": 2107,
											"end": 10094,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2107,
											"end": 10094,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2107,
											"end": 10094,
											"name": "PUSH",
											"source": 3,
											"value": "5F0018CD"
										},
										{
											"begin": 2107,
											"end": 10094,
											"name": "GT",
											"source": 3
										},
										{
											"begin": 2107,
											"end": 10094,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "31"
										},
										{
											"begin": 2107,
											"end": 10094,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 2107,
											"end": 10094,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2107,
											"end": 10094,
											"name": "PUSH",
											"source": 3,
											"value": "5F0018CD"
										},
										{
											"begin": 2107,
											"end": 10094,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 2107,
											"end": 10094,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "9"
										},
										{
											"begin": 2107,
											"end": 10094,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 2107,
											"end": 10094,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2107,
											"end": 10094,
											"name": "PUSH",
											"source": 3,
											"value": "6504FBAD"
										},
										{
											"begin": 2107,
											"end": 10094,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 2107,
											"end": 10094,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "10"
										},
										{
											"begin": 2107,
											"end": 10094,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 2107,
											"end": 10094,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2107,
											"end": 10094,
											"name": "PUSH",
											"source": 3,
											"value": "715018A6"
										},
										{
											"begin": 2107,
											"end": 10094,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 2107,
											"end": 10094,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "11"
										},
										{
											"begin": 2107,
											"end": 10094,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 2107,
											"end": 10094,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2107,
											"end": 10094,
											"name": "PUSH",
											"source": 3,
											"value": "7C6F8FAE"
										},
										{
											"begin": 2107,
											"end": 10094,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 2107,
											"end": 10094,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "12"
										},
										{
											"begin": 2107,
											"end": 10094,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 2107,
											"end": 10094,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2107,
											"end": 10094,
											"name": "PUSH",
											"source": 3,
											"value": "7FD6F15C"
										},
										{
											"begin": 2107,
											"end": 10094,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 2107,
											"end": 10094,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "13"
										},
										{
											"begin": 2107,
											"end": 10094,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 2107,
											"end": 10094,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2107,
											"end": 10094,
											"name": "PUSH",
											"source": 3,
											"value": "8DA5CB5B"
										},
										{
											"begin": 2107,
											"end": 10094,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 2107,
											"end": 10094,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "14"
										},
										{
											"begin": 2107,
											"end": 10094,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 2107,
											"end": 10094,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2107,
											"end": 10094,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2107,
											"end": 10094,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 2107,
											"end": 10094,
											"name": "tag",
											"source": 3,
											"value": "31"
										},
										{
											"begin": 2107,
											"end": 10094,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2107,
											"end": 10094,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2107,
											"end": 10094,
											"name": "PUSH",
											"source": 3,
											"value": "16214120"
										},
										{
											"begin": 2107,
											"end": 10094,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 2107,
											"end": 10094,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "3"
										},
										{
											"begin": 2107,
											"end": 10094,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 2107,
											"end": 10094,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2107,
											"end": 10094,
											"name": "PUSH",
											"source": 3,
											"value": "1D470CB1"
										},
										{
											"begin": 2107,
											"end": 10094,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 2107,
											"end": 10094,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 2107,
											"end": 10094,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 2107,
											"end": 10094,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2107,
											"end": 10094,
											"name": "PUSH",
											"source": 3,
											"value": "2E1A7D4D"
										},
										{
											"begin": 2107,
											"end": 10094,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 2107,
											"end": 10094,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "5"
										},
										{
											"begin": 2107,
											"end": 10094,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 2107,
											"end": 10094,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2107,
											"end": 10094,
											"name": "PUSH",
											"source": 3,
											"value": "3977D68D"
										},
										{
											"begin": 2107,
											"end": 10094,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 2107,
											"end": 10094,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "6"
										},
										{
											"begin": 2107,
											"end": 10094,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 2107,
											"end": 10094,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2107,
											"end": 10094,
											"name": "PUSH",
											"source": 3,
											"value": "39BDA01C"
										},
										{
											"begin": 2107,
											"end": 10094,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 2107,
											"end": 10094,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "7"
										},
										{
											"begin": 2107,
											"end": 10094,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 2107,
											"end": 10094,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2107,
											"end": 10094,
											"name": "PUSH",
											"source": 3,
											"value": "53AC861E"
										},
										{
											"begin": 2107,
											"end": 10094,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 2107,
											"end": 10094,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "8"
										},
										{
											"begin": 2107,
											"end": 10094,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 2107,
											"end": 10094,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2107,
											"end": 10094,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2107,
											"end": 10094,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 2107,
											"end": 10094,
											"name": "tag",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 2107,
											"end": 10094,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2107,
											"end": 10094,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": 2107,
											"end": 10094,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "2"
										},
										{
											"begin": 2107,
											"end": 10094,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 2107,
											"end": 10094,
											"name": "STOP",
											"source": 3
										},
										{
											"begin": 2107,
											"end": 10094,
											"name": "tag",
											"source": 3,
											"value": "2"
										},
										{
											"begin": 2107,
											"end": 10094,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2107,
											"end": 10094,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2107,
											"end": 10094,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2107,
											"end": 10094,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 8894,
											"end": 9636,
											"name": "tag",
											"source": 3,
											"value": "3"
										},
										{
											"begin": 8894,
											"end": 9636,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 8894,
											"end": 9636,
											"name": "CALLVALUE",
											"source": 3
										},
										{
											"begin": 8894,
											"end": 9636,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 8894,
											"end": 9636,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 8894,
											"end": 9636,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "34"
										},
										{
											"begin": 8894,
											"end": 9636,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 8894,
											"end": 9636,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 8894,
											"end": 9636,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 8894,
											"end": 9636,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 8894,
											"end": 9636,
											"name": "tag",
											"source": 3,
											"value": "34"
										},
										{
											"begin": 8894,
											"end": 9636,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 8894,
											"end": 9636,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "35"
										},
										{
											"begin": 8894,
											"end": 9636,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "36"
										},
										{
											"begin": 8894,
											"end": 9636,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": 8894,
											"end": 9636,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 8894,
											"end": 9636,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "37"
										},
										{
											"begin": 8894,
											"end": 9636,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 8894,
											"end": 9636,
											"name": "tag",
											"source": 3,
											"value": "36"
										},
										{
											"begin": 8894,
											"end": 9636,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 8894,
											"end": 9636,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "38"
										},
										{
											"begin": 8894,
											"end": 9636,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 8894,
											"end": 9636,
											"name": "tag",
											"source": 3,
											"value": "35"
										},
										{
											"begin": 8894,
											"end": 9636,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 8894,
											"end": 9636,
											"name": "STOP",
											"source": 3
										},
										{
											"begin": 2304,
											"end": 2377,
											"name": "tag",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 2304,
											"end": 2377,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2304,
											"end": 2377,
											"name": "CALLVALUE",
											"source": 3
										},
										{
											"begin": 2304,
											"end": 2377,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2304,
											"end": 2377,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 2304,
											"end": 2377,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "39"
										},
										{
											"begin": 2304,
											"end": 2377,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 2304,
											"end": 2377,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2304,
											"end": 2377,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2304,
											"end": 2377,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 2304,
											"end": 2377,
											"name": "tag",
											"source": 3,
											"value": "39"
										},
										{
											"begin": 2304,
											"end": 2377,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2304,
											"end": 2377,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2304,
											"end": 2377,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2335,
											"end": 2377,
											"name": "PUSH",
											"source": 3,
											"value": "5C7F8A570D578ED84E63FDFA7B1EE72DEAE1AE23"
										},
										{
											"begin": 2304,
											"end": 2377,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2304,
											"end": 2377,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2304,
											"end": 2377,
											"name": "tag",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2304,
											"end": 2377,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2304,
											"end": 2377,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2304,
											"end": 2377,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 683,
											"end": 715,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 683,
											"end": 715,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 683,
											"end": 715,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 665,
											"end": 716,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 665,
											"end": 716,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 653,
											"end": 655,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 638,
											"end": 656,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2304,
											"end": 2377,
											"name": "tag",
											"source": 3,
											"value": "42"
										},
										{
											"begin": 2304,
											"end": 2377,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2304,
											"end": 2377,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2304,
											"end": 2377,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 2304,
											"end": 2377,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2304,
											"end": 2377,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2304,
											"end": 2377,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 2304,
											"end": 2377,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2304,
											"end": 2377,
											"name": "RETURN",
											"source": 3
										},
										{
											"begin": 9851,
											"end": 10054,
											"name": "tag",
											"source": 3,
											"value": "5"
										},
										{
											"begin": 9851,
											"end": 10054,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 9851,
											"end": 10054,
											"name": "CALLVALUE",
											"source": 3
										},
										{
											"begin": 9851,
											"end": 10054,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 9851,
											"end": 10054,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 9851,
											"end": 10054,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "44"
										},
										{
											"begin": 9851,
											"end": 10054,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 9851,
											"end": 10054,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 9851,
											"end": 10054,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 9851,
											"end": 10054,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 9851,
											"end": 10054,
											"name": "tag",
											"source": 3,
											"value": "44"
										},
										{
											"begin": 9851,
											"end": 10054,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 9851,
											"end": 10054,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "35"
										},
										{
											"begin": 9851,
											"end": 10054,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "46"
										},
										{
											"begin": 9851,
											"end": 10054,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": 9851,
											"end": 10054,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 9851,
											"end": 10054,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "47"
										},
										{
											"begin": 9851,
											"end": 10054,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 9851,
											"end": 10054,
											"name": "tag",
											"source": 3,
											"value": "46"
										},
										{
											"begin": 9851,
											"end": 10054,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 9851,
											"end": 10054,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "48"
										},
										{
											"begin": 9851,
											"end": 10054,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4731,
											"end": 4891,
											"name": "tag",
											"source": 3,
											"value": "6"
										},
										{
											"begin": 4731,
											"end": 4891,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4731,
											"end": 4891,
											"name": "CALLVALUE",
											"source": 3
										},
										{
											"begin": 4731,
											"end": 4891,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 4731,
											"end": 4891,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 4731,
											"end": 4891,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "49"
										},
										{
											"begin": 4731,
											"end": 4891,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 4731,
											"end": 4891,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 4731,
											"end": 4891,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 4731,
											"end": 4891,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 4731,
											"end": 4891,
											"name": "tag",
											"source": 3,
											"value": "49"
										},
										{
											"begin": 4731,
											"end": 4891,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4731,
											"end": 4891,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "35"
										},
										{
											"begin": 4731,
											"end": 4891,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "51"
										},
										{
											"begin": 4731,
											"end": 4891,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": 4731,
											"end": 4891,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 4731,
											"end": 4891,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "52"
										},
										{
											"begin": 4731,
											"end": 4891,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4731,
											"end": 4891,
											"name": "tag",
											"source": 3,
											"value": "51"
										},
										{
											"begin": 4731,
											"end": 4891,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4731,
											"end": 4891,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "53"
										},
										{
											"begin": 4731,
											"end": 4891,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4222,
											"end": 4472,
											"name": "tag",
											"source": 3,
											"value": "7"
										},
										{
											"begin": 4222,
											"end": 4472,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4222,
											"end": 4472,
											"name": "CALLVALUE",
											"source": 3
										},
										{
											"begin": 4222,
											"end": 4472,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 4222,
											"end": 4472,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 4222,
											"end": 4472,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "54"
										},
										{
											"begin": 4222,
											"end": 4472,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 4222,
											"end": 4472,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 4222,
											"end": 4472,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 4222,
											"end": 4472,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 4222,
											"end": 4472,
											"name": "tag",
											"source": 3,
											"value": "54"
										},
										{
											"begin": 4222,
											"end": 4472,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4222,
											"end": 4472,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4222,
											"end": 4472,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "35"
										},
										{
											"begin": 4222,
											"end": 4472,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "56"
										},
										{
											"begin": 4222,
											"end": 4472,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 8047,
											"end": 8842,
											"name": "tag",
											"source": 3,
											"value": "8"
										},
										{
											"begin": 8047,
											"end": 8842,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 8047,
											"end": 8842,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "35"
										},
										{
											"begin": 8047,
											"end": 8842,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "58"
										},
										{
											"begin": 8047,
											"end": 8842,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": 8047,
											"end": 8842,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 8047,
											"end": 8842,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "52"
										},
										{
											"begin": 8047,
											"end": 8842,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 8047,
											"end": 8842,
											"name": "tag",
											"source": 3,
											"value": "58"
										},
										{
											"begin": 8047,
											"end": 8842,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 8047,
											"end": 8842,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "59"
										},
										{
											"begin": 8047,
											"end": 8842,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4480,
											"end": 4570,
											"name": "tag",
											"source": 3,
											"value": "9"
										},
										{
											"begin": 4480,
											"end": 4570,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4480,
											"end": 4570,
											"name": "CALLVALUE",
											"source": 3
										},
										{
											"begin": 4480,
											"end": 4570,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 4480,
											"end": 4570,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 4480,
											"end": 4570,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "60"
										},
										{
											"begin": 4480,
											"end": 4570,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 4480,
											"end": 4570,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 4480,
											"end": 4570,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 4480,
											"end": 4570,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 4480,
											"end": 4570,
											"name": "tag",
											"source": 3,
											"value": "60"
										},
										{
											"begin": 4480,
											"end": 4570,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4480,
											"end": 4570,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4480,
											"end": 4570,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "35"
										},
										{
											"begin": 4480,
											"end": 4570,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "62"
										},
										{
											"begin": 4480,
											"end": 4570,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2223,
											"end": 2297,
											"name": "tag",
											"source": 3,
											"value": "10"
										},
										{
											"begin": 2223,
											"end": 2297,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2223,
											"end": 2297,
											"name": "CALLVALUE",
											"source": 3
										},
										{
											"begin": 2223,
											"end": 2297,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2223,
											"end": 2297,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 2223,
											"end": 2297,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "63"
										},
										{
											"begin": 2223,
											"end": 2297,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 2223,
											"end": 2297,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2223,
											"end": 2297,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2223,
											"end": 2297,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 2223,
											"end": 2297,
											"name": "tag",
											"source": 3,
											"value": "63"
										},
										{
											"begin": 2223,
											"end": 2297,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2223,
											"end": 2297,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2223,
											"end": 2297,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2255,
											"end": 2297,
											"name": "PUSH",
											"source": 3,
											"value": "66E428C3F67A68878562E79A0234C1F83C208770"
										},
										{
											"begin": 2223,
											"end": 2297,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2223,
											"end": 2297,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "tag",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "67"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "tag",
											"source": 0,
											"value": "67"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "35"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "69"
										},
										{
											"begin": 2293,
											"end": 2394,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2637,
											"end": 2725,
											"name": "tag",
											"source": 3,
											"value": "12"
										},
										{
											"begin": 2637,
											"end": 2725,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2637,
											"end": 2725,
											"name": "CALLVALUE",
											"source": 3
										},
										{
											"begin": 2637,
											"end": 2725,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2637,
											"end": 2725,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 2637,
											"end": 2725,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "70"
										},
										{
											"begin": 2637,
											"end": 2725,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 2637,
											"end": 2725,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2637,
											"end": 2725,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2637,
											"end": 2725,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 2637,
											"end": 2725,
											"name": "tag",
											"source": 3,
											"value": "70"
										},
										{
											"begin": 2637,
											"end": 2725,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2637,
											"end": 2725,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2637,
											"end": 2725,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2683,
											"end": 2725,
											"name": "PUSH",
											"source": 3,
											"value": "3B44B2A187A7B3824131F8DB5A74194D0A42FC15"
										},
										{
											"begin": 2637,
											"end": 2725,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2637,
											"end": 2725,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2765,
											"end": 2790,
											"name": "tag",
											"source": 3,
											"value": "13"
										},
										{
											"begin": 2765,
											"end": 2790,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2765,
											"end": 2790,
											"name": "CALLVALUE",
											"source": 3
										},
										{
											"begin": 2765,
											"end": 2790,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2765,
											"end": 2790,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 2765,
											"end": 2790,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "74"
										},
										{
											"begin": 2765,
											"end": 2790,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 2765,
											"end": 2790,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2765,
											"end": 2790,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2765,
											"end": 2790,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 2765,
											"end": 2790,
											"name": "tag",
											"source": 3,
											"value": "74"
										},
										{
											"begin": 2765,
											"end": 2790,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2765,
											"end": 2790,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2765,
											"end": 2790,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "75"
										},
										{
											"begin": 2765,
											"end": 2790,
											"name": "PUSH",
											"source": 3,
											"value": "2"
										},
										{
											"begin": 2765,
											"end": 2790,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 2765,
											"end": 2790,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2765,
											"end": 2790,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2765,
											"end": 2790,
											"name": "tag",
											"source": 3,
											"value": "75"
										},
										{
											"begin": 2765,
											"end": 2790,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2765,
											"end": 2790,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2765,
											"end": 2790,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1317,
											"end": 1342,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1317,
											"end": 1342,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1317,
											"end": 1342,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1305,
											"end": 1307,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 1290,
											"end": 1308,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2765,
											"end": 2790,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "42"
										},
										{
											"begin": 1171,
											"end": 1348,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "tag",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "79"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "tag",
											"source": 0,
											"value": "79"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1684,
											"end": 1691,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2142,
											"end": 2216,
											"name": "tag",
											"source": 3,
											"value": "15"
										},
										{
											"begin": 2142,
											"end": 2216,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2142,
											"end": 2216,
											"name": "CALLVALUE",
											"source": 3
										},
										{
											"begin": 2142,
											"end": 2216,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2142,
											"end": 2216,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 2142,
											"end": 2216,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "83"
										},
										{
											"begin": 2142,
											"end": 2216,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 2142,
											"end": 2216,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2142,
											"end": 2216,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2142,
											"end": 2216,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 2142,
											"end": 2216,
											"name": "tag",
											"source": 3,
											"value": "83"
										},
										{
											"begin": 2142,
											"end": 2216,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2142,
											"end": 2216,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2142,
											"end": 2216,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2174,
											"end": 2216,
											"name": "PUSH",
											"source": 3,
											"value": "C21223249CA28397B4B6541DFFAECC539BFF0C59"
										},
										{
											"begin": 2142,
											"end": 2216,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2142,
											"end": 2216,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2843,
											"end": 2888,
											"name": "tag",
											"source": 3,
											"value": "16"
										},
										{
											"begin": 2843,
											"end": 2888,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2843,
											"end": 2888,
											"name": "CALLVALUE",
											"source": 3
										},
										{
											"begin": 2843,
											"end": 2888,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2843,
											"end": 2888,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 2843,
											"end": 2888,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "87"
										},
										{
											"begin": 2843,
											"end": 2888,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 2843,
											"end": 2888,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2843,
											"end": 2888,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2843,
											"end": 2888,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 2843,
											"end": 2888,
											"name": "tag",
											"source": 3,
											"value": "87"
										},
										{
											"begin": 2843,
											"end": 2888,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2843,
											"end": 2888,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "75"
										},
										{
											"begin": 2843,
											"end": 2888,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "89"
										},
										{
											"begin": 2843,
											"end": 2888,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": 2843,
											"end": 2888,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 2843,
											"end": 2888,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "90"
										},
										{
											"begin": 2843,
											"end": 2888,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2843,
											"end": 2888,
											"name": "tag",
											"source": 3,
											"value": "89"
										},
										{
											"begin": 2843,
											"end": 2888,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2843,
											"end": 2888,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 2843,
											"end": 2888,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2843,
											"end": 2888,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2843,
											"end": 2888,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2843,
											"end": 2888,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2843,
											"end": 2888,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2843,
											"end": 2888,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2843,
											"end": 2888,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2843,
											"end": 2888,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2843,
											"end": 2888,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 2843,
											"end": 2888,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 2843,
											"end": 2888,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2843,
											"end": 2888,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2797,
											"end": 2836,
											"name": "tag",
											"source": 3,
											"value": "17"
										},
										{
											"begin": 2797,
											"end": 2836,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2797,
											"end": 2836,
											"name": "CALLVALUE",
											"source": 3
										},
										{
											"begin": 2797,
											"end": 2836,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2797,
											"end": 2836,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 2797,
											"end": 2836,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "93"
										},
										{
											"begin": 2797,
											"end": 2836,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 2797,
											"end": 2836,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2797,
											"end": 2836,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2797,
											"end": 2836,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 2797,
											"end": 2836,
											"name": "tag",
											"source": 3,
											"value": "93"
										},
										{
											"begin": 2797,
											"end": 2836,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2797,
											"end": 2836,
											"name": "PUSH",
											"source": 3,
											"value": "3"
										},
										{
											"begin": 2797,
											"end": 2836,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 2797,
											"end": 2836,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "94"
										},
										{
											"begin": 2797,
											"end": 2836,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2797,
											"end": 2836,
											"name": "PUSH",
											"source": 3,
											"value": "FF"
										},
										{
											"begin": 2797,
											"end": 2836,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 2797,
											"end": 2836,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2797,
											"end": 2836,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2797,
											"end": 2836,
											"name": "tag",
											"source": 3,
											"value": "94"
										},
										{
											"begin": 2797,
											"end": 2836,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2797,
											"end": 2836,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2797,
											"end": 2836,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1709,
											"end": 1723,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1709,
											"end": 1723,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 1702,
											"end": 1724,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 1684,
											"end": 1725,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1684,
											"end": 1725,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1672,
											"end": 1674,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 1657,
											"end": 1675,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2797,
											"end": 2836,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "42"
										},
										{
											"begin": 1544,
											"end": 1731,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3809,
											"end": 4174,
											"name": "tag",
											"source": 3,
											"value": "18"
										},
										{
											"begin": 3809,
											"end": 4174,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3809,
											"end": 4174,
											"name": "CALLVALUE",
											"source": 3
										},
										{
											"begin": 3809,
											"end": 4174,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3809,
											"end": 4174,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 3809,
											"end": 4174,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "98"
										},
										{
											"begin": 3809,
											"end": 4174,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 3809,
											"end": 4174,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3809,
											"end": 4174,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3809,
											"end": 4174,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 3809,
											"end": 4174,
											"name": "tag",
											"source": 3,
											"value": "98"
										},
										{
											"begin": 3809,
											"end": 4174,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3809,
											"end": 4174,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3809,
											"end": 4174,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "99"
										},
										{
											"begin": 3809,
											"end": 4174,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "100"
										},
										{
											"begin": 3809,
											"end": 4174,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3809,
											"end": 4174,
											"name": "tag",
											"source": 3,
											"value": "99"
										},
										{
											"begin": 3809,
											"end": 4174,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3809,
											"end": 4174,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 3809,
											"end": 4174,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 3809,
											"end": 4174,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "42"
										},
										{
											"begin": 3809,
											"end": 4174,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3809,
											"end": 4174,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3809,
											"end": 4174,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "102"
										},
										{
											"begin": 3809,
											"end": 4174,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2384,
											"end": 2456,
											"name": "tag",
											"source": 3,
											"value": "19"
										},
										{
											"begin": 2384,
											"end": 2456,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2384,
											"end": 2456,
											"name": "CALLVALUE",
											"source": 3
										},
										{
											"begin": 2384,
											"end": 2456,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2384,
											"end": 2456,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 2384,
											"end": 2456,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "103"
										},
										{
											"begin": 2384,
											"end": 2456,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 2384,
											"end": 2456,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2384,
											"end": 2456,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2384,
											"end": 2456,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 2384,
											"end": 2456,
											"name": "tag",
											"source": 3,
											"value": "103"
										},
										{
											"begin": 2384,
											"end": 2456,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2384,
											"end": 2456,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2384,
											"end": 2456,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2414,
											"end": 2456,
											"name": "PUSH",
											"source": 3,
											"value": "41BC026DABE978BC2FAFEA1850456511CA4B01BC"
										},
										{
											"begin": 2384,
											"end": 2456,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2384,
											"end": 2456,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2463,
											"end": 2536,
											"name": "tag",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2463,
											"end": 2536,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2463,
											"end": 2536,
											"name": "CALLVALUE",
											"source": 3
										},
										{
											"begin": 2463,
											"end": 2536,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2463,
											"end": 2536,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 2463,
											"end": 2536,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "107"
										},
										{
											"begin": 2463,
											"end": 2536,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 2463,
											"end": 2536,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2463,
											"end": 2536,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2463,
											"end": 2536,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 2463,
											"end": 2536,
											"name": "tag",
											"source": 3,
											"value": "107"
										},
										{
											"begin": 2463,
											"end": 2536,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2463,
											"end": 2536,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2463,
											"end": 2536,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2494,
											"end": 2536,
											"name": "PUSH",
											"source": 3,
											"value": "3B41B27E74DD366CE27CB389DC7877D4E1516D4D"
										},
										{
											"begin": 2463,
											"end": 2536,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2463,
											"end": 2536,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2732,
											"end": 2758,
											"name": "tag",
											"source": 3,
											"value": "21"
										},
										{
											"begin": 2732,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2732,
											"end": 2758,
											"name": "CALLVALUE",
											"source": 3
										},
										{
											"begin": 2732,
											"end": 2758,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2732,
											"end": 2758,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 2732,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "111"
										},
										{
											"begin": 2732,
											"end": 2758,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 2732,
											"end": 2758,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2732,
											"end": 2758,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2732,
											"end": 2758,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 2732,
											"end": 2758,
											"name": "tag",
											"source": 3,
											"value": "111"
										},
										{
											"begin": 2732,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2732,
											"end": 2758,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 2732,
											"end": 2758,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 2732,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2732,
											"end": 2758,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2732,
											"end": 2758,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 2732,
											"end": 2758,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2732,
											"end": 2758,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 9672,
											"end": 9843,
											"name": "tag",
											"source": 3,
											"value": "22"
										},
										{
											"begin": 9672,
											"end": 9843,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 9672,
											"end": 9843,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "35"
										},
										{
											"begin": 9672,
											"end": 9843,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "116"
										},
										{
											"begin": 9672,
											"end": 9843,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 5854,
											"end": 7999,
											"name": "tag",
											"source": 3,
											"value": "23"
										},
										{
											"begin": 5854,
											"end": 7999,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5854,
											"end": 7999,
											"name": "CALLVALUE",
											"source": 3
										},
										{
											"begin": 5854,
											"end": 7999,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 5854,
											"end": 7999,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 5854,
											"end": 7999,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "117"
										},
										{
											"begin": 5854,
											"end": 7999,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 5854,
											"end": 7999,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 5854,
											"end": 7999,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 5854,
											"end": 7999,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 5854,
											"end": 7999,
											"name": "tag",
											"source": 3,
											"value": "117"
										},
										{
											"begin": 5854,
											"end": 7999,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5854,
											"end": 7999,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "35"
										},
										{
											"begin": 5854,
											"end": 7999,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "119"
										},
										{
											"begin": 5854,
											"end": 7999,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": 5854,
											"end": 7999,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 5854,
											"end": 7999,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "120"
										},
										{
											"begin": 5854,
											"end": 7999,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 5854,
											"end": 7999,
											"name": "tag",
											"source": 3,
											"value": "119"
										},
										{
											"begin": 5854,
											"end": 7999,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5854,
											"end": 7999,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "121"
										},
										{
											"begin": 5854,
											"end": 7999,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4576,
											"end": 4666,
											"name": "tag",
											"source": 3,
											"value": "24"
										},
										{
											"begin": 4576,
											"end": 4666,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4576,
											"end": 4666,
											"name": "CALLVALUE",
											"source": 3
										},
										{
											"begin": 4576,
											"end": 4666,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 4576,
											"end": 4666,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 4576,
											"end": 4666,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "122"
										},
										{
											"begin": 4576,
											"end": 4666,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 4576,
											"end": 4666,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 4576,
											"end": 4666,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 4576,
											"end": 4666,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 4576,
											"end": 4666,
											"name": "tag",
											"source": 3,
											"value": "122"
										},
										{
											"begin": 4576,
											"end": 4666,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4576,
											"end": 4666,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4576,
											"end": 4666,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "35"
										},
										{
											"begin": 4576,
											"end": 4666,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "124"
										},
										{
											"begin": 4576,
											"end": 4666,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2543,
											"end": 2630,
											"name": "tag",
											"source": 3,
											"value": "25"
										},
										{
											"begin": 2543,
											"end": 2630,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2543,
											"end": 2630,
											"name": "CALLVALUE",
											"source": 3
										},
										{
											"begin": 2543,
											"end": 2630,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2543,
											"end": 2630,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 2543,
											"end": 2630,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "125"
										},
										{
											"begin": 2543,
											"end": 2630,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 2543,
											"end": 2630,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2543,
											"end": 2630,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2543,
											"end": 2630,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 2543,
											"end": 2630,
											"name": "tag",
											"source": 3,
											"value": "125"
										},
										{
											"begin": 2543,
											"end": 2630,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2543,
											"end": 2630,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2543,
											"end": 2630,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2588,
											"end": 2630,
											"name": "PUSH",
											"source": 3,
											"value": "145863EB42CF62847A6CA784E6416C1682B1B2AE"
										},
										{
											"begin": 2543,
											"end": 2630,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2543,
											"end": 2630,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2941,
											"end": 2967,
											"name": "tag",
											"source": 3,
											"value": "26"
										},
										{
											"begin": 2941,
											"end": 2967,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2941,
											"end": 2967,
											"name": "CALLVALUE",
											"source": 3
										},
										{
											"begin": 2941,
											"end": 2967,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2941,
											"end": 2967,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 2941,
											"end": 2967,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "129"
										},
										{
											"begin": 2941,
											"end": 2967,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 2941,
											"end": 2967,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2941,
											"end": 2967,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2941,
											"end": 2967,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 2941,
											"end": 2967,
											"name": "tag",
											"source": 3,
											"value": "129"
										},
										{
											"begin": 2941,
											"end": 2967,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2941,
											"end": 2967,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2941,
											"end": 2967,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "131"
										},
										{
											"begin": 2941,
											"end": 2967,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": 2941,
											"end": 2967,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 2941,
											"end": 2967,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "47"
										},
										{
											"begin": 2941,
											"end": 2967,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2941,
											"end": 2967,
											"name": "tag",
											"source": 3,
											"value": "131"
										},
										{
											"begin": 2941,
											"end": 2967,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2941,
											"end": 2967,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "132"
										},
										{
											"begin": 2941,
											"end": 2967,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "134"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 0,
											"value": "134"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "35"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "136"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "90"
										},
										{
											"begin": 2543,
											"end": 2758,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 0,
											"value": "136"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "137"
										},
										{
											"begin": 2543,
											"end": 2758,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 8894,
											"end": 9636,
											"name": "tag",
											"source": 3,
											"value": "38"
										},
										{
											"begin": 8894,
											"end": 9636,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 9035,
											"end": 9051,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 9035,
											"end": 9051,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 2414,
											"end": 2456,
											"name": "PUSH",
											"source": 3,
											"value": "41BC026DABE978BC2FAFEA1850456511CA4B01BC"
										},
										{
											"begin": 9035,
											"end": 9051,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 9035,
											"end": 9074,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 9035,
											"end": 9074,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 9035,
											"end": 9074,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "139"
										},
										{
											"begin": 9035,
											"end": 9074,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 9055,
											"end": 9074,
											"name": "PUSH",
											"source": 3,
											"value": "3"
										},
										{
											"begin": 9055,
											"end": 9074,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 9055,
											"end": 9074,
											"name": "PUSH",
											"source": 3,
											"value": "FF"
										},
										{
											"begin": 9055,
											"end": 9074,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 9035,
											"end": 9074,
											"name": "tag",
											"source": 3,
											"value": "139"
										},
										{
											"begin": 9035,
											"end": 9074,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 9032,
											"end": 9107,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 9032,
											"end": 9107,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "141"
										},
										{
											"begin": 9032,
											"end": 9107,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 9076,
											"end": 9107,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "141"
										},
										{
											"begin": 9086,
											"end": 9096,
											"name": "CALLER",
											"source": 3
										},
										{
											"begin": 9098,
											"end": 9106,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 9076,
											"end": 9085,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "142"
										},
										{
											"begin": 9076,
											"end": 9107,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 9076,
											"end": 9107,
											"name": "tag",
											"source": 3,
											"value": "141"
										},
										{
											"begin": 9076,
											"end": 9107,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 9118,
											"end": 9185,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 9118,
											"end": 9185,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "23B872DD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 9118,
											"end": 9185,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 9118,
											"end": 9185,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 9149,
											"end": 9159,
											"name": "CALLER",
											"source": 3
										},
										{
											"begin": 9118,
											"end": 9185,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 9118,
											"end": 9185,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 9118,
											"end": 9185,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3193,
											"end": 3227,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 9169,
											"end": 9173,
											"name": "ADDRESS",
											"source": 3
										},
										{
											"begin": 3243,
											"end": 3261,
											"name": "PUSH",
											"source": 4,
											"value": "24"
										},
										{
											"begin": 3243,
											"end": 3261,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 3243,
											"end": 3261,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3236,
											"end": 3279,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 3295,
											"end": 3313,
											"name": "PUSH",
											"source": 4,
											"value": "44"
										},
										{
											"begin": 3295,
											"end": 3313,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3295,
											"end": 3313,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3288,
											"end": 3322,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 3288,
											"end": 3322,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3288,
											"end": 3322,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 9118,
											"end": 9148,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 9118,
											"end": 9148,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 9118,
											"end": 9148,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 9118,
											"end": 9148,
											"name": "PUSH",
											"source": 3,
											"value": "23B872DD"
										},
										{
											"begin": 9118,
											"end": 9148,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3128,
											"end": 3146,
											"name": "PUSH",
											"source": 4,
											"value": "64"
										},
										{
											"begin": 3128,
											"end": 3146,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 9118,
											"end": 9185,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 9118,
											"end": 9185,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 9118,
											"end": 9185,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 9118,
											"end": 9185,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 9118,
											"end": 9185,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 9118,
											"end": 9185,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 9118,
											"end": 9185,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 9118,
											"end": 9185,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 9118,
											"end": 9185,
											"name": "DUP8",
											"source": 3
										},
										{
											"begin": 9118,
											"end": 9185,
											"name": "GAS",
											"source": 3
										},
										{
											"begin": 9118,
											"end": 9185,
											"name": "CALL",
											"source": 3
										},
										{
											"begin": 9118,
											"end": 9185,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 9118,
											"end": 9185,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 9118,
											"end": 9185,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 9118,
											"end": 9185,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "146"
										},
										{
											"begin": 9118,
											"end": 9185,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 9118,
											"end": 9185,
											"name": "RETURNDATASIZE",
											"source": 3
										},
										{
											"begin": 9118,
											"end": 9185,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 9118,
											"end": 9185,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 9118,
											"end": 9185,
											"name": "RETURNDATACOPY",
											"source": 3
										},
										{
											"begin": 9118,
											"end": 9185,
											"name": "RETURNDATASIZE",
											"source": 3
										},
										{
											"begin": 9118,
											"end": 9185,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 9118,
											"end": 9185,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 9118,
											"end": 9185,
											"name": "tag",
											"source": 3,
											"value": "146"
										},
										{
											"begin": 9118,
											"end": 9185,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 9118,
											"end": 9185,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 9118,
											"end": 9185,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 9118,
											"end": 9185,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 9118,
											"end": 9185,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 9118,
											"end": 9185,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 9118,
											"end": 9185,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 9118,
											"end": 9185,
											"name": "RETURNDATASIZE",
											"source": 3
										},
										{
											"begin": 9118,
											"end": 9185,
											"name": "PUSH",
											"source": 3,
											"value": "1F"
										},
										{
											"begin": 9118,
											"end": 9185,
											"name": "NOT",
											"source": 3
										},
										{
											"begin": 9118,
											"end": 9185,
											"name": "PUSH",
											"source": 3,
											"value": "1F"
										},
										{
											"begin": 9118,
											"end": 9185,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 9118,
											"end": 9185,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 9118,
											"end": 9185,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 9118,
											"end": 9185,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 9118,
											"end": 9185,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 9118,
											"end": 9185,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 9118,
											"end": 9185,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 9118,
											"end": 9185,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 9118,
											"end": 9185,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 9118,
											"end": 9185,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 9118,
											"end": 9185,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 9118,
											"end": 9185,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 9118,
											"end": 9185,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "147"
										},
										{
											"begin": 9118,
											"end": 9185,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 9118,
											"end": 9185,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 9118,
											"end": 9185,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "148"
										},
										{
											"begin": 9118,
											"end": 9185,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 9118,
											"end": 9185,
											"name": "tag",
											"source": 3,
											"value": "147"
										},
										{
											"begin": 9118,
											"end": 9185,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 9118,
											"end": 9185,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 9206,
											"end": 9223,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 9250,
											"end": 9254,
											"name": "PUSH",
											"source": 3,
											"value": "3E8"
										},
										{
											"begin": 9237,
											"end": 9247,
											"name": "PUSH",
											"source": 3,
											"value": "2"
										},
										{
											"begin": 9237,
											"end": 9247,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 9226,
											"end": 9234,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 9226,
											"end": 9247,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "149"
										},
										{
											"begin": 9226,
											"end": 9247,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 9226,
											"end": 9247,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 9226,
											"end": 9247,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "150"
										},
										{
											"begin": 9226,
											"end": 9247,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 9226,
											"end": 9247,
											"name": "tag",
											"source": 3,
											"value": "149"
										},
										{
											"begin": 9226,
											"end": 9247,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 9226,
											"end": 9254,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "151"
										},
										{
											"begin": 9226,
											"end": 9254,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 9226,
											"end": 9254,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 9226,
											"end": 9254,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "152"
										},
										{
											"begin": 9226,
											"end": 9254,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 9226,
											"end": 9254,
											"name": "tag",
											"source": 3,
											"value": "151"
										},
										{
											"begin": 9226,
											"end": 9254,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 9206,
											"end": 9254,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 9206,
											"end": 9254,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 9267,
											"end": 9295,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "153"
										},
										{
											"begin": 9274,
											"end": 9283,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 9285,
											"end": 9294,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 9267,
											"end": 9273,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "154"
										},
										{
											"begin": 9267,
											"end": 9295,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 9267,
											"end": 9295,
											"name": "tag",
											"source": 3,
											"value": "153"
										},
										{
											"begin": 9267,
											"end": 9295,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 9332,
											"end": 9348,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 9332,
											"end": 9348,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 9332,
											"end": 9348,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 9346,
											"end": 9347,
											"name": "PUSH",
											"source": 3,
											"value": "2"
										},
										{
											"begin": 9332,
											"end": 9348,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 9332,
											"end": 9348,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 9332,
											"end": 9348,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 9332,
											"end": 9348,
											"name": "PUSH",
											"source": 3,
											"value": "60"
										},
										{
											"begin": 9332,
											"end": 9348,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 9332,
											"end": 9348,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 9332,
											"end": 9348,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 9332,
											"end": 9348,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 9308,
											"end": 9329,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 9308,
											"end": 9329,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 9332,
											"end": 9348,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 9332,
											"end": 9348,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 9332,
											"end": 9348,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 9332,
											"end": 9348,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 9332,
											"end": 9348,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 9332,
											"end": 9348,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": 9332,
											"end": 9348,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 9332,
											"end": 9348,
											"name": "CALLDATACOPY",
											"source": 3
										},
										{
											"begin": 9332,
											"end": 9348,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 9332,
											"end": 9348,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 9332,
											"end": 9348,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 9308,
											"end": 9348,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 9308,
											"end": 9348,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 9369,
											"end": 9378,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 9359,
											"end": 9363,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 9364,
											"end": 9365,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 9359,
											"end": 9366,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 9359,
											"end": 9366,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 9359,
											"end": 9366,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 9359,
											"end": 9366,
											"name": "LT",
											"source": 3
										},
										{
											"begin": 9359,
											"end": 9366,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "160"
										},
										{
											"begin": 9359,
											"end": 9366,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 9359,
											"end": 9366,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "160"
										},
										{
											"begin": 9359,
											"end": 9366,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "161"
										},
										{
											"begin": 9359,
											"end": 9366,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 9359,
											"end": 9366,
											"name": "tag",
											"source": 3,
											"value": "160"
										},
										{
											"begin": 9359,
											"end": 9366,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 9359,
											"end": 9366,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 9359,
											"end": 9366,
											"name": "MUL",
											"source": 3
										},
										{
											"begin": 9359,
											"end": 9366,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 9359,
											"end": 9366,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 9359,
											"end": 9366,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 9359,
											"end": 9378,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 9359,
											"end": 9378,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 9359,
											"end": 9378,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 9359,
											"end": 9378,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 9359,
											"end": 9378,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 9359,
											"end": 9378,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 9359,
											"end": 9378,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 9359,
											"end": 9378,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 9359,
											"end": 9378,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2335,
											"end": 2377,
											"name": "PUSH",
											"source": 3,
											"value": "5C7F8A570D578ED84E63FDFA7B1EE72DEAE1AE23"
										},
										{
											"begin": 9389,
											"end": 9393,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 9394,
											"end": 9395,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 9389,
											"end": 9396,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 9389,
											"end": 9396,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 9389,
											"end": 9396,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 9389,
											"end": 9396,
											"name": "LT",
											"source": 3
										},
										{
											"begin": 9389,
											"end": 9396,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "163"
										},
										{
											"begin": 9389,
											"end": 9396,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 9389,
											"end": 9396,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "163"
										},
										{
											"begin": 9389,
											"end": 9396,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "161"
										},
										{
											"begin": 9389,
											"end": 9396,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 9389,
											"end": 9396,
											"name": "tag",
											"source": 3,
											"value": "163"
										},
										{
											"begin": 9389,
											"end": 9396,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 9389,
											"end": 9403,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 9389,
											"end": 9403,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 9389,
											"end": 9403,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 9389,
											"end": 9396,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 9389,
											"end": 9396,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 9389,
											"end": 9396,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 9389,
											"end": 9396,
											"name": "MUL",
											"source": 3
										},
										{
											"begin": 9389,
											"end": 9396,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 9389,
											"end": 9396,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 9389,
											"end": 9396,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 9389,
											"end": 9396,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 9389,
											"end": 9396,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 9389,
											"end": 9403,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 9414,
											"end": 9420,
											"name": "PUSH",
											"source": 3,
											"value": "8"
										},
										{
											"begin": 9414,
											"end": 9420,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 9414,
											"end": 9420,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 9414,
											"end": 9471,
											"name": "PUSH",
											"source": 3,
											"value": "791AC947"
										},
										{
											"begin": 9486,
											"end": 9506,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "164"
										},
										{
											"begin": 9497,
											"end": 9506,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 9486,
											"end": 9494,
											"name": "DUP8",
											"source": 3
										},
										{
											"begin": 9486,
											"end": 9506,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "165"
										},
										{
											"begin": 9486,
											"end": 9506,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 9486,
											"end": 9506,
											"name": "tag",
											"source": 3,
											"value": "164"
										},
										{
											"begin": 9486,
											"end": 9506,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 9521,
											"end": 9533,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 9548,
											"end": 9552,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 9567,
											"end": 9577,
											"name": "CALLER",
											"source": 3
										},
										{
											"begin": 9592,
											"end": 9617,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "166"
										},
										{
											"begin": 9592,
											"end": 9607,
											"name": "TIMESTAMP",
											"source": 3
										},
										{
											"begin": 9610,
											"end": 9617,
											"name": "PUSH",
											"source": 3,
											"value": "E10"
										},
										{
											"begin": 9592,
											"end": 9617,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "167"
										},
										{
											"begin": 9592,
											"end": 9617,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 9592,
											"end": 9617,
											"name": "tag",
											"source": 3,
											"value": "166"
										},
										{
											"begin": 9592,
											"end": 9617,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 9414,
											"end": 9628,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 9414,
											"end": 9628,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 9414,
											"end": 9628,
											"name": "DUP7",
											"source": 3
										},
										{
											"begin": 9414,
											"end": 9628,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFF"
										},
										{
											"begin": 9414,
											"end": 9628,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 9414,
											"end": 9628,
											"name": "PUSH",
											"source": 3,
											"value": "E0"
										},
										{
											"begin": 9414,
											"end": 9628,
											"name": "SHL",
											"source": 3
										},
										{
											"begin": 9414,
											"end": 9628,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 9414,
											"end": 9628,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 9414,
											"end": 9628,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 9414,
											"end": 9628,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 9414,
											"end": 9628,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "168"
										},
										{
											"begin": 9414,
											"end": 9628,
											"name": "SWAP6",
											"source": 3
										},
										{
											"begin": 9414,
											"end": 9628,
											"name": "SWAP5",
											"source": 3
										},
										{
											"begin": 9414,
											"end": 9628,
											"name": "SWAP4",
											"source": 3
										},
										{
											"begin": 9414,
											"end": 9628,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 9414,
											"end": 9628,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 9414,
											"end": 9628,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 9414,
											"end": 9628,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "169"
										},
										{
											"begin": 9414,
											"end": 9628,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 9414,
											"end": 9628,
											"name": "tag",
											"source": 3,
											"value": "168"
										},
										{
											"begin": 9414,
											"end": 9628,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 9414,
											"end": 9628,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 9414,
											"end": 9628,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 9414,
											"end": 9628,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 9414,
											"end": 9628,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 9414,
											"end": 9628,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 9414,
											"end": 9628,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 9414,
											"end": 9628,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 9414,
											"end": 9628,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 9414,
											"end": 9628,
											"name": "DUP8",
											"source": 3
										},
										{
											"begin": 9414,
											"end": 9628,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 9414,
											"end": 9628,
											"name": "EXTCODESIZE",
											"source": 3
										},
										{
											"begin": 9414,
											"end": 9628,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 9414,
											"end": 9628,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 9414,
											"end": 9628,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 9414,
											"end": 9628,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "170"
										},
										{
											"begin": 9414,
											"end": 9628,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 9414,
											"end": 9628,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 9414,
											"end": 9628,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 9414,
											"end": 9628,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 9414,
											"end": 9628,
											"name": "tag",
											"source": 3,
											"value": "170"
										},
										{
											"begin": 9414,
											"end": 9628,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 9414,
											"end": 9628,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 9414,
											"end": 9628,
											"name": "GAS",
											"source": 3
										},
										{
											"begin": 9414,
											"end": 9628,
											"name": "CALL",
											"source": 3
										},
										{
											"begin": 9414,
											"end": 9628,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 9414,
											"end": 9628,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 9414,
											"end": 9628,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 9414,
											"end": 9628,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "172"
										},
										{
											"begin": 9414,
											"end": 9628,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 9414,
											"end": 9628,
											"name": "RETURNDATASIZE",
											"source": 3
										},
										{
											"begin": 9414,
											"end": 9628,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 9414,
											"end": 9628,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 9414,
											"end": 9628,
											"name": "RETURNDATACOPY",
											"source": 3
										},
										{
											"begin": 9414,
											"end": 9628,
											"name": "RETURNDATASIZE",
											"source": 3
										},
										{
											"begin": 9414,
											"end": 9628,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 9414,
											"end": 9628,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 9414,
											"end": 9628,
											"name": "tag",
											"source": 3,
											"value": "172"
										},
										{
											"begin": 9414,
											"end": 9628,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 9414,
											"end": 9628,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 9414,
											"end": 9628,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 9414,
											"end": 9628,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 9414,
											"end": 9628,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 9019,
											"end": 9636,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 9019,
											"end": 9636,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 8894,
											"end": 9636,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 8894,
											"end": 9636,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 8894,
											"end": 9636,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 8894,
											"end": 9636,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 9851,
											"end": 10054,
											"name": "tag",
											"source": 3,
											"value": "48"
										},
										{
											"begin": 9851,
											"end": 10054,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 9917,
											"end": 9921,
											"name": "PUSH",
											"source": 3,
											"value": "D"
										},
										{
											"begin": 9917,
											"end": 9921,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 9917,
											"end": 9966,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 9917,
											"end": 9966,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "23B872DD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 9917,
											"end": 9966,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 9917,
											"end": 9966,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 9935,
											"end": 9945,
											"name": "CALLER",
											"source": 3
										},
										{
											"begin": 9917,
											"end": 9966,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 9917,
											"end": 9966,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 9917,
											"end": 9966,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3193,
											"end": 3227,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 9955,
											"end": 9959,
											"name": "ADDRESS",
											"source": 3
										},
										{
											"begin": 3243,
											"end": 3261,
											"name": "PUSH",
											"source": 4,
											"value": "24"
										},
										{
											"begin": 3243,
											"end": 3261,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 3243,
											"end": 3261,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3236,
											"end": 3279,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 3295,
											"end": 3313,
											"name": "PUSH",
											"source": 4,
											"value": "44"
										},
										{
											"begin": 3295,
											"end": 3313,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3295,
											"end": 3313,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3288,
											"end": 3322,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 3288,
											"end": 3322,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3288,
											"end": 3322,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 9917,
											"end": 9921,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 9917,
											"end": 9921,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 9917,
											"end": 9921,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 9917,
											"end": 9921,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 9917,
											"end": 9934,
											"name": "PUSH",
											"source": 3,
											"value": "23B872DD"
										},
										{
											"begin": 9917,
											"end": 9934,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3128,
											"end": 3146,
											"name": "PUSH",
											"source": 4,
											"value": "64"
										},
										{
											"begin": 3128,
											"end": 3146,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 9917,
											"end": 9966,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 9917,
											"end": 9966,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 9917,
											"end": 9966,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 9917,
											"end": 9966,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 9917,
											"end": 9966,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 9917,
											"end": 9966,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 9917,
											"end": 9966,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 9917,
											"end": 9966,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 9917,
											"end": 9966,
											"name": "DUP8",
											"source": 3
										},
										{
											"begin": 9917,
											"end": 9966,
											"name": "GAS",
											"source": 3
										},
										{
											"begin": 9917,
											"end": 9966,
											"name": "CALL",
											"source": 3
										},
										{
											"begin": 9917,
											"end": 9966,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 9917,
											"end": 9966,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 9917,
											"end": 9966,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 9917,
											"end": 9966,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "176"
										},
										{
											"begin": 9917,
											"end": 9966,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 9917,
											"end": 9966,
											"name": "RETURNDATASIZE",
											"source": 3
										},
										{
											"begin": 9917,
											"end": 9966,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 9917,
											"end": 9966,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 9917,
											"end": 9966,
											"name": "RETURNDATACOPY",
											"source": 3
										},
										{
											"begin": 9917,
											"end": 9966,
											"name": "RETURNDATASIZE",
											"source": 3
										},
										{
											"begin": 9917,
											"end": 9966,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 9917,
											"end": 9966,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 9917,
											"end": 9966,
											"name": "tag",
											"source": 3,
											"value": "176"
										},
										{
											"begin": 9917,
											"end": 9966,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 9917,
											"end": 9966,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 9917,
											"end": 9966,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 9917,
											"end": 9966,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 9917,
											"end": 9966,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 9917,
											"end": 9966,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 9917,
											"end": 9966,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 9917,
											"end": 9966,
											"name": "RETURNDATASIZE",
											"source": 3
										},
										{
											"begin": 9917,
											"end": 9966,
											"name": "PUSH",
											"source": 3,
											"value": "1F"
										},
										{
											"begin": 9917,
											"end": 9966,
											"name": "NOT",
											"source": 3
										},
										{
											"begin": 9917,
											"end": 9966,
											"name": "PUSH",
											"source": 3,
											"value": "1F"
										},
										{
											"begin": 9917,
											"end": 9966,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 9917,
											"end": 9966,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 9917,
											"end": 9966,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 9917,
											"end": 9966,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 9917,
											"end": 9966,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 9917,
											"end": 9966,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 9917,
											"end": 9966,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 9917,
											"end": 9966,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 9917,
											"end": 9966,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 9917,
											"end": 9966,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 9917,
											"end": 9966,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 9917,
											"end": 9966,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 9917,
											"end": 9966,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "177"
										},
										{
											"begin": 9917,
											"end": 9966,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 9917,
											"end": 9966,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 9917,
											"end": 9966,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "148"
										},
										{
											"begin": 9917,
											"end": 9966,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 9917,
											"end": 9966,
											"name": "tag",
											"source": 3,
											"value": "177"
										},
										{
											"begin": 9917,
											"end": 9966,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 9977,
											"end": 9981,
											"name": "PUSH",
											"source": 3,
											"value": "D"
										},
										{
											"begin": 9977,
											"end": 9981,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 9977,
											"end": 9995,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 9977,
											"end": 9995,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "2E1A7D4D"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 9977,
											"end": 9995,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 9977,
											"end": 9995,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 9977,
											"end": 9995,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 9977,
											"end": 9995,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 9977,
											"end": 9995,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1317,
											"end": 1342,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 1317,
											"end": 1342,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1317,
											"end": 1342,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 9977,
											"end": 9981,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 9977,
											"end": 9981,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 9977,
											"end": 9981,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 9977,
											"end": 9981,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 9977,
											"end": 9990,
											"name": "PUSH",
											"source": 3,
											"value": "2E1A7D4D"
										},
										{
											"begin": 9977,
											"end": 9990,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1290,
											"end": 1308,
											"name": "PUSH",
											"source": 4,
											"value": "24"
										},
										{
											"begin": 1290,
											"end": 1308,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 9977,
											"end": 9995,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 9977,
											"end": 9995,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 9977,
											"end": 9995,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 9977,
											"end": 9995,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 9977,
											"end": 9995,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 9977,
											"end": 9995,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 9977,
											"end": 9995,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 9977,
											"end": 9995,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 9977,
											"end": 9995,
											"name": "DUP8",
											"source": 3
										},
										{
											"begin": 9977,
											"end": 9995,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 9977,
											"end": 9995,
											"name": "EXTCODESIZE",
											"source": 3
										},
										{
											"begin": 9977,
											"end": 9995,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 9977,
											"end": 9995,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 9977,
											"end": 9995,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 9977,
											"end": 9995,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "179"
										},
										{
											"begin": 9977,
											"end": 9995,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 9977,
											"end": 9995,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 9977,
											"end": 9995,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 9977,
											"end": 9995,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 9977,
											"end": 9995,
											"name": "tag",
											"source": 3,
											"value": "179"
										},
										{
											"begin": 9977,
											"end": 9995,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 9977,
											"end": 9995,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 9977,
											"end": 9995,
											"name": "GAS",
											"source": 3
										},
										{
											"begin": 9977,
											"end": 9995,
											"name": "CALL",
											"source": 3
										},
										{
											"begin": 9977,
											"end": 9995,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 9977,
											"end": 9995,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 9977,
											"end": 9995,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 9977,
											"end": 9995,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "181"
										},
										{
											"begin": 9977,
											"end": 9995,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 9977,
											"end": 9995,
											"name": "RETURNDATASIZE",
											"source": 3
										},
										{
											"begin": 9977,
											"end": 9995,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 9977,
											"end": 9995,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 9977,
											"end": 9995,
											"name": "RETURNDATACOPY",
											"source": 3
										},
										{
											"begin": 9977,
											"end": 9995,
											"name": "RETURNDATASIZE",
											"source": 3
										},
										{
											"begin": 9977,
											"end": 9995,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 9977,
											"end": 9995,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 9977,
											"end": 9995,
											"name": "tag",
											"source": 3,
											"value": "181"
										},
										{
											"begin": 9977,
											"end": 9995,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 10013,
											"end": 10046,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 10013,
											"end": 10046,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 10021,
											"end": 10031,
											"name": "CALLER",
											"source": 3
										},
										{
											"begin": 10021,
											"end": 10031,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 10013,
											"end": 10046,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 10013,
											"end": 10046,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 10013,
											"end": 10046,
											"name": "PUSH",
											"source": 3,
											"value": "8FC"
										},
										{
											"begin": 10013,
											"end": 10046,
											"name": "MUL",
											"source": 3
										},
										{
											"begin": 10013,
											"end": 10046,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 10042,
											"end": 10045,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 10042,
											"end": 10045,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 10013,
											"end": 10046,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 10013,
											"end": 10046,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 10013,
											"end": 10046,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 10013,
											"end": 10046,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 10042,
											"end": 10045,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 10021,
											"end": 10031,
											"name": "DUP9",
											"source": 3
										},
										{
											"begin": 10013,
											"end": 10046,
											"name": "DUP9",
											"source": 3
										},
										{
											"begin": 10013,
											"end": 10046,
											"name": "CALL",
											"source": 3
										},
										{
											"begin": 10013,
											"end": 10046,
											"name": "SWAP4",
											"source": 3
										},
										{
											"begin": 10013,
											"end": 10046,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 10013,
											"end": 10046,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 10013,
											"end": 10046,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 10013,
											"end": 10046,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 10013,
											"end": 10046,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 10013,
											"end": 10046,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 10013,
											"end": 10046,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 10013,
											"end": 10046,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "183"
										},
										{
											"begin": 10013,
											"end": 10046,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 10013,
											"end": 10046,
											"name": "RETURNDATASIZE",
											"source": 3
										},
										{
											"begin": 10013,
											"end": 10046,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 10013,
											"end": 10046,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 10013,
											"end": 10046,
											"name": "RETURNDATACOPY",
											"source": 3
										},
										{
											"begin": 10013,
											"end": 10046,
											"name": "RETURNDATASIZE",
											"source": 3
										},
										{
											"begin": 10013,
											"end": 10046,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 10013,
											"end": 10046,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 10013,
											"end": 10046,
											"name": "tag",
											"source": 3,
											"value": "183"
										},
										{
											"begin": 10013,
											"end": 10046,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 10013,
											"end": 10046,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 9851,
											"end": 10054,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 9851,
											"end": 10054,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4731,
											"end": 4891,
											"name": "tag",
											"source": 3,
											"value": "53"
										},
										{
											"begin": 4731,
											"end": 4891,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "185"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "186"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "185"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4822,
											"end": 4833,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 4822,
											"end": 4848,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 4822,
											"end": 4848,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 4822,
											"end": 4848,
											"modifierDepth": 1,
											"name": "AND",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4822,
											"end": 4848,
											"name": "SWAP4",
											"source": 3
										},
										{
											"begin": 4822,
											"end": 4848,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4822,
											"end": 4848,
											"name": "SWAP4",
											"source": 3
										},
										{
											"begin": 4822,
											"end": 4848,
											"modifierDepth": 1,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 4822,
											"end": 4848,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 4822,
											"end": 4848,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4822,
											"end": 4848,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 4822,
											"end": 4848,
											"modifierDepth": 1,
											"name": "OR",
											"source": 3
										},
										{
											"begin": 4822,
											"end": 4848,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4822,
											"end": 4848,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 4822,
											"end": 4848,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": 4859,
											"end": 4869,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "2"
										},
										{
											"begin": 4859,
											"end": 4883,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": 4731,
											"end": 4891,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4222,
											"end": 4472,
											"name": "tag",
											"source": 3,
											"value": "56"
										},
										{
											"begin": 4222,
											"end": 4472,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "189"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "186"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "189"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4284,
											"end": 4293,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "6"
										},
										{
											"begin": 4284,
											"end": 4300,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 4272,
											"end": 4281,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 4311,
											"end": 4400,
											"modifierDepth": 1,
											"name": "tag",
											"source": 3,
											"value": "191"
										},
										{
											"begin": 4311,
											"end": 4400,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4334,
											"end": 4335,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 4330,
											"end": 4331,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 4330,
											"end": 4335,
											"modifierDepth": 1,
											"name": "LT",
											"source": 3
										},
										{
											"begin": 4311,
											"end": 4400,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 4311,
											"end": 4400,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "192"
										},
										{
											"begin": 4311,
											"end": 4400,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 4364,
											"end": 4374,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 4364,
											"end": 4388,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 4375,
											"end": 4384,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "6"
										},
										{
											"begin": 4385,
											"end": 4386,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 4375,
											"end": 4387,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 4375,
											"end": 4387,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 4375,
											"end": 4387,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 4375,
											"end": 4387,
											"modifierDepth": 1,
											"name": "LT",
											"source": 3
										},
										{
											"begin": 4375,
											"end": 4387,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "195"
										},
										{
											"begin": 4375,
											"end": 4387,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 4375,
											"end": 4387,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "195"
										},
										{
											"begin": 4375,
											"end": 4387,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "161"
										},
										{
											"begin": 4375,
											"end": 4387,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4375,
											"end": 4387,
											"modifierDepth": 1,
											"name": "tag",
											"source": 3,
											"value": "195"
										},
										{
											"begin": 4375,
											"end": 4387,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4375,
											"end": 4387,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 4375,
											"end": 4387,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 4375,
											"end": 4387,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 4375,
											"end": 4387,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 4375,
											"end": 4387,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 4375,
											"end": 4387,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 4375,
											"end": 4387,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 4375,
											"end": 4387,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 4375,
											"end": 4387,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4375,
											"end": 4387,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 4375,
											"end": 4387,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 4375,
											"end": 4387,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4375,
											"end": 4387,
											"modifierDepth": 1,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 4364,
											"end": 4388,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 4364,
											"end": 4388,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 4364,
											"end": 4388,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 4364,
											"end": 4388,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 4364,
											"end": 4388,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 4364,
											"end": 4388,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4364,
											"end": 4388,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 4364,
											"end": 4388,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 4364,
											"end": 4388,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 4364,
											"end": 4388,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 4364,
											"end": 4388,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 4364,
											"end": 4388,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 4357,
											"end": 4388,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": 4337,
											"end": 4340,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 4337,
											"end": 4340,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "197"
										},
										{
											"begin": 4337,
											"end": 4340,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 4337,
											"end": 4340,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "198"
										},
										{
											"begin": 4337,
											"end": 4340,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4337,
											"end": 4340,
											"modifierDepth": 1,
											"name": "tag",
											"source": 3,
											"value": "197"
										},
										{
											"begin": 4337,
											"end": 4340,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4337,
											"end": 4340,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 4337,
											"end": 4340,
											"modifierDepth": 1,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4337,
											"end": 4340,
											"modifierDepth": 1,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4311,
											"end": 4400,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "191"
										},
										{
											"begin": 4311,
											"end": 4400,
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4311,
											"end": 4400,
											"modifierDepth": 1,
											"name": "tag",
											"source": 3,
											"value": "192"
										},
										{
											"begin": 4311,
											"end": 4400,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4410,
											"end": 4426,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "199"
										},
										{
											"begin": 4417,
											"end": 4426,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "6"
										},
										{
											"begin": 4417,
											"end": 4426,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 4410,
											"end": 4426,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "200"
										},
										{
											"begin": 4410,
											"end": 4426,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4410,
											"end": 4426,
											"modifierDepth": 1,
											"name": "tag",
											"source": 3,
											"value": "199"
										},
										{
											"begin": 4410,
											"end": 4426,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4437,
											"end": 4456,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "3"
										},
										{
											"begin": 4437,
											"end": 4464,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 4437,
											"end": 4464,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 4437,
											"end": 4464,
											"modifierDepth": 1,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 4437,
											"end": 4464,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4437,
											"end": 4464,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": 4222,
											"end": 4472,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 8047,
											"end": 8842,
											"name": "tag",
											"source": 3,
											"value": "59"
										},
										{
											"begin": 8047,
											"end": 8842,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 8233,
											"end": 8243,
											"name": "PUSH",
											"source": 3,
											"value": "2"
										},
										{
											"begin": 8233,
											"end": 8243,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 8182,
											"end": 8191,
											"name": "CALLVALUE",
											"source": 3
										},
										{
											"begin": 8182,
											"end": 8191,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 8163,
											"end": 8179,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 8163,
											"end": 8179,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 8246,
											"end": 8250,
											"name": "PUSH",
											"source": 3,
											"value": "3E8"
										},
										{
											"begin": 8246,
											"end": 8250,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 8222,
											"end": 8243,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "202"
										},
										{
											"begin": 8222,
											"end": 8243,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 8182,
											"end": 8191,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 8222,
											"end": 8243,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "150"
										},
										{
											"begin": 8222,
											"end": 8243,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 8222,
											"end": 8243,
											"name": "tag",
											"source": 3,
											"value": "202"
										},
										{
											"begin": 8222,
											"end": 8243,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 8222,
											"end": 8250,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "203"
										},
										{
											"begin": 8222,
											"end": 8250,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 8222,
											"end": 8250,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 8222,
											"end": 8250,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "152"
										},
										{
											"begin": 8222,
											"end": 8250,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 8222,
											"end": 8250,
											"name": "tag",
											"source": 3,
											"value": "203"
										},
										{
											"begin": 8222,
											"end": 8250,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 8269,
											"end": 8280,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 8269,
											"end": 8280,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 8261,
											"end": 8301,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 8261,
											"end": 8301,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 8202,
											"end": 8250,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 8202,
											"end": 8250,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 8269,
											"end": 8280,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 8269,
											"end": 8280,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 8261,
											"end": 8301,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 8261,
											"end": 8301,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 8261,
											"end": 8301,
											"name": "PUSH",
											"source": 3,
											"value": "8FC"
										},
										{
											"begin": 8261,
											"end": 8301,
											"name": "MUL",
											"source": 3
										},
										{
											"begin": 8261,
											"end": 8301,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 8202,
											"end": 8250,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 8202,
											"end": 8250,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 8269,
											"end": 8280,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 8261,
											"end": 8301,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 8269,
											"end": 8280,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 8261,
											"end": 8301,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 8202,
											"end": 8250,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 8269,
											"end": 8280,
											"name": "DUP9",
											"source": 3
										},
										{
											"begin": 8261,
											"end": 8301,
											"name": "DUP9",
											"source": 3
										},
										{
											"begin": 8261,
											"end": 8301,
											"name": "CALL",
											"source": 3
										},
										{
											"begin": 8261,
											"end": 8301,
											"name": "SWAP4",
											"source": 3
										},
										{
											"begin": 8261,
											"end": 8301,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 8261,
											"end": 8301,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 8261,
											"end": 8301,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 8261,
											"end": 8301,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 8261,
											"end": 8301,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 8261,
											"end": 8301,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 8261,
											"end": 8301,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 8261,
											"end": 8301,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "205"
										},
										{
											"begin": 8261,
											"end": 8301,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 8261,
											"end": 8301,
											"name": "RETURNDATASIZE",
											"source": 3
										},
										{
											"begin": 8261,
											"end": 8301,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 8261,
											"end": 8301,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 8261,
											"end": 8301,
											"name": "RETURNDATACOPY",
											"source": 3
										},
										{
											"begin": 8261,
											"end": 8301,
											"name": "RETURNDATASIZE",
											"source": 3
										},
										{
											"begin": 8261,
											"end": 8301,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 8261,
											"end": 8301,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 8261,
											"end": 8301,
											"name": "tag",
											"source": 3,
											"value": "205"
										},
										{
											"begin": 8261,
											"end": 8301,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 8338,
											"end": 8354,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 8338,
											"end": 8354,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 8338,
											"end": 8354,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 8352,
											"end": 8353,
											"name": "PUSH",
											"source": 3,
											"value": "2"
										},
										{
											"begin": 8338,
											"end": 8354,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 8338,
											"end": 8354,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 8338,
											"end": 8354,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 8338,
											"end": 8354,
											"name": "PUSH",
											"source": 3,
											"value": "60"
										},
										{
											"begin": 8338,
											"end": 8354,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 8338,
											"end": 8354,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 8338,
											"end": 8354,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 8338,
											"end": 8354,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 8314,
											"end": 8335,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 8314,
											"end": 8335,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 8338,
											"end": 8354,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 8338,
											"end": 8354,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 8338,
											"end": 8354,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 8338,
											"end": 8354,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 8338,
											"end": 8354,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 8338,
											"end": 8354,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": 8338,
											"end": 8354,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 8338,
											"end": 8354,
											"name": "CALLDATACOPY",
											"source": 3
										},
										{
											"begin": 8338,
											"end": 8354,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 8338,
											"end": 8354,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 8338,
											"end": 8354,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 8314,
											"end": 8354,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 8314,
											"end": 8354,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2335,
											"end": 2377,
											"name": "PUSH",
											"source": 3,
											"value": "5C7F8A570D578ED84E63FDFA7B1EE72DEAE1AE23"
										},
										{
											"begin": 8365,
											"end": 8369,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 8370,
											"end": 8371,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 8365,
											"end": 8372,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 8365,
											"end": 8372,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 8365,
											"end": 8372,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 8365,
											"end": 8372,
											"name": "LT",
											"source": 3
										},
										{
											"begin": 8365,
											"end": 8372,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "210"
										},
										{
											"begin": 8365,
											"end": 8372,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 8365,
											"end": 8372,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "210"
										},
										{
											"begin": 8365,
											"end": 8372,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "161"
										},
										{
											"begin": 8365,
											"end": 8372,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 8365,
											"end": 8372,
											"name": "tag",
											"source": 3,
											"value": "210"
										},
										{
											"begin": 8365,
											"end": 8372,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 8365,
											"end": 8372,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 8365,
											"end": 8372,
											"name": "MUL",
											"source": 3
										},
										{
											"begin": 8365,
											"end": 8372,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 8365,
											"end": 8372,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 8365,
											"end": 8372,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 8365,
											"end": 8379,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 8365,
											"end": 8379,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 8365,
											"end": 8379,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 8365,
											"end": 8379,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 8365,
											"end": 8379,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 8365,
											"end": 8379,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 8365,
											"end": 8379,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 8365,
											"end": 8379,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 8365,
											"end": 8379,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 8400,
											"end": 8407,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 8390,
											"end": 8394,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 8395,
											"end": 8396,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 8390,
											"end": 8397,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 8390,
											"end": 8397,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 8390,
											"end": 8397,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 8390,
											"end": 8397,
											"name": "LT",
											"source": 3
										},
										{
											"begin": 8390,
											"end": 8397,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "212"
										},
										{
											"begin": 8390,
											"end": 8397,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 8390,
											"end": 8397,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "212"
										},
										{
											"begin": 8390,
											"end": 8397,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "161"
										},
										{
											"begin": 8390,
											"end": 8397,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 8390,
											"end": 8397,
											"name": "tag",
											"source": 3,
											"value": "212"
										},
										{
											"begin": 8390,
											"end": 8397,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 8390,
											"end": 8407,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 8390,
											"end": 8407,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 8390,
											"end": 8407,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 8390,
											"end": 8397,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 8390,
											"end": 8397,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 8390,
											"end": 8397,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 8390,
											"end": 8397,
											"name": "MUL",
											"source": 3
										},
										{
											"begin": 8390,
											"end": 8397,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 8390,
											"end": 8397,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 8390,
											"end": 8397,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 8390,
											"end": 8397,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 8390,
											"end": 8397,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 8390,
											"end": 8407,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 8450,
											"end": 8456,
											"name": "PUSH",
											"source": 3,
											"value": "8"
										},
										{
											"begin": 8450,
											"end": 8456,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 8420,
											"end": 8447,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 8420,
											"end": 8447,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 8450,
											"end": 8456,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 8450,
											"end": 8470,
											"name": "PUSH",
											"source": 3,
											"value": "D06CA61F"
										},
										{
											"begin": 8471,
											"end": 8491,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "213"
										},
										{
											"begin": 8482,
											"end": 8491,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 8471,
											"end": 8479,
											"name": "DUP8",
											"source": 3
										},
										{
											"begin": 8471,
											"end": 8491,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "165"
										},
										{
											"begin": 8471,
											"end": 8491,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 8471,
											"end": 8491,
											"name": "tag",
											"source": 3,
											"value": "213"
										},
										{
											"begin": 8471,
											"end": 8491,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 8493,
											"end": 8497,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 8450,
											"end": 8498,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 8450,
											"end": 8498,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 8450,
											"end": 8498,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 8450,
											"end": 8498,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFF"
										},
										{
											"begin": 8450,
											"end": 8498,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 8450,
											"end": 8498,
											"name": "PUSH",
											"source": 3,
											"value": "E0"
										},
										{
											"begin": 8450,
											"end": 8498,
											"name": "SHL",
											"source": 3
										},
										{
											"begin": 8450,
											"end": 8498,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 8450,
											"end": 8498,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 8450,
											"end": 8498,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 8450,
											"end": 8498,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 8450,
											"end": 8498,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "214"
										},
										{
											"begin": 8450,
											"end": 8498,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 8450,
											"end": 8498,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 8450,
											"end": 8498,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 8450,
											"end": 8498,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "215"
										},
										{
											"begin": 8450,
											"end": 8498,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 8450,
											"end": 8498,
											"name": "tag",
											"source": 3,
											"value": "214"
										},
										{
											"begin": 8450,
											"end": 8498,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 8450,
											"end": 8498,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 8450,
											"end": 8498,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 8450,
											"end": 8498,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 8450,
											"end": 8498,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 8450,
											"end": 8498,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 8450,
											"end": 8498,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 8450,
											"end": 8498,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 8450,
											"end": 8498,
											"name": "DUP7",
											"source": 3
										},
										{
											"begin": 8450,
											"end": 8498,
											"name": "GAS",
											"source": 3
										},
										{
											"begin": 8450,
											"end": 8498,
											"name": "STATICCALL",
											"source": 3
										},
										{
											"begin": 8450,
											"end": 8498,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 8450,
											"end": 8498,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 8450,
											"end": 8498,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 8450,
											"end": 8498,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "217"
										},
										{
											"begin": 8450,
											"end": 8498,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 8450,
											"end": 8498,
											"name": "RETURNDATASIZE",
											"source": 3
										},
										{
											"begin": 8450,
											"end": 8498,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 8450,
											"end": 8498,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 8450,
											"end": 8498,
											"name": "RETURNDATACOPY",
											"source": 3
										},
										{
											"begin": 8450,
											"end": 8498,
											"name": "RETURNDATASIZE",
											"source": 3
										},
										{
											"begin": 8450,
											"end": 8498,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 8450,
											"end": 8498,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 8450,
											"end": 8498,
											"name": "tag",
											"source": 3,
											"value": "217"
										},
										{
											"begin": 8450,
											"end": 8498,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 8450,
											"end": 8498,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 8450,
											"end": 8498,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 8450,
											"end": 8498,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 8450,
											"end": 8498,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 8450,
											"end": 8498,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 8450,
											"end": 8498,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 8450,
											"end": 8498,
											"name": "RETURNDATASIZE",
											"source": 3
										},
										{
											"begin": 8450,
											"end": 8498,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 8450,
											"end": 8498,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 8450,
											"end": 8498,
											"name": "RETURNDATACOPY",
											"source": 3
										},
										{
											"begin": 8450,
											"end": 8498,
											"name": "PUSH",
											"source": 3,
											"value": "1F"
										},
										{
											"begin": 8450,
											"end": 8498,
											"name": "RETURNDATASIZE",
											"source": 3
										},
										{
											"begin": 8450,
											"end": 8498,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 8450,
											"end": 8498,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 8450,
											"end": 8498,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 8450,
											"end": 8498,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 8450,
											"end": 8498,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 8450,
											"end": 8498,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 8450,
											"end": 8498,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 8450,
											"end": 8498,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 8450,
											"end": 8498,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "218"
										},
										{
											"begin": 8450,
											"end": 8498,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 8450,
											"end": 8498,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 8450,
											"end": 8498,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 8450,
											"end": 8498,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 8450,
											"end": 8498,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 8450,
											"end": 8498,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "219"
										},
										{
											"begin": 8450,
											"end": 8498,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 8450,
											"end": 8498,
											"name": "tag",
											"source": 3,
											"value": "218"
										},
										{
											"begin": 8450,
											"end": 8498,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 8509,
											"end": 8515,
											"name": "PUSH",
											"source": 3,
											"value": "8"
										},
										{
											"begin": 8509,
											"end": 8515,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 8420,
											"end": 8498,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 8420,
											"end": 8498,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 8509,
											"end": 8515,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 8509,
											"end": 8566,
											"name": "PUSH",
											"source": 3,
											"value": "B6F9DE95"
										},
										{
											"begin": 8574,
											"end": 8594,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "220"
										},
										{
											"begin": 8585,
											"end": 8594,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 8574,
											"end": 8582,
											"name": "DUP8",
											"source": 3
										},
										{
											"begin": 8574,
											"end": 8594,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "165"
										},
										{
											"begin": 8574,
											"end": 8594,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 8574,
											"end": 8594,
											"name": "tag",
											"source": 3,
											"value": "220"
										},
										{
											"begin": 8574,
											"end": 8594,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 8610,
											"end": 8622,
											"name": "DUP8",
											"source": 3
										},
										{
											"begin": 8637,
											"end": 8641,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 8656,
											"end": 8666,
											"name": "CALLER",
											"source": 3
										},
										{
											"begin": 8681,
											"end": 8706,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "221"
										},
										{
											"begin": 8681,
											"end": 8696,
											"name": "TIMESTAMP",
											"source": 3
										},
										{
											"begin": 8699,
											"end": 8706,
											"name": "PUSH",
											"source": 3,
											"value": "E10"
										},
										{
											"begin": 8681,
											"end": 8706,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "167"
										},
										{
											"begin": 8681,
											"end": 8706,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 8681,
											"end": 8706,
											"name": "tag",
											"source": 3,
											"value": "221"
										},
										{
											"begin": 8681,
											"end": 8706,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 8509,
											"end": 8717,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 8509,
											"end": 8717,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 8509,
											"end": 8717,
											"name": "DUP7",
											"source": 3
										},
										{
											"begin": 8509,
											"end": 8717,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFF"
										},
										{
											"begin": 8509,
											"end": 8717,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 8509,
											"end": 8717,
											"name": "PUSH",
											"source": 3,
											"value": "E0"
										},
										{
											"begin": 8509,
											"end": 8717,
											"name": "SHL",
											"source": 3
										},
										{
											"begin": 8509,
											"end": 8717,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 8509,
											"end": 8717,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 8509,
											"end": 8717,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 8509,
											"end": 8717,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 8509,
											"end": 8717,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "222"
										},
										{
											"begin": 8509,
											"end": 8717,
											"name": "SWAP5",
											"source": 3
										},
										{
											"begin": 8509,
											"end": 8717,
											"name": "SWAP4",
											"source": 3
										},
										{
											"begin": 8509,
											"end": 8717,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 8509,
											"end": 8717,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 8509,
											"end": 8717,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 8509,
											"end": 8717,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "223"
										},
										{
											"begin": 8509,
											"end": 8717,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 8509,
											"end": 8717,
											"name": "tag",
											"source": 3,
											"value": "222"
										},
										{
											"begin": 8509,
											"end": 8717,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 8509,
											"end": 8717,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 8509,
											"end": 8717,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 8509,
											"end": 8717,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 8509,
											"end": 8717,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 8509,
											"end": 8717,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 8509,
											"end": 8717,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 8509,
											"end": 8717,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 8509,
											"end": 8717,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 8509,
											"end": 8717,
											"name": "DUP9",
											"source": 3
										},
										{
											"begin": 8509,
											"end": 8717,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 8509,
											"end": 8717,
											"name": "EXTCODESIZE",
											"source": 3
										},
										{
											"begin": 8509,
											"end": 8717,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 8509,
											"end": 8717,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 8509,
											"end": 8717,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 8509,
											"end": 8717,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "224"
										},
										{
											"begin": 8509,
											"end": 8717,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 8509,
											"end": 8717,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 8509,
											"end": 8717,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 8509,
											"end": 8717,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 8509,
											"end": 8717,
											"name": "tag",
											"source": 3,
											"value": "224"
										},
										{
											"begin": 8509,
											"end": 8717,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 8509,
											"end": 8717,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 8509,
											"end": 8717,
											"name": "GAS",
											"source": 3
										},
										{
											"begin": 8509,
											"end": 8717,
											"name": "CALL",
											"source": 3
										},
										{
											"begin": 8509,
											"end": 8717,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 8509,
											"end": 8717,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 8509,
											"end": 8717,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 8509,
											"end": 8717,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "226"
										},
										{
											"begin": 8509,
											"end": 8717,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 8509,
											"end": 8717,
											"name": "RETURNDATASIZE",
											"source": 3
										},
										{
											"begin": 8509,
											"end": 8717,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 8509,
											"end": 8717,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 8509,
											"end": 8717,
											"name": "RETURNDATACOPY",
											"source": 3
										},
										{
											"begin": 8509,
											"end": 8717,
											"name": "RETURNDATASIZE",
											"source": 3
										},
										{
											"begin": 8509,
											"end": 8717,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 8509,
											"end": 8717,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 8509,
											"end": 8717,
											"name": "tag",
											"source": 3,
											"value": "226"
										},
										{
											"begin": 8509,
											"end": 8717,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 8733,
											"end": 8747,
											"name": "DUP8",
											"source": 3
										},
										{
											"begin": 8733,
											"end": 8747,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 2414,
											"end": 2456,
											"name": "PUSH",
											"source": 3,
											"value": "41BC026DABE978BC2FAFEA1850456511CA4B01BC"
										},
										{
											"begin": 8733,
											"end": 8747,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 8733,
											"end": 8747,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 8733,
											"end": 8770,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 8733,
											"end": 8770,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 8733,
											"end": 8770,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "227"
										},
										{
											"begin": 8733,
											"end": 8770,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 8751,
											"end": 8770,
											"name": "PUSH",
											"source": 3,
											"value": "3"
										},
										{
											"begin": 8751,
											"end": 8770,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 8751,
											"end": 8770,
											"name": "PUSH",
											"source": 3,
											"value": "FF"
										},
										{
											"begin": 8751,
											"end": 8770,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 8733,
											"end": 8770,
											"name": "tag",
											"source": 3,
											"value": "227"
										},
										{
											"begin": 8733,
											"end": 8770,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 8730,
											"end": 8835,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 8730,
											"end": 8835,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "229"
										},
										{
											"begin": 8730,
											"end": 8835,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 8787,
											"end": 8823,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "229"
										},
										{
											"begin": 8797,
											"end": 8807,
											"name": "CALLER",
											"source": 3
										},
										{
											"begin": 8809,
											"end": 8819,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 8820,
											"end": 8821,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 8809,
											"end": 8822,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 8809,
											"end": 8822,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 8809,
											"end": 8822,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 8809,
											"end": 8822,
											"name": "LT",
											"source": 3
										},
										{
											"begin": 8809,
											"end": 8822,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "231"
										},
										{
											"begin": 8809,
											"end": 8822,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 8809,
											"end": 8822,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "231"
										},
										{
											"begin": 8809,
											"end": 8822,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "161"
										},
										{
											"begin": 8809,
											"end": 8822,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 8809,
											"end": 8822,
											"name": "tag",
											"source": 3,
											"value": "231"
										},
										{
											"begin": 8809,
											"end": 8822,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 8809,
											"end": 8822,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 8809,
											"end": 8822,
											"name": "MUL",
											"source": 3
										},
										{
											"begin": 8809,
											"end": 8822,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 8809,
											"end": 8822,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 8809,
											"end": 8822,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 8809,
											"end": 8822,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 8787,
											"end": 8796,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "142"
										},
										{
											"begin": 8787,
											"end": 8823,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 8787,
											"end": 8823,
											"name": "tag",
											"source": 3,
											"value": "229"
										},
										{
											"begin": 8787,
											"end": 8823,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 8152,
											"end": 8842,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 8152,
											"end": 8842,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 8152,
											"end": 8842,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 8152,
											"end": 8842,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 8047,
											"end": 8842,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 8047,
											"end": 8842,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 8047,
											"end": 8842,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4480,
											"end": 4570,
											"name": "tag",
											"source": 3,
											"value": "62"
										},
										{
											"begin": 4480,
											"end": 4570,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "233"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "186"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "233"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4535,
											"end": 4554,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "3"
										},
										{
											"begin": 4535,
											"end": 4562,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 4535,
											"end": 4562,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 4535,
											"end": 4562,
											"modifierDepth": 1,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 4535,
											"end": 4562,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4535,
											"end": 4562,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": 4480,
											"end": 4570,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "tag",
											"source": 0,
											"value": "69"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "236"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "186"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "236"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2357,
											"end": 2387,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "238"
										},
										{
											"begin": 2384,
											"end": 2385,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2357,
											"end": 2375,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "239"
										},
										{
											"begin": 2357,
											"end": 2387,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2357,
											"end": 2387,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "238"
										},
										{
											"begin": 2357,
											"end": 2387,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3809,
											"end": 4174,
											"name": "tag",
											"source": 3,
											"value": "100"
										},
										{
											"begin": 3809,
											"end": 4174,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3898,
											"end": 3907,
											"name": "PUSH",
											"source": 3,
											"value": "6"
										},
										{
											"begin": 3898,
											"end": 3914,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 3858,
											"end": 3873,
											"name": "PUSH",
											"source": 3,
											"value": "60"
										},
										{
											"begin": 3858,
											"end": 3873,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3886,
											"end": 3895,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3898,
											"end": 3914,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3951,
											"end": 3966,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3951,
											"end": 3966,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3951,
											"end": 3966,
											"name": "GT",
											"source": 3
										},
										{
											"begin": 3951,
											"end": 3966,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 3951,
											"end": 3966,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "243"
										},
										{
											"begin": 3951,
											"end": 3966,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 3951,
											"end": 3966,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "243"
										},
										{
											"begin": 3951,
											"end": 3966,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "157"
										},
										{
											"begin": 3951,
											"end": 3966,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3951,
											"end": 3966,
											"name": "tag",
											"source": 3,
											"value": "243"
										},
										{
											"begin": 3951,
											"end": 3966,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3951,
											"end": 3966,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 3951,
											"end": 3966,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 3951,
											"end": 3966,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3951,
											"end": 3966,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3951,
											"end": 3966,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 3951,
											"end": 3966,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 3951,
											"end": 3966,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3951,
											"end": 3966,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 3951,
											"end": 3966,
											"name": "MUL",
											"source": 3
										},
										{
											"begin": 3951,
											"end": 3966,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 3951,
											"end": 3966,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3951,
											"end": 3966,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 3951,
											"end": 3966,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3951,
											"end": 3966,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 3951,
											"end": 3966,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 3951,
											"end": 3966,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3951,
											"end": 3966,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 3951,
											"end": 3966,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "244"
										},
										{
											"begin": 3951,
											"end": 3966,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 3951,
											"end": 3966,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3951,
											"end": 3966,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 3951,
											"end": 3966,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3951,
											"end": 3966,
											"name": "tag",
											"source": 3,
											"value": "245"
										},
										{
											"begin": 3951,
											"end": 3966,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 3951,
											"end": 3966,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3951,
											"end": 3966,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 3951,
											"end": 3966,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 3951,
											"end": 3966,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3951,
											"end": 3966,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3951,
											"end": 3966,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 3951,
											"end": 3966,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3951,
											"end": 3966,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 3951,
											"end": 3966,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3951,
											"end": 3966,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3951,
											"end": 3966,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "245"
										},
										{
											"begin": 3951,
											"end": 3966,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 3951,
											"end": 3966,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3951,
											"end": 3966,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3951,
											"end": 3966,
											"name": "tag",
											"source": 3,
											"value": "244"
										},
										{
											"begin": 3951,
											"end": 3966,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3951,
											"end": 3966,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3925,
											"end": 3966,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3925,
											"end": 3966,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4027,
											"end": 4036,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 4022,
											"end": 4140,
											"name": "tag",
											"source": 3,
											"value": "248"
										},
										{
											"begin": 4022,
											"end": 4140,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4046,
											"end": 4047,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 4042,
											"end": 4043,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 4042,
											"end": 4047,
											"name": "LT",
											"source": 3
										},
										{
											"begin": 4022,
											"end": 4140,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 4022,
											"end": 4140,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "249"
										},
										{
											"begin": 4022,
											"end": 4140,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 4082,
											"end": 4128,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 4082,
											"end": 4128,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 4082,
											"end": 4128,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 4082,
											"end": 4128,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 4082,
											"end": 4128,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 4082,
											"end": 4128,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 4082,
											"end": 4128,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 4082,
											"end": 4128,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 4089,
											"end": 4098,
											"name": "PUSH",
											"source": 3,
											"value": "6"
										},
										{
											"begin": 4099,
											"end": 4100,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 4089,
											"end": 4101,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 4089,
											"end": 4101,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 4089,
											"end": 4101,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 4089,
											"end": 4101,
											"name": "LT",
											"source": 3
										},
										{
											"begin": 4089,
											"end": 4101,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "252"
										},
										{
											"begin": 4089,
											"end": 4101,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 4089,
											"end": 4101,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "252"
										},
										{
											"begin": 4089,
											"end": 4101,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "161"
										},
										{
											"begin": 4089,
											"end": 4101,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4089,
											"end": 4101,
											"name": "tag",
											"source": 3,
											"value": "252"
										},
										{
											"begin": 4089,
											"end": 4101,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4089,
											"end": 4101,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4089,
											"end": 4101,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 4089,
											"end": 4101,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 4089,
											"end": 4101,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 4089,
											"end": 4101,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 4089,
											"end": 4101,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 4089,
											"end": 4101,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 4089,
											"end": 4101,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 4089,
											"end": 4101,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4089,
											"end": 4101,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 4089,
											"end": 4101,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4089,
											"end": 4101,
											"name": "PUSH",
											"source": 3,
											"value": "100"
										},
										{
											"begin": 4089,
											"end": 4101,
											"name": "EXP",
											"source": 3
										},
										{
											"begin": 4089,
											"end": 4101,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4089,
											"end": 4101,
											"name": "DIV",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4089,
											"end": 4101,
											"name": "AND",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4082,
											"end": 4128,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 4082,
											"end": 4128,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 4082,
											"end": 4128,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 4082,
											"end": 4128,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 4082,
											"end": 4128,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 4103,
											"end": 4113,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 4103,
											"end": 4127,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 4114,
											"end": 4123,
											"name": "PUSH",
											"source": 3,
											"value": "6"
										},
										{
											"begin": 4124,
											"end": 4125,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 4114,
											"end": 4126,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 4114,
											"end": 4126,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 4114,
											"end": 4126,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 4114,
											"end": 4126,
											"name": "LT",
											"source": 3
										},
										{
											"begin": 4114,
											"end": 4126,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "255"
										},
										{
											"begin": 4114,
											"end": 4126,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 4114,
											"end": 4126,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "255"
										},
										{
											"begin": 4114,
											"end": 4126,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "161"
										},
										{
											"begin": 4114,
											"end": 4126,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4114,
											"end": 4126,
											"name": "tag",
											"source": 3,
											"value": "255"
										},
										{
											"begin": 4114,
											"end": 4126,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4114,
											"end": 4126,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 4114,
											"end": 4126,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 4114,
											"end": 4126,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 4114,
											"end": 4126,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 4114,
											"end": 4126,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 4114,
											"end": 4126,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 4114,
											"end": 4126,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 4114,
											"end": 4126,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 4114,
											"end": 4126,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4114,
											"end": 4126,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 4114,
											"end": 4126,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 4114,
											"end": 4126,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4114,
											"end": 4126,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 4103,
											"end": 4127,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 4103,
											"end": 4127,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 4103,
											"end": 4127,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 4103,
											"end": 4127,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 4103,
											"end": 4127,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 4103,
											"end": 4127,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4103,
											"end": 4127,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 4103,
											"end": 4127,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 4103,
											"end": 4127,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 4103,
											"end": 4127,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 4103,
											"end": 4127,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4103,
											"end": 4127,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 4103,
											"end": 4127,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 4082,
											"end": 4128,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4082,
											"end": 4128,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 4069,
											"end": 4079,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 4069,
											"end": 4079,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 4069,
											"end": 4076,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 4069,
											"end": 4076,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4077,
											"end": 4078,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 4077,
											"end": 4078,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4069,
											"end": 4079,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 4069,
											"end": 4079,
											"name": "LT",
											"source": 3
										},
										{
											"begin": 4069,
											"end": 4079,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "258"
										},
										{
											"begin": 4069,
											"end": 4079,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 4069,
											"end": 4079,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "258"
										},
										{
											"begin": 4069,
											"end": 4079,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "161"
										},
										{
											"begin": 4069,
											"end": 4079,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4069,
											"end": 4079,
											"name": "tag",
											"source": 3,
											"value": "258"
										},
										{
											"begin": 4069,
											"end": 4079,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4069,
											"end": 4079,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 4069,
											"end": 4079,
											"name": "MUL",
											"source": 3
										},
										{
											"begin": 4069,
											"end": 4079,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 4069,
											"end": 4079,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 4069,
											"end": 4079,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 4069,
											"end": 4128,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 4069,
											"end": 4128,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4069,
											"end": 4128,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 4069,
											"end": 4128,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4049,
											"end": 4052,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 4049,
											"end": 4052,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 4049,
											"end": 4052,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "259"
										},
										{
											"begin": 4049,
											"end": 4052,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4049,
											"end": 4052,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "198"
										},
										{
											"begin": 4049,
											"end": 4052,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4049,
											"end": 4052,
											"name": "tag",
											"source": 3,
											"value": "259"
										},
										{
											"begin": 4049,
											"end": 4052,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4049,
											"end": 4052,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 4049,
											"end": 4052,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4049,
											"end": 4052,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4022,
											"end": 4140,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "248"
										},
										{
											"begin": 4022,
											"end": 4140,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4022,
											"end": 4140,
											"name": "tag",
											"source": 3,
											"value": "249"
										},
										{
											"begin": 4022,
											"end": 4140,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4159,
											"end": 4166,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 3809,
											"end": 4174,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3809,
											"end": 4174,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 9672,
											"end": 9843,
											"name": "tag",
											"source": 3,
											"value": "116"
										},
										{
											"begin": 9672,
											"end": 9843,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 9757,
											"end": 9761,
											"name": "PUSH",
											"source": 3,
											"value": "D"
										},
										{
											"begin": 9757,
											"end": 9761,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 9757,
											"end": 9787,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 9757,
											"end": 9787,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 9757,
											"end": 9787,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "D0E30DB"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E4"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 9757,
											"end": 9787,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 9757,
											"end": 9787,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 9757,
											"end": 9787,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 9757,
											"end": 9787,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 9737,
											"end": 9746,
											"name": "CALLVALUE",
											"source": 3
										},
										{
											"begin": 9737,
											"end": 9746,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 9757,
											"end": 9761,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 9757,
											"end": 9761,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 9757,
											"end": 9769,
											"name": "PUSH",
											"source": 3,
											"value": "D0E30DB0"
										},
										{
											"begin": 9757,
											"end": 9769,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 9737,
											"end": 9746,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 9737,
											"end": 9746,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 9757,
											"end": 9787,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 9757,
											"end": 9787,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 9757,
											"end": 9787,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 9757,
											"end": 9787,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 9757,
											"end": 9787,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 9718,
											"end": 9734,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 9718,
											"end": 9734,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 9757,
											"end": 9787,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 9757,
											"end": 9787,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 9757,
											"end": 9787,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 9757,
											"end": 9787,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 9757,
											"end": 9787,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 9757,
											"end": 9787,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 9757,
											"end": 9787,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 9757,
											"end": 9787,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 9737,
											"end": 9746,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 9757,
											"end": 9761,
											"name": "DUP9",
											"source": 3
										},
										{
											"begin": 9757,
											"end": 9787,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 9757,
											"end": 9787,
											"name": "EXTCODESIZE",
											"source": 3
										},
										{
											"begin": 9757,
											"end": 9787,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 9757,
											"end": 9787,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 9757,
											"end": 9787,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 9757,
											"end": 9787,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "261"
										},
										{
											"begin": 9757,
											"end": 9787,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 9757,
											"end": 9787,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 9757,
											"end": 9787,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 9757,
											"end": 9787,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 9757,
											"end": 9787,
											"name": "tag",
											"source": 3,
											"value": "261"
										},
										{
											"begin": 9757,
											"end": 9787,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 9757,
											"end": 9787,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 9757,
											"end": 9787,
											"name": "GAS",
											"source": 3
										},
										{
											"begin": 9757,
											"end": 9787,
											"name": "CALL",
											"source": 3
										},
										{
											"begin": 9757,
											"end": 9787,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 9757,
											"end": 9787,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 9757,
											"end": 9787,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 9757,
											"end": 9787,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "263"
										},
										{
											"begin": 9757,
											"end": 9787,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 9757,
											"end": 9787,
											"name": "RETURNDATASIZE",
											"source": 3
										},
										{
											"begin": 9757,
											"end": 9787,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 9757,
											"end": 9787,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 9757,
											"end": 9787,
											"name": "RETURNDATACOPY",
											"source": 3
										},
										{
											"begin": 9757,
											"end": 9787,
											"name": "RETURNDATASIZE",
											"source": 3
										},
										{
											"begin": 9757,
											"end": 9787,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 9757,
											"end": 9787,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 9757,
											"end": 9787,
											"name": "tag",
											"source": 3,
											"value": "263"
										},
										{
											"begin": 9757,
											"end": 9787,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 9798,
											"end": 9802,
											"name": "PUSH",
											"source": 3,
											"value": "D"
										},
										{
											"begin": 9798,
											"end": 9802,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 9798,
											"end": 9835,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 9798,
											"end": 9835,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A9059CBB"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 9798,
											"end": 9835,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 9798,
											"end": 9835,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 9813,
											"end": 9823,
											"name": "CALLER",
											"source": 3
										},
										{
											"begin": 9798,
											"end": 9835,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 9798,
											"end": 9835,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 9798,
											"end": 9835,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 7982,
											"end": 8033,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 8049,
											"end": 8067,
											"name": "PUSH",
											"source": 4,
											"value": "24"
										},
										{
											"begin": 8049,
											"end": 8067,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 8049,
											"end": 8067,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 8042,
											"end": 8076,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 8042,
											"end": 8076,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 8042,
											"end": 8076,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 9798,
											"end": 9802,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 9798,
											"end": 9802,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 9798,
											"end": 9802,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 9798,
											"end": 9802,
											"name": "SWAP4",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 9798,
											"end": 9811,
											"name": "PUSH",
											"source": 3,
											"value": "A9059CBB"
										},
										{
											"begin": 9798,
											"end": 9811,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 7955,
											"end": 7973,
											"name": "PUSH",
											"source": 4,
											"value": "44"
										},
										{
											"begin": 7955,
											"end": 7973,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 7955,
											"end": 7973,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 9798,
											"end": 9835,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 9798,
											"end": 9835,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 9798,
											"end": 9835,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 9798,
											"end": 9835,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 9798,
											"end": 9835,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 9798,
											"end": 9835,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 9798,
											"end": 9835,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 9798,
											"end": 9835,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 9798,
											"end": 9835,
											"name": "DUP8",
											"source": 3
										},
										{
											"begin": 9798,
											"end": 9835,
											"name": "GAS",
											"source": 3
										},
										{
											"begin": 9798,
											"end": 9835,
											"name": "CALL",
											"source": 3
										},
										{
											"begin": 9798,
											"end": 9835,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 9798,
											"end": 9835,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 9798,
											"end": 9835,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 9798,
											"end": 9835,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "267"
										},
										{
											"begin": 9798,
											"end": 9835,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 9798,
											"end": 9835,
											"name": "RETURNDATASIZE",
											"source": 3
										},
										{
											"begin": 9798,
											"end": 9835,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 9798,
											"end": 9835,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 9798,
											"end": 9835,
											"name": "RETURNDATACOPY",
											"source": 3
										},
										{
											"begin": 9798,
											"end": 9835,
											"name": "RETURNDATASIZE",
											"source": 3
										},
										{
											"begin": 9798,
											"end": 9835,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 9798,
											"end": 9835,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 9798,
											"end": 9835,
											"name": "tag",
											"source": 3,
											"value": "267"
										},
										{
											"begin": 9798,
											"end": 9835,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 9798,
											"end": 9835,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 9798,
											"end": 9835,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 9798,
											"end": 9835,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 9798,
											"end": 9835,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 9798,
											"end": 9835,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 9798,
											"end": 9835,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 9798,
											"end": 9835,
											"name": "RETURNDATASIZE",
											"source": 3
										},
										{
											"begin": 9798,
											"end": 9835,
											"name": "PUSH",
											"source": 3,
											"value": "1F"
										},
										{
											"begin": 9798,
											"end": 9835,
											"name": "NOT",
											"source": 3
										},
										{
											"begin": 9798,
											"end": 9835,
											"name": "PUSH",
											"source": 3,
											"value": "1F"
										},
										{
											"begin": 9798,
											"end": 9835,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 9798,
											"end": 9835,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 9798,
											"end": 9835,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 9798,
											"end": 9835,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 9798,
											"end": 9835,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 9798,
											"end": 9835,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 9798,
											"end": 9835,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 9798,
											"end": 9835,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 9798,
											"end": 9835,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 9798,
											"end": 9835,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 9798,
											"end": 9835,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 9798,
											"end": 9835,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 9798,
											"end": 9835,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "183"
										},
										{
											"begin": 9798,
											"end": 9835,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 9798,
											"end": 9835,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 9798,
											"end": 9835,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "148"
										},
										{
											"begin": 9798,
											"end": 9835,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 5854,
											"end": 7999,
											"name": "tag",
											"source": 3,
											"value": "121"
										},
										{
											"begin": 5854,
											"end": 7999,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6018,
											"end": 6085,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 6018,
											"end": 6085,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "23B872DD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 6018,
											"end": 6085,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 6018,
											"end": 6085,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 6049,
											"end": 6059,
											"name": "CALLER",
											"source": 3
										},
										{
											"begin": 6018,
											"end": 6085,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 6018,
											"end": 6085,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 6018,
											"end": 6085,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3193,
											"end": 3227,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 6069,
											"end": 6073,
											"name": "ADDRESS",
											"source": 3
										},
										{
											"begin": 3243,
											"end": 3261,
											"name": "PUSH",
											"source": 4,
											"value": "24"
										},
										{
											"begin": 3243,
											"end": 3261,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 3243,
											"end": 3261,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3236,
											"end": 3279,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 3295,
											"end": 3313,
											"name": "PUSH",
											"source": 4,
											"value": "44"
										},
										{
											"begin": 3295,
											"end": 3313,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3295,
											"end": 3313,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3288,
											"end": 3322,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 3288,
											"end": 3322,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3288,
											"end": 3322,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6018,
											"end": 6048,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 6018,
											"end": 6048,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 6018,
											"end": 6048,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 6018,
											"end": 6048,
											"name": "PUSH",
											"source": 3,
											"value": "23B872DD"
										},
										{
											"begin": 6018,
											"end": 6048,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3128,
											"end": 3146,
											"name": "PUSH",
											"source": 4,
											"value": "64"
										},
										{
											"begin": 3128,
											"end": 3146,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 6018,
											"end": 6085,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 6018,
											"end": 6085,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 6018,
											"end": 6085,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 6018,
											"end": 6085,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 6018,
											"end": 6085,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 6018,
											"end": 6085,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 6018,
											"end": 6085,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 6018,
											"end": 6085,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 6018,
											"end": 6085,
											"name": "DUP8",
											"source": 3
										},
										{
											"begin": 6018,
											"end": 6085,
											"name": "GAS",
											"source": 3
										},
										{
											"begin": 6018,
											"end": 6085,
											"name": "CALL",
											"source": 3
										},
										{
											"begin": 6018,
											"end": 6085,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 6018,
											"end": 6085,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 6018,
											"end": 6085,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 6018,
											"end": 6085,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "272"
										},
										{
											"begin": 6018,
											"end": 6085,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 6018,
											"end": 6085,
											"name": "RETURNDATASIZE",
											"source": 3
										},
										{
											"begin": 6018,
											"end": 6085,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 6018,
											"end": 6085,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 6018,
											"end": 6085,
											"name": "RETURNDATACOPY",
											"source": 3
										},
										{
											"begin": 6018,
											"end": 6085,
											"name": "RETURNDATASIZE",
											"source": 3
										},
										{
											"begin": 6018,
											"end": 6085,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 6018,
											"end": 6085,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 6018,
											"end": 6085,
											"name": "tag",
											"source": 3,
											"value": "272"
										},
										{
											"begin": 6018,
											"end": 6085,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6018,
											"end": 6085,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6018,
											"end": 6085,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6018,
											"end": 6085,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6018,
											"end": 6085,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6018,
											"end": 6085,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 6018,
											"end": 6085,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 6018,
											"end": 6085,
											"name": "RETURNDATASIZE",
											"source": 3
										},
										{
											"begin": 6018,
											"end": 6085,
											"name": "PUSH",
											"source": 3,
											"value": "1F"
										},
										{
											"begin": 6018,
											"end": 6085,
											"name": "NOT",
											"source": 3
										},
										{
											"begin": 6018,
											"end": 6085,
											"name": "PUSH",
											"source": 3,
											"value": "1F"
										},
										{
											"begin": 6018,
											"end": 6085,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 6018,
											"end": 6085,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 6018,
											"end": 6085,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 6018,
											"end": 6085,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 6018,
											"end": 6085,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 6018,
											"end": 6085,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 6018,
											"end": 6085,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 6018,
											"end": 6085,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 6018,
											"end": 6085,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6018,
											"end": 6085,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 6018,
											"end": 6085,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 6018,
											"end": 6085,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 6018,
											"end": 6085,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "273"
										},
										{
											"begin": 6018,
											"end": 6085,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 6018,
											"end": 6085,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 6018,
											"end": 6085,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "148"
										},
										{
											"begin": 6018,
											"end": 6085,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 6018,
											"end": 6085,
											"name": "tag",
											"source": 3,
											"value": "273"
										},
										{
											"begin": 6018,
											"end": 6085,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6117,
											"end": 6133,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 6117,
											"end": 6133,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 2414,
											"end": 2456,
											"name": "PUSH",
											"source": 3,
											"value": "41BC026DABE978BC2FAFEA1850456511CA4B01BC"
										},
										{
											"begin": 6117,
											"end": 6133,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 6117,
											"end": 6156,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 6117,
											"end": 6156,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 6117,
											"end": 6156,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "274"
										},
										{
											"begin": 6117,
											"end": 6156,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6137,
											"end": 6156,
											"name": "PUSH",
											"source": 3,
											"value": "3"
										},
										{
											"begin": 6137,
											"end": 6156,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 6137,
											"end": 6156,
											"name": "PUSH",
											"source": 3,
											"value": "FF"
										},
										{
											"begin": 6137,
											"end": 6156,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 6117,
											"end": 6156,
											"name": "tag",
											"source": 3,
											"value": "274"
										},
										{
											"begin": 6117,
											"end": 6156,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6098,
											"end": 6227,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 6098,
											"end": 6227,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "276"
										},
										{
											"begin": 6098,
											"end": 6227,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 6184,
											"end": 6215,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "276"
										},
										{
											"begin": 6194,
											"end": 6204,
											"name": "CALLER",
											"source": 3
										},
										{
											"begin": 6206,
											"end": 6214,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 6184,
											"end": 6193,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "142"
										},
										{
											"begin": 6184,
											"end": 6215,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 6184,
											"end": 6215,
											"name": "tag",
											"source": 3,
											"value": "276"
										},
										{
											"begin": 6184,
											"end": 6215,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6239,
											"end": 6256,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 6285,
											"end": 6289,
											"name": "PUSH",
											"source": 3,
											"value": "3E8"
										},
										{
											"begin": 6271,
											"end": 6281,
											"name": "PUSH",
											"source": 3,
											"value": "2"
										},
										{
											"begin": 6271,
											"end": 6281,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 6260,
											"end": 6268,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 6260,
											"end": 6281,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "277"
										},
										{
											"begin": 6260,
											"end": 6281,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 6260,
											"end": 6281,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 6260,
											"end": 6281,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "150"
										},
										{
											"begin": 6260,
											"end": 6281,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 6260,
											"end": 6281,
											"name": "tag",
											"source": 3,
											"value": "277"
										},
										{
											"begin": 6260,
											"end": 6281,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6259,
											"end": 6289,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "278"
										},
										{
											"begin": 6259,
											"end": 6289,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 6259,
											"end": 6289,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 6259,
											"end": 6289,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "152"
										},
										{
											"begin": 6259,
											"end": 6289,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 6259,
											"end": 6289,
											"name": "tag",
											"source": 3,
											"value": "278"
										},
										{
											"begin": 6259,
											"end": 6289,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6239,
											"end": 6289,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 6239,
											"end": 6289,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6300,
											"end": 6328,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "279"
										},
										{
											"begin": 6307,
											"end": 6316,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 6318,
											"end": 6327,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 6300,
											"end": 6306,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "154"
										},
										{
											"begin": 6300,
											"end": 6328,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 6300,
											"end": 6328,
											"name": "tag",
											"source": 3,
											"value": "279"
										},
										{
											"begin": 6300,
											"end": 6328,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6341,
											"end": 6356,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6378,
											"end": 6395,
											"name": "DUP7",
											"source": 3
										},
										{
											"begin": 6378,
											"end": 6395,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 2335,
											"end": 2377,
											"name": "PUSH",
											"source": 3,
											"value": "5C7F8A570D578ED84E63FDFA7B1EE72DEAE1AE23"
										},
										{
											"begin": 6378,
											"end": 6395,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 6378,
											"end": 6395,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 6378,
											"end": 6414,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "280"
										},
										{
											"begin": 6378,
											"end": 6414,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6399,
											"end": 6414,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 6399,
											"end": 6414,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 2335,
											"end": 2377,
											"name": "PUSH",
											"source": 3,
											"value": "5C7F8A570D578ED84E63FDFA7B1EE72DEAE1AE23"
										},
										{
											"begin": 6399,
											"end": 6414,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 6378,
											"end": 6414,
											"name": "tag",
											"source": 3,
											"value": "280"
										},
										{
											"begin": 6378,
											"end": 6414,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6377,
											"end": 6423,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "281"
										},
										{
											"begin": 6377,
											"end": 6423,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 6422,
											"end": 6423,
											"name": "PUSH",
											"source": 3,
											"value": "3"
										},
										{
											"begin": 6377,
											"end": 6423,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "282"
										},
										{
											"begin": 6377,
											"end": 6423,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 6377,
											"end": 6423,
											"name": "tag",
											"source": 3,
											"value": "281"
										},
										{
											"begin": 6377,
											"end": 6423,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6418,
											"end": 6419,
											"name": "PUSH",
											"source": 3,
											"value": "2"
										},
										{
											"begin": 6377,
											"end": 6423,
											"name": "tag",
											"source": 3,
											"value": "282"
										},
										{
											"begin": 6377,
											"end": 6423,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6367,
											"end": 6423,
											"name": "PUSH",
											"source": 3,
											"value": "FF"
										},
										{
											"begin": 6367,
											"end": 6423,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 6367,
											"end": 6423,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6436,
											"end": 6453,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 6464,
											"end": 6485,
											"name": "PUSH",
											"source": 3,
											"value": "60"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6500,
											"end": 6517,
											"name": "DUP9",
											"source": 3
										},
										{
											"begin": 6500,
											"end": 6517,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 2335,
											"end": 2377,
											"name": "PUSH",
											"source": 3,
											"value": "5C7F8A570D578ED84E63FDFA7B1EE72DEAE1AE23"
										},
										{
											"begin": 6500,
											"end": 6517,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 6500,
											"end": 6517,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 6500,
											"end": 6536,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "283"
										},
										{
											"begin": 6500,
											"end": 6536,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6521,
											"end": 6536,
											"name": "DUP8",
											"source": 3
										},
										{
											"begin": 6521,
											"end": 6536,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 2335,
											"end": 2377,
											"name": "PUSH",
											"source": 3,
											"value": "5C7F8A570D578ED84E63FDFA7B1EE72DEAE1AE23"
										},
										{
											"begin": 6521,
											"end": 6536,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 6500,
											"end": 6536,
											"name": "tag",
											"source": 3,
											"value": "283"
										},
										{
											"begin": 6500,
											"end": 6536,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6496,
											"end": 7594,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 6496,
											"end": 7594,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "284"
										},
										{
											"begin": 6496,
											"end": 7594,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 6574,
											"end": 6575,
											"name": "PUSH",
											"source": 3,
											"value": "2"
										},
										{
											"begin": 6560,
											"end": 6576,
											"name": "tag",
											"source": 3,
											"value": "286"
										},
										{
											"begin": 6560,
											"end": 6576,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6560,
											"end": 6576,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 6560,
											"end": 6576,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 6560,
											"end": 6576,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 6560,
											"end": 6576,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 6560,
											"end": 6576,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 6560,
											"end": 6576,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 6560,
											"end": 6576,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 6560,
											"end": 6576,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 6560,
											"end": 6576,
											"name": "MUL",
											"source": 3
										},
										{
											"begin": 6560,
											"end": 6576,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 6560,
											"end": 6576,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 6560,
											"end": 6576,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 6560,
											"end": 6576,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 6560,
											"end": 6576,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 6560,
											"end": 6576,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 6560,
											"end": 6576,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 6560,
											"end": 6576,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 6560,
											"end": 6576,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "287"
										},
										{
											"begin": 6560,
											"end": 6576,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 6560,
											"end": 6576,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 6560,
											"end": 6576,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 6560,
											"end": 6576,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 6560,
											"end": 6576,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 6560,
											"end": 6576,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 6560,
											"end": 6576,
											"name": "MUL",
											"source": 3
										},
										{
											"begin": 6560,
											"end": 6576,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 6560,
											"end": 6576,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": 6560,
											"end": 6576,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 6560,
											"end": 6576,
											"name": "CALLDATACOPY",
											"source": 3
										},
										{
											"begin": 6560,
											"end": 6576,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 6560,
											"end": 6576,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6560,
											"end": 6576,
											"name": "tag",
											"source": 3,
											"value": "287"
										},
										{
											"begin": 6560,
											"end": 6576,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6560,
											"end": 6576,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6553,
											"end": 6576,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 6553,
											"end": 6576,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6601,
											"end": 6610,
											"name": "DUP8",
											"source": 3
										},
										{
											"begin": 6591,
											"end": 6595,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 6596,
											"end": 6597,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 6591,
											"end": 6598,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 6591,
											"end": 6598,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 6591,
											"end": 6598,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 6591,
											"end": 6598,
											"name": "LT",
											"source": 3
										},
										{
											"begin": 6591,
											"end": 6598,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "289"
										},
										{
											"begin": 6591,
											"end": 6598,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 6591,
											"end": 6598,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "289"
										},
										{
											"begin": 6591,
											"end": 6598,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "161"
										},
										{
											"begin": 6591,
											"end": 6598,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 6591,
											"end": 6598,
											"name": "tag",
											"source": 3,
											"value": "289"
										},
										{
											"begin": 6591,
											"end": 6598,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6591,
											"end": 6598,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 6591,
											"end": 6598,
											"name": "MUL",
											"source": 3
										},
										{
											"begin": 6591,
											"end": 6598,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 6591,
											"end": 6598,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 6591,
											"end": 6598,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 6591,
											"end": 6610,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6591,
											"end": 6610,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 6591,
											"end": 6610,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 6591,
											"end": 6610,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6591,
											"end": 6610,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 6591,
											"end": 6610,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 6591,
											"end": 6610,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 6591,
											"end": 6610,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6591,
											"end": 6610,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6635,
											"end": 6642,
											"name": "DUP7",
											"source": 3
										},
										{
											"begin": 6625,
											"end": 6629,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 6630,
											"end": 6631,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 6625,
											"end": 6632,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 6625,
											"end": 6632,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 6625,
											"end": 6632,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 6625,
											"end": 6632,
											"name": "LT",
											"source": 3
										},
										{
											"begin": 6625,
											"end": 6632,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "291"
										},
										{
											"begin": 6625,
											"end": 6632,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 6625,
											"end": 6632,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "291"
										},
										{
											"begin": 6625,
											"end": 6632,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "161"
										},
										{
											"begin": 6625,
											"end": 6632,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 6625,
											"end": 6632,
											"name": "tag",
											"source": 3,
											"value": "291"
										},
										{
											"begin": 6625,
											"end": 6632,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6625,
											"end": 6642,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 6625,
											"end": 6642,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 6625,
											"end": 6642,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 6625,
											"end": 6632,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 6625,
											"end": 6632,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 6625,
											"end": 6632,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 6625,
											"end": 6632,
											"name": "MUL",
											"source": 3
										},
										{
											"begin": 6625,
											"end": 6632,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 6625,
											"end": 6632,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 6625,
											"end": 6632,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 6625,
											"end": 6632,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 6625,
											"end": 6632,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 6625,
											"end": 6642,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 6687,
											"end": 6693,
											"name": "PUSH",
											"source": 3,
											"value": "8"
										},
										{
											"begin": 6687,
											"end": 6693,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 6657,
											"end": 6684,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 6657,
											"end": 6684,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 6687,
											"end": 6693,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 6687,
											"end": 6707,
											"name": "PUSH",
											"source": 3,
											"value": "D06CA61F"
										},
										{
											"begin": 6726,
											"end": 6746,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "292"
										},
										{
											"begin": 6737,
											"end": 6746,
											"name": "DUP8",
											"source": 3
										},
										{
											"begin": 6726,
											"end": 6734,
											"name": "DUP11",
											"source": 3
										},
										{
											"begin": 6726,
											"end": 6746,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "165"
										},
										{
											"begin": 6726,
											"end": 6746,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 6726,
											"end": 6746,
											"name": "tag",
											"source": 3,
											"value": "292"
										},
										{
											"begin": 6726,
											"end": 6746,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6765,
											"end": 6769,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 6687,
											"end": 6784,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 6687,
											"end": 6784,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 6687,
											"end": 6784,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 6687,
											"end": 6784,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFF"
										},
										{
											"begin": 6687,
											"end": 6784,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 6687,
											"end": 6784,
											"name": "PUSH",
											"source": 3,
											"value": "E0"
										},
										{
											"begin": 6687,
											"end": 6784,
											"name": "SHL",
											"source": 3
										},
										{
											"begin": 6687,
											"end": 6784,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 6687,
											"end": 6784,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 6687,
											"end": 6784,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 6687,
											"end": 6784,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 6687,
											"end": 6784,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "293"
										},
										{
											"begin": 6687,
											"end": 6784,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 6687,
											"end": 6784,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 6687,
											"end": 6784,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 6687,
											"end": 6784,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "215"
										},
										{
											"begin": 6687,
											"end": 6784,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 6687,
											"end": 6784,
											"name": "tag",
											"source": 3,
											"value": "293"
										},
										{
											"begin": 6687,
											"end": 6784,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6687,
											"end": 6784,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 6687,
											"end": 6784,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 6687,
											"end": 6784,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 6687,
											"end": 6784,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 6687,
											"end": 6784,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 6687,
											"end": 6784,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 6687,
											"end": 6784,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 6687,
											"end": 6784,
											"name": "DUP7",
											"source": 3
										},
										{
											"begin": 6687,
											"end": 6784,
											"name": "GAS",
											"source": 3
										},
										{
											"begin": 6687,
											"end": 6784,
											"name": "STATICCALL",
											"source": 3
										},
										{
											"begin": 6687,
											"end": 6784,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 6687,
											"end": 6784,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 6687,
											"end": 6784,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 6687,
											"end": 6784,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "295"
										},
										{
											"begin": 6687,
											"end": 6784,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 6687,
											"end": 6784,
											"name": "RETURNDATASIZE",
											"source": 3
										},
										{
											"begin": 6687,
											"end": 6784,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 6687,
											"end": 6784,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 6687,
											"end": 6784,
											"name": "RETURNDATACOPY",
											"source": 3
										},
										{
											"begin": 6687,
											"end": 6784,
											"name": "RETURNDATASIZE",
											"source": 3
										},
										{
											"begin": 6687,
											"end": 6784,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 6687,
											"end": 6784,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 6687,
											"end": 6784,
											"name": "tag",
											"source": 3,
											"value": "295"
										},
										{
											"begin": 6687,
											"end": 6784,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6687,
											"end": 6784,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6687,
											"end": 6784,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6687,
											"end": 6784,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6687,
											"end": 6784,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6687,
											"end": 6784,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 6687,
											"end": 6784,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 6687,
											"end": 6784,
											"name": "RETURNDATASIZE",
											"source": 3
										},
										{
											"begin": 6687,
											"end": 6784,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 6687,
											"end": 6784,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 6687,
											"end": 6784,
											"name": "RETURNDATACOPY",
											"source": 3
										},
										{
											"begin": 6687,
											"end": 6784,
											"name": "PUSH",
											"source": 3,
											"value": "1F"
										},
										{
											"begin": 6687,
											"end": 6784,
											"name": "RETURNDATASIZE",
											"source": 3
										},
										{
											"begin": 6687,
											"end": 6784,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 6687,
											"end": 6784,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 6687,
											"end": 6784,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 6687,
											"end": 6784,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 6687,
											"end": 6784,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 6687,
											"end": 6784,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 6687,
											"end": 6784,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 6687,
											"end": 6784,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 6687,
											"end": 6784,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "296"
										},
										{
											"begin": 6687,
											"end": 6784,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 6687,
											"end": 6784,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 6687,
											"end": 6784,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 6687,
											"end": 6784,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 6687,
											"end": 6784,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 6687,
											"end": 6784,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "219"
										},
										{
											"begin": 6687,
											"end": 6784,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 6687,
											"end": 6784,
											"name": "tag",
											"source": 3,
											"value": "296"
										},
										{
											"begin": 6687,
											"end": 6784,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6657,
											"end": 6784,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 6657,
											"end": 6784,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6811,
											"end": 6821,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 6822,
											"end": 6823,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 6811,
											"end": 6824,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 6811,
											"end": 6824,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 6811,
											"end": 6824,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 6811,
											"end": 6824,
											"name": "LT",
											"source": 3
										},
										{
											"begin": 6811,
											"end": 6824,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "298"
										},
										{
											"begin": 6811,
											"end": 6824,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 6811,
											"end": 6824,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "298"
										},
										{
											"begin": 6811,
											"end": 6824,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "161"
										},
										{
											"begin": 6811,
											"end": 6824,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 6811,
											"end": 6824,
											"name": "tag",
											"source": 3,
											"value": "298"
										},
										{
											"begin": 6811,
											"end": 6824,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6811,
											"end": 6824,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 6811,
											"end": 6824,
											"name": "MUL",
											"source": 3
										},
										{
											"begin": 6811,
											"end": 6824,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 6811,
											"end": 6824,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 6811,
											"end": 6824,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 6811,
											"end": 6824,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 6799,
											"end": 6824,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 6799,
											"end": 6824,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6538,
											"end": 6836,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6496,
											"end": 7594,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "318"
										},
										{
											"begin": 6496,
											"end": 7594,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 6496,
											"end": 7594,
											"name": "tag",
											"source": 3,
											"value": "284"
										},
										{
											"begin": 6496,
											"end": 7594,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6861,
											"end": 6877,
											"name": "DUP9",
											"source": 3
										},
										{
											"begin": 6861,
											"end": 6877,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 2414,
											"end": 2456,
											"name": "PUSH",
											"source": 3,
											"value": "41BC026DABE978BC2FAFEA1850456511CA4B01BC"
										},
										{
											"begin": 6861,
											"end": 6877,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 6861,
											"end": 6896,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 6861,
											"end": 6896,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 6861,
											"end": 6896,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "300"
										},
										{
											"begin": 6861,
											"end": 6896,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6881,
											"end": 6896,
											"name": "DUP8",
											"source": 3
										},
										{
											"begin": 6881,
											"end": 6896,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 2494,
											"end": 2536,
											"name": "PUSH",
											"source": 3,
											"value": "3B41B27E74DD366CE27CB389DC7877D4E1516D4D"
										},
										{
											"begin": 6881,
											"end": 6896,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 6861,
											"end": 6896,
											"name": "tag",
											"source": 3,
											"value": "300"
										},
										{
											"begin": 6861,
											"end": 6896,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6860,
											"end": 6951,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 6860,
											"end": 6951,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "302"
										},
										{
											"begin": 6860,
											"end": 6951,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6915,
											"end": 6932,
											"name": "DUP9",
											"source": 3
										},
										{
											"begin": 6915,
											"end": 6932,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 2494,
											"end": 2536,
											"name": "PUSH",
											"source": 3,
											"value": "3B41B27E74DD366CE27CB389DC7877D4E1516D4D"
										},
										{
											"begin": 6915,
											"end": 6932,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 6915,
											"end": 6950,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 6915,
											"end": 6950,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 6915,
											"end": 6950,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "302"
										},
										{
											"begin": 6915,
											"end": 6950,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6936,
											"end": 6950,
											"name": "DUP8",
											"source": 3
										},
										{
											"begin": 6936,
											"end": 6950,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 2414,
											"end": 2456,
											"name": "PUSH",
											"source": 3,
											"value": "41BC026DABE978BC2FAFEA1850456511CA4B01BC"
										},
										{
											"begin": 6936,
											"end": 6950,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 6915,
											"end": 6950,
											"name": "tag",
											"source": 3,
											"value": "302"
										},
										{
											"begin": 6915,
											"end": 6950,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6842,
											"end": 7594,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 6842,
											"end": 7594,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "303"
										},
										{
											"begin": 6842,
											"end": 7594,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 6999,
											"end": 7000,
											"name": "PUSH",
											"source": 3,
											"value": "2"
										},
										{
											"begin": 6985,
											"end": 7001,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "286"
										},
										{
											"begin": 6985,
											"end": 7001,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 6842,
											"end": 7594,
											"name": "tag",
											"source": 3,
											"value": "303"
										},
										{
											"begin": 6842,
											"end": 7594,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 7289,
											"end": 7305,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 7289,
											"end": 7305,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 7289,
											"end": 7305,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 7303,
											"end": 7304,
											"name": "PUSH",
											"source": 3,
											"value": "3"
										},
										{
											"begin": 7289,
											"end": 7305,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 7289,
											"end": 7305,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 7289,
											"end": 7305,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 7289,
											"end": 7305,
											"name": "PUSH",
											"source": 3,
											"value": "80"
										},
										{
											"begin": 7289,
											"end": 7305,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 7289,
											"end": 7305,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 7289,
											"end": 7305,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 7289,
											"end": 7305,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 7289,
											"end": 7305,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 7289,
											"end": 7305,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 7289,
											"end": 7305,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 7289,
											"end": 7305,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 7289,
											"end": 7305,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 7289,
											"end": 7305,
											"name": "PUSH",
											"source": 3,
											"value": "60"
										},
										{
											"begin": 7289,
											"end": 7305,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 7289,
											"end": 7305,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": 7289,
											"end": 7305,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 7289,
											"end": 7305,
											"name": "CALLDATACOPY",
											"source": 3
										},
										{
											"begin": 7289,
											"end": 7305,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 7289,
											"end": 7305,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 7289,
											"end": 7305,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7282,
											"end": 7305,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 7282,
											"end": 7305,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7330,
											"end": 7339,
											"name": "DUP8",
											"source": 3
										},
										{
											"begin": 7320,
											"end": 7324,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 7325,
											"end": 7326,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 7320,
											"end": 7327,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 7320,
											"end": 7327,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 7320,
											"end": 7327,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 7320,
											"end": 7327,
											"name": "LT",
											"source": 3
										},
										{
											"begin": 7320,
											"end": 7327,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "323"
										},
										{
											"begin": 7320,
											"end": 7327,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 7320,
											"end": 7327,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "323"
										},
										{
											"begin": 7320,
											"end": 7327,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "161"
										},
										{
											"begin": 7320,
											"end": 7327,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 7320,
											"end": 7327,
											"name": "tag",
											"source": 3,
											"value": "323"
										},
										{
											"begin": 7320,
											"end": 7327,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 7320,
											"end": 7327,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 7320,
											"end": 7327,
											"name": "MUL",
											"source": 3
										},
										{
											"begin": 7320,
											"end": 7327,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 7320,
											"end": 7327,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 7320,
											"end": 7327,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 7320,
											"end": 7339,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7320,
											"end": 7339,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 7320,
											"end": 7339,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 7320,
											"end": 7339,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7320,
											"end": 7339,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 7320,
											"end": 7339,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 7320,
											"end": 7339,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 7320,
											"end": 7339,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7320,
											"end": 7339,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2335,
											"end": 2377,
											"name": "PUSH",
											"source": 3,
											"value": "5C7F8A570D578ED84E63FDFA7B1EE72DEAE1AE23"
										},
										{
											"begin": 7354,
											"end": 7358,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 7359,
											"end": 7360,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 7354,
											"end": 7361,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 7354,
											"end": 7361,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 7354,
											"end": 7361,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 7354,
											"end": 7361,
											"name": "LT",
											"source": 3
										},
										{
											"begin": 7354,
											"end": 7361,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "325"
										},
										{
											"begin": 7354,
											"end": 7361,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 7354,
											"end": 7361,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "325"
										},
										{
											"begin": 7354,
											"end": 7361,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "161"
										},
										{
											"begin": 7354,
											"end": 7361,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 7354,
											"end": 7361,
											"name": "tag",
											"source": 3,
											"value": "325"
										},
										{
											"begin": 7354,
											"end": 7361,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 7354,
											"end": 7361,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 7354,
											"end": 7361,
											"name": "MUL",
											"source": 3
										},
										{
											"begin": 7354,
											"end": 7361,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 7354,
											"end": 7361,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 7354,
											"end": 7361,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 7354,
											"end": 7368,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7354,
											"end": 7368,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 7354,
											"end": 7368,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 7354,
											"end": 7368,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7354,
											"end": 7368,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 7354,
											"end": 7368,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 7354,
											"end": 7368,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 7354,
											"end": 7368,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7354,
											"end": 7368,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7393,
											"end": 7400,
											"name": "DUP7",
											"source": 3
										},
										{
											"begin": 7383,
											"end": 7387,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 7388,
											"end": 7389,
											"name": "PUSH",
											"source": 3,
											"value": "2"
										},
										{
											"begin": 7383,
											"end": 7390,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 7383,
											"end": 7390,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 7383,
											"end": 7390,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 7383,
											"end": 7390,
											"name": "LT",
											"source": 3
										},
										{
											"begin": 7383,
											"end": 7390,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "327"
										},
										{
											"begin": 7383,
											"end": 7390,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 7383,
											"end": 7390,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "327"
										},
										{
											"begin": 7383,
											"end": 7390,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "161"
										},
										{
											"begin": 7383,
											"end": 7390,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 7383,
											"end": 7390,
											"name": "tag",
											"source": 3,
											"value": "327"
										},
										{
											"begin": 7383,
											"end": 7390,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7383,
											"end": 7400,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 7383,
											"end": 7400,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 7383,
											"end": 7400,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 7383,
											"end": 7390,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 7383,
											"end": 7390,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 7383,
											"end": 7390,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 7383,
											"end": 7390,
											"name": "MUL",
											"source": 3
										},
										{
											"begin": 7383,
											"end": 7390,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 7383,
											"end": 7390,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 7383,
											"end": 7390,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 7383,
											"end": 7390,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 7383,
											"end": 7390,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 7383,
											"end": 7400,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 7445,
											"end": 7451,
											"name": "PUSH",
											"source": 3,
											"value": "8"
										},
										{
											"begin": 7445,
											"end": 7451,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 7415,
											"end": 7442,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 7415,
											"end": 7442,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 7445,
											"end": 7451,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 7445,
											"end": 7465,
											"name": "PUSH",
											"source": 3,
											"value": "D06CA61F"
										},
										{
											"begin": 7484,
											"end": 7504,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "328"
										},
										{
											"begin": 7495,
											"end": 7504,
											"name": "DUP8",
											"source": 3
										},
										{
											"begin": 7484,
											"end": 7492,
											"name": "DUP11",
											"source": 3
										},
										{
											"begin": 7484,
											"end": 7504,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "165"
										},
										{
											"begin": 7484,
											"end": 7504,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 7484,
											"end": 7504,
											"name": "tag",
											"source": 3,
											"value": "328"
										},
										{
											"begin": 7484,
											"end": 7504,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 7523,
											"end": 7527,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 7445,
											"end": 7542,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 7445,
											"end": 7542,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 7445,
											"end": 7542,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 7445,
											"end": 7542,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFF"
										},
										{
											"begin": 7445,
											"end": 7542,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 7445,
											"end": 7542,
											"name": "PUSH",
											"source": 3,
											"value": "E0"
										},
										{
											"begin": 7445,
											"end": 7542,
											"name": "SHL",
											"source": 3
										},
										{
											"begin": 7445,
											"end": 7542,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 7445,
											"end": 7542,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 7445,
											"end": 7542,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 7445,
											"end": 7542,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 7445,
											"end": 7542,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "329"
										},
										{
											"begin": 7445,
											"end": 7542,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 7445,
											"end": 7542,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 7445,
											"end": 7542,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 7445,
											"end": 7542,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "215"
										},
										{
											"begin": 7445,
											"end": 7542,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 7445,
											"end": 7542,
											"name": "tag",
											"source": 3,
											"value": "329"
										},
										{
											"begin": 7445,
											"end": 7542,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 7445,
											"end": 7542,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 7445,
											"end": 7542,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 7445,
											"end": 7542,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 7445,
											"end": 7542,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 7445,
											"end": 7542,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 7445,
											"end": 7542,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 7445,
											"end": 7542,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 7445,
											"end": 7542,
											"name": "DUP7",
											"source": 3
										},
										{
											"begin": 7445,
											"end": 7542,
											"name": "GAS",
											"source": 3
										},
										{
											"begin": 7445,
											"end": 7542,
											"name": "STATICCALL",
											"source": 3
										},
										{
											"begin": 7445,
											"end": 7542,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 7445,
											"end": 7542,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 7445,
											"end": 7542,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 7445,
											"end": 7542,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "331"
										},
										{
											"begin": 7445,
											"end": 7542,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 7445,
											"end": 7542,
											"name": "RETURNDATASIZE",
											"source": 3
										},
										{
											"begin": 7445,
											"end": 7542,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 7445,
											"end": 7542,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 7445,
											"end": 7542,
											"name": "RETURNDATACOPY",
											"source": 3
										},
										{
											"begin": 7445,
											"end": 7542,
											"name": "RETURNDATASIZE",
											"source": 3
										},
										{
											"begin": 7445,
											"end": 7542,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 7445,
											"end": 7542,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 7445,
											"end": 7542,
											"name": "tag",
											"source": 3,
											"value": "331"
										},
										{
											"begin": 7445,
											"end": 7542,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 7445,
											"end": 7542,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7445,
											"end": 7542,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7445,
											"end": 7542,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7445,
											"end": 7542,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7445,
											"end": 7542,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 7445,
											"end": 7542,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 7445,
											"end": 7542,
											"name": "RETURNDATASIZE",
											"source": 3
										},
										{
											"begin": 7445,
											"end": 7542,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 7445,
											"end": 7542,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 7445,
											"end": 7542,
											"name": "RETURNDATACOPY",
											"source": 3
										},
										{
											"begin": 7445,
											"end": 7542,
											"name": "PUSH",
											"source": 3,
											"value": "1F"
										},
										{
											"begin": 7445,
											"end": 7542,
											"name": "RETURNDATASIZE",
											"source": 3
										},
										{
											"begin": 7445,
											"end": 7542,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 7445,
											"end": 7542,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 7445,
											"end": 7542,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 7445,
											"end": 7542,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 7445,
											"end": 7542,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 7445,
											"end": 7542,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 7445,
											"end": 7542,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 7445,
											"end": 7542,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 7445,
											"end": 7542,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "332"
										},
										{
											"begin": 7445,
											"end": 7542,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 7445,
											"end": 7542,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 7445,
											"end": 7542,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 7445,
											"end": 7542,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 7445,
											"end": 7542,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 7445,
											"end": 7542,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "219"
										},
										{
											"begin": 7445,
											"end": 7542,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 7445,
											"end": 7542,
											"name": "tag",
											"source": 3,
											"value": "332"
										},
										{
											"begin": 7445,
											"end": 7542,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 7415,
											"end": 7542,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 7415,
											"end": 7542,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7569,
											"end": 7579,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 7580,
											"end": 7581,
											"name": "PUSH",
											"source": 3,
											"value": "2"
										},
										{
											"begin": 7569,
											"end": 7582,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 7569,
											"end": 7582,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 7569,
											"end": 7582,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 7569,
											"end": 7582,
											"name": "LT",
											"source": 3
										},
										{
											"begin": 7569,
											"end": 7582,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "334"
										},
										{
											"begin": 7569,
											"end": 7582,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 7569,
											"end": 7582,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "334"
										},
										{
											"begin": 7569,
											"end": 7582,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "161"
										},
										{
											"begin": 7569,
											"end": 7582,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 7569,
											"end": 7582,
											"name": "tag",
											"source": 3,
											"value": "334"
										},
										{
											"begin": 7569,
											"end": 7582,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 7569,
											"end": 7582,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 7569,
											"end": 7582,
											"name": "MUL",
											"source": 3
										},
										{
											"begin": 7569,
											"end": 7582,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 7569,
											"end": 7582,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 7569,
											"end": 7582,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 7569,
											"end": 7582,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 7557,
											"end": 7582,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 7557,
											"end": 7582,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7267,
											"end": 7594,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6842,
											"end": 7594,
											"name": "tag",
											"source": 3,
											"value": "318"
										},
										{
											"begin": 6842,
											"end": 7594,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 7610,
											"end": 7616,
											"name": "PUSH",
											"source": 3,
											"value": "8"
										},
										{
											"begin": 7610,
											"end": 7616,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7610,
											"end": 7616,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 7610,
											"end": 7670,
											"name": "PUSH",
											"source": 3,
											"value": "5C11D795"
										},
										{
											"begin": 7689,
											"end": 7709,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "335"
										},
										{
											"begin": 7700,
											"end": 7709,
											"name": "DUP7",
											"source": 3
										},
										{
											"begin": 7689,
											"end": 7697,
											"name": "DUP10",
											"source": 3
										},
										{
											"begin": 7689,
											"end": 7709,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "165"
										},
										{
											"begin": 7689,
											"end": 7709,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 7689,
											"end": 7709,
											"name": "tag",
											"source": 3,
											"value": "335"
										},
										{
											"begin": 7689,
											"end": 7709,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 7728,
											"end": 7740,
											"name": "DUP8",
											"source": 3
										},
										{
											"begin": 7759,
											"end": 7763,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 7782,
											"end": 7792,
											"name": "CALLER",
											"source": 3
										},
										{
											"begin": 7811,
											"end": 7836,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "336"
										},
										{
											"begin": 7811,
											"end": 7826,
											"name": "TIMESTAMP",
											"source": 3
										},
										{
											"begin": 7829,
											"end": 7836,
											"name": "PUSH",
											"source": 3,
											"value": "E10"
										},
										{
											"begin": 7811,
											"end": 7836,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "167"
										},
										{
											"begin": 7811,
											"end": 7836,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 7811,
											"end": 7836,
											"name": "tag",
											"source": 3,
											"value": "336"
										},
										{
											"begin": 7811,
											"end": 7836,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 7610,
											"end": 7851,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 7610,
											"end": 7851,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 7610,
											"end": 7851,
											"name": "DUP7",
											"source": 3
										},
										{
											"begin": 7610,
											"end": 7851,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFF"
										},
										{
											"begin": 7610,
											"end": 7851,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 7610,
											"end": 7851,
											"name": "PUSH",
											"source": 3,
											"value": "E0"
										},
										{
											"begin": 7610,
											"end": 7851,
											"name": "SHL",
											"source": 3
										},
										{
											"begin": 7610,
											"end": 7851,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 7610,
											"end": 7851,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 7610,
											"end": 7851,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 7610,
											"end": 7851,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 7610,
											"end": 7851,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "337"
										},
										{
											"begin": 7610,
											"end": 7851,
											"name": "SWAP6",
											"source": 3
										},
										{
											"begin": 7610,
											"end": 7851,
											"name": "SWAP5",
											"source": 3
										},
										{
											"begin": 7610,
											"end": 7851,
											"name": "SWAP4",
											"source": 3
										},
										{
											"begin": 7610,
											"end": 7851,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 7610,
											"end": 7851,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 7610,
											"end": 7851,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 7610,
											"end": 7851,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "169"
										},
										{
											"begin": 7610,
											"end": 7851,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 7610,
											"end": 7851,
											"name": "tag",
											"source": 3,
											"value": "337"
										},
										{
											"begin": 7610,
											"end": 7851,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 7610,
											"end": 7851,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 7610,
											"end": 7851,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 7610,
											"end": 7851,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 7610,
											"end": 7851,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 7610,
											"end": 7851,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 7610,
											"end": 7851,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 7610,
											"end": 7851,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 7610,
											"end": 7851,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 7610,
											"end": 7851,
											"name": "DUP8",
											"source": 3
										},
										{
											"begin": 7610,
											"end": 7851,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 7610,
											"end": 7851,
											"name": "EXTCODESIZE",
											"source": 3
										},
										{
											"begin": 7610,
											"end": 7851,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 7610,
											"end": 7851,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 7610,
											"end": 7851,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 7610,
											"end": 7851,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "338"
										},
										{
											"begin": 7610,
											"end": 7851,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 7610,
											"end": 7851,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 7610,
											"end": 7851,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 7610,
											"end": 7851,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 7610,
											"end": 7851,
											"name": "tag",
											"source": 3,
											"value": "338"
										},
										{
											"begin": 7610,
											"end": 7851,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 7610,
											"end": 7851,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7610,
											"end": 7851,
											"name": "GAS",
											"source": 3
										},
										{
											"begin": 7610,
											"end": 7851,
											"name": "CALL",
											"source": 3
										},
										{
											"begin": 7610,
											"end": 7851,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 7610,
											"end": 7851,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 7610,
											"end": 7851,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 7610,
											"end": 7851,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "340"
										},
										{
											"begin": 7610,
											"end": 7851,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 7610,
											"end": 7851,
											"name": "RETURNDATASIZE",
											"source": 3
										},
										{
											"begin": 7610,
											"end": 7851,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 7610,
											"end": 7851,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 7610,
											"end": 7851,
											"name": "RETURNDATACOPY",
											"source": 3
										},
										{
											"begin": 7610,
											"end": 7851,
											"name": "RETURNDATASIZE",
											"source": 3
										},
										{
											"begin": 7610,
											"end": 7851,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 7610,
											"end": 7851,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 7610,
											"end": 7851,
											"name": "tag",
											"source": 3,
											"value": "340"
										},
										{
											"begin": 7610,
											"end": 7851,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7883,
											"end": 7897,
											"name": "DUP8",
											"source": 3
										},
										{
											"begin": 7883,
											"end": 7897,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 2414,
											"end": 2456,
											"name": "PUSH",
											"source": 3,
											"value": "41BC026DABE978BC2FAFEA1850456511CA4B01BC"
										},
										{
											"begin": 7883,
											"end": 7897,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 7883,
											"end": 7920,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 7883,
											"end": 7920,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 7883,
											"end": 7920,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "341"
										},
										{
											"begin": 7883,
											"end": 7920,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 7901,
											"end": 7920,
											"name": "PUSH",
											"source": 3,
											"value": "3"
										},
										{
											"begin": 7901,
											"end": 7920,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 7901,
											"end": 7920,
											"name": "PUSH",
											"source": 3,
											"value": "FF"
										},
										{
											"begin": 7901,
											"end": 7920,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 7883,
											"end": 7920,
											"name": "tag",
											"source": 3,
											"value": "341"
										},
										{
											"begin": 7883,
											"end": 7920,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 7864,
											"end": 7992,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 7864,
											"end": 7992,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "343"
										},
										{
											"begin": 7864,
											"end": 7992,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 7948,
											"end": 7980,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "343"
										},
										{
											"begin": 7958,
											"end": 7968,
											"name": "CALLER",
											"source": 3
										},
										{
											"begin": 7970,
											"end": 7979,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 7948,
											"end": 7957,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "142"
										},
										{
											"begin": 7948,
											"end": 7980,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 7948,
											"end": 7980,
											"name": "tag",
											"source": 3,
											"value": "343"
										},
										{
											"begin": 7948,
											"end": 7980,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6007,
											"end": 7999,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6007,
											"end": 7999,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6007,
											"end": 7999,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6007,
											"end": 7999,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5854,
											"end": 7999,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5854,
											"end": 7999,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5854,
											"end": 7999,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5854,
											"end": 7999,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5854,
											"end": 7999,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4576,
											"end": 4666,
											"name": "tag",
											"source": 3,
											"value": "124"
										},
										{
											"begin": 4576,
											"end": 4666,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "345"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "186"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "345"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4632,
											"end": 4651,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "3"
										},
										{
											"begin": 4632,
											"end": 4658,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 4632,
											"end": 4658,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 4632,
											"end": 4658,
											"modifierDepth": 1,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 4654,
											"end": 4658,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 4632,
											"end": 4658,
											"modifierDepth": 1,
											"name": "OR",
											"source": 3
										},
										{
											"begin": 4632,
											"end": 4658,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4632,
											"end": 4658,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": 4576,
											"end": 4666,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2941,
											"end": 2967,
											"name": "tag",
											"source": 3,
											"value": "132"
										},
										{
											"begin": 2941,
											"end": 2967,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2941,
											"end": 2967,
											"name": "PUSH",
											"source": 3,
											"value": "6"
										},
										{
											"begin": 2941,
											"end": 2967,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2941,
											"end": 2967,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2941,
											"end": 2967,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 2941,
											"end": 2967,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2941,
											"end": 2967,
											"name": "LT",
											"source": 3
										},
										{
											"begin": 2941,
											"end": 2967,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "347"
										},
										{
											"begin": 2941,
											"end": 2967,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 2941,
											"end": 2967,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2941,
											"end": 2967,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2941,
											"end": 2967,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 2941,
											"end": 2967,
											"name": "tag",
											"source": 3,
											"value": "347"
										},
										{
											"begin": 2941,
											"end": 2967,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2941,
											"end": 2967,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2941,
											"end": 2967,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2941,
											"end": 2967,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2941,
											"end": 2967,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2941,
											"end": 2967,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2941,
											"end": 2967,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2941,
											"end": 2967,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2941,
											"end": 2967,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 2941,
											"end": 2967,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2941,
											"end": 2967,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2941,
											"end": 2967,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 2941,
											"end": 2967,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2941,
											"end": 2967,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2941,
											"end": 2967,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 0,
											"value": "137"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "350"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "186"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "350"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2627,
											"end": 2649,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2627,
											"end": 2649,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "352"
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2672,
											"end": 2703,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1E4FBDF7"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2672,
											"end": 2703,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2700,
											"end": 2701,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2672,
											"end": 2703,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 665,
											"end": 716,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 638,
											"end": 656,
											"name": "PUSH",
											"source": 4,
											"value": "24"
										},
										{
											"begin": 638,
											"end": 656,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "353"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "352"
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2723,
											"end": 2751,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "354"
										},
										{
											"begin": 2742,
											"end": 2750,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2723,
											"end": 2741,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "239"
										},
										{
											"begin": 2723,
											"end": 2751,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2723,
											"end": 2751,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "354"
										},
										{
											"begin": 2723,
											"end": 2751,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5541,
											"end": 5805,
											"name": "tag",
											"source": 3,
											"value": "142"
										},
										{
											"begin": 5541,
											"end": 5805,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5639,
											"end": 5659,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 5639,
											"end": 5659,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 5639,
											"end": 5659,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 5639,
											"end": 5659,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 5639,
											"end": 5659,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 5639,
											"end": 5659,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 5639,
											"end": 5653,
											"name": "PUSH",
											"source": 3,
											"value": "5"
										},
										{
											"begin": 5639,
											"end": 5659,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 5639,
											"end": 5659,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 5639,
											"end": 5659,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 5639,
											"end": 5659,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 5639,
											"end": 5659,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 5639,
											"end": 5659,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 5639,
											"end": 5659,
											"name": "PUSH",
											"source": 3,
											"value": "FF"
										},
										{
											"begin": 5639,
											"end": 5659,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 5635,
											"end": 5750,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "356"
										},
										{
											"begin": 5635,
											"end": 5750,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 5676,
											"end": 5685,
											"name": "PUSH",
											"source": 3,
											"value": "6"
										},
										{
											"begin": 5676,
											"end": 5696,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 5676,
											"end": 5696,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 5676,
											"end": 5696,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 5676,
											"end": 5696,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 5676,
											"end": 5696,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 5676,
											"end": 5696,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 5676,
											"end": 5696,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 5676,
											"end": 5696,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 5676,
											"end": 5696,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": 5676,
											"end": 5696,
											"name": "PUSH",
											"source": 3,
											"value": "F652222313E28459528D920B65115C16C04F3EFC82AAEDC97BE59F3F377C0D3F"
										},
										{
											"begin": 5676,
											"end": 5696,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 5676,
											"end": 5696,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 5676,
											"end": 5696,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 5676,
											"end": 5696,
											"name": "AND",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5676,
											"end": 5696,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 5676,
											"end": 5696,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 5676,
											"end": 5696,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 5676,
											"end": 5696,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 5676,
											"end": 5696,
											"name": "OR",
											"source": 3
										},
										{
											"begin": 5676,
											"end": 5696,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 5676,
											"end": 5696,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 5676,
											"end": 5696,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 5711,
											"end": 5731,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 5711,
											"end": 5731,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 5711,
											"end": 5731,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 5711,
											"end": 5725,
											"name": "PUSH",
											"source": 3,
											"value": "5"
										},
										{
											"begin": 5676,
											"end": 5696,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 5711,
											"end": 5731,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 5711,
											"end": 5731,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 5711,
											"end": 5731,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 5711,
											"end": 5731,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 5711,
											"end": 5738,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 5711,
											"end": 5738,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 5711,
											"end": 5738,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 5711,
											"end": 5738,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 5711,
											"end": 5738,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 5711,
											"end": 5738,
											"name": "OR",
											"source": 3
										},
										{
											"begin": 5711,
											"end": 5738,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 5711,
											"end": 5738,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": 5635,
											"end": 5750,
											"name": "tag",
											"source": 3,
											"value": "356"
										},
										{
											"begin": 5635,
											"end": 5750,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5771,
											"end": 5787,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 5771,
											"end": 5787,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 5771,
											"end": 5787,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 5771,
											"end": 5787,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 5771,
											"end": 5787,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 5771,
											"end": 5787,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 5771,
											"end": 5781,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 5771,
											"end": 5787,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 5771,
											"end": 5787,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 5771,
											"end": 5787,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 5771,
											"end": 5787,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 5771,
											"end": 5787,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 5771,
											"end": 5797,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 5771,
											"end": 5797,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 5791,
											"end": 5797,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 5791,
											"end": 5797,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 5771,
											"end": 5787,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 5771,
											"end": 5797,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "358"
										},
										{
											"begin": 5771,
											"end": 5797,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 5791,
											"end": 5797,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 5791,
											"end": 5797,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 5771,
											"end": 5797,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "167"
										},
										{
											"begin": 5771,
											"end": 5797,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 5771,
											"end": 5797,
											"name": "tag",
											"source": 3,
											"value": "358"
										},
										{
											"begin": 5771,
											"end": 5797,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5771,
											"end": 5797,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 5771,
											"end": 5797,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 5771,
											"end": 5797,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5541,
											"end": 5805,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4940,
											"end": 5533,
											"name": "tag",
											"source": 3,
											"value": "154"
										},
										{
											"begin": 4940,
											"end": 5533,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5013,
											"end": 5028,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5031,
											"end": 5048,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 5031,
											"end": 5048,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 2335,
											"end": 2377,
											"name": "PUSH",
											"source": 3,
											"value": "5C7F8A570D578ED84E63FDFA7B1EE72DEAE1AE23"
										},
										{
											"begin": 5031,
											"end": 5048,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 5031,
											"end": 5056,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "360"
										},
										{
											"begin": 5031,
											"end": 5056,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 5055,
											"end": 5056,
											"name": "PUSH",
											"source": 3,
											"value": "2"
										},
										{
											"begin": 5031,
											"end": 5056,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "361"
										},
										{
											"begin": 5031,
											"end": 5056,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 5031,
											"end": 5056,
											"name": "tag",
											"source": 3,
											"value": "360"
										},
										{
											"begin": 5031,
											"end": 5056,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5051,
											"end": 5052,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 5031,
											"end": 5056,
											"name": "tag",
											"source": 3,
											"value": "361"
										},
										{
											"begin": 5031,
											"end": 5056,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5013,
											"end": 5056,
											"name": "PUSH",
											"source": 3,
											"value": "FF"
										},
										{
											"begin": 5013,
											"end": 5056,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 5013,
											"end": 5056,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 5013,
											"end": 5056,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5070,
											"end": 5077,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 5081,
											"end": 5082,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 5070,
											"end": 5082,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 5067,
											"end": 5526,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "362"
										},
										{
											"begin": 5067,
											"end": 5526,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 5098,
											"end": 5102,
											"name": "PUSH",
											"source": 3,
											"value": "D"
										},
										{
											"begin": 5098,
											"end": 5102,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 5098,
											"end": 5102,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 5112,
											"end": 5123,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 5098,
											"end": 5135,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 5098,
											"end": 5135,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A9059CBB"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5098,
											"end": 5135,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 5098,
											"end": 5135,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5112,
											"end": 5123,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 5112,
											"end": 5123,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 5112,
											"end": 5123,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 5098,
											"end": 5135,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 5098,
											"end": 5135,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 5098,
											"end": 5135,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 7982,
											"end": 8033,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 8049,
											"end": 8067,
											"name": "PUSH",
											"source": 4,
											"value": "24"
										},
										{
											"begin": 8049,
											"end": 8067,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 8049,
											"end": 8067,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 8042,
											"end": 8076,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 8042,
											"end": 8076,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 8042,
											"end": 8076,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 5098,
											"end": 5102,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 5098,
											"end": 5102,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 5098,
											"end": 5102,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 5098,
											"end": 5111,
											"name": "PUSH",
											"source": 3,
											"value": "A9059CBB"
										},
										{
											"begin": 5098,
											"end": 5111,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 7955,
											"end": 7973,
											"name": "PUSH",
											"source": 4,
											"value": "44"
										},
										{
											"begin": 7955,
											"end": 7973,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 5098,
											"end": 5135,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 5098,
											"end": 5135,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 5098,
											"end": 5135,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 5098,
											"end": 5135,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 5098,
											"end": 5135,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 5098,
											"end": 5135,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 5098,
											"end": 5135,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 5098,
											"end": 5135,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 5098,
											"end": 5135,
											"name": "DUP8",
											"source": 3
										},
										{
											"begin": 5098,
											"end": 5135,
											"name": "GAS",
											"source": 3
										},
										{
											"begin": 5098,
											"end": 5135,
											"name": "CALL",
											"source": 3
										},
										{
											"begin": 5098,
											"end": 5135,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 5098,
											"end": 5135,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 5098,
											"end": 5135,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 5098,
											"end": 5135,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "365"
										},
										{
											"begin": 5098,
											"end": 5135,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 5098,
											"end": 5135,
											"name": "RETURNDATASIZE",
											"source": 3
										},
										{
											"begin": 5098,
											"end": 5135,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 5098,
											"end": 5135,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 5098,
											"end": 5135,
											"name": "RETURNDATACOPY",
											"source": 3
										},
										{
											"begin": 5098,
											"end": 5135,
											"name": "RETURNDATASIZE",
											"source": 3
										},
										{
											"begin": 5098,
											"end": 5135,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 5098,
											"end": 5135,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 5098,
											"end": 5135,
											"name": "tag",
											"source": 3,
											"value": "365"
										},
										{
											"begin": 5098,
											"end": 5135,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5098,
											"end": 5135,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5098,
											"end": 5135,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5098,
											"end": 5135,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5098,
											"end": 5135,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5098,
											"end": 5135,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 5098,
											"end": 5135,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 5098,
											"end": 5135,
											"name": "RETURNDATASIZE",
											"source": 3
										},
										{
											"begin": 5098,
											"end": 5135,
											"name": "PUSH",
											"source": 3,
											"value": "1F"
										},
										{
											"begin": 5098,
											"end": 5135,
											"name": "NOT",
											"source": 3
										},
										{
											"begin": 5098,
											"end": 5135,
											"name": "PUSH",
											"source": 3,
											"value": "1F"
										},
										{
											"begin": 5098,
											"end": 5135,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 5098,
											"end": 5135,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 5098,
											"end": 5135,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 5098,
											"end": 5135,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 5098,
											"end": 5135,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 5098,
											"end": 5135,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 5098,
											"end": 5135,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 5098,
											"end": 5135,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 5098,
											"end": 5135,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5098,
											"end": 5135,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 5098,
											"end": 5135,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 5098,
											"end": 5135,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 5098,
											"end": 5135,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "366"
										},
										{
											"begin": 5098,
											"end": 5135,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 5098,
											"end": 5135,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 5098,
											"end": 5135,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "148"
										},
										{
											"begin": 5098,
											"end": 5135,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 5098,
											"end": 5135,
											"name": "tag",
											"source": 3,
											"value": "366"
										},
										{
											"begin": 5098,
											"end": 5135,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5098,
											"end": 5135,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5002,
											"end": 5533,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4940,
											"end": 5533,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4940,
											"end": 5533,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4940,
											"end": 5533,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 5067,
											"end": 5526,
											"name": "tag",
											"source": 3,
											"value": "362"
										},
										{
											"begin": 5067,
											"end": 5526,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5168,
											"end": 5189,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 5206,
											"end": 5213,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 5192,
											"end": 5214,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5192,
											"end": 5214,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 5192,
											"end": 5214,
											"name": "GT",
											"source": 3
										},
										{
											"begin": 5192,
											"end": 5214,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 5192,
											"end": 5214,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "369"
										},
										{
											"begin": 5192,
											"end": 5214,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 5192,
											"end": 5214,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "369"
										},
										{
											"begin": 5192,
											"end": 5214,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "157"
										},
										{
											"begin": 5192,
											"end": 5214,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 5192,
											"end": 5214,
											"name": "tag",
											"source": 3,
											"value": "369"
										},
										{
											"begin": 5192,
											"end": 5214,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5192,
											"end": 5214,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 5192,
											"end": 5214,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 5192,
											"end": 5214,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 5192,
											"end": 5214,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 5192,
											"end": 5214,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 5192,
											"end": 5214,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 5192,
											"end": 5214,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 5192,
											"end": 5214,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 5192,
											"end": 5214,
											"name": "MUL",
											"source": 3
										},
										{
											"begin": 5192,
											"end": 5214,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 5192,
											"end": 5214,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 5192,
											"end": 5214,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 5192,
											"end": 5214,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 5192,
											"end": 5214,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 5192,
											"end": 5214,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 5192,
											"end": 5214,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 5192,
											"end": 5214,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 5192,
											"end": 5214,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "370"
										},
										{
											"begin": 5192,
											"end": 5214,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 5192,
											"end": 5214,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 5192,
											"end": 5214,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 5192,
											"end": 5214,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 5192,
											"end": 5214,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 5192,
											"end": 5214,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 5192,
											"end": 5214,
											"name": "MUL",
											"source": 3
										},
										{
											"begin": 5192,
											"end": 5214,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 5192,
											"end": 5214,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": 5192,
											"end": 5214,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 5192,
											"end": 5214,
											"name": "CALLDATACOPY",
											"source": 3
										},
										{
											"begin": 5192,
											"end": 5214,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 5192,
											"end": 5214,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5192,
											"end": 5214,
											"name": "tag",
											"source": 3,
											"value": "370"
										},
										{
											"begin": 5192,
											"end": 5214,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5192,
											"end": 5214,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5168,
											"end": 5214,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 5168,
											"end": 5214,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5239,
											"end": 5248,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 5229,
											"end": 5233,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 5234,
											"end": 5235,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 5229,
											"end": 5236,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 5229,
											"end": 5236,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 5229,
											"end": 5236,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 5229,
											"end": 5236,
											"name": "LT",
											"source": 3
										},
										{
											"begin": 5229,
											"end": 5236,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "372"
										},
										{
											"begin": 5229,
											"end": 5236,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 5229,
											"end": 5236,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "372"
										},
										{
											"begin": 5229,
											"end": 5236,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "161"
										},
										{
											"begin": 5229,
											"end": 5236,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 5229,
											"end": 5236,
											"name": "tag",
											"source": 3,
											"value": "372"
										},
										{
											"begin": 5229,
											"end": 5236,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5229,
											"end": 5236,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 5229,
											"end": 5236,
											"name": "MUL",
											"source": 3
										},
										{
											"begin": 5229,
											"end": 5236,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 5229,
											"end": 5236,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 5229,
											"end": 5236,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 5229,
											"end": 5248,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5229,
											"end": 5248,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 5229,
											"end": 5248,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 5229,
											"end": 5248,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5229,
											"end": 5248,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 5229,
											"end": 5248,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 5229,
											"end": 5248,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 5229,
											"end": 5248,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5229,
											"end": 5248,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2335,
											"end": 2377,
											"name": "PUSH",
											"source": 3,
											"value": "5C7F8A570D578ED84E63FDFA7B1EE72DEAE1AE23"
										},
										{
											"begin": 5263,
											"end": 5267,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 5268,
											"end": 5269,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 5263,
											"end": 5270,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 5263,
											"end": 5270,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 5263,
											"end": 5270,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 5263,
											"end": 5270,
											"name": "LT",
											"source": 3
										},
										{
											"begin": 5263,
											"end": 5270,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "374"
										},
										{
											"begin": 5263,
											"end": 5270,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 5263,
											"end": 5270,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "374"
										},
										{
											"begin": 5263,
											"end": 5270,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "161"
										},
										{
											"begin": 5263,
											"end": 5270,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 5263,
											"end": 5270,
											"name": "tag",
											"source": 3,
											"value": "374"
										},
										{
											"begin": 5263,
											"end": 5270,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5263,
											"end": 5277,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 5263,
											"end": 5277,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 5263,
											"end": 5277,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 5263,
											"end": 5270,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 5263,
											"end": 5270,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 5263,
											"end": 5270,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 5263,
											"end": 5270,
											"name": "MUL",
											"source": 3
										},
										{
											"begin": 5263,
											"end": 5270,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 5263,
											"end": 5270,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 5263,
											"end": 5270,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 5263,
											"end": 5270,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 5263,
											"end": 5270,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 5263,
											"end": 5277,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 5294,
											"end": 5300,
											"name": "PUSH",
											"source": 3,
											"value": "8"
										},
										{
											"begin": 5294,
											"end": 5300,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 5294,
											"end": 5300,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 5444,
											"end": 5455,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 5294,
											"end": 5300,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 5294,
											"end": 5300,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 5294,
											"end": 5300,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 5294,
											"end": 5300,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 5294,
											"end": 5354,
											"name": "PUSH",
											"source": 3,
											"value": "5C11D795"
										},
										{
											"begin": 5294,
											"end": 5354,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 5373,
											"end": 5382,
											"name": "DUP7",
											"source": 3
										},
										{
											"begin": 5373,
											"end": 5382,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 5294,
											"end": 5300,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 5294,
											"end": 5300,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 5421,
											"end": 5425,
											"name": "DUP7",
											"source": 3
										},
										{
											"begin": 5421,
											"end": 5425,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 5444,
											"end": 5455,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 5474,
											"end": 5499,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "375"
										},
										{
											"begin": 5474,
											"end": 5489,
											"name": "TIMESTAMP",
											"source": 3
										},
										{
											"begin": 5492,
											"end": 5499,
											"name": "PUSH",
											"source": 3,
											"value": "E10"
										},
										{
											"begin": 5474,
											"end": 5499,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "167"
										},
										{
											"begin": 5474,
											"end": 5499,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 5474,
											"end": 5499,
											"name": "tag",
											"source": 3,
											"value": "375"
										},
										{
											"begin": 5474,
											"end": 5499,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5294,
											"end": 5514,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 5294,
											"end": 5514,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 5294,
											"end": 5514,
											"name": "DUP7",
											"source": 3
										},
										{
											"begin": 5294,
											"end": 5514,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFF"
										},
										{
											"begin": 5294,
											"end": 5514,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 5294,
											"end": 5514,
											"name": "PUSH",
											"source": 3,
											"value": "E0"
										},
										{
											"begin": 5294,
											"end": 5514,
											"name": "SHL",
											"source": 3
										},
										{
											"begin": 5294,
											"end": 5514,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 5294,
											"end": 5514,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 5294,
											"end": 5514,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 5294,
											"end": 5514,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 5294,
											"end": 5514,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "376"
										},
										{
											"begin": 5294,
											"end": 5514,
											"name": "SWAP6",
											"source": 3
										},
										{
											"begin": 5294,
											"end": 5514,
											"name": "SWAP5",
											"source": 3
										},
										{
											"begin": 5294,
											"end": 5514,
											"name": "SWAP4",
											"source": 3
										},
										{
											"begin": 5294,
											"end": 5514,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 5294,
											"end": 5514,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 5294,
											"end": 5514,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 5294,
											"end": 5514,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "169"
										},
										{
											"begin": 5294,
											"end": 5514,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 5294,
											"end": 5514,
											"name": "tag",
											"source": 3,
											"value": "376"
										},
										{
											"begin": 5294,
											"end": 5514,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5294,
											"end": 5514,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 5294,
											"end": 5514,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 5294,
											"end": 5514,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 5294,
											"end": 5514,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 5294,
											"end": 5514,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 5294,
											"end": 5514,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 5294,
											"end": 5514,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 5294,
											"end": 5514,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 5294,
											"end": 5514,
											"name": "DUP8",
											"source": 3
										},
										{
											"begin": 5294,
											"end": 5514,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 5294,
											"end": 5514,
											"name": "EXTCODESIZE",
											"source": 3
										},
										{
											"begin": 5294,
											"end": 5514,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 5294,
											"end": 5514,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 5294,
											"end": 5514,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 5294,
											"end": 5514,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "378"
										},
										{
											"begin": 5294,
											"end": 5514,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 5294,
											"end": 5514,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 5294,
											"end": 5514,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 5294,
											"end": 5514,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 5294,
											"end": 5514,
											"name": "tag",
											"source": 3,
											"value": "378"
										},
										{
											"begin": 5294,
											"end": 5514,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5294,
											"end": 5514,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5294,
											"end": 5514,
											"name": "GAS",
											"source": 3
										},
										{
											"begin": 5294,
											"end": 5514,
											"name": "CALL",
											"source": 3
										},
										{
											"begin": 5294,
											"end": 5514,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 5294,
											"end": 5514,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 5294,
											"end": 5514,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 5294,
											"end": 5514,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "343"
										},
										{
											"begin": 5294,
											"end": 5514,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 5294,
											"end": 5514,
											"name": "RETURNDATASIZE",
											"source": 3
										},
										{
											"begin": 5294,
											"end": 5514,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 5294,
											"end": 5514,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 5294,
											"end": 5514,
											"name": "RETURNDATACOPY",
											"source": 3
										},
										{
											"begin": 5294,
											"end": 5514,
											"name": "RETURNDATASIZE",
											"source": 3
										},
										{
											"begin": 5294,
											"end": 5514,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 5294,
											"end": 5514,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 1796,
											"end": 1958,
											"name": "tag",
											"source": 0,
											"value": "186"
										},
										{
											"begin": 1796,
											"end": 1958,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1684,
											"end": 1691,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 735,
											"end": 745,
											"name": "CALLER",
											"source": 2
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1851,
											"end": 1952,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "238"
										},
										{
											"begin": 1851,
											"end": 1952,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "118CDAA7"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 735,
											"end": 745,
											"name": "CALLER",
											"source": 2
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 665,
											"end": 716,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 638,
											"end": 656,
											"name": "PUSH",
											"source": 4,
											"value": "24"
										},
										{
											"begin": 638,
											"end": 656,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "353"
										},
										{
											"begin": 519,
											"end": 722,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2912,
											"end": 3099,
											"name": "tag",
											"source": 0,
											"value": "239"
										},
										{
											"begin": 2912,
											"end": 3099,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2985,
											"end": 3001,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "AND",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 0,
											"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2985,
											"end": 3001,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 2975,
											"end": 3099,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2912,
											"end": 3099,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2912,
											"end": 3099,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "tag",
											"source": -1,
											"value": "200"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "KECCAK256",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "354"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "tag",
											"source": -1,
											"value": "393"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "GT",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ISZERO",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "394"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPI",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "393"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "tag",
											"source": -1,
											"value": "394"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": -1
										},
										{
											"begin": 14,
											"end": 187,
											"name": "tag",
											"source": 4,
											"value": "395"
										},
										{
											"begin": 14,
											"end": 187,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 82,
											"end": 102,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 82,
											"end": 102,
											"name": "CALLDATALOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 131,
											"end": 162,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 131,
											"end": 162,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 121,
											"end": 163,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 121,
											"end": 163,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 111,
											"end": 181,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "400"
										},
										{
											"begin": 111,
											"end": 181,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 177,
											"end": 178,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 174,
											"end": 175,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 167,
											"end": 179,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 111,
											"end": 181,
											"name": "tag",
											"source": 4,
											"value": "400"
										},
										{
											"begin": 111,
											"end": 181,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 14,
											"end": 187,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 14,
											"end": 187,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 14,
											"end": 187,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 14,
											"end": 187,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 192,
											"end": 514,
											"name": "tag",
											"source": 4,
											"value": "37"
										},
										{
											"begin": 192,
											"end": 514,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 269,
											"end": 275,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 277,
											"end": 283,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 285,
											"end": 291,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 338,
											"end": 340,
											"name": "PUSH",
											"source": 4,
											"value": "60"
										},
										{
											"begin": 326,
											"end": 335,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 317,
											"end": 324,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 313,
											"end": 336,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 309,
											"end": 341,
											"name": "SLT",
											"source": 4
										},
										{
											"begin": 306,
											"end": 358,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 306,
											"end": 358,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "402"
										},
										{
											"begin": 306,
											"end": 358,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 354,
											"end": 355,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 351,
											"end": 352,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 344,
											"end": 356,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 306,
											"end": 358,
											"name": "tag",
											"source": 4,
											"value": "402"
										},
										{
											"begin": 306,
											"end": 358,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 377,
											"end": 406,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "403"
										},
										{
											"begin": 396,
											"end": 405,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 377,
											"end": 406,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "395"
										},
										{
											"begin": 377,
											"end": 406,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 377,
											"end": 406,
											"name": "tag",
											"source": 4,
											"value": "403"
										},
										{
											"begin": 377,
											"end": 406,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 367,
											"end": 406,
											"name": "SWAP6",
											"source": 4
										},
										{
											"begin": 453,
											"end": 455,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 438,
											"end": 456,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 438,
											"end": 456,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 425,
											"end": 457,
											"name": "CALLDATALOAD",
											"source": 4
										},
										{
											"begin": 425,
											"end": 457,
											"name": "SWAP6",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 504,
											"end": 506,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 489,
											"end": 507,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 489,
											"end": 507,
											"name": "SWAP5",
											"source": 4
										},
										{
											"begin": 489,
											"end": 507,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 476,
											"end": 508,
											"name": "CALLDATALOAD",
											"source": 4
										},
										{
											"begin": 476,
											"end": 508,
											"name": "SWAP4",
											"source": 4
										},
										{
											"begin": 192,
											"end": 514,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 192,
											"end": 514,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 727,
											"end": 907,
											"name": "tag",
											"source": 4,
											"value": "47"
										},
										{
											"begin": 727,
											"end": 907,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 786,
											"end": 792,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 839,
											"end": 841,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 827,
											"end": 836,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 818,
											"end": 825,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 814,
											"end": 837,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 810,
											"end": 842,
											"name": "SLT",
											"source": 4
										},
										{
											"begin": 807,
											"end": 859,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 807,
											"end": 859,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "406"
										},
										{
											"begin": 807,
											"end": 859,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 855,
											"end": 856,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 852,
											"end": 853,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 845,
											"end": 857,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 807,
											"end": 859,
											"name": "tag",
											"source": 4,
											"value": "406"
										},
										{
											"begin": 807,
											"end": 859,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 878,
											"end": 901,
											"name": "CALLDATALOAD",
											"source": 4
										},
										{
											"begin": 878,
											"end": 901,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 727,
											"end": 907,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 727,
											"end": 907,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 912,
											"end": 1166,
											"name": "tag",
											"source": 4,
											"value": "52"
										},
										{
											"begin": 912,
											"end": 1166,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 980,
											"end": 986,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 988,
											"end": 994,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1041,
											"end": 1043,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1029,
											"end": 1038,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 1020,
											"end": 1027,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 1016,
											"end": 1039,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 1012,
											"end": 1044,
											"name": "SLT",
											"source": 4
										},
										{
											"begin": 1009,
											"end": 1061,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 1009,
											"end": 1061,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "408"
										},
										{
											"begin": 1009,
											"end": 1061,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 1057,
											"end": 1058,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1054,
											"end": 1055,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1047,
											"end": 1059,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 1009,
											"end": 1061,
											"name": "tag",
											"source": 4,
											"value": "408"
										},
										{
											"begin": 1009,
											"end": 1061,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1080,
											"end": 1109,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "409"
										},
										{
											"begin": 1099,
											"end": 1108,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 1080,
											"end": 1109,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "395"
										},
										{
											"begin": 1080,
											"end": 1109,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1080,
											"end": 1109,
											"name": "tag",
											"source": 4,
											"value": "409"
										},
										{
											"begin": 1080,
											"end": 1109,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1070,
											"end": 1109,
											"name": "SWAP5",
											"source": 4
										},
										{
											"begin": 1156,
											"end": 1158,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 1141,
											"end": 1159,
											"name": "SWAP4",
											"source": 4
										},
										{
											"begin": 1141,
											"end": 1159,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1141,
											"end": 1159,
											"name": "SWAP4",
											"source": 4
										},
										{
											"begin": 1141,
											"end": 1159,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1128,
											"end": 1160,
											"name": "CALLDATALOAD",
											"source": 4
										},
										{
											"begin": 1128,
											"end": 1160,
											"name": "SWAP4",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 912,
											"end": 1166,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1353,
											"end": 1539,
											"name": "tag",
											"source": 4,
											"value": "90"
										},
										{
											"begin": 1353,
											"end": 1539,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1412,
											"end": 1418,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1465,
											"end": 1467,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 1453,
											"end": 1462,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1444,
											"end": 1451,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 1440,
											"end": 1463,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 1436,
											"end": 1468,
											"name": "SLT",
											"source": 4
										},
										{
											"begin": 1433,
											"end": 1485,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 1433,
											"end": 1485,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "412"
										},
										{
											"begin": 1433,
											"end": 1485,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 1481,
											"end": 1482,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1478,
											"end": 1479,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1471,
											"end": 1483,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 1433,
											"end": 1485,
											"name": "tag",
											"source": 4,
											"value": "412"
										},
										{
											"begin": 1433,
											"end": 1485,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1504,
											"end": 1533,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "413"
										},
										{
											"begin": 1523,
											"end": 1532,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1504,
											"end": 1533,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "395"
										},
										{
											"begin": 1504,
											"end": 1533,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1504,
											"end": 1533,
											"name": "tag",
											"source": 4,
											"value": "413"
										},
										{
											"begin": 1504,
											"end": 1533,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1494,
											"end": 1533,
											"name": "SWAP4",
											"source": 4
										},
										{
											"begin": 1353,
											"end": 1539,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1353,
											"end": 1539,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1736,
											"end": 2546,
											"name": "tag",
											"source": 4,
											"value": "102"
										},
										{
											"begin": 1736,
											"end": 2546,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1953,
											"end": 1955,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2005,
											"end": 2026,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2005,
											"end": 2026,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2005,
											"end": 2026,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2075,
											"end": 2088,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2075,
											"end": 2088,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 1978,
											"end": 1996,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1978,
											"end": 1996,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1978,
											"end": 1996,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2097,
											"end": 2119,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2097,
											"end": 2119,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2097,
											"end": 2119,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1924,
											"end": 1928,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1924,
											"end": 1928,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1953,
											"end": 1955,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2138,
											"end": 2140,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2138,
											"end": 2140,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2156,
											"end": 2174,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2156,
											"end": 2174,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 2156,
											"end": 2174,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2156,
											"end": 2174,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2197,
											"end": 2212,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 2197,
											"end": 2212,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 2197,
											"end": 2212,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1924,
											"end": 1928,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 2240,
											"end": 2520,
											"name": "tag",
											"source": 4,
											"value": "416"
										},
										{
											"begin": 2240,
											"end": 2520,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2254,
											"end": 2260,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2251,
											"end": 2252,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2248,
											"end": 2261,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 2240,
											"end": 2520,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 2240,
											"end": 2520,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "418"
										},
										{
											"begin": 2240,
											"end": 2520,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 2313,
											"end": 2326,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2313,
											"end": 2326,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 2355,
											"end": 2364,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2355,
											"end": 2364,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2351,
											"end": 2386,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 2339,
											"end": 2387,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 2339,
											"end": 2387,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2427,
											"end": 2438,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 2427,
											"end": 2438,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2421,
											"end": 2439,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 2407,
											"end": 2419,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 2407,
											"end": 2419,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 2407,
											"end": 2419,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2400,
											"end": 2440,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2460,
											"end": 2472,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 2460,
											"end": 2472,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 2460,
											"end": 2472,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2460,
											"end": 2472,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 2495,
											"end": 2510,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2495,
											"end": 2510,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 2495,
											"end": 2510,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2495,
											"end": 2510,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2383,
											"end": 2384,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 2269,
											"end": 2278,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2240,
											"end": 2520,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "416"
										},
										{
											"begin": 2240,
											"end": 2520,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2240,
											"end": 2520,
											"name": "tag",
											"source": 4,
											"value": "418"
										},
										{
											"begin": 2240,
											"end": 2520,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2537,
											"end": 2540,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2537,
											"end": 2540,
											"name": "SWAP8",
											"source": 4
										},
										{
											"begin": 1736,
											"end": 2546,
											"name": "SWAP7",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1736,
											"end": 2546,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2551,
											"end": 2948,
											"name": "tag",
											"source": 4,
											"value": "120"
										},
										{
											"begin": 2551,
											"end": 2948,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2637,
											"end": 2643,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2645,
											"end": 2651,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2653,
											"end": 2659,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2661,
											"end": 2667,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2714,
											"end": 2717,
											"name": "PUSH",
											"source": 4,
											"value": "80"
										},
										{
											"begin": 2702,
											"end": 2711,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 2693,
											"end": 2700,
											"name": "DUP8",
											"source": 4
										},
										{
											"begin": 2689,
											"end": 2712,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 2685,
											"end": 2718,
											"name": "SLT",
											"source": 4
										},
										{
											"begin": 2682,
											"end": 2735,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 2682,
											"end": 2735,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "420"
										},
										{
											"begin": 2682,
											"end": 2735,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 2731,
											"end": 2732,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2728,
											"end": 2729,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2721,
											"end": 2733,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 2682,
											"end": 2735,
											"name": "tag",
											"source": 4,
											"value": "420"
										},
										{
											"begin": 2682,
											"end": 2735,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2754,
											"end": 2783,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "421"
										},
										{
											"begin": 2773,
											"end": 2782,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 2754,
											"end": 2783,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "395"
										},
										{
											"begin": 2754,
											"end": 2783,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2754,
											"end": 2783,
											"name": "tag",
											"source": 4,
											"value": "421"
										},
										{
											"begin": 2754,
											"end": 2783,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2744,
											"end": 2783,
											"name": "SWAP4",
											"source": 4
										},
										{
											"begin": 2744,
											"end": 2783,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2802,
											"end": 2840,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "422"
										},
										{
											"begin": 2836,
											"end": 2838,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2825,
											"end": 2834,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 2821,
											"end": 2839,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2802,
											"end": 2840,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "395"
										},
										{
											"begin": 2802,
											"end": 2840,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2802,
											"end": 2840,
											"name": "tag",
											"source": 4,
											"value": "422"
										},
										{
											"begin": 2802,
											"end": 2840,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2551,
											"end": 2948,
											"name": "SWAP4",
											"source": 4
										},
										{
											"begin": 2551,
											"end": 2948,
											"name": "SWAP7",
											"source": 4
										},
										{
											"begin": 2792,
											"end": 2840,
											"name": "SWAP4",
											"source": 4
										},
										{
											"begin": 2792,
											"end": 2840,
											"name": "SWAP6",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2887,
											"end": 2889,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2872,
											"end": 2890,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2872,
											"end": 2890,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2859,
											"end": 2891,
											"name": "CALLDATALOAD",
											"source": 4
										},
										{
											"begin": 2859,
											"end": 2891,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2938,
											"end": 2940,
											"name": "PUSH",
											"source": 4,
											"value": "60"
										},
										{
											"begin": 2923,
											"end": 2941,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2910,
											"end": 2942,
											"name": "CALLDATALOAD",
											"source": 4
										},
										{
											"begin": 2910,
											"end": 2942,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2551,
											"end": 2948,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3333,
											"end": 3610,
											"name": "tag",
											"source": 4,
											"value": "148"
										},
										{
											"begin": 3333,
											"end": 3610,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3400,
											"end": 3406,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3453,
											"end": 3455,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 3441,
											"end": 3450,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 3432,
											"end": 3439,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 3428,
											"end": 3451,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 3424,
											"end": 3456,
											"name": "SLT",
											"source": 4
										},
										{
											"begin": 3421,
											"end": 3473,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 3421,
											"end": 3473,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "425"
										},
										{
											"begin": 3421,
											"end": 3473,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 3469,
											"end": 3470,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3466,
											"end": 3467,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3459,
											"end": 3471,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 3421,
											"end": 3473,
											"name": "tag",
											"source": 4,
											"value": "425"
										},
										{
											"begin": 3421,
											"end": 3473,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3501,
											"end": 3510,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3495,
											"end": 3511,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 3554,
											"end": 3559,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3547,
											"end": 3560,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 3540,
											"end": 3561,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 3533,
											"end": 3538,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3530,
											"end": 3562,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 3520,
											"end": 3580,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "413"
										},
										{
											"begin": 3520,
											"end": 3580,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 3576,
											"end": 3577,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3573,
											"end": 3574,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3566,
											"end": 3578,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 3615,
											"end": 3742,
											"name": "tag",
											"source": 4,
											"value": "396"
										},
										{
											"begin": 3615,
											"end": 3742,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3676,
											"end": 3686,
											"name": "PUSH",
											"source": 4,
											"value": "4E487B71"
										},
										{
											"begin": 3671,
											"end": 3674,
											"name": "PUSH",
											"source": 4,
											"value": "E0"
										},
										{
											"begin": 3667,
											"end": 3687,
											"name": "SHL",
											"source": 4
										},
										{
											"begin": 3664,
											"end": 3665,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3657,
											"end": 3688,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 3707,
											"end": 3711,
											"name": "PUSH",
											"source": 4,
											"value": "11"
										},
										{
											"begin": 3704,
											"end": 3705,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 3697,
											"end": 3712,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 3731,
											"end": 3735,
											"name": "PUSH",
											"source": 4,
											"value": "24"
										},
										{
											"begin": 3728,
											"end": 3729,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3721,
											"end": 3736,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 3747,
											"end": 3915,
											"name": "tag",
											"source": 4,
											"value": "150"
										},
										{
											"begin": 3747,
											"end": 3915,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3820,
											"end": 3829,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3820,
											"end": 3829,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 3820,
											"end": 3829,
											"name": "MUL",
											"source": 4
										},
										{
											"begin": 3851,
											"end": 3860,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3851,
											"end": 3860,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 3868,
											"end": 3883,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 3868,
											"end": 3883,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 3868,
											"end": 3883,
											"name": "DIV",
											"source": 4
										},
										{
											"begin": 3862,
											"end": 3884,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 3862,
											"end": 3884,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 3848,
											"end": 3885,
											"name": "OR",
											"source": 4
										},
										{
											"begin": 3838,
											"end": 3909,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "430"
										},
										{
											"begin": 3838,
											"end": 3909,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 3889,
											"end": 3907,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "430"
										},
										{
											"begin": 3889,
											"end": 3907,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "396"
										},
										{
											"begin": 3889,
											"end": 3907,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3889,
											"end": 3907,
											"name": "tag",
											"source": 4,
											"value": "430"
										},
										{
											"begin": 3889,
											"end": 3907,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3747,
											"end": 3915,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 3747,
											"end": 3915,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3747,
											"end": 3915,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3747,
											"end": 3915,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3747,
											"end": 3915,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3920,
											"end": 4137,
											"name": "tag",
											"source": 4,
											"value": "152"
										},
										{
											"begin": 3920,
											"end": 4137,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3960,
											"end": 3961,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3986,
											"end": 3987,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 3976,
											"end": 4108,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "432"
										},
										{
											"begin": 3976,
											"end": 4108,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 4030,
											"end": 4040,
											"name": "PUSH",
											"source": 4,
											"value": "4E487B71"
										},
										{
											"begin": 4025,
											"end": 4028,
											"name": "PUSH",
											"source": 4,
											"value": "E0"
										},
										{
											"begin": 4021,
											"end": 4041,
											"name": "SHL",
											"source": 4
										},
										{
											"begin": 4018,
											"end": 4019,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 4011,
											"end": 4042,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 4065,
											"end": 4069,
											"name": "PUSH",
											"source": 4,
											"value": "12"
										},
										{
											"begin": 4062,
											"end": 4063,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 4055,
											"end": 4070,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 4093,
											"end": 4097,
											"name": "PUSH",
											"source": 4,
											"value": "24"
										},
										{
											"begin": 4090,
											"end": 4091,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 4083,
											"end": 4098,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 3976,
											"end": 4108,
											"name": "tag",
											"source": 4,
											"value": "432"
										},
										{
											"begin": 3976,
											"end": 4108,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4122,
											"end": 4131,
											"name": "DIV",
											"source": 4
										},
										{
											"begin": 4122,
											"end": 4131,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3920,
											"end": 4137,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 4142,
											"end": 4269,
											"name": "tag",
											"source": 4,
											"value": "157"
										},
										{
											"begin": 4142,
											"end": 4269,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4203,
											"end": 4213,
											"name": "PUSH",
											"source": 4,
											"value": "4E487B71"
										},
										{
											"begin": 4198,
											"end": 4201,
											"name": "PUSH",
											"source": 4,
											"value": "E0"
										},
										{
											"begin": 4194,
											"end": 4214,
											"name": "SHL",
											"source": 4
										},
										{
											"begin": 4191,
											"end": 4192,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 4184,
											"end": 4215,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 4234,
											"end": 4238,
											"name": "PUSH",
											"source": 4,
											"value": "41"
										},
										{
											"begin": 4231,
											"end": 4232,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 4224,
											"end": 4239,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 4258,
											"end": 4262,
											"name": "PUSH",
											"source": 4,
											"value": "24"
										},
										{
											"begin": 4255,
											"end": 4256,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 4248,
											"end": 4263,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 4274,
											"end": 4401,
											"name": "tag",
											"source": 4,
											"value": "161"
										},
										{
											"begin": 4274,
											"end": 4401,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4335,
											"end": 4345,
											"name": "PUSH",
											"source": 4,
											"value": "4E487B71"
										},
										{
											"begin": 4330,
											"end": 4333,
											"name": "PUSH",
											"source": 4,
											"value": "E0"
										},
										{
											"begin": 4326,
											"end": 4346,
											"name": "SHL",
											"source": 4
										},
										{
											"begin": 4323,
											"end": 4324,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 4316,
											"end": 4347,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 4366,
											"end": 4370,
											"name": "PUSH",
											"source": 4,
											"value": "32"
										},
										{
											"begin": 4363,
											"end": 4364,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 4356,
											"end": 4371,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 4390,
											"end": 4394,
											"name": "PUSH",
											"source": 4,
											"value": "24"
										},
										{
											"begin": 4387,
											"end": 4388,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 4380,
											"end": 4395,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 4406,
											"end": 4534,
											"name": "tag",
											"source": 4,
											"value": "165"
										},
										{
											"begin": 4406,
											"end": 4534,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4473,
											"end": 4482,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4473,
											"end": 4482,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4473,
											"end": 4482,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 4494,
											"end": 4505,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4494,
											"end": 4505,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4494,
											"end": 4505,
											"name": "GT",
											"source": 4
										},
										{
											"begin": 4491,
											"end": 4528,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 4491,
											"end": 4528,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "430"
										},
										{
											"begin": 4491,
											"end": 4528,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 4508,
											"end": 4526,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "430"
										},
										{
											"begin": 4508,
											"end": 4526,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "396"
										},
										{
											"begin": 4508,
											"end": 4526,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 4539,
											"end": 4664,
											"name": "tag",
											"source": 4,
											"value": "167"
										},
										{
											"begin": 4539,
											"end": 4664,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4604,
											"end": 4613,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 4604,
											"end": 4613,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 4604,
											"end": 4613,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 4625,
											"end": 4635,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 4625,
											"end": 4635,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 4625,
											"end": 4635,
											"name": "GT",
											"source": 4
										},
										{
											"begin": 4622,
											"end": 4658,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 4622,
											"end": 4658,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "430"
										},
										{
											"begin": 4622,
											"end": 4658,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 4638,
											"end": 4656,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "430"
										},
										{
											"begin": 4638,
											"end": 4656,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "396"
										},
										{
											"begin": 4638,
											"end": 4656,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 4669,
											"end": 5130,
											"name": "tag",
											"source": 4,
											"value": "397"
										},
										{
											"begin": 4669,
											"end": 5130,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4722,
											"end": 4725,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 4760,
											"end": 4765,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4754,
											"end": 4766,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 4787,
											"end": 4793,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 4782,
											"end": 4785,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 4775,
											"end": 4794,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 4813,
											"end": 4817,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 4842,
											"end": 4844,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 4837,
											"end": 4840,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 4833,
											"end": 4845,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 4826,
											"end": 4845,
											"name": "SWAP5",
											"source": 4
										},
										{
											"begin": 4826,
											"end": 4845,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4879,
											"end": 4881,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 4872,
											"end": 4877,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 4868,
											"end": 4882,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 4900,
											"end": 4901,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 4910,
											"end": 5105,
											"name": "tag",
											"source": 4,
											"value": "442"
										},
										{
											"begin": 4910,
											"end": 5105,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4924,
											"end": 4930,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 4921,
											"end": 4922,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4918,
											"end": 4931,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 4910,
											"end": 5105,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 4910,
											"end": 5105,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "444"
										},
										{
											"begin": 4910,
											"end": 5105,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 4989,
											"end": 5002,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4989,
											"end": 5002,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4985,
											"end": 5024,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 4973,
											"end": 5025,
											"name": "DUP8",
											"source": 4
										},
										{
											"begin": 4973,
											"end": 5025,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 5045,
											"end": 5057,
											"name": "SWAP6",
											"source": 4
										},
										{
											"begin": 5045,
											"end": 5057,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 5045,
											"end": 5057,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 5045,
											"end": 5057,
											"name": "SWAP6",
											"source": 4
										},
										{
											"begin": 5080,
											"end": 5095,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5080,
											"end": 5095,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 5080,
											"end": 5095,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 5080,
											"end": 5095,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5021,
											"end": 5022,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 4939,
											"end": 4948,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 4910,
											"end": 5105,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "442"
										},
										{
											"begin": 4910,
											"end": 5105,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 4910,
											"end": 5105,
											"name": "tag",
											"source": 4,
											"value": "444"
										},
										{
											"begin": 4910,
											"end": 5105,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5121,
											"end": 5124,
											"name": "SWAP5",
											"source": 4
										},
										{
											"begin": 5121,
											"end": 5124,
											"name": "SWAP6",
											"source": 4
										},
										{
											"begin": 4669,
											"end": 5130,
											"name": "SWAP5",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4669,
											"end": 5130,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 5135,
											"end": 5709,
											"name": "tag",
											"source": 4,
											"value": "169"
										},
										{
											"begin": 5135,
											"end": 5709,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5426,
											"end": 5432,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 5415,
											"end": 5424,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 5408,
											"end": 5433,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 5469,
											"end": 5475,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 5464,
											"end": 5466,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 5453,
											"end": 5462,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 5449,
											"end": 5467,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 5442,
											"end": 5476,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 5512,
											"end": 5515,
											"name": "PUSH",
											"source": 4,
											"value": "A0"
										},
										{
											"begin": 5507,
											"end": 5509,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 5496,
											"end": 5505,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 5492,
											"end": 5510,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 5485,
											"end": 5516,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 5389,
											"end": 5393,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 5533,
											"end": 5590,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "446"
										},
										{
											"begin": 5585,
											"end": 5588,
											"name": "PUSH",
											"source": 4,
											"value": "A0"
										},
										{
											"begin": 5574,
											"end": 5583,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 5570,
											"end": 5589,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 5562,
											"end": 5568,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 5533,
											"end": 5590,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "397"
										},
										{
											"begin": 5533,
											"end": 5590,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 5533,
											"end": 5590,
											"name": "tag",
											"source": 4,
											"value": "446"
										},
										{
											"begin": 5533,
											"end": 5590,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5626,
											"end": 5658,
											"name": "SWAP5",
											"source": 4
										},
										{
											"begin": 5626,
											"end": 5658,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5626,
											"end": 5658,
											"name": "SWAP5",
											"source": 4
										},
										{
											"begin": 5626,
											"end": 5658,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 5621,
											"end": 5623,
											"name": "PUSH",
											"source": 4,
											"value": "60"
										},
										{
											"begin": 5606,
											"end": 5624,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 5606,
											"end": 5624,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 5599,
											"end": 5659,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5690,
											"end": 5693,
											"name": "PUSH",
											"source": 4,
											"value": "80"
										},
										{
											"begin": 5675,
											"end": 5694,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 5668,
											"end": 5703,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 5525,
											"end": 5590,
											"name": "SWAP4",
											"source": 4
										},
										{
											"begin": 5135,
											"end": 5709,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5135,
											"end": 5709,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 5714,
											"end": 5849,
											"name": "tag",
											"source": 4,
											"value": "198"
										},
										{
											"begin": 5714,
											"end": 5849,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5753,
											"end": 5756,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 5774,
											"end": 5791,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 5774,
											"end": 5791,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 5774,
											"end": 5791,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 5771,
											"end": 5814,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "449"
										},
										{
											"begin": 5771,
											"end": 5814,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 5794,
											"end": 5812,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "449"
										},
										{
											"begin": 5794,
											"end": 5812,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "396"
										},
										{
											"begin": 5794,
											"end": 5812,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 5794,
											"end": 5812,
											"name": "tag",
											"source": 4,
											"value": "449"
										},
										{
											"begin": 5794,
											"end": 5812,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5841,
											"end": 5842,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 5830,
											"end": 5843,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 5830,
											"end": 5843,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5714,
											"end": 5849,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 5854,
											"end": 6186,
											"name": "tag",
											"source": 4,
											"value": "215"
										},
										{
											"begin": 5854,
											"end": 6186,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6061,
											"end": 6067,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 6050,
											"end": 6059,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 6043,
											"end": 6068,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 6104,
											"end": 6106,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 6099,
											"end": 6101,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 6088,
											"end": 6097,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 6084,
											"end": 6102,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 6077,
											"end": 6107,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 6024,
											"end": 6028,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 6124,
											"end": 6180,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "451"
										},
										{
											"begin": 6176,
											"end": 6178,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 6165,
											"end": 6174,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 6161,
											"end": 6179,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 6153,
											"end": 6159,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 6124,
											"end": 6180,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "397"
										},
										{
											"begin": 6124,
											"end": 6180,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 6124,
											"end": 6180,
											"name": "tag",
											"source": 4,
											"value": "451"
										},
										{
											"begin": 6124,
											"end": 6180,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6116,
											"end": 6180,
											"name": "SWAP5",
											"source": 4
										},
										{
											"begin": 5854,
											"end": 6186,
											"name": "SWAP4",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5854,
											"end": 6186,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 6191,
											"end": 7296,
											"name": "tag",
											"source": 4,
											"value": "219"
										},
										{
											"begin": 6191,
											"end": 7296,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6286,
											"end": 6292,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 6317,
											"end": 6319,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 6360,
											"end": 6362,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 6348,
											"end": 6357,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 6339,
											"end": 6346,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 6335,
											"end": 6358,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 6331,
											"end": 6363,
											"name": "SLT",
											"source": 4
										},
										{
											"begin": 6328,
											"end": 6380,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 6328,
											"end": 6380,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "453"
										},
										{
											"begin": 6328,
											"end": 6380,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 6376,
											"end": 6377,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 6373,
											"end": 6374,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 6366,
											"end": 6378,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 6328,
											"end": 6380,
											"name": "tag",
											"source": 4,
											"value": "453"
										},
										{
											"begin": 6328,
											"end": 6380,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6409,
											"end": 6418,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 6403,
											"end": 6419,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 6438,
											"end": 6456,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6479,
											"end": 6481,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 6471,
											"end": 6477,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 6468,
											"end": 6482,
											"name": "GT",
											"source": 4
										},
										{
											"begin": 6465,
											"end": 6499,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 6465,
											"end": 6499,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "454"
										},
										{
											"begin": 6465,
											"end": 6499,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 6495,
											"end": 6496,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 6492,
											"end": 6493,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 6485,
											"end": 6497,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 6465,
											"end": 6499,
											"name": "tag",
											"source": 4,
											"value": "454"
										},
										{
											"begin": 6465,
											"end": 6499,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6533,
											"end": 6539,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 6522,
											"end": 6531,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 6518,
											"end": 6540,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 6508,
											"end": 6540,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 6508,
											"end": 6540,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6578,
											"end": 6585,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 6571,
											"end": 6575,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 6567,
											"end": 6569,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 6563,
											"end": 6576,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 6559,
											"end": 6586,
											"name": "SLT",
											"source": 4
										},
										{
											"begin": 6549,
											"end": 6604,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "455"
										},
										{
											"begin": 6549,
											"end": 6604,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 6600,
											"end": 6601,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 6597,
											"end": 6598,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 6590,
											"end": 6602,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 6549,
											"end": 6604,
											"name": "tag",
											"source": 4,
											"value": "455"
										},
										{
											"begin": 6549,
											"end": 6604,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6629,
											"end": 6631,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 6623,
											"end": 6632,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 6651,
											"end": 6653,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 6647,
											"end": 6649,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 6644,
											"end": 6654,
											"name": "GT",
											"source": 4
										},
										{
											"begin": 6641,
											"end": 6677,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 6641,
											"end": 6677,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "457"
										},
										{
											"begin": 6641,
											"end": 6677,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 6657,
											"end": 6675,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "457"
										},
										{
											"begin": 6657,
											"end": 6675,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "157"
										},
										{
											"begin": 6657,
											"end": 6675,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 6657,
											"end": 6675,
											"name": "tag",
											"source": 4,
											"value": "457"
										},
										{
											"begin": 6657,
											"end": 6675,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6703,
											"end": 6705,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 6700,
											"end": 6701,
											"name": "PUSH",
											"source": 4,
											"value": "5"
										},
										{
											"begin": 6696,
											"end": 6706,
											"name": "SHL",
											"source": 4
										},
										{
											"begin": 6735,
											"end": 6737,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 6729,
											"end": 6738,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 6798,
											"end": 6800,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 6794,
											"end": 6801,
											"name": "NOT",
											"source": 4
										},
										{
											"begin": 6789,
											"end": 6791,
											"name": "PUSH",
											"source": 4,
											"value": "3F"
										},
										{
											"begin": 6785,
											"end": 6787,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 6781,
											"end": 6792,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 6777,
											"end": 6802,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 6769,
											"end": 6775,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 6765,
											"end": 6803,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 6853,
											"end": 6859,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 6841,
											"end": 6851,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 6838,
											"end": 6860,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 6833,
											"end": 6835,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 6821,
											"end": 6831,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 6818,
											"end": 6836,
											"name": "GT",
											"source": 4
										},
										{
											"begin": 6815,
											"end": 6861,
											"name": "OR",
											"source": 4
										},
										{
											"begin": 6812,
											"end": 6884,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 6812,
											"end": 6884,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "459"
										},
										{
											"begin": 6812,
											"end": 6884,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 6864,
											"end": 6882,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "459"
										},
										{
											"begin": 6864,
											"end": 6882,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "157"
										},
										{
											"begin": 6864,
											"end": 6882,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 6864,
											"end": 6882,
											"name": "tag",
											"source": 4,
											"value": "459"
										},
										{
											"begin": 6864,
											"end": 6882,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6900,
											"end": 6902,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 6893,
											"end": 6915,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 6950,
											"end": 6968,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 6950,
											"end": 6968,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 6950,
											"end": 6968,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 6984,
											"end": 6999,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 6984,
											"end": 6999,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 6984,
											"end": 6999,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 6984,
											"end": 6999,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 7026,
											"end": 7037,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 7026,
											"end": 7037,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 7026,
											"end": 7037,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 7022,
											"end": 7042,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 7022,
											"end": 7042,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 7022,
											"end": 7042,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 7054,
											"end": 7073,
											"name": "DUP9",
											"source": 4
										},
										{
											"begin": 7054,
											"end": 7073,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 7054,
											"end": 7073,
											"name": "GT",
											"source": 4
										},
										{
											"begin": 7051,
											"end": 7090,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 7051,
											"end": 7090,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "460"
										},
										{
											"begin": 7051,
											"end": 7090,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 7086,
											"end": 7087,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 7083,
											"end": 7084,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 7076,
											"end": 7088,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 7051,
											"end": 7090,
											"name": "tag",
											"source": 4,
											"value": "460"
										},
										{
											"begin": 7051,
											"end": 7090,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 7110,
											"end": 7121,
											"name": "SWAP4",
											"source": 4
										},
										{
											"begin": 7110,
											"end": 7121,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 7110,
											"end": 7121,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 7110,
											"end": 7121,
											"name": "SWAP4",
											"source": 4
										},
										{
											"begin": 7130,
											"end": 7265,
											"name": "tag",
											"source": 4,
											"value": "461"
										},
										{
											"begin": 7130,
											"end": 7265,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 7146,
											"end": 7152,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 7141,
											"end": 7144,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 7138,
											"end": 7153,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 7130,
											"end": 7265,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 7130,
											"end": 7265,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "463"
										},
										{
											"begin": 7130,
											"end": 7265,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 7212,
											"end": 7222,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 7212,
											"end": 7222,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 7200,
											"end": 7223,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 7200,
											"end": 7223,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 7163,
											"end": 7175,
											"name": "SWAP4",
											"source": 4
										},
										{
											"begin": 7163,
											"end": 7175,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 7163,
											"end": 7175,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 7163,
											"end": 7175,
											"name": "SWAP4",
											"source": 4
										},
										{
											"begin": 7243,
											"end": 7255,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 7243,
											"end": 7255,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 7243,
											"end": 7255,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 7243,
											"end": 7255,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 7130,
											"end": 7265,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "461"
										},
										{
											"begin": 7130,
											"end": 7265,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 7130,
											"end": 7265,
											"name": "tag",
											"source": 4,
											"value": "463"
										},
										{
											"begin": 7130,
											"end": 7265,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 7284,
											"end": 7290,
											"name": "SWAP9",
											"source": 4
										},
										{
											"begin": 6191,
											"end": 7296,
											"name": "SWAP8",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6191,
											"end": 7296,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 7301,
											"end": 7803,
											"name": "tag",
											"source": 4,
											"value": "223"
										},
										{
											"begin": 7301,
											"end": 7803,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 7564,
											"end": 7570,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 7553,
											"end": 7562,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 7546,
											"end": 7571,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 7607,
											"end": 7610,
											"name": "PUSH",
											"source": 4,
											"value": "80"
										},
										{
											"begin": 7602,
											"end": 7604,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 7591,
											"end": 7600,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 7587,
											"end": 7605,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 7580,
											"end": 7611,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 7527,
											"end": 7531,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 7628,
											"end": 7685,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "465"
										},
										{
											"begin": 7680,
											"end": 7683,
											"name": "PUSH",
											"source": 4,
											"value": "80"
										},
										{
											"begin": 7669,
											"end": 7678,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 7665,
											"end": 7684,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 7657,
											"end": 7663,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 7628,
											"end": 7685,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "397"
										},
										{
											"begin": 7628,
											"end": 7685,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 7628,
											"end": 7685,
											"name": "tag",
											"source": 4,
											"value": "465"
										},
										{
											"begin": 7628,
											"end": 7685,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7721,
											"end": 7753,
											"name": "SWAP5",
											"source": 4
										},
										{
											"begin": 7721,
											"end": 7753,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 7721,
											"end": 7753,
											"name": "SWAP5",
											"source": 4
										},
										{
											"begin": 7721,
											"end": 7753,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 7716,
											"end": 7718,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 7701,
											"end": 7719,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 7701,
											"end": 7719,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 7694,
											"end": 7754,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 7785,
											"end": 7787,
											"name": "PUSH",
											"source": 4,
											"value": "60"
										},
										{
											"begin": 7770,
											"end": 7788,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 7763,
											"end": 7797,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 7620,
											"end": 7685,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 7301,
											"end": 7803,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 7301,
											"end": 7803,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										}
									]
								},
								"BB9835C734EA2EE08B9EB3F6004F5F118E5B999FBE41C94259AC9A08CB0AFF12": "000000000000000000000000145863eb42cf62847a6ca784e6416c1682b1b2ae"
							},
							"sourceList": [
								"@openzeppelin/contracts/access/Ownable.sol",
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"ARY/SwapPro.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"ARY()": "afe43b94",
							"CUSDC()": "a37b9e7f",
							"CUSDT()": "6504fbad",
							"DEXFACTORY()": "7c6f8fae",
							"DEXROUTER()": "d7b7d3f3",
							"MERY()": "b0befe63",
							"WCRO()": "1d470cb1",
							"addresses(uint256)": "edf26d9b",
							"clearVolume()": "39bda01c",
							"competition_started()": "ac65334f",
							"deposit()": "d0e30db0",
							"feePercent()": "7fd6f15c",
							"feeReceiver()": "b3f00674",
							"getUserVolumes()": "ae38a070",
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"setFeeData(address,uint256)": "3977d68d",
							"startCompetition()": "d3e66a9e",
							"stopCompetition()": "5f0018cd",
							"swapCROForToken(address,uint256)": "53ac861e",
							"swapTokenForCRO(address,uint256,uint256)": "16214120",
							"swapTokenForToken(address,address,uint256,uint256)": "d16a4010",
							"transferOwnership(address)": "f2fde38b",
							"userVolume(address)": "a6769ef8",
							"withdraw(uint256)": "2e1a7d4d"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"ARY\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"CUSDC\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"CUSDT\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"DEXFACTORY\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"DEXROUTER\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"MERY\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"WCRO\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"addresses\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"clearVolume\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"competition_started\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"deposit\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"feePercent\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"feeReceiver\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getUserVolumes\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"volume\",\"type\":\"uint256\"}],\"internalType\":\"struct Volume[]\",\"name\":\"\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_feeReceiver\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_feePercent\",\"type\":\"uint256\"}],\"name\":\"setFeeData\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"startCompetition\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"stopCompetition\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"toToken\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amountOutMin\",\"type\":\"uint256\"}],\"name\":\"swapCROForToken\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"fromToken\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amountIn\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountOutMin\",\"type\":\"uint256\"}],\"name\":\"swapTokenForCRO\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"fromToken\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"toToken\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amountIn\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountOutMin\",\"type\":\"uint256\"}],\"name\":\"swapTokenForToken\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"userVolume\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"errors\":{\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"kind\":\"dev\",\"methods\":{\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"ARY/SwapPro.sol\":\"SwapPro\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"ARY/SwapPro.sol\":{\"keccak256\":\"0xae8d740d234c37974ff3218b29ceb9cd11aa6411198a581783988be94e8433d0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c6d909c51a123835a6e1320a81b26f5a0bae6fff7c5f1ab04052511faf1ef64a\",\"dweb:/ipfs/QmV6EVkEHgqHRaunnNKcyCuDN42z7BBNHqcmGTtf63hvqh\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 8,
								"contract": "ARY/SwapPro.sol:SwapPro",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							},
							{
								"astId": 423,
								"contract": "ARY/SwapPro.sol:SwapPro",
								"label": "feeReceiver",
								"offset": 0,
								"slot": "1",
								"type": "t_address"
							},
							{
								"astId": 425,
								"contract": "ARY/SwapPro.sol:SwapPro",
								"label": "feePercent",
								"offset": 0,
								"slot": "2",
								"type": "t_uint256"
							},
							{
								"astId": 428,
								"contract": "ARY/SwapPro.sol:SwapPro",
								"label": "competition_started",
								"offset": 0,
								"slot": "3",
								"type": "t_bool"
							},
							{
								"astId": 432,
								"contract": "ARY/SwapPro.sol:SwapPro",
								"label": "userVolume",
								"offset": 0,
								"slot": "4",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 436,
								"contract": "ARY/SwapPro.sol:SwapPro",
								"label": "isExistAddress",
								"offset": 0,
								"slot": "5",
								"type": "t_mapping(t_address,t_bool)"
							},
							{
								"astId": 439,
								"contract": "ARY/SwapPro.sol:SwapPro",
								"label": "addresses",
								"offset": 0,
								"slot": "6",
								"type": "t_array(t_address)dyn_storage"
							},
							{
								"astId": 442,
								"contract": "ARY/SwapPro.sol:SwapPro",
								"label": "factory",
								"offset": 0,
								"slot": "7",
								"type": "t_contract(IDEXFactory)278"
							},
							{
								"astId": 445,
								"contract": "ARY/SwapPro.sol:SwapPro",
								"label": "router",
								"offset": 0,
								"slot": "8",
								"type": "t_contract(IDEXRouter)382"
							},
							{
								"astId": 448,
								"contract": "ARY/SwapPro.sol:SwapPro",
								"label": "cusdc",
								"offset": 0,
								"slot": "9",
								"type": "t_contract(IERC20)225"
							},
							{
								"astId": 451,
								"contract": "ARY/SwapPro.sol:SwapPro",
								"label": "cusdt",
								"offset": 0,
								"slot": "10",
								"type": "t_contract(IERC20)225"
							},
							{
								"astId": 454,
								"contract": "ARY/SwapPro.sol:SwapPro",
								"label": "ary",
								"offset": 0,
								"slot": "11",
								"type": "t_contract(IERC20)225"
							},
							{
								"astId": 457,
								"contract": "ARY/SwapPro.sol:SwapPro",
								"label": "mery",
								"offset": 0,
								"slot": "12",
								"type": "t_contract(IERC20)225"
							},
							{
								"astId": 460,
								"contract": "ARY/SwapPro.sol:SwapPro",
								"label": "wcro",
								"offset": 0,
								"slot": "13",
								"type": "t_contract(IWCRO)393"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_array(t_address)dyn_storage": {
								"base": "t_address",
								"encoding": "dynamic_array",
								"label": "address[]",
								"numberOfBytes": "32"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_contract(IDEXFactory)278": {
								"encoding": "inplace",
								"label": "contract IDEXFactory",
								"numberOfBytes": "20"
							},
							"t_contract(IDEXRouter)382": {
								"encoding": "inplace",
								"label": "contract IDEXRouter",
								"numberOfBytes": "20"
							},
							"t_contract(IERC20)225": {
								"encoding": "inplace",
								"label": "contract IERC20",
								"numberOfBytes": "20"
							},
							"t_contract(IWCRO)393": {
								"encoding": "inplace",
								"label": "contract IWCRO",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_bool)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => bool)",
								"numberOfBytes": "32",
								"value": "t_bool"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"@openzeppelin/contracts/access/Ownable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
					"exportedSymbols": {
						"Context": [
							255
						],
						"Ownable": [
							147
						]
					},
					"id": 148,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "102:24:0"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
							"file": "../utils/Context.sol",
							"id": 3,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 148,
							"sourceUnit": 256,
							"src": "128:45:0",
							"symbolAliases": [
								{
									"foreign": {
										"id": 2,
										"name": "Context",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 255,
										"src": "136:7:0",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 5,
										"name": "Context",
										"nameLocations": [
											"692:7:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 255,
										"src": "692:7:0"
									},
									"id": 6,
									"nodeType": "InheritanceSpecifier",
									"src": "692:7:0"
								}
							],
							"canonicalName": "Ownable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 4,
								"nodeType": "StructuredDocumentation",
								"src": "175:487:0",
								"text": " @dev Contract module which provides a basic access control mechanism, where\n there is an account (an owner) that can be granted exclusive access to\n specific functions.\n The initial owner is set to the address provided by the deployer. This can\n later be changed with {transferOwnership}.\n This module is used through inheritance. It will make available the modifier\n `onlyOwner`, which can be applied to your functions to restrict their use to\n the owner."
							},
							"fullyImplemented": true,
							"id": 147,
							"linearizedBaseContracts": [
								147,
								255
							],
							"name": "Ownable",
							"nameLocation": "681:7:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 8,
									"mutability": "mutable",
									"name": "_owner",
									"nameLocation": "722:6:0",
									"nodeType": "VariableDeclaration",
									"scope": 147,
									"src": "706:22:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 7,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "706:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "private"
								},
								{
									"documentation": {
										"id": 9,
										"nodeType": "StructuredDocumentation",
										"src": "735:85:0",
										"text": " @dev The caller account is not authorized to perform an operation."
									},
									"errorSelector": "118cdaa7",
									"id": 13,
									"name": "OwnableUnauthorizedAccount",
									"nameLocation": "831:26:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 12,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 11,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "866:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 13,
												"src": "858:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 10,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "858:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "857:17:0"
									},
									"src": "825:50:0"
								},
								{
									"documentation": {
										"id": 14,
										"nodeType": "StructuredDocumentation",
										"src": "881:82:0",
										"text": " @dev The owner is not a valid owner account. (eg. `address(0)`)"
									},
									"errorSelector": "1e4fbdf7",
									"id": 18,
									"name": "OwnableInvalidOwner",
									"nameLocation": "974:19:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 17,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 16,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1002:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 18,
												"src": "994:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 15,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "994:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "993:15:0"
									},
									"src": "968:41:0"
								},
								{
									"anonymous": false,
									"eventSelector": "8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
									"id": 24,
									"name": "OwnershipTransferred",
									"nameLocation": "1021:20:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 23,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 20,
												"indexed": true,
												"mutability": "mutable",
												"name": "previousOwner",
												"nameLocation": "1058:13:0",
												"nodeType": "VariableDeclaration",
												"scope": 24,
												"src": "1042:29:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 19,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1042:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 22,
												"indexed": true,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "1089:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 24,
												"src": "1073:24:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 21,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1073:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1041:57:0"
									},
									"src": "1015:84:0"
								},
								{
									"body": {
										"id": 49,
										"nodeType": "Block",
										"src": "1259:153:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 35,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 30,
														"name": "initialOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 27,
														"src": "1273:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 33,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1297:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 32,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "1289:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 31,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "1289:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 34,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1289:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1273:26:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 44,
												"nodeType": "IfStatement",
												"src": "1269:95:0",
												"trueBody": {
													"id": 43,
													"nodeType": "Block",
													"src": "1301:63:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 39,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "1350:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 38,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "1342:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 37,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "1342:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 40,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1342:10:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 36,
																	"name": "OwnableInvalidOwner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 18,
																	"src": "1322:19:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 41,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1322:31:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 42,
															"nodeType": "RevertStatement",
															"src": "1315:38:0"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 46,
															"name": "initialOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 27,
															"src": "1392:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 45,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 146,
														"src": "1373:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 47,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1373:32:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 48,
												"nodeType": "ExpressionStatement",
												"src": "1373:32:0"
											}
										]
									},
									"documentation": {
										"id": 25,
										"nodeType": "StructuredDocumentation",
										"src": "1105:115:0",
										"text": " @dev Initializes the contract setting the address provided by the deployer as the initial owner."
									},
									"id": 50,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 28,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 27,
												"mutability": "mutable",
												"name": "initialOwner",
												"nameLocation": "1245:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 50,
												"src": "1237:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 26,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1237:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1236:22:0"
									},
									"returnParameters": {
										"id": 29,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1259:0:0"
									},
									"scope": 147,
									"src": "1225:187:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 57,
										"nodeType": "Block",
										"src": "1521:41:0",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 53,
														"name": "_checkOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 84,
														"src": "1531:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$__$",
															"typeString": "function () view"
														}
													},
													"id": 54,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1531:13:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 55,
												"nodeType": "ExpressionStatement",
												"src": "1531:13:0"
											},
											{
												"id": 56,
												"nodeType": "PlaceholderStatement",
												"src": "1554:1:0"
											}
										]
									},
									"documentation": {
										"id": 51,
										"nodeType": "StructuredDocumentation",
										"src": "1418:77:0",
										"text": " @dev Throws if called by any account other than the owner."
									},
									"id": 58,
									"name": "onlyOwner",
									"nameLocation": "1509:9:0",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 52,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1518:2:0"
									},
									"src": "1500:62:0",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 66,
										"nodeType": "Block",
										"src": "1693:30:0",
										"statements": [
											{
												"expression": {
													"id": 64,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 8,
													"src": "1710:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 63,
												"id": 65,
												"nodeType": "Return",
												"src": "1703:13:0"
											}
										]
									},
									"documentation": {
										"id": 59,
										"nodeType": "StructuredDocumentation",
										"src": "1568:65:0",
										"text": " @dev Returns the address of the current owner."
									},
									"functionSelector": "8da5cb5b",
									"id": 67,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "owner",
									"nameLocation": "1647:5:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 60,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1652:2:0"
									},
									"returnParameters": {
										"id": 63,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 62,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 67,
												"src": "1684:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 61,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1684:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1683:9:0"
									},
									"scope": 147,
									"src": "1638:85:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 83,
										"nodeType": "Block",
										"src": "1841:117:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 75,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 71,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 67,
															"src": "1855:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																"typeString": "function () view returns (address)"
															}
														},
														"id": 72,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1855:7:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 73,
															"name": "_msgSender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 237,
															"src": "1866:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																"typeString": "function () view returns (address)"
															}
														},
														"id": 74,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1866:12:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1855:23:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 82,
												"nodeType": "IfStatement",
												"src": "1851:101:0",
												"trueBody": {
													"id": 81,
													"nodeType": "Block",
													"src": "1880:72:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 77,
																			"name": "_msgSender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 237,
																			"src": "1928:10:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																				"typeString": "function () view returns (address)"
																			}
																		},
																		"id": 78,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1928:12:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 76,
																	"name": "OwnableUnauthorizedAccount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 13,
																	"src": "1901:26:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 79,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1901:40:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 80,
															"nodeType": "RevertStatement",
															"src": "1894:47:0"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 68,
										"nodeType": "StructuredDocumentation",
										"src": "1729:62:0",
										"text": " @dev Throws if the sender is not the owner."
									},
									"id": 84,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkOwner",
									"nameLocation": "1805:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 69,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1816:2:0"
									},
									"returnParameters": {
										"id": 70,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1841:0:0"
									},
									"scope": 147,
									"src": "1796:162:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 97,
										"nodeType": "Block",
										"src": "2347:47:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 93,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2384:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 92,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "2376:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 91,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "2376:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 94,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2376:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 90,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 146,
														"src": "2357:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 95,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2357:30:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 96,
												"nodeType": "ExpressionStatement",
												"src": "2357:30:0"
											}
										]
									},
									"documentation": {
										"id": 85,
										"nodeType": "StructuredDocumentation",
										"src": "1964:324:0",
										"text": " @dev Leaves the contract without owner. It will not be possible to call\n `onlyOwner` functions. Can only be called by the current owner.\n NOTE: Renouncing ownership will leave the contract without an owner,\n thereby disabling any functionality that is only available to the owner."
									},
									"functionSelector": "715018a6",
									"id": 98,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 88,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 87,
												"name": "onlyOwner",
												"nameLocations": [
													"2337:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "2337:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "2337:9:0"
										}
									],
									"name": "renounceOwnership",
									"nameLocation": "2302:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 86,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2319:2:0"
									},
									"returnParameters": {
										"id": 89,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2347:0:0"
									},
									"scope": 147,
									"src": "2293:101:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 125,
										"nodeType": "Block",
										"src": "2613:145:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 111,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 106,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 101,
														"src": "2627:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 109,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2647:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 108,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "2639:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 107,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "2639:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 110,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2639:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2627:22:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 120,
												"nodeType": "IfStatement",
												"src": "2623:91:0",
												"trueBody": {
													"id": 119,
													"nodeType": "Block",
													"src": "2651:63:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 115,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "2700:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 114,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "2692:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 113,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "2692:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 116,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "2692:10:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 112,
																	"name": "OwnableInvalidOwner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 18,
																	"src": "2672:19:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 117,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2672:31:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 118,
															"nodeType": "RevertStatement",
															"src": "2665:38:0"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 122,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 101,
															"src": "2742:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 121,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 146,
														"src": "2723:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 123,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2723:28:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 124,
												"nodeType": "ExpressionStatement",
												"src": "2723:28:0"
											}
										]
									},
									"documentation": {
										"id": 99,
										"nodeType": "StructuredDocumentation",
										"src": "2400:138:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Can only be called by the current owner."
									},
									"functionSelector": "f2fde38b",
									"id": 126,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 104,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 103,
												"name": "onlyOwner",
												"nameLocations": [
													"2603:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "2603:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "2603:9:0"
										}
									],
									"name": "transferOwnership",
									"nameLocation": "2552:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 102,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 101,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "2578:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 126,
												"src": "2570:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 100,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2570:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2569:18:0"
									},
									"returnParameters": {
										"id": 105,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2613:0:0"
									},
									"scope": 147,
									"src": "2543:215:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 145,
										"nodeType": "Block",
										"src": "2975:124:0",
										"statements": [
											{
												"assignments": [
													133
												],
												"declarations": [
													{
														"constant": false,
														"id": 133,
														"mutability": "mutable",
														"name": "oldOwner",
														"nameLocation": "2993:8:0",
														"nodeType": "VariableDeclaration",
														"scope": 145,
														"src": "2985:16:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 132,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "2985:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 135,
												"initialValue": {
													"id": 134,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 8,
													"src": "3004:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2985:25:0"
											},
											{
												"expression": {
													"id": 138,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 136,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 8,
														"src": "3020:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 137,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 129,
														"src": "3029:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "3020:17:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 139,
												"nodeType": "ExpressionStatement",
												"src": "3020:17:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 141,
															"name": "oldOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 133,
															"src": "3073:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 142,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 129,
															"src": "3083:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 140,
														"name": "OwnershipTransferred",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 24,
														"src": "3052:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 143,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3052:40:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 144,
												"nodeType": "EmitStatement",
												"src": "3047:45:0"
											}
										]
									},
									"documentation": {
										"id": 127,
										"nodeType": "StructuredDocumentation",
										"src": "2764:143:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Internal function without access restriction."
									},
									"id": 146,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transferOwnership",
									"nameLocation": "2921:18:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 130,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 129,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "2948:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 146,
												"src": "2940:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 128,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2940:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2939:18:0"
									},
									"returnParameters": {
										"id": 131,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2975:0:0"
									},
									"scope": 147,
									"src": "2912:187:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 148,
							"src": "663:2438:0",
							"usedErrors": [
								13,
								18
							],
							"usedEvents": [
								24
							]
						}
					],
					"src": "102:3000:0"
				},
				"id": 0
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
					"exportedSymbols": {
						"IERC20": [
							225
						]
					},
					"id": 226,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 149,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "106:24:1"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 150,
								"nodeType": "StructuredDocumentation",
								"src": "132:71:1",
								"text": " @dev Interface of the ERC-20 standard as defined in the ERC."
							},
							"fullyImplemented": false,
							"id": 225,
							"linearizedBaseContracts": [
								225
							],
							"name": "IERC20",
							"nameLocation": "214:6:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 151,
										"nodeType": "StructuredDocumentation",
										"src": "227:158:1",
										"text": " @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."
									},
									"eventSelector": "ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
									"id": 159,
									"name": "Transfer",
									"nameLocation": "396:8:1",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 158,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 153,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "421:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 159,
												"src": "405:20:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 152,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "405:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 155,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "443:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 159,
												"src": "427:18:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 154,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "427:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 157,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "455:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 159,
												"src": "447:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 156,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "447:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "404:57:1"
									},
									"src": "390:72:1"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 160,
										"nodeType": "StructuredDocumentation",
										"src": "468:148:1",
										"text": " @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."
									},
									"eventSelector": "8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925",
									"id": 168,
									"name": "Approval",
									"nameLocation": "627:8:1",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 167,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 162,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "652:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 168,
												"src": "636:21:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 161,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "636:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 164,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "675:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 168,
												"src": "659:23:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 163,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "659:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 166,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "692:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 168,
												"src": "684:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 165,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "684:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "635:63:1"
									},
									"src": "621:78:1"
								},
								{
									"documentation": {
										"id": 169,
										"nodeType": "StructuredDocumentation",
										"src": "705:65:1",
										"text": " @dev Returns the value of tokens in existence."
									},
									"functionSelector": "18160ddd",
									"id": 174,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "784:11:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 170,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "795:2:1"
									},
									"returnParameters": {
										"id": 173,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 172,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 174,
												"src": "821:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 171,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "821:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "820:9:1"
									},
									"scope": 225,
									"src": "775:55:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 175,
										"nodeType": "StructuredDocumentation",
										"src": "836:71:1",
										"text": " @dev Returns the value of tokens owned by `account`."
									},
									"functionSelector": "70a08231",
									"id": 182,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "921:9:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 178,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 177,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "939:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 182,
												"src": "931:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 176,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "931:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "930:17:1"
									},
									"returnParameters": {
										"id": 181,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 180,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 182,
												"src": "971:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 179,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "971:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "970:9:1"
									},
									"scope": 225,
									"src": "912:68:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 183,
										"nodeType": "StructuredDocumentation",
										"src": "986:213:1",
										"text": " @dev Moves a `value` amount of tokens from the caller's account to `to`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "a9059cbb",
									"id": 192,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "1213:8:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 188,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 185,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1230:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 192,
												"src": "1222:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 184,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1222:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 187,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1242:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 192,
												"src": "1234:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 186,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1234:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1221:27:1"
									},
									"returnParameters": {
										"id": 191,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 190,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 192,
												"src": "1267:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 189,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1267:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1266:6:1"
									},
									"scope": 225,
									"src": "1204:69:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 193,
										"nodeType": "StructuredDocumentation",
										"src": "1279:264:1",
										"text": " @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."
									},
									"functionSelector": "dd62ed3e",
									"id": 202,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "1557:9:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 198,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 195,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1575:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 202,
												"src": "1567:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 194,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1567:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 197,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1590:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 202,
												"src": "1582:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 196,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1582:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1566:32:1"
									},
									"returnParameters": {
										"id": 201,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 200,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 202,
												"src": "1622:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 199,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1622:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1621:9:1"
									},
									"scope": 225,
									"src": "1548:83:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 203,
										"nodeType": "StructuredDocumentation",
										"src": "1637:667:1",
										"text": " @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 212,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "2318:7:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 208,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 205,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2334:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 212,
												"src": "2326:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 204,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2326:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 207,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2351:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 212,
												"src": "2343:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 206,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2343:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2325:32:1"
									},
									"returnParameters": {
										"id": 211,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 210,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 212,
												"src": "2376:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 209,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2376:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2375:6:1"
									},
									"scope": 225,
									"src": "2309:73:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 213,
										"nodeType": "StructuredDocumentation",
										"src": "2388:297:1",
										"text": " @dev Moves a `value` amount of tokens from `from` to `to` using the\n allowance mechanism. `value` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 224,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "2699:12:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 220,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 215,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2720:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 224,
												"src": "2712:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 214,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2712:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 217,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2734:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 224,
												"src": "2726:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 216,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2726:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 219,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2746:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 224,
												"src": "2738:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 218,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2738:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2711:41:1"
									},
									"returnParameters": {
										"id": 223,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 222,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 224,
												"src": "2771:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 221,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2771:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2770:6:1"
									},
									"scope": 225,
									"src": "2690:87:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 226,
							"src": "204:2575:1",
							"usedErrors": [],
							"usedEvents": [
								159,
								168
							]
						}
					],
					"src": "106:2674:1"
				},
				"id": 1
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
					"exportedSymbols": {
						"Context": [
							255
						]
					},
					"id": 256,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 227,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "101:24:2"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "Context",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 228,
								"nodeType": "StructuredDocumentation",
								"src": "127:496:2",
								"text": " @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."
							},
							"fullyImplemented": true,
							"id": 255,
							"linearizedBaseContracts": [
								255
							],
							"name": "Context",
							"nameLocation": "642:7:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 236,
										"nodeType": "Block",
										"src": "718:34:2",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 233,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "735:3:2",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 234,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "739:6:2",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "735:10:2",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 232,
												"id": 235,
												"nodeType": "Return",
												"src": "728:17:2"
											}
										]
									},
									"id": 237,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nameLocation": "665:10:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 229,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "675:2:2"
									},
									"returnParameters": {
										"id": 232,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 231,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 237,
												"src": "709:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 230,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "709:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "708:9:2"
									},
									"scope": 255,
									"src": "656:96:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 245,
										"nodeType": "Block",
										"src": "825:32:2",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 242,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "842:3:2",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 243,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "846:4:2",
													"memberName": "data",
													"nodeType": "MemberAccess",
													"src": "842:8:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 241,
												"id": 244,
												"nodeType": "Return",
												"src": "835:15:2"
											}
										]
									},
									"id": 246,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nameLocation": "767:8:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 238,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "775:2:2"
									},
									"returnParameters": {
										"id": 241,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 240,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 246,
												"src": "809:14:2",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 239,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "809:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "808:16:2"
									},
									"scope": 255,
									"src": "758:99:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 253,
										"nodeType": "Block",
										"src": "935:25:2",
										"statements": [
											{
												"expression": {
													"hexValue": "30",
													"id": 251,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "952:1:2",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"functionReturnParameters": 250,
												"id": 252,
												"nodeType": "Return",
												"src": "945:8:2"
											}
										]
									},
									"id": 254,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_contextSuffixLength",
									"nameLocation": "872:20:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 247,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "892:2:2"
									},
									"returnParameters": {
										"id": 250,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 249,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 254,
												"src": "926:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 248,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "926:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "925:9:2"
									},
									"scope": 255,
									"src": "863:97:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 256,
							"src": "624:338:2",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "101:862:2"
				},
				"id": 2
			},
			"ARY/SwapPro.sol": {
				"ast": {
					"absolutePath": "ARY/SwapPro.sol",
					"exportedSymbols": {
						"Context": [
							255
						],
						"IDEXFactory": [
							278
						],
						"IDEXRouter": [
							382
						],
						"IERC20": [
							225
						],
						"IPair": [
							298
						],
						"IWCRO": [
							393
						],
						"Ownable": [
							147
						],
						"SwapPro": [
							1308
						],
						"Volume": [
							398
						]
					},
					"id": 1309,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 257,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "32:23:3"
						},
						{
							"absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
							"file": "@openzeppelin/contracts/access/Ownable.sol",
							"id": 258,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1309,
							"sourceUnit": 148,
							"src": "57:52:3",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"id": 259,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1309,
							"sourceUnit": 226,
							"src": "111:56:3",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IDEXFactory",
							"contractDependencies": [],
							"contractKind": "interface",
							"fullyImplemented": false,
							"id": 278,
							"linearizedBaseContracts": [
								278
							],
							"name": "IDEXFactory",
							"nameLocation": "181:11:3",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"functionSelector": "c9c65396",
									"id": 268,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "createPair",
									"nameLocation": "209:10:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 264,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 261,
												"mutability": "mutable",
												"name": "tokenA",
												"nameLocation": "238:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 268,
												"src": "230:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 260,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "230:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 263,
												"mutability": "mutable",
												"name": "tokenB",
												"nameLocation": "263:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 268,
												"src": "255:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 262,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "255:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "219:57:3"
									},
									"returnParameters": {
										"id": 267,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 266,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 268,
												"src": "295:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 265,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "295:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "294:9:3"
									},
									"scope": 278,
									"src": "200:104:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "e6a43905",
									"id": 277,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getPair",
									"nameLocation": "321:7:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 273,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 270,
												"mutability": "mutable",
												"name": "tokenA",
												"nameLocation": "347:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 277,
												"src": "339:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 269,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "339:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 272,
												"mutability": "mutable",
												"name": "tokenB",
												"nameLocation": "372:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 277,
												"src": "364:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 271,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "364:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "328:57:3"
									},
									"returnParameters": {
										"id": 276,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 275,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 277,
												"src": "404:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 274,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "404:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "403:9:3"
									},
									"scope": 278,
									"src": "312:101:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1309,
							"src": "171:245:3",
							"usedErrors": [],
							"usedEvents": []
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IPair",
							"contractDependencies": [],
							"contractKind": "interface",
							"fullyImplemented": false,
							"id": 298,
							"linearizedBaseContracts": [
								298
							],
							"name": "IPair",
							"nameLocation": "430:5:3",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"functionSelector": "0dfe1681",
									"id": 283,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "token0",
									"nameLocation": "511:6:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 279,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "517:2:3"
									},
									"returnParameters": {
										"id": 282,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 281,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 283,
												"src": "543:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 280,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "543:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "542:9:3"
									},
									"scope": 298,
									"src": "502:50:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "d21220a7",
									"id": 288,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "token1",
									"nameLocation": "567:6:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 284,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "573:2:3"
									},
									"returnParameters": {
										"id": 287,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 286,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 288,
												"src": "599:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 285,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "599:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "598:9:3"
									},
									"scope": 298,
									"src": "558:50:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "0902f1ac",
									"id": 297,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getReserves",
									"nameLocation": "623:11:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 289,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "634:2:3"
									},
									"returnParameters": {
										"id": 296,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 291,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 297,
												"src": "660:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint112",
													"typeString": "uint112"
												},
												"typeName": {
													"id": 290,
													"name": "uint112",
													"nodeType": "ElementaryTypeName",
													"src": "660:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint112",
														"typeString": "uint112"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 293,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 297,
												"src": "669:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint112",
													"typeString": "uint112"
												},
												"typeName": {
													"id": 292,
													"name": "uint112",
													"nodeType": "ElementaryTypeName",
													"src": "669:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint112",
														"typeString": "uint112"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 295,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 297,
												"src": "678:6:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint32",
													"typeString": "uint32"
												},
												"typeName": {
													"id": 294,
													"name": "uint32",
													"nodeType": "ElementaryTypeName",
													"src": "678:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint32",
														"typeString": "uint32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "659:26:3"
									},
									"scope": 298,
									"src": "614:72:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1309,
							"src": "420:269:3",
							"usedErrors": [],
							"usedEvents": []
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IDEXRouter",
							"contractDependencies": [],
							"contractKind": "interface",
							"fullyImplemented": false,
							"id": 382,
							"linearizedBaseContracts": [
								382
							],
							"name": "IDEXRouter",
							"nameLocation": "703:10:3",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"functionSelector": "c45a0155",
									"id": 303,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "factory",
									"nameLocation": "730:7:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 299,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "737:2:3"
									},
									"returnParameters": {
										"id": 302,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 301,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 303,
												"src": "763:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 300,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "763:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "762:9:3"
									},
									"scope": 382,
									"src": "721:51:3",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "ad5c4648",
									"id": 308,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "WETH",
									"nameLocation": "787:4:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 304,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "791:2:3"
									},
									"returnParameters": {
										"id": 307,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 306,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 308,
												"src": "817:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 305,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "817:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "816:9:3"
									},
									"scope": 382,
									"src": "778:48:3",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "5c11d795",
									"id": 322,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "swapExactTokensForTokensSupportingFeeOnTransferTokens",
									"nameLocation": "843:53:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 320,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 310,
												"mutability": "mutable",
												"name": "amountIn",
												"nameLocation": "912:8:3",
												"nodeType": "VariableDeclaration",
												"scope": 322,
												"src": "907:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 309,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "907:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 312,
												"mutability": "mutable",
												"name": "amountOutMin",
												"nameLocation": "936:12:3",
												"nodeType": "VariableDeclaration",
												"scope": 322,
												"src": "931:17:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 311,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "931:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 315,
												"mutability": "mutable",
												"name": "path",
												"nameLocation": "978:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 322,
												"src": "959:23:3",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
													"typeString": "address[]"
												},
												"typeName": {
													"baseType": {
														"id": 313,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "959:7:3",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 314,
													"nodeType": "ArrayTypeName",
													"src": "959:9:3",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
														"typeString": "address[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 317,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1001:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 322,
												"src": "993:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 316,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "993:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 319,
												"mutability": "mutable",
												"name": "deadline",
												"nameLocation": "1019:8:3",
												"nodeType": "VariableDeclaration",
												"scope": 322,
												"src": "1014:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 318,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1014:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "896:138:3"
									},
									"returnParameters": {
										"id": 321,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1043:0:3"
									},
									"scope": 382,
									"src": "834:210:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "b6f9de95",
									"id": 334,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "swapExactETHForTokensSupportingFeeOnTransferTokens",
									"nameLocation": "1061:50:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 332,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 324,
												"mutability": "mutable",
												"name": "amountOutMin",
												"nameLocation": "1127:12:3",
												"nodeType": "VariableDeclaration",
												"scope": 334,
												"src": "1122:17:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 323,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1122:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 327,
												"mutability": "mutable",
												"name": "path",
												"nameLocation": "1169:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 334,
												"src": "1150:23:3",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
													"typeString": "address[]"
												},
												"typeName": {
													"baseType": {
														"id": 325,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "1150:7:3",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 326,
													"nodeType": "ArrayTypeName",
													"src": "1150:9:3",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
														"typeString": "address[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 329,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1192:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 334,
												"src": "1184:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 328,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1184:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 331,
												"mutability": "mutable",
												"name": "deadline",
												"nameLocation": "1210:8:3",
												"nodeType": "VariableDeclaration",
												"scope": 334,
												"src": "1205:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 330,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1205:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1111:114:3"
									},
									"returnParameters": {
										"id": 333,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1242:0:3"
									},
									"scope": 382,
									"src": "1052:191:3",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "791ac947",
									"id": 348,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "swapExactTokensForETHSupportingFeeOnTransferTokens",
									"nameLocation": "1260:50:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 346,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 336,
												"mutability": "mutable",
												"name": "amountIn",
												"nameLocation": "1326:8:3",
												"nodeType": "VariableDeclaration",
												"scope": 348,
												"src": "1321:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 335,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1321:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 338,
												"mutability": "mutable",
												"name": "amountOutMin",
												"nameLocation": "1350:12:3",
												"nodeType": "VariableDeclaration",
												"scope": 348,
												"src": "1345:17:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 337,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1345:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 341,
												"mutability": "mutable",
												"name": "path",
												"nameLocation": "1392:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 348,
												"src": "1373:23:3",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
													"typeString": "address[]"
												},
												"typeName": {
													"baseType": {
														"id": 339,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "1373:7:3",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 340,
													"nodeType": "ArrayTypeName",
													"src": "1373:9:3",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
														"typeString": "address[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 343,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1415:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 348,
												"src": "1407:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 342,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1407:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 345,
												"mutability": "mutable",
												"name": "deadline",
												"nameLocation": "1433:8:3",
												"nodeType": "VariableDeclaration",
												"scope": 348,
												"src": "1428:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 344,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1428:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1310:138:3"
									},
									"returnParameters": {
										"id": 347,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1457:0:3"
									},
									"scope": 382,
									"src": "1251:207:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "1f00ca74",
									"id": 359,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getAmountsIn",
									"nameLocation": "1475:12:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 354,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 350,
												"mutability": "mutable",
												"name": "amountOut",
												"nameLocation": "1506:9:3",
												"nodeType": "VariableDeclaration",
												"scope": 359,
												"src": "1498:17:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 349,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1498:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 353,
												"mutability": "mutable",
												"name": "path",
												"nameLocation": "1545:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 359,
												"src": "1526:23:3",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
													"typeString": "address[]"
												},
												"typeName": {
													"baseType": {
														"id": 351,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "1526:7:3",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 352,
													"nodeType": "ArrayTypeName",
													"src": "1526:9:3",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
														"typeString": "address[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1487:69:3"
									},
									"returnParameters": {
										"id": 358,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 357,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 359,
												"src": "1580:16:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 355,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "1580:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 356,
													"nodeType": "ArrayTypeName",
													"src": "1580:9:3",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1579:18:3"
									},
									"scope": 382,
									"src": "1466:132:3",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "054d50d4",
									"id": 370,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getAmountOut",
									"nameLocation": "1615:12:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 366,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 361,
												"mutability": "mutable",
												"name": "amountIn",
												"nameLocation": "1646:8:3",
												"nodeType": "VariableDeclaration",
												"scope": 370,
												"src": "1638:16:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 360,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1638:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 363,
												"mutability": "mutable",
												"name": "reserveIn",
												"nameLocation": "1673:9:3",
												"nodeType": "VariableDeclaration",
												"scope": 370,
												"src": "1665:17:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 362,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1665:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 365,
												"mutability": "mutable",
												"name": "reserveOut",
												"nameLocation": "1701:10:3",
												"nodeType": "VariableDeclaration",
												"scope": 370,
												"src": "1693:18:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 364,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1693:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1627:91:3"
									},
									"returnParameters": {
										"id": 369,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 368,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 370,
												"src": "1742:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 367,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1742:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1741:9:3"
									},
									"scope": 382,
									"src": "1606:145:3",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "d06ca61f",
									"id": 381,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getAmountsOut",
									"nameLocation": "1769:13:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 376,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 372,
												"mutability": "mutable",
												"name": "amountIn",
												"nameLocation": "1801:8:3",
												"nodeType": "VariableDeclaration",
												"scope": 381,
												"src": "1793:16:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 371,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1793:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 375,
												"mutability": "mutable",
												"name": "path",
												"nameLocation": "1839:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 381,
												"src": "1820:23:3",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
													"typeString": "address[]"
												},
												"typeName": {
													"baseType": {
														"id": 373,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "1820:7:3",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 374,
													"nodeType": "ArrayTypeName",
													"src": "1820:9:3",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
														"typeString": "address[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1782:68:3"
									},
									"returnParameters": {
										"id": 380,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 379,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 381,
												"src": "1874:16:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 377,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "1874:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 378,
													"nodeType": "ArrayTypeName",
													"src": "1874:9:3",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1873:18:3"
									},
									"scope": 382,
									"src": "1760:132:3",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1309,
							"src": "693:1202:3",
							"usedErrors": [],
							"usedEvents": []
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 383,
										"name": "IERC20",
										"nameLocations": [
											"1918:6:3"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 225,
										"src": "1918:6:3"
									},
									"id": 384,
									"nodeType": "InheritanceSpecifier",
									"src": "1918:6:3"
								}
							],
							"canonicalName": "IWCRO",
							"contractDependencies": [],
							"contractKind": "interface",
							"fullyImplemented": false,
							"id": 393,
							"linearizedBaseContracts": [
								393,
								225
							],
							"name": "IWCRO",
							"nameLocation": "1909:5:3",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"functionSelector": "d0e30db0",
									"id": 387,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "deposit",
									"nameLocation": "1941:7:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 385,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1949:2:3"
									},
									"returnParameters": {
										"id": 386,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1968:0:3"
									},
									"scope": 393,
									"src": "1932:37:3",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "2e1a7d4d",
									"id": 392,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "withdraw",
									"nameLocation": "1990:8:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 390,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 389,
												"mutability": "mutable",
												"name": "wad",
												"nameLocation": "2018:3:3",
												"nodeType": "VariableDeclaration",
												"scope": 392,
												"src": "2010:11:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 388,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2010:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1999:29:3"
									},
									"returnParameters": {
										"id": 391,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2037:0:3"
									},
									"scope": 393,
									"src": "1981:57:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1309,
							"src": "1899:142:3",
							"usedErrors": [],
							"usedEvents": [
								159,
								168
							]
						},
						{
							"canonicalName": "Volume",
							"id": 398,
							"members": [
								{
									"constant": false,
									"id": 395,
									"mutability": "mutable",
									"name": "user",
									"nameLocation": "2074:4:3",
									"nodeType": "VariableDeclaration",
									"scope": 398,
									"src": "2066:12:3",
									"stateVariable": false,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 394,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "2066:7:3",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 397,
									"mutability": "mutable",
									"name": "volume",
									"nameLocation": "2093:6:3",
									"nodeType": "VariableDeclaration",
									"scope": 398,
									"src": "2085:14:3",
									"stateVariable": false,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 396,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "2085:7:3",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "internal"
								}
							],
							"name": "Volume",
							"nameLocation": "2052:6:3",
							"nodeType": "StructDefinition",
							"scope": 1309,
							"src": "2045:58:3",
							"visibility": "public"
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 399,
										"name": "Ownable",
										"nameLocations": [
											"2127:7:3"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 147,
										"src": "2127:7:3"
									},
									"id": 400,
									"nodeType": "InheritanceSpecifier",
									"src": "2127:7:3"
								}
							],
							"canonicalName": "SwapPro",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 1308,
							"linearizedBaseContracts": [
								1308,
								147,
								255
							],
							"name": "SwapPro",
							"nameLocation": "2116:7:3",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": true,
									"functionSelector": "a37b9e7f",
									"id": 403,
									"mutability": "constant",
									"name": "CUSDC",
									"nameLocation": "2166:5:3",
									"nodeType": "VariableDeclaration",
									"scope": 1308,
									"src": "2142:74:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 401,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "2142:7:3",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"value": {
										"hexValue": "307863323132323332343943413238333937423442363534316466466145634335333942664630633539",
										"id": 402,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "2174:42:3",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										},
										"value": "0xc21223249CA28397B4B6541dfFaEcC539BfF0c59"
									},
									"visibility": "public"
								},
								{
									"constant": true,
									"functionSelector": "6504fbad",
									"id": 406,
									"mutability": "constant",
									"name": "CUSDT",
									"nameLocation": "2247:5:3",
									"nodeType": "VariableDeclaration",
									"scope": 1308,
									"src": "2223:74:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 404,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "2223:7:3",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"value": {
										"hexValue": "307836366534323863336636376136383837383536326537394130323334633146383363323038373730",
										"id": 405,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "2255:42:3",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										},
										"value": "0x66e428c3f67a68878562e79A0234c1F83c208770"
									},
									"visibility": "public"
								},
								{
									"constant": true,
									"functionSelector": "1d470cb1",
									"id": 409,
									"mutability": "constant",
									"name": "WCRO",
									"nameLocation": "2328:4:3",
									"nodeType": "VariableDeclaration",
									"scope": 1308,
									"src": "2304:73:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 407,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "2304:7:3",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"value": {
										"hexValue": "307835433746384135373064353738454438344536336664464137623165453732644561653141453233",
										"id": 408,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "2335:42:3",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										},
										"value": "0x5C7F8A570d578ED84E63fdFA7b1eE72dEae1AE23"
									},
									"visibility": "public"
								},
								{
									"constant": true,
									"functionSelector": "afe43b94",
									"id": 412,
									"mutability": "constant",
									"name": "ARY",
									"nameLocation": "2408:3:3",
									"nodeType": "VariableDeclaration",
									"scope": 1308,
									"src": "2384:72:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 410,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "2384:7:3",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"value": {
										"hexValue": "307834316263303236644142653937386263324641666541313835303435363531316361344230316263",
										"id": 411,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "2414:42:3",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										},
										"value": "0x41bc026dABe978bc2FAfeA1850456511ca4B01bc"
									},
									"visibility": "public"
								},
								{
									"constant": true,
									"functionSelector": "b0befe63",
									"id": 415,
									"mutability": "constant",
									"name": "MERY",
									"nameLocation": "2487:4:3",
									"nodeType": "VariableDeclaration",
									"scope": 1308,
									"src": "2463:73:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 413,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "2463:7:3",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"value": {
										"hexValue": "307833623431423237453734446433363643453237634233383964633738373744346531353136643464",
										"id": 414,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "2494:42:3",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										},
										"value": "0x3b41B27E74Dd366CE27cB389dc7877D4e1516d4d"
									},
									"visibility": "public"
								},
								{
									"constant": true,
									"functionSelector": "d7b7d3f3",
									"id": 418,
									"mutability": "constant",
									"name": "DEXROUTER",
									"nameLocation": "2567:9:3",
									"nodeType": "VariableDeclaration",
									"scope": 1308,
									"src": "2543:87:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 416,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "2543:7:3",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"value": {
										"hexValue": "307831343538363345623432436636323834374136436137383465363431364331363832623162324165",
										"id": 417,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "2588:42:3",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										},
										"value": "0x145863Eb42Cf62847A6Ca784e6416C1682b1b2Ae"
									},
									"visibility": "public"
								},
								{
									"constant": true,
									"functionSelector": "7c6f8fae",
									"id": 421,
									"mutability": "constant",
									"name": "DEXFACTORY",
									"nameLocation": "2661:10:3",
									"nodeType": "VariableDeclaration",
									"scope": 1308,
									"src": "2637:88:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 419,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "2637:7:3",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"value": {
										"hexValue": "307833423434423261313837613762333832343133314638646235613734313934443061343246633135",
										"id": 420,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "2683:42:3",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										},
										"value": "0x3B44B2a187a7b3824131F8db5a74194D0a42Fc15"
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "b3f00674",
									"id": 423,
									"mutability": "mutable",
									"name": "feeReceiver",
									"nameLocation": "2747:11:3",
									"nodeType": "VariableDeclaration",
									"scope": 1308,
									"src": "2732:26:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 422,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "2732:7:3",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "7fd6f15c",
									"id": 425,
									"mutability": "mutable",
									"name": "feePercent",
									"nameLocation": "2780:10:3",
									"nodeType": "VariableDeclaration",
									"scope": 1308,
									"src": "2765:25:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 424,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "2765:7:3",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "ac65334f",
									"id": 428,
									"mutability": "mutable",
									"name": "competition_started",
									"nameLocation": "2809:19:3",
									"nodeType": "VariableDeclaration",
									"scope": 1308,
									"src": "2797:39:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bool",
										"typeString": "bool"
									},
									"typeName": {
										"id": 426,
										"name": "bool",
										"nodeType": "ElementaryTypeName",
										"src": "2797:4:3",
										"typeDescriptions": {
											"typeIdentifier": "t_bool",
											"typeString": "bool"
										}
									},
									"value": {
										"hexValue": "66616c7365",
										"id": 427,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "bool",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "2831:5:3",
										"typeDescriptions": {
											"typeIdentifier": "t_bool",
											"typeString": "bool"
										},
										"value": "false"
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "a6769ef8",
									"id": 432,
									"mutability": "mutable",
									"name": "userVolume",
									"nameLocation": "2878:10:3",
									"nodeType": "VariableDeclaration",
									"scope": 1308,
									"src": "2843:45:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 431,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 429,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "2851:7:3",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "2843:27:3",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 430,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "2862:7:3",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 436,
									"mutability": "mutable",
									"name": "isExistAddress",
									"nameLocation": "2920:14:3",
									"nodeType": "VariableDeclaration",
									"scope": 1308,
									"src": "2895:39:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
										"typeString": "mapping(address => bool)"
									},
									"typeName": {
										"id": 435,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 433,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "2903:7:3",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "2895:24:3",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
											"typeString": "mapping(address => bool)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 434,
											"name": "bool",
											"nodeType": "ElementaryTypeName",
											"src": "2914:4:3",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											}
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"functionSelector": "edf26d9b",
									"id": 439,
									"mutability": "mutable",
									"name": "addresses",
									"nameLocation": "2958:9:3",
									"nodeType": "VariableDeclaration",
									"scope": 1308,
									"src": "2941:26:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_array$_t_address_$dyn_storage",
										"typeString": "address[]"
									},
									"typeName": {
										"baseType": {
											"id": 437,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "2941:7:3",
											"stateMutability": "nonpayable",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"id": 438,
										"nodeType": "ArrayTypeName",
										"src": "2941:9:3",
										"typeDescriptions": {
											"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
											"typeString": "address[]"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 442,
									"mutability": "mutable",
									"name": "factory",
									"nameLocation": "2988:7:3",
									"nodeType": "VariableDeclaration",
									"scope": 1308,
									"src": "2976:19:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_contract$_IDEXFactory_$278",
										"typeString": "contract IDEXFactory"
									},
									"typeName": {
										"id": 441,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 440,
											"name": "IDEXFactory",
											"nameLocations": [
												"2976:11:3"
											],
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 278,
											"src": "2976:11:3"
										},
										"referencedDeclaration": 278,
										"src": "2976:11:3",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IDEXFactory_$278",
											"typeString": "contract IDEXFactory"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 445,
									"mutability": "mutable",
									"name": "router",
									"nameLocation": "3013:6:3",
									"nodeType": "VariableDeclaration",
									"scope": 1308,
									"src": "3002:17:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_contract$_IDEXRouter_$382",
										"typeString": "contract IDEXRouter"
									},
									"typeName": {
										"id": 444,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 443,
											"name": "IDEXRouter",
											"nameLocations": [
												"3002:10:3"
											],
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 382,
											"src": "3002:10:3"
										},
										"referencedDeclaration": 382,
										"src": "3002:10:3",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IDEXRouter_$382",
											"typeString": "contract IDEXRouter"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 448,
									"mutability": "mutable",
									"name": "cusdc",
									"nameLocation": "3033:5:3",
									"nodeType": "VariableDeclaration",
									"scope": 1308,
									"src": "3026:12:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_contract$_IERC20_$225",
										"typeString": "contract IERC20"
									},
									"typeName": {
										"id": 447,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 446,
											"name": "IERC20",
											"nameLocations": [
												"3026:6:3"
											],
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 225,
											"src": "3026:6:3"
										},
										"referencedDeclaration": 225,
										"src": "3026:6:3",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IERC20_$225",
											"typeString": "contract IERC20"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 451,
									"mutability": "mutable",
									"name": "cusdt",
									"nameLocation": "3052:5:3",
									"nodeType": "VariableDeclaration",
									"scope": 1308,
									"src": "3045:12:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_contract$_IERC20_$225",
										"typeString": "contract IERC20"
									},
									"typeName": {
										"id": 450,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 449,
											"name": "IERC20",
											"nameLocations": [
												"3045:6:3"
											],
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 225,
											"src": "3045:6:3"
										},
										"referencedDeclaration": 225,
										"src": "3045:6:3",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IERC20_$225",
											"typeString": "contract IERC20"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 454,
									"mutability": "mutable",
									"name": "ary",
									"nameLocation": "3071:3:3",
									"nodeType": "VariableDeclaration",
									"scope": 1308,
									"src": "3064:10:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_contract$_IERC20_$225",
										"typeString": "contract IERC20"
									},
									"typeName": {
										"id": 453,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 452,
											"name": "IERC20",
											"nameLocations": [
												"3064:6:3"
											],
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 225,
											"src": "3064:6:3"
										},
										"referencedDeclaration": 225,
										"src": "3064:6:3",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IERC20_$225",
											"typeString": "contract IERC20"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 457,
									"mutability": "mutable",
									"name": "mery",
									"nameLocation": "3088:4:3",
									"nodeType": "VariableDeclaration",
									"scope": 1308,
									"src": "3081:11:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_contract$_IERC20_$225",
										"typeString": "contract IERC20"
									},
									"typeName": {
										"id": 456,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 455,
											"name": "IERC20",
											"nameLocations": [
												"3081:6:3"
											],
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 225,
											"src": "3081:6:3"
										},
										"referencedDeclaration": 225,
										"src": "3081:6:3",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IERC20_$225",
											"typeString": "contract IERC20"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 460,
									"mutability": "mutable",
									"name": "wcro",
									"nameLocation": "3105:4:3",
									"nodeType": "VariableDeclaration",
									"scope": 1308,
									"src": "3099:10:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_contract$_IWCRO_$393",
										"typeString": "contract IWCRO"
									},
									"typeName": {
										"id": 459,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 458,
											"name": "IWCRO",
											"nameLocations": [
												"3099:5:3"
											],
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 393,
											"src": "3099:5:3"
										},
										"referencedDeclaration": 393,
										"src": "3099:5:3",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IWCRO_$393",
											"typeString": "contract IWCRO"
										}
									},
									"visibility": "internal"
								},
								{
									"body": {
										"id": 573,
										"nodeType": "Block",
										"src": "3152:608:3",
										"statements": [
											{
												"expression": {
													"id": 471,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 467,
														"name": "factory",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 442,
														"src": "3163:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IDEXFactory_$278",
															"typeString": "contract IDEXFactory"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 469,
																"name": "DEXFACTORY",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 421,
																"src": "3185:10:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 468,
															"name": "IDEXFactory",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 278,
															"src": "3173:11:3",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_IDEXFactory_$278_$",
																"typeString": "type(contract IDEXFactory)"
															}
														},
														"id": 470,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "3173:23:3",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IDEXFactory_$278",
															"typeString": "contract IDEXFactory"
														}
													},
													"src": "3163:33:3",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IDEXFactory_$278",
														"typeString": "contract IDEXFactory"
													}
												},
												"id": 472,
												"nodeType": "ExpressionStatement",
												"src": "3163:33:3"
											},
											{
												"expression": {
													"id": 477,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 473,
														"name": "router",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 445,
														"src": "3207:6:3",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IDEXRouter_$382",
															"typeString": "contract IDEXRouter"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 475,
																"name": "DEXROUTER",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 418,
																"src": "3227:9:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 474,
															"name": "IDEXRouter",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 382,
															"src": "3216:10:3",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_IDEXRouter_$382_$",
																"typeString": "type(contract IDEXRouter)"
															}
														},
														"id": 476,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "3216:21:3",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IDEXRouter_$382",
															"typeString": "contract IDEXRouter"
														}
													},
													"src": "3207:30:3",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IDEXRouter_$382",
														"typeString": "contract IDEXRouter"
													}
												},
												"id": 478,
												"nodeType": "ExpressionStatement",
												"src": "3207:30:3"
											},
											{
												"expression": {
													"id": 483,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 479,
														"name": "cusdc",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 448,
														"src": "3248:5:3",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IERC20_$225",
															"typeString": "contract IERC20"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 481,
																"name": "CUSDC",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 403,
																"src": "3263:5:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 480,
															"name": "IERC20",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 225,
															"src": "3256:6:3",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_IERC20_$225_$",
																"typeString": "type(contract IERC20)"
															}
														},
														"id": 482,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "3256:13:3",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IERC20_$225",
															"typeString": "contract IERC20"
														}
													},
													"src": "3248:21:3",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$225",
														"typeString": "contract IERC20"
													}
												},
												"id": 484,
												"nodeType": "ExpressionStatement",
												"src": "3248:21:3"
											},
											{
												"expression": {
													"id": 489,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 485,
														"name": "cusdt",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 451,
														"src": "3280:5:3",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IERC20_$225",
															"typeString": "contract IERC20"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 487,
																"name": "CUSDT",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 406,
																"src": "3295:5:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 486,
															"name": "IERC20",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 225,
															"src": "3288:6:3",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_IERC20_$225_$",
																"typeString": "type(contract IERC20)"
															}
														},
														"id": 488,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "3288:13:3",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IERC20_$225",
															"typeString": "contract IERC20"
														}
													},
													"src": "3280:21:3",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$225",
														"typeString": "contract IERC20"
													}
												},
												"id": 490,
												"nodeType": "ExpressionStatement",
												"src": "3280:21:3"
											},
											{
												"expression": {
													"id": 495,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 491,
														"name": "ary",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 454,
														"src": "3312:3:3",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IERC20_$225",
															"typeString": "contract IERC20"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 493,
																"name": "ARY",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 412,
																"src": "3325:3:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 492,
															"name": "IERC20",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 225,
															"src": "3318:6:3",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_IERC20_$225_$",
																"typeString": "type(contract IERC20)"
															}
														},
														"id": 494,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "3318:11:3",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IERC20_$225",
															"typeString": "contract IERC20"
														}
													},
													"src": "3312:17:3",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$225",
														"typeString": "contract IERC20"
													}
												},
												"id": 496,
												"nodeType": "ExpressionStatement",
												"src": "3312:17:3"
											},
											{
												"expression": {
													"id": 501,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 497,
														"name": "mery",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 457,
														"src": "3340:4:3",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IERC20_$225",
															"typeString": "contract IERC20"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 499,
																"name": "MERY",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 415,
																"src": "3354:4:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 498,
															"name": "IERC20",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 225,
															"src": "3347:6:3",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_IERC20_$225_$",
																"typeString": "type(contract IERC20)"
															}
														},
														"id": 500,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "3347:12:3",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IERC20_$225",
															"typeString": "contract IERC20"
														}
													},
													"src": "3340:19:3",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$225",
														"typeString": "contract IERC20"
													}
												},
												"id": 502,
												"nodeType": "ExpressionStatement",
												"src": "3340:19:3"
											},
											{
												"expression": {
													"id": 507,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 503,
														"name": "wcro",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 460,
														"src": "3370:4:3",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IWCRO_$393",
															"typeString": "contract IWCRO"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 505,
																"name": "WCRO",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 409,
																"src": "3383:4:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 504,
															"name": "IWCRO",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 393,
															"src": "3377:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_IWCRO_$393_$",
																"typeString": "type(contract IWCRO)"
															}
														},
														"id": 506,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "3377:11:3",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IWCRO_$393",
															"typeString": "contract IWCRO"
														}
													},
													"src": "3370:18:3",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IWCRO_$393",
														"typeString": "contract IWCRO"
													}
												},
												"id": 508,
												"nodeType": "ExpressionStatement",
												"src": "3370:18:3"
											},
											{
												"expression": {
													"id": 512,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 509,
														"name": "feeReceiver",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 423,
														"src": "3399:11:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"expression": {
															"id": 510,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967281,
															"src": "3413:3:3",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 511,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3417:6:3",
														"memberName": "sender",
														"nodeType": "MemberAccess",
														"src": "3413:10:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "3399:24:3",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 513,
												"nodeType": "ExpressionStatement",
												"src": "3399:24:3"
											},
											{
												"expression": {
													"id": 516,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 514,
														"name": "feePercent",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 425,
														"src": "3434:10:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "33",
														"id": 515,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3447:1:3",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_3_by_1",
															"typeString": "int_const 3"
														},
														"value": "3"
													},
													"src": "3434:14:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 517,
												"nodeType": "ExpressionStatement",
												"src": "3434:14:3"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 521,
															"name": "DEXROUTER",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 418,
															"src": "3511:9:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"expression": {
																"arguments": [
																	{
																		"id": 524,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "3527:7:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_uint256_$",
																			"typeString": "type(uint256)"
																		},
																		"typeName": {
																			"id": 523,
																			"name": "uint256",
																			"nodeType": "ElementaryTypeName",
																			"src": "3527:7:3",
																			"typeDescriptions": {}
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_type$_t_uint256_$",
																			"typeString": "type(uint256)"
																		}
																	],
																	"id": 522,
																	"name": "type",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967269,
																	"src": "3522:4:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																		"typeString": "function () pure"
																	}
																},
																"id": 525,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3522:13:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_meta_type_t_uint256",
																	"typeString": "type(uint256)"
																}
															},
															"id": 526,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"memberLocation": "3536:3:3",
															"memberName": "max",
															"nodeType": "MemberAccess",
															"src": "3522:17:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 518,
															"name": "cusdc",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 448,
															"src": "3497:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$225",
																"typeString": "contract IERC20"
															}
														},
														"id": 520,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3503:7:3",
														"memberName": "approve",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 212,
														"src": "3497:13:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
															"typeString": "function (address,uint256) external returns (bool)"
														}
													},
													"id": 527,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3497:43:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 528,
												"nodeType": "ExpressionStatement",
												"src": "3497:43:3"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 532,
															"name": "DEXROUTER",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 418,
															"src": "3565:9:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"expression": {
																"arguments": [
																	{
																		"id": 535,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "3581:7:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_uint256_$",
																			"typeString": "type(uint256)"
																		},
																		"typeName": {
																			"id": 534,
																			"name": "uint256",
																			"nodeType": "ElementaryTypeName",
																			"src": "3581:7:3",
																			"typeDescriptions": {}
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_type$_t_uint256_$",
																			"typeString": "type(uint256)"
																		}
																	],
																	"id": 533,
																	"name": "type",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967269,
																	"src": "3576:4:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																		"typeString": "function () pure"
																	}
																},
																"id": 536,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3576:13:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_meta_type_t_uint256",
																	"typeString": "type(uint256)"
																}
															},
															"id": 537,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"memberLocation": "3590:3:3",
															"memberName": "max",
															"nodeType": "MemberAccess",
															"src": "3576:17:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 529,
															"name": "cusdt",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 451,
															"src": "3551:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$225",
																"typeString": "contract IERC20"
															}
														},
														"id": 531,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3557:7:3",
														"memberName": "approve",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 212,
														"src": "3551:13:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
															"typeString": "function (address,uint256) external returns (bool)"
														}
													},
													"id": 538,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3551:43:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 539,
												"nodeType": "ExpressionStatement",
												"src": "3551:43:3"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 543,
															"name": "DEXROUTER",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 418,
															"src": "3617:9:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"expression": {
																"arguments": [
																	{
																		"id": 546,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "3633:7:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_uint256_$",
																			"typeString": "type(uint256)"
																		},
																		"typeName": {
																			"id": 545,
																			"name": "uint256",
																			"nodeType": "ElementaryTypeName",
																			"src": "3633:7:3",
																			"typeDescriptions": {}
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_type$_t_uint256_$",
																			"typeString": "type(uint256)"
																		}
																	],
																	"id": 544,
																	"name": "type",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967269,
																	"src": "3628:4:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																		"typeString": "function () pure"
																	}
																},
																"id": 547,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3628:13:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_meta_type_t_uint256",
																	"typeString": "type(uint256)"
																}
															},
															"id": 548,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"memberLocation": "3642:3:3",
															"memberName": "max",
															"nodeType": "MemberAccess",
															"src": "3628:17:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 540,
															"name": "ary",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 454,
															"src": "3605:3:3",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$225",
																"typeString": "contract IERC20"
															}
														},
														"id": 542,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3609:7:3",
														"memberName": "approve",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 212,
														"src": "3605:11:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
															"typeString": "function (address,uint256) external returns (bool)"
														}
													},
													"id": 549,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3605:41:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 550,
												"nodeType": "ExpressionStatement",
												"src": "3605:41:3"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 554,
															"name": "DEXROUTER",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 418,
															"src": "3670:9:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"expression": {
																"arguments": [
																	{
																		"id": 557,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "3686:7:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_uint256_$",
																			"typeString": "type(uint256)"
																		},
																		"typeName": {
																			"id": 556,
																			"name": "uint256",
																			"nodeType": "ElementaryTypeName",
																			"src": "3686:7:3",
																			"typeDescriptions": {}
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_type$_t_uint256_$",
																			"typeString": "type(uint256)"
																		}
																	],
																	"id": 555,
																	"name": "type",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967269,
																	"src": "3681:4:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																		"typeString": "function () pure"
																	}
																},
																"id": 558,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3681:13:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_meta_type_t_uint256",
																	"typeString": "type(uint256)"
																}
															},
															"id": 559,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"memberLocation": "3695:3:3",
															"memberName": "max",
															"nodeType": "MemberAccess",
															"src": "3681:17:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 551,
															"name": "wcro",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 460,
															"src": "3657:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IWCRO_$393",
																"typeString": "contract IWCRO"
															}
														},
														"id": 553,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3662:7:3",
														"memberName": "approve",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 212,
														"src": "3657:12:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
															"typeString": "function (address,uint256) external returns (bool)"
														}
													},
													"id": 560,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3657:42:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 561,
												"nodeType": "ExpressionStatement",
												"src": "3657:42:3"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 565,
															"name": "DEXROUTER",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 418,
															"src": "3723:9:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"expression": {
																"arguments": [
																	{
																		"id": 568,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "3739:7:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_uint256_$",
																			"typeString": "type(uint256)"
																		},
																		"typeName": {
																			"id": 567,
																			"name": "uint256",
																			"nodeType": "ElementaryTypeName",
																			"src": "3739:7:3",
																			"typeDescriptions": {}
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_type$_t_uint256_$",
																			"typeString": "type(uint256)"
																		}
																	],
																	"id": 566,
																	"name": "type",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967269,
																	"src": "3734:4:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																		"typeString": "function () pure"
																	}
																},
																"id": 569,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3734:13:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_meta_type_t_uint256",
																	"typeString": "type(uint256)"
																}
															},
															"id": 570,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"memberLocation": "3748:3:3",
															"memberName": "max",
															"nodeType": "MemberAccess",
															"src": "3734:17:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 562,
															"name": "mery",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 457,
															"src": "3710:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$225",
																"typeString": "contract IERC20"
															}
														},
														"id": 564,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3715:7:3",
														"memberName": "approve",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 212,
														"src": "3710:12:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
															"typeString": "function (address,uint256) external returns (bool)"
														}
													},
													"id": 571,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3710:42:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 572,
												"nodeType": "ExpressionStatement",
												"src": "3710:42:3"
											}
										]
									},
									"id": 574,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [
										{
											"arguments": [
												{
													"expression": {
														"id": 463,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "3140:3:3",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 464,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "3144:6:3",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "3140:10:3",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												}
											],
											"id": 465,
											"kind": "baseConstructorSpecifier",
											"modifierName": {
												"id": 462,
												"name": "Ownable",
												"nameLocations": [
													"3132:7:3"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 147,
												"src": "3132:7:3"
											},
											"nodeType": "ModifierInvocation",
											"src": "3132:19:3"
										}
									],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 461,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3129:2:3"
									},
									"returnParameters": {
										"id": 466,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3152:0:3"
									},
									"scope": 1308,
									"src": "3118:642:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 627,
										"nodeType": "Block",
										"src": "3875:299:3",
										"statements": [
											{
												"assignments": [
													582
												],
												"declarations": [
													{
														"constant": false,
														"id": 582,
														"mutability": "mutable",
														"name": "n",
														"nameLocation": "3894:1:3",
														"nodeType": "VariableDeclaration",
														"scope": 627,
														"src": "3886:9:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 581,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "3886:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 585,
												"initialValue": {
													"expression": {
														"id": 583,
														"name": "addresses",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 439,
														"src": "3898:9:3",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_address_$dyn_storage",
															"typeString": "address[] storage ref"
														}
													},
													"id": 584,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "3908:6:3",
													"memberName": "length",
													"nodeType": "MemberAccess",
													"src": "3898:16:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3886:28:3"
											},
											{
												"assignments": [
													590
												],
												"declarations": [
													{
														"constant": false,
														"id": 590,
														"mutability": "mutable",
														"name": "volumes",
														"nameLocation": "3941:7:3",
														"nodeType": "VariableDeclaration",
														"scope": 627,
														"src": "3925:23:3",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_struct$_Volume_$398_memory_ptr_$dyn_memory_ptr",
															"typeString": "struct Volume[]"
														},
														"typeName": {
															"baseType": {
																"id": 588,
																"nodeType": "UserDefinedTypeName",
																"pathNode": {
																	"id": 587,
																	"name": "Volume",
																	"nameLocations": [
																		"3925:6:3"
																	],
																	"nodeType": "IdentifierPath",
																	"referencedDeclaration": 398,
																	"src": "3925:6:3"
																},
																"referencedDeclaration": 398,
																"src": "3925:6:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Volume_$398_storage_ptr",
																	"typeString": "struct Volume"
																}
															},
															"id": 589,
															"nodeType": "ArrayTypeName",
															"src": "3925:8:3",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_struct$_Volume_$398_storage_$dyn_storage_ptr",
																"typeString": "struct Volume[]"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 597,
												"initialValue": {
													"arguments": [
														{
															"id": 595,
															"name": "n",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 582,
															"src": "3964:1:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 594,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "NewExpression",
														"src": "3951:12:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_struct$_Volume_$398_memory_ptr_$dyn_memory_ptr_$",
															"typeString": "function (uint256) pure returns (struct Volume memory[] memory)"
														},
														"typeName": {
															"baseType": {
																"id": 592,
																"nodeType": "UserDefinedTypeName",
																"pathNode": {
																	"id": 591,
																	"name": "Volume",
																	"nameLocations": [
																		"3955:6:3"
																	],
																	"nodeType": "IdentifierPath",
																	"referencedDeclaration": 398,
																	"src": "3955:6:3"
																},
																"referencedDeclaration": 398,
																"src": "3955:6:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Volume_$398_storage_ptr",
																	"typeString": "struct Volume"
																}
															},
															"id": 593,
															"nodeType": "ArrayTypeName",
															"src": "3955:8:3",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_struct$_Volume_$398_storage_$dyn_storage_ptr",
																"typeString": "struct Volume[]"
															}
														}
													},
													"id": 596,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3951:15:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_struct$_Volume_$398_memory_ptr_$dyn_memory_ptr",
														"typeString": "struct Volume memory[] memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3925:41:3"
											},
											{
												"body": {
													"id": 623,
													"nodeType": "Block",
													"src": "4054:86:3",
													"statements": [
														{
															"expression": {
																"id": 621,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"id": 608,
																		"name": "volumes",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 590,
																		"src": "4069:7:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_struct$_Volume_$398_memory_ptr_$dyn_memory_ptr",
																			"typeString": "struct Volume memory[] memory"
																		}
																	},
																	"id": 610,
																	"indexExpression": {
																		"id": 609,
																		"name": "i",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 599,
																		"src": "4077:1:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "4069:10:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_Volume_$398_memory_ptr",
																		"typeString": "struct Volume memory"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"arguments": [
																		{
																			"baseExpression": {
																				"id": 612,
																				"name": "addresses",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 439,
																				"src": "4089:9:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_array$_t_address_$dyn_storage",
																					"typeString": "address[] storage ref"
																				}
																			},
																			"id": 614,
																			"indexExpression": {
																				"id": 613,
																				"name": "i",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 599,
																				"src": "4099:1:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "4089:12:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		{
																			"baseExpression": {
																				"id": 615,
																				"name": "userVolume",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 432,
																				"src": "4103:10:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																					"typeString": "mapping(address => uint256)"
																				}
																			},
																			"id": 619,
																			"indexExpression": {
																				"baseExpression": {
																					"id": 616,
																					"name": "addresses",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 439,
																					"src": "4114:9:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_array$_t_address_$dyn_storage",
																						"typeString": "address[] storage ref"
																					}
																				},
																				"id": 618,
																				"indexExpression": {
																					"id": 617,
																					"name": "i",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 599,
																					"src": "4124:1:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": false,
																				"nodeType": "IndexAccess",
																				"src": "4114:12:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "4103:24:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			},
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"id": 611,
																		"name": "Volume",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 398,
																		"src": "4082:6:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_struct$_Volume_$398_storage_ptr_$",
																			"typeString": "type(struct Volume storage pointer)"
																		}
																	},
																	"id": 620,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "structConstructorCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "4082:46:3",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_Volume_$398_memory_ptr",
																		"typeString": "struct Volume memory"
																	}
																},
																"src": "4069:59:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Volume_$398_memory_ptr",
																	"typeString": "struct Volume memory"
																}
															},
															"id": 622,
															"nodeType": "ExpressionStatement",
															"src": "4069:59:3"
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 604,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 602,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 599,
														"src": "4042:1:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"id": 603,
														"name": "n",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 582,
														"src": "4046:1:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4042:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 624,
												"initializationExpression": {
													"assignments": [
														599
													],
													"declarations": [
														{
															"constant": false,
															"id": 599,
															"mutability": "mutable",
															"name": "i",
															"nameLocation": "4035:1:3",
															"nodeType": "VariableDeclaration",
															"scope": 624,
															"src": "4027:9:3",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 598,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "4027:7:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 601,
													"initialValue": {
														"hexValue": "30",
														"id": 600,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "4039:1:3",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "4027:13:3"
												},
												"loopExpression": {
													"expression": {
														"id": 606,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": false,
														"src": "4049:3:3",
														"subExpression": {
															"id": 605,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 599,
															"src": "4049:1:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 607,
													"nodeType": "ExpressionStatement",
													"src": "4049:3:3"
												},
												"nodeType": "ForStatement",
												"src": "4022:118:3"
											},
											{
												"expression": {
													"id": 625,
													"name": "volumes",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 590,
													"src": "4159:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_struct$_Volume_$398_memory_ptr_$dyn_memory_ptr",
														"typeString": "struct Volume memory[] memory"
													}
												},
												"functionReturnParameters": 580,
												"id": 626,
												"nodeType": "Return",
												"src": "4152:14:3"
											}
										]
									},
									"functionSelector": "ae38a070",
									"id": 628,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getUserVolumes",
									"nameLocation": "3818:14:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 575,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3832:2:3"
									},
									"returnParameters": {
										"id": 580,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 579,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 628,
												"src": "3858:15:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_struct$_Volume_$398_memory_ptr_$dyn_memory_ptr",
													"typeString": "struct Volume[]"
												},
												"typeName": {
													"baseType": {
														"id": 577,
														"nodeType": "UserDefinedTypeName",
														"pathNode": {
															"id": 576,
															"name": "Volume",
															"nameLocations": [
																"3858:6:3"
															],
															"nodeType": "IdentifierPath",
															"referencedDeclaration": 398,
															"src": "3858:6:3"
														},
														"referencedDeclaration": 398,
														"src": "3858:6:3",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Volume_$398_storage_ptr",
															"typeString": "struct Volume"
														}
													},
													"id": 578,
													"nodeType": "ArrayTypeName",
													"src": "3858:8:3",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_struct$_Volume_$398_storage_$dyn_storage_ptr",
														"typeString": "struct Volume[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3857:17:3"
									},
									"scope": 1308,
									"src": "3809:365:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 664,
										"nodeType": "Block",
										"src": "4261:211:3",
										"statements": [
											{
												"assignments": [
													634
												],
												"declarations": [
													{
														"constant": false,
														"id": 634,
														"mutability": "mutable",
														"name": "n",
														"nameLocation": "4280:1:3",
														"nodeType": "VariableDeclaration",
														"scope": 664,
														"src": "4272:9:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 633,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "4272:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 637,
												"initialValue": {
													"expression": {
														"id": 635,
														"name": "addresses",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 439,
														"src": "4284:9:3",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_address_$dyn_storage",
															"typeString": "address[] storage ref"
														}
													},
													"id": 636,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "4294:6:3",
													"memberName": "length",
													"nodeType": "MemberAccess",
													"src": "4284:16:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4272:28:3"
											},
											{
												"body": {
													"id": 655,
													"nodeType": "Block",
													"src": "4342:58:3",
													"statements": [
														{
															"expression": {
																"id": 653,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "UnaryOperation",
																"operator": "delete",
																"prefix": true,
																"src": "4357:31:3",
																"subExpression": {
																	"baseExpression": {
																		"id": 648,
																		"name": "userVolume",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 432,
																		"src": "4364:10:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																			"typeString": "mapping(address => uint256)"
																		}
																	},
																	"id": 652,
																	"indexExpression": {
																		"baseExpression": {
																			"id": 649,
																			"name": "addresses",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 439,
																			"src": "4375:9:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_array$_t_address_$dyn_storage",
																				"typeString": "address[] storage ref"
																			}
																		},
																		"id": 651,
																		"indexExpression": {
																			"id": 650,
																			"name": "i",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 639,
																			"src": "4385:1:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "4375:12:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "4364:24:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 654,
															"nodeType": "ExpressionStatement",
															"src": "4357:31:3"
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 644,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 642,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 639,
														"src": "4330:1:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"id": 643,
														"name": "n",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 634,
														"src": "4334:1:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4330:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 656,
												"initializationExpression": {
													"assignments": [
														639
													],
													"declarations": [
														{
															"constant": false,
															"id": 639,
															"mutability": "mutable",
															"name": "i",
															"nameLocation": "4323:1:3",
															"nodeType": "VariableDeclaration",
															"scope": 656,
															"src": "4315:9:3",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 638,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "4315:7:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 641,
													"initialValue": {
														"hexValue": "30",
														"id": 640,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "4327:1:3",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "4315:13:3"
												},
												"loopExpression": {
													"expression": {
														"id": 646,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": false,
														"src": "4337:3:3",
														"subExpression": {
															"id": 645,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 639,
															"src": "4337:1:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 647,
													"nodeType": "ExpressionStatement",
													"src": "4337:3:3"
												},
												"nodeType": "ForStatement",
												"src": "4311:89:3"
											},
											{
												"expression": {
													"id": 658,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "delete",
													"prefix": true,
													"src": "4410:16:3",
													"subExpression": {
														"id": 657,
														"name": "addresses",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 439,
														"src": "4417:9:3",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_address_$dyn_storage",
															"typeString": "address[] storage ref"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 659,
												"nodeType": "ExpressionStatement",
												"src": "4410:16:3"
											},
											{
												"expression": {
													"id": 662,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 660,
														"name": "competition_started",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 428,
														"src": "4437:19:3",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "66616c7365",
														"id": 661,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "4459:5:3",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "false"
													},
													"src": "4437:27:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 663,
												"nodeType": "ExpressionStatement",
												"src": "4437:27:3"
											}
										]
									},
									"functionSelector": "39bda01c",
									"id": 665,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 631,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 630,
												"name": "onlyOwner",
												"nameLocations": [
													"4252:9:3"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "4252:9:3"
											},
											"nodeType": "ModifierInvocation",
											"src": "4252:9:3"
										}
									],
									"name": "clearVolume",
									"nameLocation": "4231:11:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 629,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4242:2:3"
									},
									"returnParameters": {
										"id": 632,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4261:0:3"
									},
									"scope": 1308,
									"src": "4222:250:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 674,
										"nodeType": "Block",
										"src": "4524:46:3",
										"statements": [
											{
												"expression": {
													"id": 672,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 670,
														"name": "competition_started",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 428,
														"src": "4535:19:3",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "66616c7365",
														"id": 671,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "4557:5:3",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "false"
													},
													"src": "4535:27:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 673,
												"nodeType": "ExpressionStatement",
												"src": "4535:27:3"
											}
										]
									},
									"functionSelector": "5f0018cd",
									"id": 675,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 668,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 667,
												"name": "onlyOwner",
												"nameLocations": [
													"4514:9:3"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "4514:9:3"
											},
											"nodeType": "ModifierInvocation",
											"src": "4514:9:3"
										}
									],
									"name": "stopCompetition",
									"nameLocation": "4489:15:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 666,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4504:2:3"
									},
									"returnParameters": {
										"id": 669,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4524:0:3"
									},
									"scope": 1308,
									"src": "4480:90:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 684,
										"nodeType": "Block",
										"src": "4621:45:3",
										"statements": [
											{
												"expression": {
													"id": 682,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 680,
														"name": "competition_started",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 428,
														"src": "4632:19:3",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "74727565",
														"id": 681,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "4654:4:3",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "true"
													},
													"src": "4632:26:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 683,
												"nodeType": "ExpressionStatement",
												"src": "4632:26:3"
											}
										]
									},
									"functionSelector": "d3e66a9e",
									"id": 685,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 678,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 677,
												"name": "onlyOwner",
												"nameLocations": [
													"4611:9:3"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "4611:9:3"
											},
											"nodeType": "ModifierInvocation",
											"src": "4611:9:3"
										}
									],
									"name": "startCompetition",
									"nameLocation": "4585:16:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 676,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4601:2:3"
									},
									"returnParameters": {
										"id": 679,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4621:0:3"
									},
									"scope": 1308,
									"src": "4576:90:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 702,
										"nodeType": "Block",
										"src": "4811:80:3",
										"statements": [
											{
												"expression": {
													"id": 696,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 694,
														"name": "feeReceiver",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 423,
														"src": "4822:11:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 695,
														"name": "_feeReceiver",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 687,
														"src": "4836:12:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "4822:26:3",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 697,
												"nodeType": "ExpressionStatement",
												"src": "4822:26:3"
											},
											{
												"expression": {
													"id": 700,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 698,
														"name": "feePercent",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 425,
														"src": "4859:10:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 699,
														"name": "_feePercent",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 689,
														"src": "4872:11:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4859:24:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 701,
												"nodeType": "ExpressionStatement",
												"src": "4859:24:3"
											}
										]
									},
									"functionSelector": "3977d68d",
									"id": 703,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 692,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 691,
												"name": "onlyOwner",
												"nameLocations": [
													"4801:9:3"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "4801:9:3"
											},
											"nodeType": "ModifierInvocation",
											"src": "4801:9:3"
										}
									],
									"name": "setFeeData",
									"nameLocation": "4740:10:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 690,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 687,
												"mutability": "mutable",
												"name": "_feeReceiver",
												"nameLocation": "4759:12:3",
												"nodeType": "VariableDeclaration",
												"scope": 703,
												"src": "4751:20:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 686,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4751:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 689,
												"mutability": "mutable",
												"name": "_feePercent",
												"nameLocation": "4781:11:3",
												"nodeType": "VariableDeclaration",
												"scope": 703,
												"src": "4773:19:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 688,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4773:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4750:43:3"
									},
									"returnParameters": {
										"id": 693,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4811:0:3"
									},
									"scope": 1308,
									"src": "4731:160:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 768,
										"nodeType": "Block",
										"src": "5002:531:3",
										"statements": [
											{
												"assignments": [
													711
												],
												"declarations": [
													{
														"constant": false,
														"id": 711,
														"mutability": "mutable",
														"name": "pathLen",
														"nameLocation": "5021:7:3",
														"nodeType": "VariableDeclaration",
														"scope": 768,
														"src": "5013:15:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 710,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "5013:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 718,
												"initialValue": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"id": 714,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 712,
															"name": "fromToken",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 705,
															"src": "5031:9:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"id": 713,
															"name": "WCRO",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 409,
															"src": "5044:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"src": "5031:17:3",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"hexValue": "32",
														"id": 716,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "5055:1:3",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_2_by_1",
															"typeString": "int_const 2"
														},
														"value": "2"
													},
													"id": 717,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "5031:25:3",
													"trueExpression": {
														"hexValue": "31",
														"id": 715,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "5051:1:3",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5013:43:3"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 721,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 719,
														"name": "pathLen",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 711,
														"src": "5070:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "31",
														"id": 720,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "5081:1:3",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"src": "5070:12:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 766,
													"nodeType": "Block",
													"src": "5153:373:3",
													"statements": [
														{
															"assignments": [
																734
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 734,
																	"mutability": "mutable",
																	"name": "path",
																	"nameLocation": "5185:4:3",
																	"nodeType": "VariableDeclaration",
																	"scope": 766,
																	"src": "5168:21:3",
																	"stateVariable": false,
																	"storageLocation": "memory",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
																		"typeString": "address[]"
																	},
																	"typeName": {
																		"baseType": {
																			"id": 732,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "5168:7:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"id": 733,
																		"nodeType": "ArrayTypeName",
																		"src": "5168:9:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
																			"typeString": "address[]"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 740,
															"initialValue": {
																"arguments": [
																	{
																		"id": 738,
																		"name": "pathLen",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 711,
																		"src": "5206:7:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 737,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "NewExpression",
																	"src": "5192:13:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_address_$dyn_memory_ptr_$",
																		"typeString": "function (uint256) pure returns (address[] memory)"
																	},
																	"typeName": {
																		"baseType": {
																			"id": 735,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "5196:7:3",
																			"stateMutability": "nonpayable",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"id": 736,
																		"nodeType": "ArrayTypeName",
																		"src": "5196:9:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
																			"typeString": "address[]"
																		}
																	}
																},
																"id": 739,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5192:22:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
																	"typeString": "address[] memory"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "5168:46:3"
														},
														{
															"expression": {
																"id": 745,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"id": 741,
																		"name": "path",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 734,
																		"src": "5229:4:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
																			"typeString": "address[] memory"
																		}
																	},
																	"id": 743,
																	"indexExpression": {
																		"hexValue": "30",
																		"id": 742,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "5234:1:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "5229:7:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"id": 744,
																	"name": "fromToken",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 705,
																	"src": "5239:9:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"src": "5229:19:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 746,
															"nodeType": "ExpressionStatement",
															"src": "5229:19:3"
														},
														{
															"expression": {
																"id": 751,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"id": 747,
																		"name": "path",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 734,
																		"src": "5263:4:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
																			"typeString": "address[] memory"
																		}
																	},
																	"id": 749,
																	"indexExpression": {
																		"hexValue": "31",
																		"id": 748,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "5268:1:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_1_by_1",
																			"typeString": "int_const 1"
																		},
																		"value": "1"
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "5263:7:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"id": 750,
																	"name": "WCRO",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 409,
																	"src": "5273:4:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"src": "5263:14:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 752,
															"nodeType": "ExpressionStatement",
															"src": "5263:14:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"id": 756,
																		"name": "feeAmount",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 707,
																		"src": "5373:9:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"hexValue": "30",
																		"id": 757,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "5401:1:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	{
																		"id": 758,
																		"name": "path",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 734,
																		"src": "5421:4:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
																			"typeString": "address[] memory"
																		}
																	},
																	{
																		"id": 759,
																		"name": "feeReceiver",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 423,
																		"src": "5444:11:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 763,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"expression": {
																				"id": 760,
																				"name": "block",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967292,
																				"src": "5474:5:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_magic_block",
																					"typeString": "block"
																				}
																			},
																			"id": 761,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "5480:9:3",
																			"memberName": "timestamp",
																			"nodeType": "MemberAccess",
																			"src": "5474:15:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "+",
																		"rightExpression": {
																			"hexValue": "31",
																			"id": 762,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "5492:7:3",
																			"subdenomination": "hours",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_3600_by_1",
																				"typeString": "int_const 3600"
																			},
																			"value": "1"
																		},
																		"src": "5474:25:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		{
																			"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
																			"typeString": "address[] memory"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"id": 753,
																		"name": "router",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 445,
																		"src": "5294:6:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IDEXRouter_$382",
																			"typeString": "contract IDEXRouter"
																		}
																	},
																	"id": 755,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "5301:53:3",
																	"memberName": "swapExactTokensForTokensSupportingFeeOnTransferTokens",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 322,
																	"src": "5294:60:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_nonpayable$_t_uint256_$_t_uint256_$_t_array$_t_address_$dyn_memory_ptr_$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (uint256,uint256,address[] memory,address,uint256) external"
																	}
																},
																"id": 764,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5294:220:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 765,
															"nodeType": "ExpressionStatement",
															"src": "5294:220:3"
														}
													]
												},
												"id": 767,
												"nodeType": "IfStatement",
												"src": "5067:459:3",
												"trueBody": {
													"id": 729,
													"nodeType": "Block",
													"src": "5083:64:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 725,
																		"name": "feeReceiver",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 423,
																		"src": "5112:11:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 726,
																		"name": "feeAmount",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 707,
																		"src": "5125:9:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"id": 722,
																		"name": "wcro",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 460,
																		"src": "5098:4:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IWCRO_$393",
																			"typeString": "contract IWCRO"
																		}
																	},
																	"id": 724,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "5103:8:3",
																	"memberName": "transfer",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 192,
																	"src": "5098:13:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																		"typeString": "function (address,uint256) external returns (bool)"
																	}
																},
																"id": 727,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5098:37:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 728,
															"nodeType": "ExpressionStatement",
															"src": "5098:37:3"
														}
													]
												}
											}
										]
									},
									"id": 769,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getFee",
									"nameLocation": "4949:6:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 708,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 705,
												"mutability": "mutable",
												"name": "fromToken",
												"nameLocation": "4964:9:3",
												"nodeType": "VariableDeclaration",
												"scope": 769,
												"src": "4956:17:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 704,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4956:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 707,
												"mutability": "mutable",
												"name": "feeAmount",
												"nameLocation": "4983:9:3",
												"nodeType": "VariableDeclaration",
												"scope": 769,
												"src": "4975:17:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 706,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4975:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4955:38:3"
									},
									"returnParameters": {
										"id": 709,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5002:0:3"
									},
									"scope": 1308,
									"src": "4940:593:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 800,
										"nodeType": "Block",
										"src": "5624:181:3",
										"statements": [
											{
												"condition": {
													"id": 779,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "5638:21:3",
													"subExpression": {
														"baseExpression": {
															"id": 776,
															"name": "isExistAddress",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 436,
															"src": "5639:14:3",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																"typeString": "mapping(address => bool)"
															}
														},
														"id": 778,
														"indexExpression": {
															"id": 777,
															"name": "user",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 771,
															"src": "5654:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "5639:20:3",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 793,
												"nodeType": "IfStatement",
												"src": "5635:115:3",
												"trueBody": {
													"id": 792,
													"nodeType": "Block",
													"src": "5661:89:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 783,
																		"name": "user",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 771,
																		"src": "5691:4:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"expression": {
																		"id": 780,
																		"name": "addresses",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 439,
																		"src": "5676:9:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_address_$dyn_storage",
																			"typeString": "address[] storage ref"
																		}
																	},
																	"id": 782,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "5686:4:3",
																	"memberName": "push",
																	"nodeType": "MemberAccess",
																	"src": "5676:14:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_address_$dyn_storage_ptr_$_t_address_$returns$__$attached_to$_t_array$_t_address_$dyn_storage_ptr_$",
																		"typeString": "function (address[] storage pointer,address)"
																	}
																},
																"id": 784,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5676:20:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 785,
															"nodeType": "ExpressionStatement",
															"src": "5676:20:3"
														},
														{
															"expression": {
																"id": 790,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"id": 786,
																		"name": "isExistAddress",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 436,
																		"src": "5711:14:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																			"typeString": "mapping(address => bool)"
																		}
																	},
																	"id": 788,
																	"indexExpression": {
																		"id": 787,
																		"name": "user",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 771,
																		"src": "5726:4:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "5711:20:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"hexValue": "74727565",
																	"id": 789,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "5734:4:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																"src": "5711:27:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 791,
															"nodeType": "ExpressionStatement",
															"src": "5711:27:3"
														}
													]
												}
											},
											{
												"expression": {
													"id": 798,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 794,
															"name": "userVolume",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 432,
															"src": "5771:10:3",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 796,
														"indexExpression": {
															"id": 795,
															"name": "user",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 771,
															"src": "5782:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "5771:16:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"id": 797,
														"name": "volume",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 773,
														"src": "5791:6:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "5771:26:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 799,
												"nodeType": "ExpressionStatement",
												"src": "5771:26:3"
											}
										]
									},
									"id": 801,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "addVolume",
									"nameLocation": "5550:9:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 774,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 771,
												"mutability": "mutable",
												"name": "user",
												"nameLocation": "5579:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 801,
												"src": "5571:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 770,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5571:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 773,
												"mutability": "mutable",
												"name": "volume",
												"nameLocation": "5602:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 801,
												"src": "5594:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 772,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5594:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5560:55:3"
									},
									"returnParameters": {
										"id": 775,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5624:0:3"
									},
									"scope": 1308,
									"src": "5541:264:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 1061,
										"nodeType": "Block",
										"src": "6007:1992:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 816,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "6049:3:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 817,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "6053:6:3",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "6049:10:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"id": 820,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "6069:4:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_SwapPro_$1308",
																		"typeString": "contract SwapPro"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_SwapPro_$1308",
																		"typeString": "contract SwapPro"
																	}
																],
																"id": 819,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "6061:7:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 818,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "6061:7:3",
																	"typeDescriptions": {}
																}
															},
															"id": 821,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6061:13:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 822,
															"name": "amountIn",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 807,
															"src": "6076:8:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 813,
																	"name": "fromToken",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 803,
																	"src": "6025:9:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 812,
																"name": "IERC20",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 225,
																"src": "6018:6:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_IERC20_$225_$",
																	"typeString": "type(contract IERC20)"
																}
															},
															"id": 814,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6018:17:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$225",
																"typeString": "contract IERC20"
															}
														},
														"id": 815,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "6036:12:3",
														"memberName": "transferFrom",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 224,
														"src": "6018:30:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
															"typeString": "function (address,address,uint256) external returns (bool)"
														}
													},
													"id": 823,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6018:67:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 824,
												"nodeType": "ExpressionStatement",
												"src": "6018:67:3"
											},
											{
												"condition": {
													"components": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 829,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																"id": 827,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 825,
																	"name": "fromToken",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 803,
																	"src": "6117:9:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"id": 826,
																	"name": "ARY",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 412,
																	"src": "6130:3:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"src": "6117:16:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "&&",
															"rightExpression": {
																"id": 828,
																"name": "competition_started",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 428,
																"src": "6137:19:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "6117:39:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"id": 830,
													"isConstant": false,
													"isInlineArray": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "TupleExpression",
													"src": "6116:41:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 838,
												"nodeType": "IfStatement",
												"src": "6098:129:3",
												"trueBody": {
													"id": 837,
													"nodeType": "Block",
													"src": "6169:58:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"expression": {
																			"id": 832,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967281,
																			"src": "6194:3:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 833,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "6198:6:3",
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"src": "6194:10:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 834,
																		"name": "amountIn",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 807,
																		"src": "6206:8:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 831,
																	"name": "addVolume",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 801,
																	"src": "6184:9:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (address,uint256)"
																	}
																},
																"id": 835,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6184:31:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 836,
															"nodeType": "ExpressionStatement",
															"src": "6184:31:3"
														}
													]
												}
											},
											{
												"assignments": [
													840
												],
												"declarations": [
													{
														"constant": false,
														"id": 840,
														"mutability": "mutable",
														"name": "feeAmount",
														"nameLocation": "6247:9:3",
														"nodeType": "VariableDeclaration",
														"scope": 1061,
														"src": "6239:17:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 839,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "6239:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 847,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 846,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 843,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 841,
																	"name": "amountIn",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 807,
																	"src": "6260:8:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"id": 842,
																	"name": "feePercent",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 425,
																	"src": "6271:10:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "6260:21:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 844,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "6259:23:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"hexValue": "31303030",
														"id": 845,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "6285:4:3",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1000_by_1",
															"typeString": "int_const 1000"
														},
														"value": "1000"
													},
													"src": "6259:30:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6239:50:3"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 849,
															"name": "fromToken",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 803,
															"src": "6307:9:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 850,
															"name": "feeAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 840,
															"src": "6318:9:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 848,
														"name": "getFee",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 769,
														"src": "6300:6:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 851,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6300:28:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 852,
												"nodeType": "ExpressionStatement",
												"src": "6300:28:3"
											},
											{
												"assignments": [
													854
												],
												"declarations": [
													{
														"constant": false,
														"id": 854,
														"mutability": "mutable",
														"name": "pathLen",
														"nameLocation": "6349:7:3",
														"nodeType": "VariableDeclaration",
														"scope": 1061,
														"src": "6341:15:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 853,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "6341:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 855,
												"nodeType": "VariableDeclarationStatement",
												"src": "6341:15:3"
											},
											{
												"expression": {
													"id": 868,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 856,
														"name": "pathLen",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 854,
														"src": "6367:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"condition": {
															"components": [
																{
																	"commonType": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"id": 863,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"commonType": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		"id": 859,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 857,
																			"name": "fromToken",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 803,
																			"src": "6378:9:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "==",
																		"rightExpression": {
																			"id": 858,
																			"name": "WCRO",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 409,
																			"src": "6391:4:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"src": "6378:17:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "||",
																	"rightExpression": {
																		"commonType": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		"id": 862,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 860,
																			"name": "toToken",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 805,
																			"src": "6399:7:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "==",
																		"rightExpression": {
																			"id": 861,
																			"name": "WCRO",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 409,
																			"src": "6410:4:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"src": "6399:15:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"src": "6378:36:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																}
															],
															"id": 864,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "6377:38:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"falseExpression": {
															"hexValue": "33",
															"id": 866,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6422:1:3",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_3_by_1",
																"typeString": "int_const 3"
															},
															"value": "3"
														},
														"id": 867,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "Conditional",
														"src": "6377:46:3",
														"trueExpression": {
															"hexValue": "32",
															"id": 865,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6418:1:3",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_2_by_1",
																"typeString": "int_const 2"
															},
															"value": "2"
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														}
													},
													"src": "6367:56:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 869,
												"nodeType": "ExpressionStatement",
												"src": "6367:56:3"
											},
											{
												"assignments": [
													871
												],
												"declarations": [
													{
														"constant": false,
														"id": 871,
														"mutability": "mutable",
														"name": "amountOut",
														"nameLocation": "6444:9:3",
														"nodeType": "VariableDeclaration",
														"scope": 1061,
														"src": "6436:17:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 870,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "6436:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 872,
												"nodeType": "VariableDeclarationStatement",
												"src": "6436:17:3"
											},
											{
												"assignments": [
													877
												],
												"declarations": [
													{
														"constant": false,
														"id": 877,
														"mutability": "mutable",
														"name": "path",
														"nameLocation": "6481:4:3",
														"nodeType": "VariableDeclaration",
														"scope": 1061,
														"src": "6464:21:3",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
															"typeString": "address[]"
														},
														"typeName": {
															"baseType": {
																"id": 875,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "6464:7:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 876,
															"nodeType": "ArrayTypeName",
															"src": "6464:9:3",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
																"typeString": "address[]"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 878,
												"nodeType": "VariableDeclarationStatement",
												"src": "6464:21:3"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 885,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"id": 881,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 879,
															"name": "fromToken",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 803,
															"src": "6500:9:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"id": 880,
															"name": "WCRO",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 409,
															"src": "6513:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"src": "6500:17:3",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "||",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"id": 884,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 882,
															"name": "toToken",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 805,
															"src": "6521:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"id": 883,
															"name": "WCRO",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 409,
															"src": "6532:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"src": "6521:15:3",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "6500:36:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"id": 942,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"components": [
																{
																	"commonType": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"id": 932,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"commonType": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		"id": 928,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 926,
																			"name": "fromToken",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 803,
																			"src": "6861:9:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "==",
																		"rightExpression": {
																			"id": 927,
																			"name": "ARY",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 412,
																			"src": "6874:3:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"src": "6861:16:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "&&",
																	"rightExpression": {
																		"commonType": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		"id": 931,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 929,
																			"name": "toToken",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 805,
																			"src": "6881:7:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "==",
																		"rightExpression": {
																			"id": 930,
																			"name": "MERY",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 415,
																			"src": "6892:4:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"src": "6881:15:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"src": "6861:35:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																}
															],
															"id": 933,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "6860:37:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "||",
														"rightExpression": {
															"components": [
																{
																	"commonType": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"id": 940,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"commonType": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		"id": 936,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 934,
																			"name": "fromToken",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 803,
																			"src": "6915:9:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "==",
																		"rightExpression": {
																			"id": 935,
																			"name": "MERY",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 415,
																			"src": "6928:4:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"src": "6915:17:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "&&",
																	"rightExpression": {
																		"commonType": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		"id": 939,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 937,
																			"name": "toToken",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 805,
																			"src": "6936:7:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "==",
																		"rightExpression": {
																			"id": 938,
																			"name": "ARY",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 412,
																			"src": "6947:3:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"src": "6936:14:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"src": "6915:35:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																}
															],
															"id": 941,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "6914:37:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"src": "6860:91:3",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseBody": {
														"id": 1028,
														"nodeType": "Block",
														"src": "7267:327:3",
														"statements": [
															{
																"expression": {
																	"id": 989,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftHandSide": {
																		"id": 983,
																		"name": "path",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 877,
																		"src": "7282:4:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
																			"typeString": "address[] memory"
																		}
																	},
																	"nodeType": "Assignment",
																	"operator": "=",
																	"rightHandSide": {
																		"arguments": [
																			{
																				"hexValue": "33",
																				"id": 987,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "7303:1:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_3_by_1",
																					"typeString": "int_const 3"
																				},
																				"value": "3"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_3_by_1",
																					"typeString": "int_const 3"
																				}
																			],
																			"id": 986,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "NewExpression",
																			"src": "7289:13:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_address_$dyn_memory_ptr_$",
																				"typeString": "function (uint256) pure returns (address[] memory)"
																			},
																			"typeName": {
																				"baseType": {
																					"id": 984,
																					"name": "address",
																					"nodeType": "ElementaryTypeName",
																					"src": "7293:7:3",
																					"stateMutability": "nonpayable",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				"id": 985,
																				"nodeType": "ArrayTypeName",
																				"src": "7293:9:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
																					"typeString": "address[]"
																				}
																			}
																		},
																		"id": 988,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "7289:16:3",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
																			"typeString": "address[] memory"
																		}
																	},
																	"src": "7282:23:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
																		"typeString": "address[] memory"
																	}
																},
																"id": 990,
																"nodeType": "ExpressionStatement",
																"src": "7282:23:3"
															},
															{
																"expression": {
																	"id": 995,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftHandSide": {
																		"baseExpression": {
																			"id": 991,
																			"name": "path",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 877,
																			"src": "7320:4:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
																				"typeString": "address[] memory"
																			}
																		},
																		"id": 993,
																		"indexExpression": {
																			"hexValue": "30",
																			"id": 992,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "7325:1:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": true,
																		"nodeType": "IndexAccess",
																		"src": "7320:7:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"nodeType": "Assignment",
																	"operator": "=",
																	"rightHandSide": {
																		"id": 994,
																		"name": "fromToken",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 803,
																		"src": "7330:9:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"src": "7320:19:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"id": 996,
																"nodeType": "ExpressionStatement",
																"src": "7320:19:3"
															},
															{
																"expression": {
																	"id": 1001,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftHandSide": {
																		"baseExpression": {
																			"id": 997,
																			"name": "path",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 877,
																			"src": "7354:4:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
																				"typeString": "address[] memory"
																			}
																		},
																		"id": 999,
																		"indexExpression": {
																			"hexValue": "31",
																			"id": 998,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "7359:1:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": true,
																		"nodeType": "IndexAccess",
																		"src": "7354:7:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"nodeType": "Assignment",
																	"operator": "=",
																	"rightHandSide": {
																		"id": 1000,
																		"name": "WCRO",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 409,
																		"src": "7364:4:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"src": "7354:14:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"id": 1002,
																"nodeType": "ExpressionStatement",
																"src": "7354:14:3"
															},
															{
																"expression": {
																	"id": 1007,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftHandSide": {
																		"baseExpression": {
																			"id": 1003,
																			"name": "path",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 877,
																			"src": "7383:4:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
																				"typeString": "address[] memory"
																			}
																		},
																		"id": 1005,
																		"indexExpression": {
																			"hexValue": "32",
																			"id": 1004,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "7388:1:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_2_by_1",
																				"typeString": "int_const 2"
																			},
																			"value": "2"
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": true,
																		"nodeType": "IndexAccess",
																		"src": "7383:7:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"nodeType": "Assignment",
																	"operator": "=",
																	"rightHandSide": {
																		"id": 1006,
																		"name": "toToken",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 805,
																		"src": "7393:7:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"src": "7383:17:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"id": 1008,
																"nodeType": "ExpressionStatement",
																"src": "7383:17:3"
															},
															{
																"assignments": [
																	1013
																],
																"declarations": [
																	{
																		"constant": false,
																		"id": 1013,
																		"mutability": "mutable",
																		"name": "amountsOut",
																		"nameLocation": "7432:10:3",
																		"nodeType": "VariableDeclaration",
																		"scope": 1028,
																		"src": "7415:27:3",
																		"stateVariable": false,
																		"storageLocation": "memory",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																			"typeString": "uint256[]"
																		},
																		"typeName": {
																			"baseType": {
																				"id": 1011,
																				"name": "uint256",
																				"nodeType": "ElementaryTypeName",
																				"src": "7415:7:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"id": 1012,
																			"nodeType": "ArrayTypeName",
																			"src": "7415:9:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
																				"typeString": "uint256[]"
																			}
																		},
																		"visibility": "internal"
																	}
																],
																"id": 1021,
																"initialValue": {
																	"arguments": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 1018,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 1016,
																				"name": "amountIn",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 807,
																				"src": "7484:8:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "-",
																			"rightExpression": {
																				"id": 1017,
																				"name": "feeAmount",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 840,
																				"src": "7495:9:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "7484:20:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		{
																			"id": 1019,
																			"name": "path",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 877,
																			"src": "7523:4:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
																				"typeString": "address[] memory"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			{
																				"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
																				"typeString": "address[] memory"
																			}
																		],
																		"expression": {
																			"id": 1014,
																			"name": "router",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 445,
																			"src": "7445:6:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_IDEXRouter_$382",
																				"typeString": "contract IDEXRouter"
																			}
																		},
																		"id": 1015,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "7452:13:3",
																		"memberName": "getAmountsOut",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 381,
																		"src": "7445:20:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_external_pure$_t_uint256_$_t_array$_t_address_$dyn_memory_ptr_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$",
																			"typeString": "function (uint256,address[] memory) pure external returns (uint256[] memory)"
																		}
																	},
																	"id": 1020,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "7445:97:3",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																		"typeString": "uint256[] memory"
																	}
																},
																"nodeType": "VariableDeclarationStatement",
																"src": "7415:127:3"
															},
															{
																"expression": {
																	"id": 1026,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftHandSide": {
																		"id": 1022,
																		"name": "amountOut",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 871,
																		"src": "7557:9:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "Assignment",
																	"operator": "=",
																	"rightHandSide": {
																		"baseExpression": {
																			"id": 1023,
																			"name": "amountsOut",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1013,
																			"src": "7569:10:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																				"typeString": "uint256[] memory"
																			}
																		},
																		"id": 1025,
																		"indexExpression": {
																			"hexValue": "32",
																			"id": 1024,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "7580:1:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_2_by_1",
																				"typeString": "int_const 2"
																			},
																			"value": "2"
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "7569:13:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "7557:25:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 1027,
																"nodeType": "ExpressionStatement",
																"src": "7557:25:3"
															}
														]
													},
													"id": 1029,
													"nodeType": "IfStatement",
													"src": "6842:752:3",
													"trueBody": {
														"id": 982,
														"nodeType": "Block",
														"src": "6963:298:3",
														"statements": [
															{
																"expression": {
																	"id": 949,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftHandSide": {
																		"id": 943,
																		"name": "path",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 877,
																		"src": "6978:4:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
																			"typeString": "address[] memory"
																		}
																	},
																	"nodeType": "Assignment",
																	"operator": "=",
																	"rightHandSide": {
																		"arguments": [
																			{
																				"hexValue": "32",
																				"id": 947,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "6999:1:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_2_by_1",
																					"typeString": "int_const 2"
																				},
																				"value": "2"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_2_by_1",
																					"typeString": "int_const 2"
																				}
																			],
																			"id": 946,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "NewExpression",
																			"src": "6985:13:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_address_$dyn_memory_ptr_$",
																				"typeString": "function (uint256) pure returns (address[] memory)"
																			},
																			"typeName": {
																				"baseType": {
																					"id": 944,
																					"name": "address",
																					"nodeType": "ElementaryTypeName",
																					"src": "6989:7:3",
																					"stateMutability": "nonpayable",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				"id": 945,
																				"nodeType": "ArrayTypeName",
																				"src": "6989:9:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
																					"typeString": "address[]"
																				}
																			}
																		},
																		"id": 948,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "6985:16:3",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
																			"typeString": "address[] memory"
																		}
																	},
																	"src": "6978:23:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
																		"typeString": "address[] memory"
																	}
																},
																"id": 950,
																"nodeType": "ExpressionStatement",
																"src": "6978:23:3"
															},
															{
																"expression": {
																	"id": 955,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftHandSide": {
																		"baseExpression": {
																			"id": 951,
																			"name": "path",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 877,
																			"src": "7016:4:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
																				"typeString": "address[] memory"
																			}
																		},
																		"id": 953,
																		"indexExpression": {
																			"hexValue": "30",
																			"id": 952,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "7021:1:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": true,
																		"nodeType": "IndexAccess",
																		"src": "7016:7:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"nodeType": "Assignment",
																	"operator": "=",
																	"rightHandSide": {
																		"id": 954,
																		"name": "fromToken",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 803,
																		"src": "7026:9:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"src": "7016:19:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"id": 956,
																"nodeType": "ExpressionStatement",
																"src": "7016:19:3"
															},
															{
																"expression": {
																	"id": 961,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftHandSide": {
																		"baseExpression": {
																			"id": 957,
																			"name": "path",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 877,
																			"src": "7050:4:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
																				"typeString": "address[] memory"
																			}
																		},
																		"id": 959,
																		"indexExpression": {
																			"hexValue": "31",
																			"id": 958,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "7055:1:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": true,
																		"nodeType": "IndexAccess",
																		"src": "7050:7:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"nodeType": "Assignment",
																	"operator": "=",
																	"rightHandSide": {
																		"id": 960,
																		"name": "toToken",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 805,
																		"src": "7060:7:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"src": "7050:17:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"id": 962,
																"nodeType": "ExpressionStatement",
																"src": "7050:17:3"
															},
															{
																"assignments": [
																	967
																],
																"declarations": [
																	{
																		"constant": false,
																		"id": 967,
																		"mutability": "mutable",
																		"name": "amountsOut",
																		"nameLocation": "7099:10:3",
																		"nodeType": "VariableDeclaration",
																		"scope": 982,
																		"src": "7082:27:3",
																		"stateVariable": false,
																		"storageLocation": "memory",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																			"typeString": "uint256[]"
																		},
																		"typeName": {
																			"baseType": {
																				"id": 965,
																				"name": "uint256",
																				"nodeType": "ElementaryTypeName",
																				"src": "7082:7:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"id": 966,
																			"nodeType": "ArrayTypeName",
																			"src": "7082:9:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
																				"typeString": "uint256[]"
																			}
																		},
																		"visibility": "internal"
																	}
																],
																"id": 975,
																"initialValue": {
																	"arguments": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 972,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 970,
																				"name": "amountIn",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 807,
																				"src": "7151:8:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "-",
																			"rightExpression": {
																				"id": 971,
																				"name": "feeAmount",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 840,
																				"src": "7162:9:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "7151:20:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		{
																			"id": 973,
																			"name": "path",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 877,
																			"src": "7190:4:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
																				"typeString": "address[] memory"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			{
																				"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
																				"typeString": "address[] memory"
																			}
																		],
																		"expression": {
																			"id": 968,
																			"name": "router",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 445,
																			"src": "7112:6:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_IDEXRouter_$382",
																				"typeString": "contract IDEXRouter"
																			}
																		},
																		"id": 969,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "7119:13:3",
																		"memberName": "getAmountsOut",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 381,
																		"src": "7112:20:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_external_pure$_t_uint256_$_t_array$_t_address_$dyn_memory_ptr_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$",
																			"typeString": "function (uint256,address[] memory) pure external returns (uint256[] memory)"
																		}
																	},
																	"id": 974,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "7112:97:3",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																		"typeString": "uint256[] memory"
																	}
																},
																"nodeType": "VariableDeclarationStatement",
																"src": "7082:127:3"
															},
															{
																"expression": {
																	"id": 980,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftHandSide": {
																		"id": 976,
																		"name": "amountOut",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 871,
																		"src": "7224:9:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "Assignment",
																	"operator": "=",
																	"rightHandSide": {
																		"baseExpression": {
																			"id": 977,
																			"name": "amountsOut",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 967,
																			"src": "7236:10:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																				"typeString": "uint256[] memory"
																			}
																		},
																		"id": 979,
																		"indexExpression": {
																			"hexValue": "31",
																			"id": 978,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "7247:1:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "7236:13:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "7224:25:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 981,
																"nodeType": "ExpressionStatement",
																"src": "7224:25:3"
															}
														]
													}
												},
												"id": 1030,
												"nodeType": "IfStatement",
												"src": "6496:1098:3",
												"trueBody": {
													"id": 925,
													"nodeType": "Block",
													"src": "6538:298:3",
													"statements": [
														{
															"expression": {
																"id": 892,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 886,
																	"name": "path",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 877,
																	"src": "6553:4:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
																		"typeString": "address[] memory"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"arguments": [
																		{
																			"hexValue": "32",
																			"id": 890,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "6574:1:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_2_by_1",
																				"typeString": "int_const 2"
																			},
																			"value": "2"
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_rational_2_by_1",
																				"typeString": "int_const 2"
																			}
																		],
																		"id": 889,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "NewExpression",
																		"src": "6560:13:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_address_$dyn_memory_ptr_$",
																			"typeString": "function (uint256) pure returns (address[] memory)"
																		},
																		"typeName": {
																			"baseType": {
																				"id": 887,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "6564:7:3",
																				"stateMutability": "nonpayable",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"id": 888,
																			"nodeType": "ArrayTypeName",
																			"src": "6564:9:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
																				"typeString": "address[]"
																			}
																		}
																	},
																	"id": 891,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "6560:16:3",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
																		"typeString": "address[] memory"
																	}
																},
																"src": "6553:23:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
																	"typeString": "address[] memory"
																}
															},
															"id": 893,
															"nodeType": "ExpressionStatement",
															"src": "6553:23:3"
														},
														{
															"expression": {
																"id": 898,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"id": 894,
																		"name": "path",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 877,
																		"src": "6591:4:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
																			"typeString": "address[] memory"
																		}
																	},
																	"id": 896,
																	"indexExpression": {
																		"hexValue": "30",
																		"id": 895,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "6596:1:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "6591:7:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"id": 897,
																	"name": "fromToken",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 803,
																	"src": "6601:9:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"src": "6591:19:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 899,
															"nodeType": "ExpressionStatement",
															"src": "6591:19:3"
														},
														{
															"expression": {
																"id": 904,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"id": 900,
																		"name": "path",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 877,
																		"src": "6625:4:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
																			"typeString": "address[] memory"
																		}
																	},
																	"id": 902,
																	"indexExpression": {
																		"hexValue": "31",
																		"id": 901,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "6630:1:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_1_by_1",
																			"typeString": "int_const 1"
																		},
																		"value": "1"
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "6625:7:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"id": 903,
																	"name": "toToken",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 805,
																	"src": "6635:7:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"src": "6625:17:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 905,
															"nodeType": "ExpressionStatement",
															"src": "6625:17:3"
														},
														{
															"assignments": [
																910
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 910,
																	"mutability": "mutable",
																	"name": "amountsOut",
																	"nameLocation": "6674:10:3",
																	"nodeType": "VariableDeclaration",
																	"scope": 925,
																	"src": "6657:27:3",
																	"stateVariable": false,
																	"storageLocation": "memory",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																		"typeString": "uint256[]"
																	},
																	"typeName": {
																		"baseType": {
																			"id": 908,
																			"name": "uint256",
																			"nodeType": "ElementaryTypeName",
																			"src": "6657:7:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 909,
																		"nodeType": "ArrayTypeName",
																		"src": "6657:9:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
																			"typeString": "uint256[]"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 918,
															"initialValue": {
																"arguments": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 915,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 913,
																			"name": "amountIn",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 807,
																			"src": "6726:8:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "-",
																		"rightExpression": {
																			"id": 914,
																			"name": "feeAmount",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 840,
																			"src": "6737:9:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "6726:20:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"id": 916,
																		"name": "path",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 877,
																		"src": "6765:4:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
																			"typeString": "address[] memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
																			"typeString": "address[] memory"
																		}
																	],
																	"expression": {
																		"id": 911,
																		"name": "router",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 445,
																		"src": "6687:6:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IDEXRouter_$382",
																			"typeString": "contract IDEXRouter"
																		}
																	},
																	"id": 912,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "6694:13:3",
																	"memberName": "getAmountsOut",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 381,
																	"src": "6687:20:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_pure$_t_uint256_$_t_array$_t_address_$dyn_memory_ptr_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$",
																		"typeString": "function (uint256,address[] memory) pure external returns (uint256[] memory)"
																	}
																},
																"id": 917,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6687:97:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																	"typeString": "uint256[] memory"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "6657:127:3"
														},
														{
															"expression": {
																"id": 923,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 919,
																	"name": "amountOut",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 871,
																	"src": "6799:9:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"baseExpression": {
																		"id": 920,
																		"name": "amountsOut",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 910,
																		"src": "6811:10:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																			"typeString": "uint256[] memory"
																		}
																	},
																	"id": 922,
																	"indexExpression": {
																		"hexValue": "31",
																		"id": 921,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "6822:1:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_1_by_1",
																			"typeString": "int_const 1"
																		},
																		"value": "1"
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "6811:13:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "6799:25:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 924,
															"nodeType": "ExpressionStatement",
															"src": "6799:25:3"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1036,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1034,
																"name": "amountIn",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 807,
																"src": "7689:8:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "-",
															"rightExpression": {
																"id": 1035,
																"name": "feeAmount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 840,
																"src": "7700:9:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7689:20:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1037,
															"name": "amountOutMin",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 809,
															"src": "7728:12:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1038,
															"name": "path",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 877,
															"src": "7759:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
																"typeString": "address[] memory"
															}
														},
														{
															"expression": {
																"id": 1039,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "7782:3:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1040,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "7786:6:3",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "7782:10:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1044,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 1041,
																	"name": "block",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967292,
																	"src": "7811:5:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_block",
																		"typeString": "block"
																	}
																},
																"id": 1042,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "7817:9:3",
																"memberName": "timestamp",
																"nodeType": "MemberAccess",
																"src": "7811:15:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"hexValue": "31",
																"id": 1043,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "7829:7:3",
																"subdenomination": "hours",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_3600_by_1",
																	"typeString": "int_const 3600"
																},
																"value": "1"
															},
															"src": "7811:25:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
																"typeString": "address[] memory"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 1031,
															"name": "router",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 445,
															"src": "7610:6:3",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IDEXRouter_$382",
																"typeString": "contract IDEXRouter"
															}
														},
														"id": 1033,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "7617:53:3",
														"memberName": "swapExactTokensForTokensSupportingFeeOnTransferTokens",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 322,
														"src": "7610:60:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_uint256_$_t_uint256_$_t_array$_t_address_$dyn_memory_ptr_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (uint256,uint256,address[] memory,address,uint256) external"
														}
													},
													"id": 1045,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7610:241:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1046,
												"nodeType": "ExpressionStatement",
												"src": "7610:241:3"
											},
											{
												"condition": {
													"components": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 1051,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																"id": 1049,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1047,
																	"name": "toToken",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 805,
																	"src": "7883:7:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"id": 1048,
																	"name": "ARY",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 412,
																	"src": "7894:3:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"src": "7883:14:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "&&",
															"rightExpression": {
																"id": 1050,
																"name": "competition_started",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 428,
																"src": "7901:19:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "7883:37:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"id": 1052,
													"isConstant": false,
													"isInlineArray": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "TupleExpression",
													"src": "7882:39:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1060,
												"nodeType": "IfStatement",
												"src": "7864:128:3",
												"trueBody": {
													"id": 1059,
													"nodeType": "Block",
													"src": "7933:59:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"expression": {
																			"id": 1054,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967281,
																			"src": "7958:3:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 1055,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "7962:6:3",
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"src": "7958:10:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 1056,
																		"name": "amountOut",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 871,
																		"src": "7970:9:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 1053,
																	"name": "addVolume",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 801,
																	"src": "7948:9:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (address,uint256)"
																	}
																},
																"id": 1057,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7948:32:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1058,
															"nodeType": "ExpressionStatement",
															"src": "7948:32:3"
														}
													]
												}
											}
										]
									},
									"functionSelector": "d16a4010",
									"id": 1062,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "swapTokenForToken",
									"nameLocation": "5863:17:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 810,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 803,
												"mutability": "mutable",
												"name": "fromToken",
												"nameLocation": "5899:9:3",
												"nodeType": "VariableDeclaration",
												"scope": 1062,
												"src": "5891:17:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 802,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5891:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 805,
												"mutability": "mutable",
												"name": "toToken",
												"nameLocation": "5927:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 1062,
												"src": "5919:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 804,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5919:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 807,
												"mutability": "mutable",
												"name": "amountIn",
												"nameLocation": "5953:8:3",
												"nodeType": "VariableDeclaration",
												"scope": 1062,
												"src": "5945:16:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 806,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5945:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 809,
												"mutability": "mutable",
												"name": "amountOutMin",
												"nameLocation": "5980:12:3",
												"nodeType": "VariableDeclaration",
												"scope": 1062,
												"src": "5972:20:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 808,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5972:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5880:119:3"
									},
									"returnParameters": {
										"id": 811,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6007:0:3"
									},
									"scope": 1308,
									"src": "5854:2145:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1158,
										"nodeType": "Block",
										"src": "8152:690:3",
										"statements": [
											{
												"assignments": [
													1070
												],
												"declarations": [
													{
														"constant": false,
														"id": 1070,
														"mutability": "mutable",
														"name": "amountIn",
														"nameLocation": "8171:8:3",
														"nodeType": "VariableDeclaration",
														"scope": 1158,
														"src": "8163:16:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1069,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "8163:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1073,
												"initialValue": {
													"expression": {
														"id": 1071,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "8182:3:3",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 1072,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "8186:5:3",
													"memberName": "value",
													"nodeType": "MemberAccess",
													"src": "8182:9:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "8163:28:3"
											},
											{
												"assignments": [
													1075
												],
												"declarations": [
													{
														"constant": false,
														"id": 1075,
														"mutability": "mutable",
														"name": "feeAmount",
														"nameLocation": "8210:9:3",
														"nodeType": "VariableDeclaration",
														"scope": 1158,
														"src": "8202:17:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1074,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "8202:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1081,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1080,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1078,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1076,
															"name": "amountIn",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1070,
															"src": "8222:8:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "*",
														"rightExpression": {
															"id": 1077,
															"name": "feePercent",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 425,
															"src": "8233:10:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "8222:21:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"hexValue": "31303030",
														"id": 1079,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "8246:4:3",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1000_by_1",
															"typeString": "int_const 1000"
														},
														"value": "1000"
													},
													"src": "8222:28:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "8202:48:3"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1087,
															"name": "feeAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1075,
															"src": "8291:9:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 1084,
																	"name": "feeReceiver",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 423,
																	"src": "8269:11:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 1083,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "8261:8:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_payable_$",
																	"typeString": "type(address payable)"
																},
																"typeName": {
																	"id": 1082,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "8261:8:3",
																	"stateMutability": "payable",
																	"typeDescriptions": {}
																}
															},
															"id": 1085,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8261:20:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														"id": 1086,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "8282:8:3",
														"memberName": "transfer",
														"nodeType": "MemberAccess",
														"src": "8261:29:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
															"typeString": "function (uint256)"
														}
													},
													"id": 1088,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8261:40:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1089,
												"nodeType": "ExpressionStatement",
												"src": "8261:40:3"
											},
											{
												"assignments": [
													1094
												],
												"declarations": [
													{
														"constant": false,
														"id": 1094,
														"mutability": "mutable",
														"name": "path",
														"nameLocation": "8331:4:3",
														"nodeType": "VariableDeclaration",
														"scope": 1158,
														"src": "8314:21:3",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
															"typeString": "address[]"
														},
														"typeName": {
															"baseType": {
																"id": 1092,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "8314:7:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 1093,
															"nodeType": "ArrayTypeName",
															"src": "8314:9:3",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
																"typeString": "address[]"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1100,
												"initialValue": {
													"arguments": [
														{
															"hexValue": "32",
															"id": 1098,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8352:1:3",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_2_by_1",
																"typeString": "int_const 2"
															},
															"value": "2"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_rational_2_by_1",
																"typeString": "int_const 2"
															}
														],
														"id": 1097,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "NewExpression",
														"src": "8338:13:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_address_$dyn_memory_ptr_$",
															"typeString": "function (uint256) pure returns (address[] memory)"
														},
														"typeName": {
															"baseType": {
																"id": 1095,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "8342:7:3",
																"stateMutability": "nonpayable",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 1096,
															"nodeType": "ArrayTypeName",
															"src": "8342:9:3",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
																"typeString": "address[]"
															}
														}
													},
													"id": 1099,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8338:16:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
														"typeString": "address[] memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "8314:40:3"
											},
											{
												"expression": {
													"id": 1105,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1101,
															"name": "path",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1094,
															"src": "8365:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
																"typeString": "address[] memory"
															}
														},
														"id": 1103,
														"indexExpression": {
															"hexValue": "30",
															"id": 1102,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8370:1:3",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "8365:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1104,
														"name": "WCRO",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 409,
														"src": "8375:4:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "8365:14:3",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 1106,
												"nodeType": "ExpressionStatement",
												"src": "8365:14:3"
											},
											{
												"expression": {
													"id": 1111,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1107,
															"name": "path",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1094,
															"src": "8390:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
																"typeString": "address[] memory"
															}
														},
														"id": 1109,
														"indexExpression": {
															"hexValue": "31",
															"id": 1108,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8395:1:3",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "8390:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1110,
														"name": "toToken",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1064,
														"src": "8400:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "8390:17:3",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 1112,
												"nodeType": "ExpressionStatement",
												"src": "8390:17:3"
											},
											{
												"assignments": [
													1117
												],
												"declarations": [
													{
														"constant": false,
														"id": 1117,
														"mutability": "mutable",
														"name": "amountsOut",
														"nameLocation": "8437:10:3",
														"nodeType": "VariableDeclaration",
														"scope": 1158,
														"src": "8420:27:3",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
															"typeString": "uint256[]"
														},
														"typeName": {
															"baseType": {
																"id": 1115,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "8420:7:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1116,
															"nodeType": "ArrayTypeName",
															"src": "8420:9:3",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
																"typeString": "uint256[]"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1125,
												"initialValue": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1122,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1120,
																"name": "amountIn",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1070,
																"src": "8471:8:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "-",
															"rightExpression": {
																"id": 1121,
																"name": "feeAmount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1075,
																"src": "8482:9:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "8471:20:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1123,
															"name": "path",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1094,
															"src": "8493:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
																"typeString": "address[] memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
																"typeString": "address[] memory"
															}
														],
														"expression": {
															"id": 1118,
															"name": "router",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 445,
															"src": "8450:6:3",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IDEXRouter_$382",
																"typeString": "contract IDEXRouter"
															}
														},
														"id": 1119,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "8457:13:3",
														"memberName": "getAmountsOut",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 381,
														"src": "8450:20:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_pure$_t_uint256_$_t_array$_t_address_$dyn_memory_ptr_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$",
															"typeString": "function (uint256,address[] memory) pure external returns (uint256[] memory)"
														}
													},
													"id": 1124,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8450:48:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
														"typeString": "uint256[] memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "8420:78:3"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1133,
															"name": "amountOutMin",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1066,
															"src": "8610:12:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1134,
															"name": "path",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1094,
															"src": "8637:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
																"typeString": "address[] memory"
															}
														},
														{
															"expression": {
																"id": 1135,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "8656:3:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1136,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "8660:6:3",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "8656:10:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1140,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 1137,
																	"name": "block",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967292,
																	"src": "8681:5:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_block",
																		"typeString": "block"
																	}
																},
																"id": 1138,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "8687:9:3",
																"memberName": "timestamp",
																"nodeType": "MemberAccess",
																"src": "8681:15:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"hexValue": "31",
																"id": 1139,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "8699:7:3",
																"subdenomination": "hours",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_3600_by_1",
																	"typeString": "int_const 3600"
																},
																"value": "1"
															},
															"src": "8681:25:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
																"typeString": "address[] memory"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																{
																	"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
																	"typeString": "address[] memory"
																},
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"id": 1126,
																"name": "router",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 445,
																"src": "8509:6:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_IDEXRouter_$382",
																	"typeString": "contract IDEXRouter"
																}
															},
															"id": 1128,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "8516:50:3",
															"memberName": "swapExactETHForTokensSupportingFeeOnTransferTokens",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 334,
															"src": "8509:57:3",
															"typeDescriptions": {
																"typeIdentifier": "t_function_external_payable$_t_uint256_$_t_array$_t_address_$dyn_memory_ptr_$_t_address_$_t_uint256_$returns$__$",
																"typeString": "function (uint256,address[] memory,address,uint256) payable external"
															}
														},
														"id": 1132,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1131,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1129,
																	"name": "amountIn",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1070,
																	"src": "8574:8:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"id": 1130,
																	"name": "feeAmount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1075,
																	"src": "8585:9:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "8574:20:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "8509:86:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_payable$_t_uint256_$_t_array$_t_address_$dyn_memory_ptr_$_t_address_$_t_uint256_$returns$__$value",
															"typeString": "function (uint256,address[] memory,address,uint256) payable external"
														}
													},
													"id": 1141,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8509:208:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1142,
												"nodeType": "ExpressionStatement",
												"src": "8509:208:3"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 1147,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"id": 1145,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1143,
															"name": "toToken",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1064,
															"src": "8733:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"id": 1144,
															"name": "ARY",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 412,
															"src": "8744:3:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"src": "8733:14:3",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"id": 1146,
														"name": "competition_started",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 428,
														"src": "8751:19:3",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "8733:37:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1157,
												"nodeType": "IfStatement",
												"src": "8730:105:3",
												"trueBody": {
													"id": 1156,
													"nodeType": "Block",
													"src": "8772:63:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"expression": {
																			"id": 1149,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967281,
																			"src": "8797:3:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 1150,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "8801:6:3",
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"src": "8797:10:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"baseExpression": {
																			"id": 1151,
																			"name": "amountsOut",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1117,
																			"src": "8809:10:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																				"typeString": "uint256[] memory"
																			}
																		},
																		"id": 1153,
																		"indexExpression": {
																			"hexValue": "31",
																			"id": 1152,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "8820:1:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "8809:13:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 1148,
																	"name": "addVolume",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 801,
																	"src": "8787:9:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (address,uint256)"
																	}
																},
																"id": 1154,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8787:36:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1155,
															"nodeType": "ExpressionStatement",
															"src": "8787:36:3"
														}
													]
												}
											}
										]
									},
									"functionSelector": "53ac861e",
									"id": 1159,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "swapCROForToken",
									"nameLocation": "8056:15:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1067,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1064,
												"mutability": "mutable",
												"name": "toToken",
												"nameLocation": "8091:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 1159,
												"src": "8083:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1063,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8083:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1066,
												"mutability": "mutable",
												"name": "amountOutMin",
												"nameLocation": "8117:12:3",
												"nodeType": "VariableDeclaration",
												"scope": 1159,
												"src": "8109:20:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1065,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8109:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8072:64:3"
									},
									"returnParameters": {
										"id": 1068,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8152:0:3"
									},
									"scope": 1308,
									"src": "8047:795:3",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1245,
										"nodeType": "Block",
										"src": "9019:617:3",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 1172,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"id": 1170,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1168,
															"name": "fromToken",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1161,
															"src": "9035:9:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"id": 1169,
															"name": "ARY",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 412,
															"src": "9048:3:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"src": "9035:16:3",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"id": 1171,
														"name": "competition_started",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 428,
														"src": "9055:19:3",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "9035:39:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1179,
												"nodeType": "IfStatement",
												"src": "9032:75:3",
												"trueBody": {
													"expression": {
														"arguments": [
															{
																"expression": {
																	"id": 1174,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "9086:3:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 1175,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "9090:6:3",
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "9086:10:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															{
																"id": 1176,
																"name": "amountIn",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1163,
																"src": "9098:8:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"id": 1173,
															"name": "addVolume",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 801,
															"src": "9076:9:3",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
																"typeString": "function (address,uint256)"
															}
														},
														"id": 1177,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "9076:31:3",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$__$",
															"typeString": "tuple()"
														}
													},
													"id": 1178,
													"nodeType": "ExpressionStatement",
													"src": "9076:31:3"
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 1184,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "9149:3:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1185,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "9153:6:3",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "9149:10:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"id": 1188,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "9169:4:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_SwapPro_$1308",
																		"typeString": "contract SwapPro"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_SwapPro_$1308",
																		"typeString": "contract SwapPro"
																	}
																],
																"id": 1187,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "9161:7:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1186,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "9161:7:3",
																	"typeDescriptions": {}
																}
															},
															"id": 1189,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "9161:13:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1190,
															"name": "amountIn",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1163,
															"src": "9176:8:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 1181,
																	"name": "fromToken",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1161,
																	"src": "9125:9:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 1180,
																"name": "IERC20",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 225,
																"src": "9118:6:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_IERC20_$225_$",
																	"typeString": "type(contract IERC20)"
																}
															},
															"id": 1182,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "9118:17:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$225",
																"typeString": "contract IERC20"
															}
														},
														"id": 1183,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "9136:12:3",
														"memberName": "transferFrom",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 224,
														"src": "9118:30:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
															"typeString": "function (address,address,uint256) external returns (bool)"
														}
													},
													"id": 1191,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9118:67:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1192,
												"nodeType": "ExpressionStatement",
												"src": "9118:67:3"
											},
											{
												"assignments": [
													1194
												],
												"declarations": [
													{
														"constant": false,
														"id": 1194,
														"mutability": "mutable",
														"name": "feeAmount",
														"nameLocation": "9214:9:3",
														"nodeType": "VariableDeclaration",
														"scope": 1245,
														"src": "9206:17:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1193,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "9206:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1200,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1199,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1197,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1195,
															"name": "amountIn",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1163,
															"src": "9226:8:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "*",
														"rightExpression": {
															"id": 1196,
															"name": "feePercent",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 425,
															"src": "9237:10:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "9226:21:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"hexValue": "31303030",
														"id": 1198,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "9250:4:3",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1000_by_1",
															"typeString": "int_const 1000"
														},
														"value": "1000"
													},
													"src": "9226:28:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "9206:48:3"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1202,
															"name": "fromToken",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1161,
															"src": "9274:9:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1203,
															"name": "feeAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1194,
															"src": "9285:9:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1201,
														"name": "getFee",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 769,
														"src": "9267:6:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 1204,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9267:28:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1205,
												"nodeType": "ExpressionStatement",
												"src": "9267:28:3"
											},
											{
												"assignments": [
													1210
												],
												"declarations": [
													{
														"constant": false,
														"id": 1210,
														"mutability": "mutable",
														"name": "path",
														"nameLocation": "9325:4:3",
														"nodeType": "VariableDeclaration",
														"scope": 1245,
														"src": "9308:21:3",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
															"typeString": "address[]"
														},
														"typeName": {
															"baseType": {
																"id": 1208,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "9308:7:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 1209,
															"nodeType": "ArrayTypeName",
															"src": "9308:9:3",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
																"typeString": "address[]"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1216,
												"initialValue": {
													"arguments": [
														{
															"hexValue": "32",
															"id": 1214,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "9346:1:3",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_2_by_1",
																"typeString": "int_const 2"
															},
															"value": "2"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_rational_2_by_1",
																"typeString": "int_const 2"
															}
														],
														"id": 1213,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "NewExpression",
														"src": "9332:13:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_address_$dyn_memory_ptr_$",
															"typeString": "function (uint256) pure returns (address[] memory)"
														},
														"typeName": {
															"baseType": {
																"id": 1211,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "9336:7:3",
																"stateMutability": "nonpayable",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 1212,
															"nodeType": "ArrayTypeName",
															"src": "9336:9:3",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
																"typeString": "address[]"
															}
														}
													},
													"id": 1215,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9332:16:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
														"typeString": "address[] memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "9308:40:3"
											},
											{
												"expression": {
													"id": 1221,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1217,
															"name": "path",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1210,
															"src": "9359:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
																"typeString": "address[] memory"
															}
														},
														"id": 1219,
														"indexExpression": {
															"hexValue": "30",
															"id": 1218,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "9364:1:3",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "9359:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1220,
														"name": "fromToken",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1161,
														"src": "9369:9:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "9359:19:3",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 1222,
												"nodeType": "ExpressionStatement",
												"src": "9359:19:3"
											},
											{
												"expression": {
													"id": 1227,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1223,
															"name": "path",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1210,
															"src": "9389:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
																"typeString": "address[] memory"
															}
														},
														"id": 1225,
														"indexExpression": {
															"hexValue": "31",
															"id": 1224,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "9394:1:3",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "9389:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1226,
														"name": "WCRO",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 409,
														"src": "9399:4:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "9389:14:3",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 1228,
												"nodeType": "ExpressionStatement",
												"src": "9389:14:3"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1234,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1232,
																"name": "amountIn",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1163,
																"src": "9486:8:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "-",
															"rightExpression": {
																"id": 1233,
																"name": "feeAmount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1194,
																"src": "9497:9:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "9486:20:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1235,
															"name": "amountOutMin",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1165,
															"src": "9521:12:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1236,
															"name": "path",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1210,
															"src": "9548:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
																"typeString": "address[] memory"
															}
														},
														{
															"expression": {
																"id": 1237,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "9567:3:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1238,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "9571:6:3",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "9567:10:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1242,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 1239,
																	"name": "block",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967292,
																	"src": "9592:5:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_block",
																		"typeString": "block"
																	}
																},
																"id": 1240,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "9598:9:3",
																"memberName": "timestamp",
																"nodeType": "MemberAccess",
																"src": "9592:15:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"hexValue": "31",
																"id": 1241,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "9610:7:3",
																"subdenomination": "hours",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_3600_by_1",
																	"typeString": "int_const 3600"
																},
																"value": "1"
															},
															"src": "9592:25:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
																"typeString": "address[] memory"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 1229,
															"name": "router",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 445,
															"src": "9414:6:3",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IDEXRouter_$382",
																"typeString": "contract IDEXRouter"
															}
														},
														"id": 1231,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "9421:50:3",
														"memberName": "swapExactTokensForETHSupportingFeeOnTransferTokens",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 348,
														"src": "9414:57:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_uint256_$_t_uint256_$_t_array$_t_address_$dyn_memory_ptr_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (uint256,uint256,address[] memory,address,uint256) external"
														}
													},
													"id": 1243,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9414:214:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1244,
												"nodeType": "ExpressionStatement",
												"src": "9414:214:3"
											}
										]
									},
									"functionSelector": "16214120",
									"id": 1246,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "swapTokenForCRO",
									"nameLocation": "8903:15:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1166,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1161,
												"mutability": "mutable",
												"name": "fromToken",
												"nameLocation": "8937:9:3",
												"nodeType": "VariableDeclaration",
												"scope": 1246,
												"src": "8929:17:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1160,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8929:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1163,
												"mutability": "mutable",
												"name": "amountIn",
												"nameLocation": "8965:8:3",
												"nodeType": "VariableDeclaration",
												"scope": 1246,
												"src": "8957:16:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1162,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8957:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1165,
												"mutability": "mutable",
												"name": "amountOutMin",
												"nameLocation": "8992:12:3",
												"nodeType": "VariableDeclaration",
												"scope": 1246,
												"src": "8984:20:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1164,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8984:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8918:93:3"
									},
									"returnParameters": {
										"id": 1167,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "9019:0:3"
									},
									"scope": 1308,
									"src": "8894:742:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1269,
										"nodeType": "Block",
										"src": "9707:136:3",
										"statements": [
											{
												"assignments": [
													1250
												],
												"declarations": [
													{
														"constant": false,
														"id": 1250,
														"mutability": "mutable",
														"name": "amountIn",
														"nameLocation": "9726:8:3",
														"nodeType": "VariableDeclaration",
														"scope": 1269,
														"src": "9718:16:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1249,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "9718:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1253,
												"initialValue": {
													"expression": {
														"id": 1251,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "9737:3:3",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 1252,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "9741:5:3",
													"memberName": "value",
													"nodeType": "MemberAccess",
													"src": "9737:9:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "9718:28:3"
											},
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"expression": {
															"argumentTypes": [],
															"expression": {
																"id": 1254,
																"name": "wcro",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 460,
																"src": "9757:4:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_IWCRO_$393",
																	"typeString": "contract IWCRO"
																}
															},
															"id": 1256,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "9762:7:3",
															"memberName": "deposit",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 387,
															"src": "9757:12:3",
															"typeDescriptions": {
																"typeIdentifier": "t_function_external_payable$__$returns$__$",
																"typeString": "function () payable external"
															}
														},
														"id": 1258,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"id": 1257,
																"name": "amountIn",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1250,
																"src": "9776:8:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "9757:28:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_payable$__$returns$__$value",
															"typeString": "function () payable external"
														}
													},
													"id": 1259,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9757:30:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1260,
												"nodeType": "ExpressionStatement",
												"src": "9757:30:3"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 1264,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "9813:3:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1265,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "9817:6:3",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "9813:10:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1266,
															"name": "amountIn",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1250,
															"src": "9825:8:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 1261,
															"name": "wcro",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 460,
															"src": "9798:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IWCRO_$393",
																"typeString": "contract IWCRO"
															}
														},
														"id": 1263,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "9803:8:3",
														"memberName": "transfer",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 192,
														"src": "9798:13:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
															"typeString": "function (address,uint256) external returns (bool)"
														}
													},
													"id": 1267,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9798:37:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1268,
												"nodeType": "ExpressionStatement",
												"src": "9798:37:3"
											}
										]
									},
									"functionSelector": "d0e30db0",
									"id": 1270,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "deposit",
									"nameLocation": "9681:7:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1247,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "9689:2:3"
									},
									"returnParameters": {
										"id": 1248,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "9707:0:3"
									},
									"scope": 1308,
									"src": "9672:171:3",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1302,
										"nodeType": "Block",
										"src": "9906:148:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 1278,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "9935:3:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1279,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "9939:6:3",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "9935:10:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"id": 1282,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "9955:4:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_SwapPro_$1308",
																		"typeString": "contract SwapPro"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_SwapPro_$1308",
																		"typeString": "contract SwapPro"
																	}
																],
																"id": 1281,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "9947:7:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1280,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "9947:7:3",
																	"typeDescriptions": {}
																}
															},
															"id": 1283,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "9947:13:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1284,
															"name": "wad",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1272,
															"src": "9962:3:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 1275,
															"name": "wcro",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 460,
															"src": "9917:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IWCRO_$393",
																"typeString": "contract IWCRO"
															}
														},
														"id": 1277,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "9922:12:3",
														"memberName": "transferFrom",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 224,
														"src": "9917:17:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
															"typeString": "function (address,address,uint256) external returns (bool)"
														}
													},
													"id": 1285,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9917:49:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1286,
												"nodeType": "ExpressionStatement",
												"src": "9917:49:3"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1290,
															"name": "wad",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1272,
															"src": "9991:3:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 1287,
															"name": "wcro",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 460,
															"src": "9977:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IWCRO_$393",
																"typeString": "contract IWCRO"
															}
														},
														"id": 1289,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "9982:8:3",
														"memberName": "withdraw",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 392,
														"src": "9977:13:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_uint256_$returns$__$",
															"typeString": "function (uint256) external"
														}
													},
													"id": 1291,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9977:18:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1292,
												"nodeType": "ExpressionStatement",
												"src": "9977:18:3"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1299,
															"name": "wad",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1272,
															"src": "10042:3:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"arguments": [
																{
																	"expression": {
																		"id": 1295,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967281,
																		"src": "10021:3:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 1296,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "10025:6:3",
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"src": "10021:10:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 1294,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "10013:8:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_payable_$",
																	"typeString": "type(address payable)"
																},
																"typeName": {
																	"id": 1293,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "10013:8:3",
																	"stateMutability": "payable",
																	"typeDescriptions": {}
																}
															},
															"id": 1297,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "10013:19:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														"id": 1298,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "10033:8:3",
														"memberName": "transfer",
														"nodeType": "MemberAccess",
														"src": "10013:28:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
															"typeString": "function (uint256)"
														}
													},
													"id": 1300,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10013:33:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1301,
												"nodeType": "ExpressionStatement",
												"src": "10013:33:3"
											}
										]
									},
									"functionSelector": "2e1a7d4d",
									"id": 1303,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "withdraw",
									"nameLocation": "9860:8:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1273,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1272,
												"mutability": "mutable",
												"name": "wad",
												"nameLocation": "9888:3:3",
												"nodeType": "VariableDeclaration",
												"scope": 1303,
												"src": "9880:11:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1271,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9880:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9869:29:3"
									},
									"returnParameters": {
										"id": 1274,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "9906:0:3"
									},
									"scope": 1308,
									"src": "9851:203:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1306,
										"nodeType": "Block",
										"src": "10089:2:3",
										"statements": []
									},
									"id": 1307,
									"implemented": true,
									"kind": "receive",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1304,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10069:2:3"
									},
									"returnParameters": {
										"id": 1305,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10089:0:3"
									},
									"scope": 1308,
									"src": "10062:29:3",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1309,
							"src": "2107:7987:3",
							"usedErrors": [
								13,
								18
							],
							"usedEvents": [
								24
							]
						}
					],
					"src": "32:10062:3"
				},
				"id": 3
			}
		}
	}
}